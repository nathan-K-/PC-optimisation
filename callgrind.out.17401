version: 1
creator: callgrind-3.11.0
pid: 17401
cmd:  ./pdc_evol_model
part: 1


desc: I1 cache: 32768 B, 64 B, 8-way associative
desc: D1 cache: 32768 B, 64 B, 8-way associative
desc: LL cache: 3145728 B, 64 B, 12-way associative

desc: Timerange: Basic block 0 - 668770280
desc: Trigger: Program termination

positions: instr line
events: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw
summary: 3347953070 1233042699 845312039 174434 1179209 996305 3401 9293 930032


ob=(8) /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21
fl=(94) ???
fn=(434) 0x0000000000089e90
0x89e90 0 1
+4 0 1 0 1
cob=(1) /lib/x86_64-linux-gnu/ld-2.23.so
cfi=(67) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/x86_64/dl-trampoline.h
cfn=(260) _dl_runtime_resolve_avx
calls=1 0x17870 64 
* 0 2298 673 314 13 32 2 13 6
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1 0 1 0 0 1
+3 0 1
+4 0 1 1

fn=(452) __cxa_guard_release
0x8dc40 0 1 0 0 1 0 0 1
+4 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1 1
+8 0 1
+16 0 1 1
+5 0 1 1
+9 0 1
+2 0 1
+4 0 1 1
+56 0 1 0 1 1 0 0 1
+4 0 1 0 1
+3 0 1 0 0 1 0 0 1

fn=(456) 0x0000000000089eb0
0x89eb0 0 1
+4 0 1
+5 0 1 0 1 1 0 1 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 1706 465 204 22 26 2 22 3 2
* 0 5 3 2 1 1 0 1
+5 0 1 0 0 1 0 0 1
+3 0 1 0 1
+7 0 1
+2 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+8 0 1
+4 0 1 1

fn=(502) 0x000000000008a280
0x8a280 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1
+7 0 1
+4 0 1 0 1
cob=(3) /lib/x86_64-linux-gnu/libc-2.23.so
cfi=(82) /build/glibc-bfm8X4/glibc-2.23/stdlib/cxa_atexit.c
cfn=(318) __cxa_atexit
calls=1 0x3a280 57 
* 0 66 13 15
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+7 0 1
+4 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 57 
* 0 66 13 15 0 0 1
* 0 1 1

fn=(506) 0x000000000008a2c0
0x8a2c0 0 1 1 0 1 1 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1

fn=(702) std::locale::id::_M_id() const
0x9f310 0 136 136 0 1 11 0 1 9
+3 0 136
+3 0 136
+2 0 46 46
+8 0 46
+7 0 46
+14 0 46
+2 0 46 0 46
+3 0 46
+4 0 46 46
-4 0 90
+4 0 90 90
+2 0 46 46
+2 0 46
+3 0 46 0 46
+2 0 46

fn=(744) std::__cxx11::messages<char>::messages(unsigned long)
0xdb380 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1
+3 0 1 0 1
cfn=(676) std::locale::facet::_S_get_c_locale()
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 0 1
cfn=(664) std::locale::facet::_S_get_c_name()
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(756) std::ctype<wchar_t>::_M_initialize_ctype()
0xc4410 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+2 0 1
+4 0 1 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261) _dl_runtime_resolve_avx'2
calls=1 0x17870 64 
* 0 1387 385 136 5 16 0 3 4
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1
+5 0 128 0 128 0 0 2 0 0 2
+4 0 128
+4 0 128
+7 0 128
+6 0 128 0 0 1 0 0 1
+2 0 128 0 128
cob=(3)
cfi=(105) /build/glibc-bfm8X4/glibc-2.23/wcsmbs/wctob.c
cfn=(768) wctob
calls=127 0xacc10 40 
* 0 762 127
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1280 382 137 1 12 0 1 1
* 0 132 130 2 1 0 0 1
+5 0 128
+3 0 128
+6 0 1
+2 0 1
+9 0 1
+2 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1244 365 132 2 10 0 2
* 0 5 3 2 1 1 0 1
-2 0 255
+2 0 255 0 255
cob=(3)
cfi=(106) /build/glibc-bfm8X4/glibc-2.23/wcsmbs/btowc.c
cfn=(774) btowc
calls=255 0xaca90 38 
* 0 7543 2303 640 5 5 0 5
* 0 255 255
+5 0 256 0 256 0 0 16 0 0 16
+7 0 256
+4 0 256
+7 0 256
+2 0 1
+2 0 1 0 0 1 0 0 1
+6 0 1
+5 0 8
+3 0 8 0 8
+8 0 8
+3 0 8
+3 0 8 0 8
cfn=(786) std::ctype<wchar_t>::_M_convert_to_wmask(unsigned short) const
calls=7 0xc3e70 0 
* 0 1555 241 90 2 3 0 2 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2278 626 237 17 20 0 14 6
* 0 12 10 2 1 1 0 1
-14 0 4 0 4
+8 0 4
+3 0 4
+3 0 4 0 4
cfn=(786)
calls=4 0xc3e70 0 
* 0 1609 222 78 0 1 0 0 1
* 0 4 4
+5 0 12 0 12 0 0 2 0 0 2
+8 0 12
+4 0 12
+4 0 12
+2 0 12
+3 0 12
+2 0 12
+2 0 12
+4 0 12
+2 0 4
+3 0 4
+8 0 1
+4 0 1
+3 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1
cob=(3)
cfi=(104) /build/glibc-bfm8X4/glibc-2.23/locale/uselocale.c
cfn=(762) uselocale
calls=1 0x2d8b0 31 
* 0 21 9 4 0 1
* 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1

fn=(808) std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(__locale_struct*)
0xae940 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+5 0 1
+6 0 1
+3 0 1
+80 0 1 0 0 1 0 0 1
+7 0 1 0 1
+8 0 1 0 1 1 0 0 1
+8 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+66 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 0 1
+8 0 1 0 1 1 0 0 1
+4 0 1 0 1
+7 0 1 0 1
+7 0 1 1
+3 0 1
+2 0 1
+3 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-16 0 35 35
+4 0 35 0 35 0 0 2 0 0 2
+4 0 35
+4 0 35
+4 0 35
+2 0 1 1
+7 0 1 1
+3 0 1
+2 0 1
+10 0 1 1 0 1 0 0 1
+4 0 1 0 1
+7 0 1
+4 0 1
+4 0 1
-19 0 25 25
+4 0 25 0 25 0 0 1 0 0 1
+7 0 25
+4 0 25
+4 0 25
+2 0 1

fn=(826) std::__timepunct<wchar_t>::__timepunct(std::__timepunct_cache<wchar_t>*, unsigned long)
0x123fe0 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1 0 1
+4 0 1
+3 0 1 0 1
+8 0 1 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1
+4 0 1 0 1
+3 0 1 0 1
cfn=(664)
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1
+2 0 1 0 1
+4 0 1
+3 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1187 266 146 11 8 0 11 2
* 0 5 3 2 1 1 0 1
+5 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(840) 0x00000000000b8fb0
0xb8fb0 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1
+3 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1 1 0 0 1
+7 0 1 1
+3 0 1 1
+4 0 1 1
+4 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1
+4 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1445 387 169 6 5 2 6 1
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 1 0 0 1
+7 0 1
+3 0 1
+14 0 1 1
+4 0 1 1
+7 0 1 0 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 0 1
+4 0 1 1 0 1 1 0 1
+7 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1
+3 0 1 0 1
+7 0 1
+14 0 1 1
+4 0 1 1
+7 0 1 0 1 1 0 0 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2 0 1
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
+7 0 1
+2 0 1 0 1
+4 0 1 1
+7 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1240 300 125 6 7 0 6 2
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1
+14 0 1 1
+4 0 1 1
+7 0 1 0 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+2 0 1 0 1
+4 0 1 1 0 0 1
+7 0 1
+2 0 1 0 1
+10 0 1 0 1
+7 0 1
+4 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1248 301 125 4 7 0 4 1
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1
0xb925b 0 1 1 0 1 0 0 1
+4 0 1 1
+7 0 1 0 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+4 0 1 1
+5 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1
+3 0 1 0 1
+5 0 1 1
+5 0 1 0 1
+7 0 1 1
+5 0 1 0 1
+4 0 1 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1373 323 169 6 6 0 6
* 0 5 3 2
+5 0 1
+3 0 1
+14 0 1 1
+4 0 1 1
+7 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1 0 1
+4 0 1 1 0 1 0 0 1
+7 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1
+3 0 1 0 1
+7 0 1
+14 0 1 1
+4 0 1 1 0 1 0 0 1
+7 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1
+7 0 1 0 1
+4 0 1 1
+7 0 1
+2 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 1
+4 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1236 292 126 6 7 0 6 2
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1
+14 0 1 1
+4 0 1 1 0 0 1
+7 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1
+2 0 1 0 1 0 0 1
+4 0 1 1 0 0 1
+7 0 1
+2 0 1 0 1
+10 0 1 0 1
+7 0 1
+4 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1244 293 126 6 7 0 6
* 0 5 3 2 1 1 0 1
+5 0 1 0 0 1 0 0 1
+3 0 1
0xb952b 0 1 1 0 1 0 0 1
+4 0 1 1
+7 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1 0 1 0 0 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 1
+5 0 1 1
+7 0 1 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 1 0 1 0 0 1
+5 0 1 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 1
+7 0 1 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 1
+5 0 1 1
+7 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 1
+4 0 1
+3 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+11 0 1 0 1 1 0 0 1
+7 0 1
+9 0 1 1 0 1 1 0 1
+7 0 1 1
+4 0 1 0 1
+7 0 1
+3 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1
+10 0 1
+4 0 1 0 1
+5 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1 0 0 1 0 0 1
+10 0 1
+4 0 1 0 1
+5 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1
+10 0 1
+4 0 1 0 1
+5 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+5 0 1
+7 0 1
+7 0 1
+5 0 1 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 743 223 103 2 6 0 2
* 0 5 3 2 1 1 0 1
+5 0 1 0 1
+7 0 1
+6 0 1 0 1
+7 0 1
+9 0 1 0 1
+7 0 1
+9 0 1 0 1 1 0 0 1
+7 0 1
+9 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1 0 1
+7 0 1
+3 0 1 0 1
+4 0 1 0 1
+5 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1
+10 0 1
+4 0 1 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 1 0 0 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1
+10 0 1
+4 0 1 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 1 0 1 0 0 1
+4 0 1 0 1
+10 0 1
+4 0 1 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 14 4 2
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
+7 0 1
+5 0 1 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 767 226 103 2 8 1 2 2 1
* 0 5 3 2 1 1 0 1
+5 0 1 0 1
+7 0 1
+9 0 1 0 1
+7 0 1
+9 0 1 0 1 1 0 0 1
+7 0 1

fn=(1018) std::locale::~locale()
0x9f0d0 0 12 12
+8 0 12 0 12
+1 0 12 12
+3 0 12
+11 0 12
+3 0 12
+30 0 12 12
+1 0 12 12
+7 0 12 12 0 1 0 0 1
+2 0 12
+3 0 12 0 12
+2 0 12

fn=(1326) std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
0xebdd0 0 2 0 2 1 0 0 1
+2 0 2 2 0 0 1 0 0 1
+7 0 2 0 2
+2 0 2 0 2
+2 0 2 0 2
+1 0 2
+4 0 2 0 2
+1 0 2
+4 0 2
+3 0 2 0 2
+8 0 2 0 2 0 0 2 0 0 2
+8 0 2 0 2 1 0 0 1
+8 0 2
+4 0 2 0 2
+3 0 2 0 2
+8 0 2 0 2
+8 0 2 0 2
+8 0 2
+3 0 2 0 2
cfn=(644) std::locale::locale()
calls=2 0xa0dd0 0 
* 0 56 20 14
* 0 2 2
+5 0 2 2
+7 0 2
+4 0 2
+3 0 2 0 2
+8 0 2 0 2 1 0 0 1
+8 0 2 0 2 0 0 2 0 0 2
+8 0 2 0 2
+8 0 2
+4 0 2 0 2
+8 0 2 0 2
+3 0 2 0 2
cfn=(1332) std::__basic_file<char>::__basic_file(pthread_mutex_t*)
calls=1 0xb0060 0 
* 0 3 1 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 899 235 96 1 9 1 1 9 1
* 0 6 4 2 1 1 0 1 1
+5 0 2 0 2
+7 0 2 0 2
+7 0 2
+3 0 2 0 2 1 0 0 1
+10 0 2 0 2
+10 0 2 0 2
+10 0 2 0 2
+10 0 2 0 2 0 0 2 0 0 2
+10 0 2 0 2
+11 0 2 0 2 1 0 0 1
+11 0 2 0 2
+7 0 2 0 2
+7 0 2 0 2
+7 0 2 0 2
+7 0 2 0 2
+11 0 2 0 2
+11 0 2 0 2
+7 0 2 0 2 1 0 0 1
+11 0 2 0 2
+11 0 2 0 2
+11 0 2 0 2
+11 0 2 0 2
+11 0 2 0 2
cfn=(1338) bool std::has_facet<std::codecvt<char, char, __mbstate_t> >(std::locale const&)
calls=1 0x101210 0 
* 0 114 43 25
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1097 289 119 1 12 0 1 12
* 0 6 4 2 1 1 0 1 1
+5 0 2
+2 0 2
+21 0 2 0 0 1 0 0 1
+3 0 2 0 2
cfn=(1344) std::codecvt<char, char, __mbstate_t> const& std::use_facet<std::codecvt<char, char, __mbstate_t> >(std::locale const&)
calls=1 0xffca0 0 
* 0 112 43 25
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1127 293 119 2 8 0 2 8
* 0 6 4 2 1 1 0 1 1
+5 0 2 0 2
+7 0 2 2
+1 0 2 2
+1 0 2 2
+2 0 2 2
+2 0 2 2
+2 0 2 2

fn=(1350) operator new[](unsigned long)
0x8df10 0 3 0 0 1 0 0 1
+4 0 3 0 3
cfn=(1312) operator new(unsigned long)
calls=2 0x8de60 0 
* 0 384 62 64 0 1 2 0 1 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 784 227 126 0 3 1 0 2 1
* 0 7 5 2 0 1 0 0 1
+5 0 3
+4 0 3 3

fn=(474) 0x0000000000089f40
0x89f40 0 1 0 0 1 0 0 1
+7 0 1 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1
+7 0 1 0 1 0 0 1
+7 0 1 0 1
+8 0 1 0 1
+8 0 1
+7 0 1 1
+3 0 1
+2 0 1
+7 0 1 1 0 1 0 0 1
+3 0 1
+2 0 1
+7 0 1 0 1
+3 0 1
+5 0 1
+2 0 1 0 1 0 0 1
* 0 10 0 9
+2 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1
+7 0 1 0 1 0 0 1
+7 0 1 0 1
+8 0 1 0 1
+8 0 1
+7 0 1 1
+3 0 1
+2 0 1
+7 0 1 1
+3 0 1
+2 0 1
+7 0 1 0 1
+3 0 1
+5 0 1
+2 0 1 0 1 0 0 1
* 0 10 0 9
+2 0 1 1
+2 0 1 0 1 1 0 0 1
+3 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+3 0 1 0 1
+8 0 1 0 1
+8 0 1
+5 0 1 0 1
+3 0 1
+7 0 1
+7 0 1 0 1
+3 0 1 0 1
+8 0 1 0 1
+8 0 1 0 0 1 0 0 1

fn=(644)
0xa0dd0 0 30 0 30 1 0 0 1
+2 0 30 0 30
+1 0 30 0 30
+1 0 30 0 30 0 0 2 0 0 2
+7 0 30
+3 0 30 0 30
cfn=(646) 0x00000000000a0d80
calls=30 -94 0 
* 0 69906 18950 7162 298 382 104 293 67 95
+5 0 30
+7 0 30
+7 0 30 30
+4 0 30 0 30 0 0 1
+3 0 30 30
+3 0 30
+63 0 30 30 0 1 1 0 1
+1 0 30 30
+1 0 30 30
+2 0 30 30
+18 0 30 30 0 1 0 0 1
+8 0 30
+16 0 30 0 30 0 0 1 0 0 1
+3 0 30

fn=(720) std::__cxx11::moneypunct<char, false>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xad140 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1
+6 0 1
+3 0 1
0xad410 0 1 0 1 1 0 0 1
+6 0 1 1
+7 0 1
+7 0 1 1
+4 0 1 1 0 0 1 0 0 1
+2 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1 1 0 0 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+7 0 1 0 1
+3 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1 0 1 0 0 1
+3 0 1
+2 0 1
+5 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 10 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(934) std::moneypunct<wchar_t, false>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xaa670 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1 0 0 1 0 0 1
+4 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1 1
+5 0 1
+6 0 1
+3 0 1
0xaa899 0 1 1 0 1 0 0 1
+5 0 1 1
+9 0 1
+6 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
0xaa9a0 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1
+7 0 1 1
+2 0 1 0 1
+4 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+3 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1 1 0 0 1
+7 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1
+4 0 1 1
+3 0 1
+2 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-16 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1

fn=(966) std::messages<wchar_t>::messages(unsigned long)
0x1247a0 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 0 1
cfn=(664)
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(1012) std::locale::operator=(std::locale const&)
0x9f060 0 12 0 12 1 0 0 1
+1 0 12
+3 0 12
+4 0 12 12
+8 0 12 12
+3 0 12
+18 0 12 0 0 1 0 0 1
+3 0 12
+2 0 12
+3 0 12
+36 0 12 12
+3 0 12 0 12
+3 0 12
+4 0 12 12
+1 0 12 12
+4 0 12 12 0 1 0 0 1
+3 0 12 0 12
+3 0 12 12
+2 0 12
+3 0 12 0 12
+2 0 12

fn=(1092) std::basic_ios<wchar_t, std::char_traits<wchar_t> >::_M_cache_locale(std::locale const&)
0xf4d40 0 4 0 4 1 0 0 1
+1 0 4 0 4
+1 0 4
+3 0 4
+3 0 4
+3 0 4
+4 0 4 0 4
cfn=(1098) bool std::has_facet<std::ctype<wchar_t> >(std::locale const&)
calls=3 0x126760 0 
* 0 342 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 969 273 119 2 10 0 2 3
* 0 8 6 2 1 1 0 1
+5 0 4
+2 0 4
+2 0 4
+3 0 4 0 4
cfn=(1104) std::ctype<wchar_t> const& std::use_facet<std::ctype<wchar_t> >(std::locale const&)
calls=3 0x124d60 0 
* 0 336 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 991 276 119 2 9 0 2 3
* 0 8 6 2 1 1 0 1
+5 0 4
+3 0 4 0 4
+7 0 4 0 4
cfn=(1110) bool std::has_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)
calls=3 0x1268a0 0 
* 0 342 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1337 319 119 2 10 0 2 2
* 0 8 6 2 1 1 0 1
+5 0 4
+2 0 4
+2 0 4
+3 0 4 0 4
cfn=(1116) std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)
calls=3 0x125770 0 
* 0 336 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1383 325 119 2 9 0 2 3
* 0 8 6 2
+5 0 4
+3 0 4 0 4 1 0 0 1
+7 0 4 0 4
cfn=(1122) bool std::has_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)
calls=3 0x1268f0 0 
* 0 342 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1337 319 119 1 7 0 1 2
* 0 8 6 2 1 0 0 1
+5 0 4
+2 0 4
+2 0 4
+3 0 4 0 4
cfn=(1128) std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > const& std::use_facet<std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > > >(std::locale const&)
calls=3 0x1257c0 0 
* 0 336 129 75
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1375 324 119 2 4 0 2 2
* 0 8 6 2 1 1 0 1
+5 0 4 0 4
+7 0 4
+4 0 4 4
+1 0 4 4
+1 0 4 4

fn=(1312)
0x8de60 0 1313117 0 1313117 11 0 0 2
+1 0 1313117
+3 0 1313117
+3 0 1313117
+5 0 1313117
+4 0 1313117
+3 0 1313117 0 1313117
cob=(3)
cfi=(70) /build/glibc-bfm8X4/glibc-2.23/malloc/malloc.c
cfn=(462) malloc
calls=1313117 0x84130 2902 
* 0 250313454 39197060 39030113 6422 11221 531955 105 61 528713
* 0 1313117 1313117 0 1 7 0 1 3
+5 0 1313117
+3 0 1313117
+2 0 1313117 1313117 0 0 1 0 0 1
+1 0 1313117 1313117

fn=(1344)
0xffca0 0 2 0 2 1 0 0 1
+1 0 2
+3 0 2 2
+7 0 2 0 2
cfn=(702)
calls=2 0x9f310 0 
* 0 10 4
* 0 2 2
+5 0 2 2
+3 0 2 2
+4 0 2 2
+4 0 2
+2 0 2 2 0 1 0 0 1
+4 0 2
+3 0 2
+2 0 2 2
+7 0 2 2
+7 0 2
+2 0 2 0 2
cfn=(1036) __dynamic_cast
calls=2 0x8bf70 0 
* 0 172 60 44
* 0 2 2
+5 0 2
+3 0 2
+2 0 2 2
+1 0 2 2

fn=(1484) std::basic_filebuf<char, std::char_traits<char> >::_M_allocate_internal_buffer()
0xec440 0 2 2 0 1 2 0 1 2
+7 0 2
+2 0 2 2
+8 0 2
+7 0 2 0 2
+1 0 2
+3 0 2 2
+7 0 2 0 2
cob=(2) ???
cfi=(16) ???
cfn=(1486) 0x0000000004cb3ca0
calls=2 0x4cb3ca0 0 
* 0 396 68 66 1 3 2 1 3 2
+5 0 2 0 2
+7 0 2 0 2
+7 0 2 2
+1 0 2 2

fn=(684) std::locale::facet::_S_create_c_locale(__locale_struct*&, char const*, __locale_struct*)
0xb06f0 0 1 0 1 1 0 0 1
+1 0 1
+3 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1356 384 139 5 15 0 5 5
* 0 5 3 2 1 1 0 1
+5 0 1 0 0 1 0 0 1
+3 0 1 0 1
+3 0 1
+2 0 1 1
+1 0 1 1

fn=(900) std::messages<char>::messages(unsigned long)
0xfef90 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 0 1
cfn=(664)
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1 0 1 1 0 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(1054) std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)
0xff550 0 8 0 8 2 0 0 2
+1 0 8
+3 0 8 8
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16
* 0 8 8
+5 0 8 8
+3 0 8 8
+4 0 8 8
+4 0 8
+2 0 8 8
+4 0 8
+3 0 8
+2 0 8 8
+7 0 8 8 0 2 0 0 2
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=8 0x8bf70 0 
* 0 1072 392 248
* 0 8 8
+5 0 8
+3 0 8
+2 0 8 8
+1 0 8 8

fn=(1060) bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)
0x101300 0 8 0 8 1 0 0 1
+1 0 8
+3 0 8 8 0 0 2 0 0 1
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16 0 0 1 0 0 1
* 0 8 8
+5 0 8 8
+3 0 8
+3 0 8
+2 0 8 8
+4 0 8
+2 0 8 8
+4 0 8 8
+4 0 8
+3 0 8
+2 0 8 8 0 0 2 0 0 1
+7 0 8 8
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=8 0x8bf70 0 
* 0 688 240 176 3 10 0 3 5
* 0 8 8
+5 0 8 0 0 1 0 0 1
+3 0 8
+3 0 8 8
+1 0 8 8

fn=(1062) __cxxabiv1::__si_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0x8e2a0 0 60 0 60 1 0 0 1
+2 0 60 0 60
+2 0 60
+3 0 60 0 60
+2 0 60 0 60
+2 0 60 0 60
+1 0 60 0 60
+1 0 60
+3 0 60
+4 0 60 60 0 0 2 0 0 1
+4 0 60 60
+4 0 60 60 0 1 0 0 1
+5 0 60 60
+5 0 60
+3 0 60
+55 0 60 0 0 1 0 0 1
+3 0 60 0 60
+4 0 60 0 60
+5 0 60
+2 0 60
+3 0 60
+2 0 60
+3 0 60
+3 0 60
+4 0 60 0 60
+5 0 60
+4 0 60
+2 0 60 60
+1 0 60 60
+1 0 60 60
+2 0 60 60
+2 0 60 60
+2 0 60 60
+2 0 60 60

fn=(2272) std::_Hash_bytes(void const*, unsigned long, unsigned long)
0x8dd10 0 519 0 0 149 0 0 1
+10 0 519
+3 0 519
+3 0 519
+4 0 519
+4 0 519
+3 0 519
+3 0 519
+3 0 519
+3 0 519
+50 0 519 0 0 153 0 0 1
+3 0 519
+2 0 519
+3 0 519
+3 0 519
+4 0 519
+2 0 519
+9 0 519 519 0 152 0 0 1
+3 0 519
+4 0 519
+4 0 519
+3 0 519
+3 0 519
-17 0 1557 1557
+3 0 1557
+4 0 1557
+4 0 1557
+3 0 1557
+3 0 1557
+2 0 519
+3 0 519
+10 0 519
+4 0 519
+3 0 519
+4 0 519
+3 0 519
+10 0 519
+4 0 519
+3 0 519 0 0 149 0 0 1
+4 0 519
+3 0 519 519

fn=(664)
0x9eee0 0 7 0 0 1 0 0 1
+7 0 7 7

fn=(678) 0x000000000009e900
0x9e900 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1
+2 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2434 644 238 8 24 0 8 6
* 0 5 3 2 1 0 0 1

fn=(726) std::__cxx11::moneypunct<char, true>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xacbe0 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+6 0 1
+3 0 1
0xaceb0 0 1 0 1 1 0 0 1
+6 0 1 1
+7 0 1 0 0 1 0 0 1
+7 0 1 1
+4 0 1 1
+2 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1 1 0 0 1
+8 0 1 0 1
+7 0 1 0 1
+3 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1
+5 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 10 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(786)
0xc3e70 0 12 0 0 1 0 0 1
+5 0 12
+6 0 11
+2 0 5
+5 0 5
+2 0 5
+6 0 4
+5 0 4
+2 0 3
+5 0 3
+6 0 2
+5 0 2
+6 0 2
+2 0 2 2
+7 0 6 0 0 1 0 0 1
+4 0 6
+6 0 5
+2 0 3 0 0 1 0 0 1
+5 0 3
+6 0 2
+5 0 2
+2 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110) /build/glibc-bfm8X4/glibc-2.23/wctype/wctype_l.c
cfn=(792) wctype_l
calls=1 0x10b420 27 
* 0 146 26 11
* 0 1 1
+7 0 2
+4 0 2
+6 0 1
+4 0 1
+2 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 514 71 26
* 0 1 1
+21 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 318 47 18 0 1 0 0 1
* 0 1 1
+5 0 1 0 0 1 0 0 1
+5 0 1
+35 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1414 394 141 12 13 0 9 4
* 0 5 3 2 1 1 0 1
+13 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 195 32 13
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 244 38 15 0 1 0 0 1
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 367 53 20
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 465 65 24 0 1 0 0 1
* 0 1 1
+5 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 197 32 13 0 1
* 0 1 1
+5 0 1 1
+4 0 1
+7 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* 0 583 79 28
* 0 1 1

fn=(912) std::numpunct<wchar_t>::_M_initialize_numpunct(__locale_struct*)
0xab200 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+5 0 1
+6 0 1
+3 0 1
+80 0 1 0 0 1 0 0 1
+7 0 1 0 1
+8 0 1 0 1 1 0 0 1
+8 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+66 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 1
+7 0 1 0 1
+8 0 1 0 1 1 0 0 1
+4 0 1 0 1
+7 0 1 0 1
+7 0 1 1
+3 0 1
+2 0 1
+3 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-16 0 35 35
+4 0 35 0 35
+4 0 35
+4 0 35
+4 0 35
+2 0 1 1
+7 0 1 1
+3 0 1
+2 0 1
+10 0 1 1 0 1 0 0 1
+4 0 1 0 1
+7 0 1
+4 0 1
+4 0 1
-19 0 25 25
+4 0 25 0 25
+7 0 25
+4 0 25
+4 0 25
+2 0 1

fn=(994) std::ios_base::ios_base()
0xb73f0 0 10 10 0 2 2 0 2 1
+7 0 10
+4 0 10 0 0 1 0 0 1
+7 0 10 0 10 0 0 8 0 0 8
+8 0 10 0 10 0 0 2 0 0 2
+8 0 10 0 10 0 0 2 0 0 2
+7 0 10 0 10
+7 0 10
+4 0 10 0 10 0 0 2 0 0 2
+7 0 10 0 10
+8 0 10 0 10
+3 0 10 0 10
+8 0 10 0 0 1 0 0 1
+3 0 10 0 10 0 0 4 0 0 4
+8 0 10
+7 0 10 0 10
+7 0 10 0 10
+8 0 10
+4 0 10
+3 0 10
-22 0 70 0 70 0 0 8 0 0 8
+7 0 70 0 70 0 0 12 0 0 12
+8 0 70
+4 0 70
+3 0 70
+2 0 10 0 10
+10 0 10 0 10
+7 0 10
+7 0 10 0 0 1 0 0 1
cfn=(644)
calls=10 0xa0dd0 0 
* 0 280 100 70 0 2 3 0 2 3
* 0 10 10 0 0 1 0 0 1

fn=(1080) std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)
0x100210 0 8 0 8
+1 0 8
+3 0 8 8
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16
* 0 8 8
+5 0 8 8
+3 0 8 8
+4 0 8 8
+4 0 8
+2 0 8 8
+4 0 8
+3 0 8
+2 0 8 8
+7 0 8 8 0 1 0 0 1
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=8 0x8bf70 0 
* 0 688 240 176
* 0 8 8
+5 0 8
+3 0 8
+2 0 8 8
+1 0 8 8

fn=(1426) std::basic_ofstream<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
0xf08b0 0 2 0 2 1 0 0 1
+1 0 2
+3 0 2
+3 0 2
+4 0 2 0 2
cfn=(1432) std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
calls=1 0xf0650 0 
* 0 815 163 193 0 2 9 0 2 9
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 6041 1526 709 50 96 13 50 90 13
* 0 6 4 2 1 2 0 1 1
+5 0 2 0 0 1 0 0 1
+3 0 2 2
+3 0 2
+2 0 2 2 0 0 1 0 0 1
+4 0 2
+2 0 2
+3 0 2 2
+1 0 2
cfn=(1492) std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
calls=1 0xf40b0 0 
* 0 6 3 1 0 2 1 0 2 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1029 254 95 2 10 1 2 10 1
* 0 6 4 2 1 1 0 1 1

fn=(422) std::error_category::error_category()
0x8b480 0 2 2 0 1 1 0 1
+7 0 2
+4 0 2 0 2
+3 0 2 2

fn=(524) 0x000000000008a340
0x8a340 0 1 1 0 1 1 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1

fn=(646)
0xa0d40 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 69650 18857 7157 295 378 103 290 64 95
* 0 5 3 2 1 1 0 1
+5 0 1
+7 0 1
+7 0 1 0 1 0 0 1
+3 0 1
+7 0 1 0 1
+3 0 1
+4 0 1 1
+12 0 30 0 0 1 0 0 1
+4 0 30 30 0 0 1 0 0 1
+8 0 30
+21 0 30
+7 0 30 30 0 0 2 0 0 2
+4 0 30
+2 0 29
+4 0 29 29
+6 0 1
+4 0 1

fn=(658) std::locale::_Impl::_Impl(unsigned long)
0x9fb20 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1
+7 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+4 0 1 0 1 0 0 1 0 0 1
+2 0 1 0 1 1 0 0 1
+8 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1
+3 0 1
-14 0 45 0 45 0 0 5 0 0 5
+7 0 45
+4 0 45
+3 0 45
+2 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+4 0 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1
+3 0 1
-14 0 45 0 45 0 0 5 0 0 5
+7 0 45
+4 0 45
+3 0 45
+2 0 1
+7 0 1
+7 0 1 0 1
+4 0 1
+7 0 1
+7 0 1 0 1 1 0 1 1 0 1
+7 0 1
+4 0 1
+3 0 1
-14 0 11 0 11 0 0 1 0 0 1
+7 0 11
+4 0 11
+3 0 11
+2 0 1
+7 0 1 0 1 0 0 1 0 0 1
+4 0 1
+7 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 856 227 94 1 10 2 1 2
* 0 5 3 2 1 0 0 1
+5 0 1 1 0 0 1 0 0 1
+3 0 1
+7 0 1
+5 0 1
+2 0 1 0 0 1 0 0 1
+2 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 4135 1102 511 16 40 10 16 10 9
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2204 623 201 7 14 0 7 6
* 0 5 3 2
+5 0 1
+7 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 843 233 101 1 6 2 1 0 2
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1 0 1
cfn=(696) std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*)
calls=1 0x9f350 0 
* 0 424 155 11 0 1 0 0 1
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 1
+7 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1
+4 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1517 396 169 6 14 0 6 2
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 1 0 0 1
+7 0 1
+7 0 1
+3 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1 0 0 1
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1 0 0 1
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 0 1 1 0 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+2 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1
+4 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 1 0 0 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1
+4 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1304 308 125 4 7 0 4 1
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+7 0 1
+3 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+2 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1
+4 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 1
+7 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1366 325 130 6 7 0 6
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1
+3 0 1 0 1 1 0 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 1 0 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+7 0 1
+5 0 1 0 1 1 0 1 1 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1
+4 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2178 519 252 15 16 1 15 2 1
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+7 0 1
+3 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1 0 1 0 0 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1 0 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 807 231 103 1 6 1 1 1 1
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 22420 5518 2470 43 84 21 38 17 21
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+5 0 1 0 1 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 843 233 101 2 9 1 2 3 1
* 0 5 3 2
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 1 0 0 1
+7 0 1 0 1 1 0 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+10 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1445 332 169 6 9 3 6 1 3
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1 0 0 1
* 0 1 1
+5 0 1 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1 1 0 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1 0 0 1
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1 1 0 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+2 0 1
+2 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 0 0 1 0 0 1
+4 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+7 0 1 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 1 1 0 1
+11 0 1 0 1
+11 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+10 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 1 1 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1308 301 126 7 8 0 7
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1
+7 0 1
+7 0 1
+2 0 1 0 0 1 0 0 1
+2 0 1 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1 1 0 0 1
+7 0 1 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1
+4 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1292 299 126 7 7 0 7 2
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1 0 0 1 0 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1
+7 0 1
+5 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 0 1 0 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 1 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2168 517 251 14 18 0 14 2
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1
* 0 1 1
+5 0 1 1
+7 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1 0 0 1 0 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1 1 0 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11 0 1
* 0 1 1
+5 0 1
+7 0 1 0 0 1 0 0 1
+5 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 807 231 103 2 6 0 2
* 0 5 3 2 1 0 0 1
+5 0 1 1 0 0 1
+7 0 1
+7 0 1
+3 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1 0 0 1 0 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 1
+7 0 1 1
+7 0 1
+7 0 1
+3 0 1 0 1
+10 0 1
+4 0 1 0 1
+7 0 1 0 1
cfn=(696)
calls=1 0x9f350 0 
* 0 424 155 11
* 0 1 1
+5 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1
+3 0 1 0 1
+4 0 1
+7 0 1 0 1
+5 0 1
+7 0 1 0 1 0 0 1
+5 0 1
+7 0 1 0 1
+5 0 1
+7 0 1 0 1 1 0 0 1
+5 0 1
+7 0 1 0 1
+5 0 1 0 1
cfn=(840)
calls=1 0xb8fb0 0 
* 0 9931 2568 1222 74 68 10 74 8 7
+5 0 1 1
+4 0 1
+3 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1
+3 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1
+3 0 1 0 1 1 0 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1
+3 0 1 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1 0 0 1 0 0 1
+7 0 1 1
+7 0 1 0 1
+4 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1 1
+7 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1 1 0 1 0 0 1
+7 0 1 0 1
+5 0 1 1
+4 0 1 0 1
cfn=(702)
calls=1 0x9f310 0 
* 0 5 2
* 0 1 1
+5 0 1
+7 0 1 0 1
+4 0 1 1
+5 0 1 1
+9 0 1
+2 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(696)
0x9f350 0 30 0 0 1 0 0 1
+3 0 30
+6 0 30 0 30
+2 0 30 0 30
+2 0 30
+3 0 30 0 30
+2 0 30 0 30
+2 0 30 0 30
+1 0 30 0 30
+1 0 30
+3 0 30
+3 0 30
+4 0 30 0 30
cfn=(702)
calls=29 -96 0 
* 0 406 116 58 0 6 0 0 5
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 750 218 96 1 6 0 1 3
* 0 34 32 2 1 1 0 1
+5 0 30
+3 0 30 30
+4 0 30
+4 0 30 0 0 1 0 0 1
+3 0 30
+6 0 30 30
+7 0 30
+3 0 30
+12 0 30 30
+4 0 30
+4 0 30 30 0 0 1
+3 0 30
+3 0 30
0x9f482 0 30 30 0 1 0 0 1
+5 0 30 0 30
+3 0 30
+2 0 30
+2 0 30
+29 0 1380
+4 0 1380 1380
+4 0 1380
+2 0 1380 1380
+4 0 1380 0 0 1 0 0 1
+8 0 1380 1380
+4 0 1380
+3 0 1380
+32 0 30
+4 0 30 30
+1 0 30 30
+1 0 30 30
+2 0 30 30
+2 0 30 30
+2 0 30 30
+2 0 30 30
0x9f620 0 30 0 30 1 0 0 1
+5 0 30

fn=(738) std::__timepunct<char>::_M_initialize_timepunct(__locale_struct*)
0xaec30 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+4 0 1 1
+5 0 1 0 1 1 0 0 1
+5 0 1
+6 0 1 1
+6 0 1
0xaf110 0 1 0 1 1 0 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 1
+4 0 1
+7 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1 1 0 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 0 1 0 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(820) std::__cxx11::moneypunct<wchar_t, true>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xad880 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1 1
+5 0 1
+6 0 1
+3 0 1
0xadaa9 0 1 1 0 1 0 0 1
+5 0 1 1
+9 0 1
+6 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
0xadbb0 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1 0 0 1 0 0 1
+7 0 1 1
+2 0 1 0 1
+4 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+3 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1 1 0 0 1
+8 0 1 0 1
+8 0 1 0 1
+7 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1
+4 0 1 1
+3 0 1
+2 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1 0 0 1 0 0 1
-16 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1

fn=(1000) std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
0xf4590 0 8 0 8 1 0 0 1
+1 0 8 0 8
+1 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
cfn=(1006) std::ios_base::_M_init()
calls=7 0x9e3c0 0 
* 0 616 217 154 2 2 0 2 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2248 670 308 7 23 2 7 4
* 0 12 10 2 1 2 0 1 1
+5 0 8
+7 0 8
+3 0 8 0 8
cfn=(1024) std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&)
calls=7 0xf4400 0 
* 0 5670 2135 1253 14 31 0 14 31
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 10588 2747 1085 40 102 1 39 17
* 0 12 10 2 2 2 0 2 1
+5 0 8
+2 0 8
+3 0 8 0 8
+7 0 8
+3 0 8 0 8 1 0 0 1
+7 0 8 0 8
+7 0 8 0 8
+11 0 8 0 8
+7 0 8 0 8
+3 0 8
+4 0 8 8
+1 0 8 8
+1 0 8 8

fn=(1036)
0x8bf70 0 76 0 76 1 0 0 1
+2 0 76 0 76
+2 0 76
+3 0 76 0 76
+1 0 76 0 76
+1 0 76
+3 0 76
+4 0 76 76 0 1 0 0 1
+9 0 76 0 76
+5 0 76
+2 0 76 76 0 0 6 0 0 3
+3 0 76 76 0 0 10 0 0 4
+4 0 76 76
+4 0 76 0 76
+8 0 76 0 76
+8 0 76 0 76
+8 0 76 0 76
+8 0 76 0 76 1 0 0 1
+8 0 76 76
+3 0 76 76
+4 0 76
+4 0 76 76
+5 0 76 76
+9 0 76
+6 0 76
+4 0 76 76
+1 0 76 76
+1 0 76 76
+2 0 76 76
+2 0 76 76
+4 0 76 76 0 0 6 0 0 2
+3 0 76
+3 0 76
+3 0 76
+3 0 76
+3 0 76 0 0 1 0 0 1
+3 0 76 0 76
+1 0 76
+3 0 76 0 76
+1 0 76
+5 0 76
+3 0 76 76 76 0 4 0 0 2
cfn=(1062)
calls=60 0x8e2a0 0 
* 0 2040 660 540 3 2 0 3 1
cfn=(1038) __cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
calls=16 0x8ed50 0 
* 0 2551 851 423 19 33 1 19 7
+3 0 76 76
+5 0 76 76
+1 0 76 76
+1 0 76
+3 0 76
+2 0 76 76
+4 0 76
+2 0 76
+3 0 76
+3 0 76

fn=(1074) bool std::has_facet<std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)
0x101350 0 8 0 8
+1 0 8
+3 0 8 8 0 0 2 0 0 1
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16
* 0 8 8
+5 0 8 8
+3 0 8
+3 0 8
+2 0 8 8
+4 0 8
+2 0 8 8
+4 0 8 8
+4 0 8
+3 0 8
+2 0 8 8 0 1 0 0 1
+7 0 8 8
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=8 0x8bf70 0 
* 0 688 240 176 0 2 0 0 1
* 0 8 8
+5 0 8
+3 0 8
+3 0 8 8
+1 0 8 8

fn=(1438) std::__basic_file<char>::is_open() const
0xb0070 0 6 6 0 0 2 0 0 2
+4 0 6
+3 0 6 6

fn=(1446) 0x00000000000aff10
0xaff10 0 2 0 0 1 0 0 1
+3 0 2
+3 0 2
+6 0 2
+7 0 2 2 0 0 1 0 0 1
+4 0 2
+3 0 2
+86 0 2 0 0 1 0 0 1
+7 0 2 2

fn=(1598) operator delete(void*)
0x8bf10 0 179370 0 0 14 0 0 1
cob=(3)
cfi=(70)
cfn=(1604) free
calls=179369 0x844f0 2934 
* 0 18952153 4628817 2973952 1458 3178 0 13
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1441 410 152 17 26 0 17 17
* 0 179374 179372 2 14 112 0 1 2

fn=(414) 0x0000000000089e10
0x89e10 0 1 0 1 1 0 0 1
+1 0 1
+7 0 1 0 1 0 0 1
+11 0 1
+3 0 1 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 786 219 95 1 18 0 1 1
* 0 5 3 2 1 2 0 1
+5 0 1
+3 0 1
+7 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 1435 402 152 4 8 1 4 1
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1 0 1
+11 0 1 0 1
cfn=(422)
calls=1 0x8b480 0 
* 0 4 2 1
* 0 1 1
+5 0 1
+3 0 1
+7 0 1
+7 0 1 1
+1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 57 
* 0 66 13 15
* 0 1 1

fn=(440) std::future_category()
0xb6c30 0 1 1 0 1 1 0 1 1
+7 0 1
+17 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 737 223 101 5 12 1 5 2
* 0 5 3 2 1 1 0 1
+5 0 1
+2 0 1
+2 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 718 215 97 3 9 0 3 2
* 0 5 3 2 1 1 0 1
+5 0 1
+7 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 57 
* 0 66 13 15 0 0 1
* 0 1 1
+5 0 1
+7 0 1
+4 0 1 1

fn=(568) 0x000000000008a480
0x8a480 0 1 1 0 1 0 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1

fn=(676)
0x9ee90 0 14 14 0 1 0 0 1
+8 0 14 0 14
+1 0 14
+31 0 13 13
+1 0 13 13
+7 0 14
+7 0 14 14 0 0 1 0 0 1
+3 0 14
+3 0 14
+2 0 1 0 1
cfn=(678)
calls=1 0x9e900 0 
* 0 2443 647 240 10 24 0 10 6
+5 0 1 1
+3 0 1 1
+1 0 1 1

fn=(838) std::__cxx11::messages<wchar_t>::messages(unsigned long)
0xe3620 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 0 1
cfn=(664)
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(868) std::moneypunct<char, false>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xa9920 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+6 0 1
+3 0 1
0xa9bf0 0 1 0 1 1 0 0 1
+6 0 1 1
+7 0 1 0 0 1 0 0 1
+7 0 1 1
+4 0 1 1
+2 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1 1 0 0 1
+8 0 1 0 1
+7 0 1 0 1
+3 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1
+5 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 10 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1 0 0 1 0 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(882) std::moneypunct<char, true>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xa93c0 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1
+6 0 1
+3 0 1
0xa9690 0 1 0 1 1 0 0 1
+6 0 1 1
+7 0 1
+7 0 1 1
+4 0 1 1
+2 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1 1 0 0 1
+4 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+7 0 1 0 1
+3 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1 0 1 0 0 1
+3 0 1
+2 0 1
+5 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 10 10
+4 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(1030) bool std::has_facet<std::ctype<char> >(std::locale const&)
0x1011c0 0 8 0 8 2 0 0 2
+1 0 8
+3 0 8 8 0 0 1 0 0 1
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16 0 0 1 0 0 1
* 0 8 8 0 0 1 0 0 1
+5 0 8 8
+3 0 8
+3 0 8
+2 0 8 8
+4 0 8
+2 0 8 8
+4 0 8 8 0 0 2 0 0 1
+4 0 8
+3 0 8
+2 0 8 8 0 0 1 0 0 1
+7 0 8 8 0 0 1 0 0 1
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=7 0x8bf70 0 
* 0 938 343 217 5 8 0 5 8
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2045 626 260 18 41 1 18 3
* 0 12 10 2 1 1 0 1 1
+5 0 8 0 0 2 0 0 2
+3 0 8
+3 0 8 8
+1 0 8 8

fn=(1038)
0x8ed50 0 16 0 16 2 0 0 2
+2 0 16 0 16
+2 0 16
+3 0 16 0 16
+2 0 16 0 16
+2 0 16 0 16
+1 0 16 0 16
+1 0 16
+7 0 16 16
+8 0 16 16
+8 0 16 0 16
+5 0 16 0 16
+5 0 16 0 16 2 0 0 2
+4 0 16 0 16
+5 0 16 0 16
+5 0 16 0 16
+5 0 16 16
+9 0 16 0 16
+5 0 16
+2 0 16 16
+5 0 16
+2 0 16 16
+3 0 16 0 16
+4 0 16 16
+5 0 16 16
+5 0 16 16
+4 0 16 0 0 1 0 0 1
0x8f010 0 16 16 0 1 0 0 1
+5 0 16 16 0 0 2 0 0 1
+4 0 16
+3 0 16
+6 0 16 16 0 0 2 0 0 2
+3 0 16
+6 0 16
+3 0 16 0 16
cob=(3)
cfi=(114) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/strcmp-sse2-unaligned.S
cfn=(1048) __strcmp_sse2_unaligned
calls=15 0x9f570 24 
* 0 225 45 0 3 1 0 3 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1250 372 133 7 26 1 7 2
* 0 20 18 2 1 2 0 1 1
+5 0 16
+2 0 16
+6 0 16 16
+5 0 16 16 0 1 0 0 1
+4 0 16
+3 0 16
+6 0 16
+3 0 16 16
+6 0 16 16
+4 0 16 0 16
+4 0 16 0 16
+4 0 16
+6 0 16 16
+5 0 16
+3 0 16 16
+5 0 16
+3 0 16
+3 0 16
+4 0 16 0 16 1 0 0 1
+4 0 16
+2 0 16 16
+5 0 16 16
+9 0 16
+6 0 16
+7 0 16 16
+1 0 16 16
+1 0 16 16
+2 0 16 16
+2 0 16 16
+2 0 16 16
+2 0 16 16

fn=(1068) std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > const& std::use_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&)
0x1001c0 0 8 0 8 2 0 0 2
+1 0 8
+3 0 8 8
+7 0 8 0 8
cfn=(702)
calls=8 0x9f310 0 
* 0 40 16
* 0 8 8
+5 0 8 8
+3 0 8 8
+4 0 8 8
+4 0 8
+2 0 8 8
+4 0 8
+3 0 8
+2 0 8 8
+7 0 8 8
+7 0 8
+2 0 8 0 8
cfn=(1036)
calls=8 0x8bf70 0 
* 0 688 240 176
* 0 8 8
+5 0 8
+3 0 8
+2 0 8 8 0 2 0 0 2
+1 0 8 8

fn=(1116)
0x125770 0 4 0 4 1 0 0 1
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4 0 1 0 0 1
+3 0 4 4
+4 0 4 4
+4 0 4
+2 0 4 4
+4 0 4
+3 0 4
+2 0 4 4
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88
* 0 4 4
+5 0 4
+3 0 4
+2 0 4 4
+1 0 4 4

fn=(1158) std::chrono::_V2::system_clock::now()
0xb1430 0 7 0 0 2 0 0 2
+4 0 7
+2 0 7
+3 0 7 7 0 1 0 0 1
+9 0 7 0 7
+5 0 7
+2 0 7 0 7
cob=(3)
cfi=(122) /build/glibc-bfm8X4/glibc-2.23/rt/../sysdeps/unix/clock_gettime.c
cfn=(1164) clock_gettime
calls=6 0x115810 93 
* 0 120 36 18 0 3 0 0 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1325 380 135 4 24 0 3 3
* 0 11 9 2 1 3 0 0 2
+5 0 7 7
+8 0 7 7
+5 0 7 7
+5 0 7 7
+9 0 7
+2 0 7
+4 0 7 7

fn=(1338)
0x101210 0 2 0 2
+1 0 2
+3 0 2 2 0 0 1 0 0 1
+7 0 2 0 2
cfn=(702)
calls=2 0x9f310 0 
* 0 10 4 0 0 1 0 0 1
* 0 2 2
+5 0 2 2
+3 0 2
+3 0 2
+2 0 2 2
+4 0 2
+2 0 2 2
+4 0 2 2
+4 0 2
+3 0 2
+2 0 2 2 0 1 0 0 1
+7 0 2 2
+7 0 2
+2 0 2 0 2
cfn=(1036)
calls=2 0x8bf70 0 
* 0 172 60 44 0 2 0 0 2
* 0 2 2
+5 0 2
+3 0 2
+3 0 2 2
+1 0 2 2

fn=(732) std::__timepunct<char>::__timepunct(std::__timepunct_cache<char>*, unsigned long)
0xfe7c0 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1 0 1
+8 0 1 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1
+3 0 1 0 1
cfn=(664)
calls=1 0x9eee0 0 
* 0 2 1
* 0 1 1
+5 0 1
+2 0 1 0 1
+4 0 1
+3 0 1 0 1 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1197 268 147 12 7 0 12 1
* 0 5 3 2 1 1 0 1
+5 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(802) std::codecvt<wchar_t, char, __mbstate_t>::codecvt(unsigned long)
0x9ab60 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+3 0 1 1 0 0 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(814) std::__cxx11::moneypunct<wchar_t, false>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xade90 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1 1
+5 0 1
+6 0 1 0 0 1 0 0 1
+3 0 1
0xae0b9 0 1 1 0 1 0 0 1
+5 0 1 1 0 1 0 0 1
+9 0 1
+6 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
0xae1c0 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1
+7 0 1 1 0 0 1
+2 0 1 0 1
+4 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+3 0 1 0 1 1 0 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1
+7 0 1 1
+4 0 1 0 1
+3 0 1 1
+7 0 1 1
+4 0 1 1
+3 0 1
+2 0 1
+2 0 1 1 0 1 0 0 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-16 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1

fn=(948) std::moneypunct<wchar_t, true>::_M_initialize_moneypunct(__locale_struct*, char const*)
0xaa060 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1
+9 0 1 0 1 1 0 0 1
+5 0 1
+2 0 1 1
+5 0 1
+6 0 1
+3 0 1
0xaa289 0 1 1 0 1 0 0 1
+5 0 1 1
+9 0 1
+6 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
0xaa390 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1
+7 0 1 1
+2 0 1 0 1
+4 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+4 0 1 0 1
+4 0 1 0 1
+4 0 1 0 1
+3 0 1 0 1
+8 0 1 0 1
+4 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1
+8 0 1 0 1
+7 0 1 1
+4 0 1 0 1
+3 0 1 1 0 1 0 0 1
+7 0 1 1
+4 0 1 1
+3 0 1
+2 0 1
+2 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-16 0 10 10
+4 0 10 0 10
+4 0 10
+4 0 10
+4 0 10
+2 0 1

fn=(1110)
0x1268a0 0 4 0 4 1 0 0 1
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4
+3 0 4
+3 0 4
+2 0 4 4
+4 0 4
+2 0 4 4 0 1 0 0 1
+4 0 4 4 0 0 1
+4 0 4
+3 0 4
+2 0 4 4
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88 0 2
* 0 4 4
+5 0 4
+3 0 4
+3 0 4 4
+1 0 4 4

fn=(1332)
0xb0060 0 2 0 2 1 0 0 1
+7 0 2 0 2
+4 0 2 2

fn=(1432)
0xf0650 0 2 0 2 1 0 0 1
+2 0 2 0 2
+2 0 2
+3 0 2 0 2
+1 0 2
+4 0 2 0 2
+1 0 2
+3 0 2
+3 0 2
+4 0 2
+3 0 2 2
+9 0 2 0 2
+5 0 2
+2 0 2 0 2
cfn=(1438)
calls=1 0xb0070 0 
* 0 3 2 0 0 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 835 228 94 0 10 2 0 10 2
* 0 6 4 2 1 1 0 1 1
+5 0 2 0 0 1 0 0 1
+2 0 2
+6 0 2
+5 0 2
+3 0 2
+3 0 2
+3 0 2 0 2
cfn=(1444) std::__basic_file<char>::open(char const*, std::_Ios_Openmode, int)
calls=1 0xb00f0 0 
* 0 543 106 136 0 0 7 0 0 7
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2727 716 364 41 58 8 41 52 8
* 0 6 4 2 1 0 0 1
+5 0 2
+3 0 2 0 2
cfn=(1438)
calls=2 0xb0070 0 
* 0 6 4
* 0 2 2
+5 0 2
+2 0 2
+6 0 2
+3 0 2 0 2
cfn=(1484)
calls=1 0xec440 0 
* 0 210 39 37 0 1 1 0 1 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1329 302 131 2 12 1 2 12 1
* 0 6 4 2 1 1 0 1 1
+5 0 2 2
+7 0 2
+4 0 2 0 2 1 0 0 1
+4 0 2 0 2
+7 0 2 0 2
+7 0 2 0 2 0 0 2 0 0 2
+8 0 2 0 2
+8 0 2 0 2
+4 0 2 0 2
+4 0 2 0 2
+4 0 2 2
+4 0 2 0 2
+8 0 2 0 2
+7 0 2 0 2 1 0 0 1
+7 0 2
+2 0 2
+3 0 2 2
+5 0 2 2
+9 0 2
+2 0 2
+4 0 2 2
+1 0 2 2
+1 0 2 2
+2 0 2 2
+2 0 2 2

fn=(406) 0x000000000008a610
0x8a580 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+26 0 1 1 0 1 0 0 1
+1 0 1 1
+79 0 1 0 0 1 0 0 1
+7 0 1 1 0 0 1
+4 0 1
+2 0 1

fn=(446) __cxa_guard_acquire
0x8da90 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+4 0 1 1
+9 0 1 0 1
+5 0 1
+2 0 1 1
+3 0 1
+2 0 1
+6 0 1 1 0 0 1
+8 0 1 0 0 1 0 0 1
+3 0 1
+56 0 1
+5 0 1
+1 0 1 1 0 1 0 0 1
+5 0 1 1
+9 0 1
+2 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+72 0 1 1 0 1 0 0 1
+3 0 1
+13 0 1 1
+4 0 1
+2 0 1 0 1
+4 0 1 0 0 1 0 0 1

fn=(500) 0x000000000008a050
0x8a050 0 1 1 0 0 1 0 0 1
+8 0 1 0 1 0 0 1 0 0 1
+10 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1 1 0 0 1
+10 0 1 0 1 0 0 1 0 0 1
+8 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+11 0 1 0 1 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 1 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+10 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+11 0 1 0 1 1 0 1 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+10 0 1 0 1 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+10 0 1 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+10 0 1 1

fn=(670) std::ctype<char>::ctype(unsigned short const*, bool, unsigned long)
0xc3c20 0 1 0 0 1 0 0 1
+2 0 1
+3 0 1 0 1
+2 0 1
+3 0 1 0 1
+1 0 1 0 1
+1 0 1 0 1 0 0 1 0 0 1
+3 0 1 1
+7 0 1
+3 0 1
+3 0 1
+3 0 1 0 0 1 0 0 1
+4 0 1 0 1
+3 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 3294 879 336 11 33 1 11 9
* 0 5 3 2 1 1 0 1
+5 0 1
+3 0 1 0 1
+4 0 1
+3 0 1
+3 0 1
+3 0 1 1 0 0 1
+4 0 1
+3 0 1 0 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+2 0 1
+4 0 1
+2 0 1 0 0 1 0 0 1
+7 0 1
+2 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1 0 0 1 0 0 1
+8 0 1
+2 0 1 0 1 0 0 1 0 0 1
+11 0 1
+6 0 1
+3 0 1 0 1
* 0 31 0 30 0 0 2 0 0 2
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1
+4 0 1
+2 0 1
+6 0 1
+3 0 1 0 1
* 0 31 0 30 0 0 2 0 0 2
+3 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+10 0 1 1 0 1 0 0 1
+4 0 1

fn=(708) std::codecvt<char, char, __mbstate_t>::codecvt(unsigned long)
0x9aac0 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1

fn=(1086) std::basic_ios<wchar_t, std::char_traits<wchar_t> >::init(std::basic_streambuf<wchar_t, std::char_traits<wchar_t> >*)
0xf4ed0 0 4 0 4 1 0 0 1
+1 0 4 0 4
+1 0 4
+3 0 4
+3 0 4
+4 0 4 0 4
cfn=(1006)
calls=4 0x9e3c0 0 
* 0 352 124 88
* 0 4 4
+5 0 4
+7 0 4
+3 0 4 0 4
cfn=(1092)
calls=3 0xf4d40 0 
* 0 2142 801 483
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 8547 2117 831 18 62 0 18 17
* 0 8 6 2 1 1 0 1
+5 0 4
+2 0 4
+3 0 4 0 4
+7 0 4
+3 0 4 0 4 1 0 0 1
+10 0 4 0 4
+7 0 4 0 4
+11 0 4 0 4
+7 0 4 0 4
+3 0 4
+4 0 4 4
+1 0 4 4
+1 0 4 4

fn=(1098)
0x126760 0 4 0 4 1 0 0 1
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4
+3 0 4
+3 0 4
+2 0 4 4
+4 0 4
+2 0 4 4 0 1 0 0 1
+4 0 4 4 0 0 1
+4 0 4
+3 0 4
+2 0 4 4 0 0 1
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88 0 2
* 0 4 4
+5 0 4
+3 0 4
+3 0 4 4
+1 0 4 4

fn=(1128)
0x1257c0 0 4 0 4 1 0 0 1
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4
+3 0 4 4
+4 0 4 4
+4 0 4
+2 0 4 4
+4 0 4
+3 0 4
+2 0 4 4
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88
* 0 4 4
+5 0 4
+3 0 4
+2 0 4 4 0 1 0 0 1
+1 0 4 4

fn=(1444)
0xb00f0 0 2 0 2 1 0 0 1
+2 0 2 0 2
+1 0 2 0 2
+1 0 2
+3 0 2
+2 0 2 0 2
cfn=(1446)
calls=2 0xaff10 0 
* 0 18 4 0 2 1 0 2 1
+5 0 2 0 0 1 0 0 1
+3 0 2
+2 0 2
+3 0 2
+3 0 2
+3 0 2 0 2
cfn=(1438)
calls=2 0xb0070 0 
* 0 6 4
* 0 2 2
+5 0 2
+2 0 2
+2 0 2
+3 0 2
+3 0 2 0 2
cob=(3)
cfi=(155) /build/glibc-bfm8X4/glibc-2.23/libio/iofopen.c
cfn=(1456) fopen@@GLIBC_2.2.5
calls=1 0x6dd70 97 
* 0 503 96 128 0 0 7 0 0 7
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1739 464 260 36 48 8 36 42 8
* 0 6 4 2 1 1 0 1 1
+5 0 2
+3 0 2 0 2
+3 0 2
+2 0 2
+3 0 2 0 2
+4 0 2 2
+1 0 2 2
+1 0 2 2
+2 0 2 2

fn=(2374) std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
0xb7280 0 475 0 0 150 0 0 1
+3 0 475 475
+4 0 475
+6 0 463 0 463
+1 0 463 0 463
+1 0 463
+4 0 463
+3 0 463 463
+2 0 463 0 463
+4 0 463 463
+3 0 463
+6 0 463 0 463
+4 0 463
+3 0 463
+2 0 463 463
+3 0 463
+6 0 463
+2 0 463
+9 0 463 0 0 150 0 0 1
+3 0 463
+3 0 463
+2 0 463
+2 0 463
+2 0 463
+2 0 463
+12 0 463 0 463
+4 0 463 463
+6 0 463 0 463
cob=(4) /lib/x86_64-linux-gnu/libm-2.23.so
cfi=(64) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_floor.S
cfn=(2380) __floor_sse41
calls=462 0x17ba0 36 
* 0 924 462 0 158
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 960 289 115 5 21 1 4 11
* 0 467 465 2 150 160 0 2 1
+5 0 463 463 0 0 152 0 0 1
+8 0 463 463
+8 0 463
+4 0 463 0 0 150 0 0 1
+2 0 463
+5 0 463
+4 0 463
+3 0 463
+3 0 463
+4 0 463 0 463
cfn=(2386) std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
calls=462 0xb7130 0 
* 0 13001 4630 2771 1040 305 0 2 7
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1958 543 217 7 17 1 7 17
* 0 467 465 2 149 160 0 1 1
+5 0 463
+4 0 463
+3 0 463
+5 0 463 463
+1 0 463 463
+1 0 463 463
+9 0 12
+2 0 12
+2 0 12 12

fn=(2386)
0xb7130 0 463 0 463 149 0 0 1
+1 0 463 0 463
+1 0 463
+3 0 463
+4 0 463
+4 0 463 0 0 150 0 0 1
+6 0 1 1 0 0 1 0 0 1
+7 0 1
+5 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1 1 0 0 1 0 0 1
+3 0 1
-13 0 1
+3 0 1
+3 0 1
+4 0 1 1
+3 0 1
+8 0 6
+3 0 6
+3 0 6
+4 0 6 6 0 0 5 0 0 5
+3 0 6
+2 0 5
+3 0 5
+3 0 5
-3 0 2
+3 0 2
+2 0 1 1 0 1 0 0 1
+4 0 1 1
+2 0 1
+6 0 1 1
+3 0 1 0 1
+4 0 1 1
+6 0 1 0 1
cob=(4)
cfi=(58) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_ceil.S
cfn=(2392) __ceil_sse41
calls=1 0x16b60 36 
* 0 2 1
* 0 1 1
+5 0 1 1
+8 0 1
+4 0 1
+2 0 1
+5 0 1 0 1
+4 0 1 1
+3 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+11 0 1 0 0 1 0 0 1
+3 0 1
+4 0 1
+4 0 1
+3 0 1
+42 0 462 0 0 298 0 0 1
+7 0 462 462 0 0 150 0 0 1
+4 0 462 0 462
+4 0 462
+2 0 462 462
+4 0 462 462
+2 0 462 0 462
+4 0 462 462
+6 0 462 0 462
cob=(4)
cfi=(58)
cfn=(2392)
calls=461 0x16b60 36 
* 0 922 461 0 148
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 952 288 115 2 8 1 2 8
* 0 466 464 2 149 150 0 1 1
+5 0 462 462
+8 0 462
+4 0 462
+2 0 462
+5 0 462 0 462
+4 0 462 0 0 149 0 0 1
+4 0 462
+3 0 462 462
+1 0 462 462
+1 0 462 462

fn=(542) 0x000000000008a3c0
0x8a3c0 0 1 1 0 1 1 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1 1 0 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1 0 1 0 0 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1 0 0 1
+7 0 1 1
+3 0 1
+2 0 1 0 1
+3 0 1 1

fn=(638) std::ios_base::Init::Init()
0x9d7e0 0 5 0 5 2 0 0 1
+2 0 5 0 5
+2 0 5 0 5
+2 0 5 0 5
+2 0 5 0 5
+1 0 5 0 5
+1 0 5
+4 0 5 5
+8 0 5
+7 0 5 0 0 1 0 0 1
+16 0 5
+2 0 5
+2 0 4
+4 0 4 4
+1 0 4 4
+1 0 4 4
+2 0 4 4
+2 0 4 4
+2 0 4 4
+2 0 4 4
+1 0 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1
+3 0 1 1 0 0 1
+7 0 1 0 1
+11 0 1 1 0 0 1
+3 0 1 1 0 1 1 0 1
+7 0 1
+4 0 1 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 70374 19077 7263 301 388 106 296 65 95
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+10 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1
+4 0 1 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+7 0 1 0 1
+11 0 1 1 0 0 1
+3 0 1 0 1
cfn=(644)
calls=1 0xa0dd0 0 
* 0 28 10 7
* 0 1 1 0 0 1
+5 0 1 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+10 0 1 0 1
+11 0 1 1
+3 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
cfn=(644)
calls=1 0xa0dd0 0 
* 0 28 10 7
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+10 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 776 220 128 4 7 4 4 0 4
* 0 5 3 2 1 1 0 1
+5 0 1 1 0 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+11 0 1
+4 0 1 0 1
+11 0 1 0 1 1 0 1 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 13979 3688 1501 51 135 3 50 22
* 0 5 3 2 0 1
+5 0 1 1
+7 0 1
+5 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1 1
+7 0 1
+7 0 1 0 0 1 0 0 1
+5 0 1 0 1
+12 0 1 0 1
+9 0 1 0 1
+9 0 1 0 1
+12 0 1
+4 0 1
+4 0 1 0 1 1 0 0 1
+12 0 1 0 1
+12 0 1 0 1
+12 0 1 0 1
+5 0 1 0 1
+4 0 1 0 1
+9 0 1 0 1
cfn=(1000)
calls=1 0xf4590 0 
* 0 922 341 211
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1
+4 0 1 0 1 1 0 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1
+4 0 1
+7 0 1
+4 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+7 0 1 0 1
+3 0 1
+4 0 1 0 1
+7 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1 0 1
cfn=(1000)
calls=1 0xf4590 0 
* 0 922 341 211
* 0 1 1
+5 0 1 1
+7 0 1
+4 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1
+4 0 1 0 0 1 0 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+8 0 1 0 1
+4 0 1
+4 0 1 0 1
+8 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1 0 1
cfn=(1000)
calls=1 0xf4590 0 
* 0 922 341 211
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1 0 1
+8 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 1
+3 0 1 1 0 0 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1
+4 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+7 0 1 0 1
cfn=(644)
calls=1 0xa0dd0 0 
* 0 28 10 7
* 0 1 1
+5 0 1 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1 1 0 0 1
+10 0 1 0 1
+11 0 1 0 1
+11 0 1
+4 0 1 1
+7 0 1 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+7 0 1 0 1
+11 0 1 1
+3 0 1 0 1
cfn=(644)
calls=1 0xa0dd0 0 
* 0 28 10 7
* 0 1 1
+5 0 1 1
+7 0 1
+7 0 1 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1 0 1
+10 0 1 0 1
+11 0 1 1
+3 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
cfn=(644)
calls=1 0xa0dd0 0 
* 0 28 10 7
* 0 1 1
+5 0 1 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1 0 1
+10 0 1
+4 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1 1 0 1 1 0 1
+7 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+10 0 1 0 1
+7 0 1 0 1
+11 0 1
+4 0 1 0 1 1 0 0 1
+11 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1
+4 0 1 0 1
+4 0 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 9758 2415 959 21 67 0 21 17
* 0 5 3 2 1 1 0 1
+5 0 1 1
+7 0 1
+5 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1 1 0 1 1 0 1
+7 0 1
+7 0 1
+5 0 1 0 1
+12 0 1 0 1
+12 0 1 0 1
+9 0 1 0 1
+12 0 1 0 0 1 0 0 1
+4 0 1
+4 0 1 0 1
+12 0 1 0 1
+12 0 1 0 1
+12 0 1 0 1
+5 0 1 0 1
+4 0 1 0 1
+9 0 1 0 1 1 0 0 1
cfn=(1086)
calls=1 0xf4ed0 0 
* 0 826 303 193
* 0 1 1
+5 0 1 1 0 0 1
+7 0 1
+4 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1
+4 0 1
+7 0 1
+4 0 1 0 1 0 0 1 0 0 1
+11 0 1 0 1
+10 0 1 0 1
+3 0 1
+4 0 1 0 1 1 0 0 1
+7 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1 0 1
cfn=(1086)
calls=1 0xf4ed0 0 
* 0 826 303 193
* 0 1 1
+5 0 1 1
+7 0 1 0 0 1 0 0 1
+4 0 1 0 1
cfn=(994)
calls=1 0xb73f0 0 
* 0 88 12 34 0 0 4 0 0 4
* 0 1 1
+5 0 1
+4 0 1
+7 0 1
+4 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1
+4 0 1 0 1
+8 0 1 0 1 1 0 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+11 0 1 0 1
+4 0 1 0 1
cfn=(1086)
calls=1 0xf4ed0 0 
* 0 826 303 193
* 0 1 1
+5 0 1 0 1
+7 0 1 1
+8 0 1 0 1
+8 0 1 0 1
+7 0 1
+32 0 5 5 0 1 0 0 1
+3 0 5
+3 0 5 0 5
+3 0 5
+7 0 1 0 1 1 0 1 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1 0 0 1
+2 0 1 1
+2 0 1 1
+2 0 1 1

fn=(714) std::__cxx11::numpunct<char>::_M_initialize_numpunct(__locale_struct*)
0xae680 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1
+3 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1
+6 0 1
+3 0 1
+85 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1 0 1 1 0 0 1
+8 0 1 0 1
+8 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+71 0 1 0 0 1 0 0 1
+7 0 1 0 1
+4 0 1 0 1 1 0 0 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 1
+7 0 1 1 0 0 1
+3 0 1
+2 0 1
+1 0 1 1 0 0 1 0 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 35 35
+4 0 35 35
+4 0 35 0 35
+4 0 35
+4 0 35
+4 0 35
+2 0 1 1 0 0 1
+7 0 1 1 0 0 1
+3 0 1 0 0 1 0 0 1
+2 0 1
+6 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 25 25 0 0 1 0 0 1
+4 0 25 25
+4 0 25 0 25
+4 0 25
+4 0 25
+4 0 25
+2 0 1

fn=(750) std::ctype<wchar_t>::ctype(unsigned long)
0xb4120 0 1 0 1 1 0 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 1 0 0 1 0 0 1
+3 0 1 1
+7 0 1
+4 0 1 0 1 1 0 0 1
+3 0 1 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 0 1
+4 0 1
+4 0 1
+3 0 1 1
+1 0 1 1
+1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 21698 5299 2366 40 78 20 35 16 20
* 0 5 3 2 1 1 0 1

fn=(832) std::__timepunct<wchar_t>::_M_initialize_timepunct(__locale_struct*)
0xaf5c0 0 1 0 1 1 0 0 1
+1 0 1
+3 0 1
+4 0 1 1
+5 0 1 0 1
+5 0 1
+6 0 1 1
+6 0 1
0xafa98 0 1 0 1 1 0 0 1
cfn=(676)
calls=1 0x9ee90 0 
* 0 9 4 1
* 0 1 1
+5 0 1 0 1
+4 0 1 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1 1 0 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1 0 0 1 0 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1 1 0 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1 0 0 1 0 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+7 0 1 0 1
+7 0 1
+4 0 1 1
+1 0 1 1

fn=(846) std::numpunct<char>::_M_initialize_numpunct(__locale_struct*)
0xaaf40 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1
+3 0 1 0 1
+1 0 1 0 1
+1 0 1
+3 0 1
+4 0 1 1
+4 0 1
+3 0 1
+6 0 1
+3 0 1
+85 0 1 1 0 1 0 0 1
+4 0 1
+7 0 1 0 1 1 0 0 1
+8 0 1 0 1
+8 0 1 0 1
+4 0 1
+7 0 1 0 1
+4 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+71 0 1 0 0 1 0 0 1
+7 0 1 0 1
+4 0 1 0 1 1 0 1 1
+8 0 1 0 1
+4 0 1 0 1
+4 0 1 1
+4 0 1 0 1
+4 0 1 1
+7 0 1 1
+3 0 1
+2 0 1
+1 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 35 35
+4 0 35 35
+4 0 35 0 35
+4 0 35
+4 0 35
+4 0 35
+2 0 1 1
+7 0 1 1
+3 0 1 0 0 1 0 0 1
+2 0 1
+6 0 1 1
+4 0 1 1
+4 0 1 0 1
+4 0 1
+4 0 1
+4 0 1
-20 0 25 25
+4 0 25 25
+4 0 25 0 25
+4 0 25
+4 0 25
+4 0 25
+2 0 1

fn=(1006)
0x9e3c0 0 12 0 12 2 0 0 2
+1 0 12 0 12
+1 0 12
+3 0 12
+4 0 12 0 12
+8 0 12 0 12
+8 0 12 0 12
+7 0 12
+3 0 12 12
+9 0 12 0 12
+5 0 12
+2 0 12 0 12
cfn=(644)
calls=12 0xa0dd0 0 
* 0 336 120 84
* 0 12 12
+5 0 12
+7 0 12 0 0 1 0 0 1
+3 0 12 0 12
cfn=(1012)
calls=11 0x9f060 0 
* 0 231 77 44
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 725 217 98 3 6 1 3
* 0 16 14 2 1 2 0 1 1
+5 0 12
+3 0 12 0 12
cfn=(1018)
calls=11 0x9f0d0 0 
* 0 132 55 22
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 724 216 96 1 7 0 1 1
* 0 16 14 2 1 2 0 1 1
+5 0 12 12
+5 0 12 12
+9 0 12
+2 0 12
+4 0 12 12
+1 0 12 12
+1 0 12 12

fn=(1024)
0xf4400 0 8 0 8 2 0 0 2
+1 0 8 0 8
+1 0 8
+3 0 8
+3 0 8
+3 0 8
+4 0 8 0 8
cfn=(1030)
calls=7 0x1011c0 0 
* 0 1134 434 238 7 15 0 7 15
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 2956 874 359 21 48 1 21 5
* 0 12 10 2 1 2 0 1 1
+5 0 8
+2 0 8
+2 0 8
+3 0 8 0 8
cfn=(1054)
calls=7 0xff550 0 
* 0 1120 434 238 2 0 0 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1085 310 133 2 7 0 2 1
* 0 12 10 2 2 1 0 1 1
+5 0 8
+3 0 8 0 8
+7 0 8 0 8
cfn=(1060)
calls=7 0x101300 0 
* 0 798 301 175 0 8 0 0 8
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1353 321 119 5 14 0 5 2
* 0 12 10 2 1 1 0 1 1
+5 0 8
+2 0 8
+2 0 8
+3 0 8 0 8
cfn=(1068)
calls=7 0x1001c0 0 
* 0 784 301 175 2 0 0 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1359 322 119 2 6 0 2 3
* 0 12 10 2 1 2 0 1 1
+5 0 8
+3 0 8 0 8 1 0 0 1
+7 0 8 0 8
cfn=(1074)
calls=7 0x101350 0 
* 0 798 301 175 0 2 0 0 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1337 319 119 1 10 0 1 2
* 0 12 10 2 1 2 0 1 1
+5 0 8
+2 0 8
+2 0 8
+3 0 8 0 8
cfn=(1080)
calls=7 0x100210 0 
* 0 784 301 175
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 1367 323 119 1 7 0 1 1
* 0 12 10 2 2 2 0 2 1
+5 0 8 0 8
+7 0 8
+4 0 8 8
+1 0 8 8
+1 0 8 8

fn=(1104)
0x124d60 0 4 0 4 1 0 0 1
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4
+3 0 4 4
+4 0 4 4
+4 0 4
+2 0 4 4 0 1 0 0 1
+4 0 4
+3 0 4
+2 0 4 4
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88
* 0 4 4
+5 0 4
+3 0 4
+2 0 4 4
+1 0 4 4

fn=(1122)
0x1268f0 0 4 0 4
+1 0 4
+3 0 4 4
+7 0 4 0 4
cfn=(702)
calls=4 0x9f310 0 
* 0 20 8
* 0 4 4
+5 0 4 4 0 1 0 0 1
+3 0 4
+3 0 4
+2 0 4 4
+4 0 4
+2 0 4 4
+4 0 4 4
+4 0 4
+3 0 4
+2 0 4 4
+7 0 4 4
+7 0 4
+2 0 4 0 4
cfn=(1036)
calls=4 0x8bf70 0 
* 0 344 120 88 0 2
* 0 4 4
+5 0 4
+3 0 4
+3 0 4 4
+1 0 4 4

fn=(1320) std::basic_ofstream<char, std::char_traits<char> >::basic_ofstream()
0xefe40 0 2 0 2 1 0 0 1
+2 0 2 0 2
+2 0 2 0 2
+1 0 2
+7 0 2 0 2
+1 0 2
+3 0 2
+4 0 2
+3 0 2 0 2
cfn=(994)
calls=2 0xb73f0 0 
* 0 176 24 68 1 4 9 1 4 9
* 0 2 2 0 0 1 0 0 1
+5 0 2
+7 0 2 0 2
+11 0 2 0 2 0 0 1 0 0 1
+7 0 2 0 2
+7 0 2 0 2 1 0 0 1
+11 0 2
+2 0 2 0 2
+3 0 2
+7 0 2 0 2
+11 0 2 0 2
+11 0 2 0 2
+11 0 2
+3 0 2 0 2
+7 0 2 0 2 1 0 0 1
cfn=(1000)
calls=2 0xf4590 0 
* 0 1844 682 422 17 35 0 17 35
* 0 2 2 0 0 1 0 0 1
+5 0 2 2 0 0 1 0 0 1
+7 0 2
+4 0 2
+3 0 2
+4 0 2
+4 0 2 0 2
+7 0 2 0 2
+3 0 2 0 2
cfn=(1326)
calls=1 0xebdd0 0 
* 0 325 109 103 0 0 3 0 0 3
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* 0 4142 1082 485 14 48 5 14 48 5
* 0 6 4 2 1 2 0 1 2
+5 0 2
+3 0 2
+3 0 2 0 2
cfn=(1000)
calls=2 0xf4590 0 
* 0 1844 682 422
* 0 2 2
+5 0 2
+4 0 2 2
+1 0 2 2
+1 0 2 2
+2 0 2 2
+2 0 2 2

fn=(1492)
0xf40b0 0 2 2 0 1 2 0 1 2
+8 0 2
+2 0 2 2 0 0 2 0 0 2
+3 0 2 0 2 0 0 2 0 0 2
+3 0 2 0 0 1 0 0 1
+2 0 2 2

ob=(1)
fl=(2) /build/glibc-bfm8X4/glibc-2.23/elf/rtld.c
fn=(2) _dl_start
0x19b0 353 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1 0 0 1 0 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 0 1 0 0 1
+4 +18 1
+2 * 1
+4 * 1
+2 * 1
fi=(5) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/x86_64/dl-machine.h
+3 59 1
fe=(2)
+7 371 1 0 1 0 0 1 0 0 1
fi=(3) /build/glibc-bfm8X4/glibc-2.23/elf/get-dynamic-info.h
+7 45 1 1 0 0 1 0 0 1
fi=(5)
+7 +14 1
+3 * 1 1 0 0 1 0 0 1
fe=(2)
+7 397 1 0 1 0 0 1 0 0 1
fi=(3)
+7 45 1
fe=(2)
+3 394 1 0 1
fi=(3)
+7 45 1 0 0 1 0 0 1
+6 +25 1
+7 * 1
+10 -3 1
+10 -7 1
+5 +5 1
+6 +3 1
+5 +2 1
+3 -3 1
+3 -3 1
+6 -3 1 0 0 1 0 0 1
+5 * 1
+7 -13 13
+7 * 13 0 13 0 0 4 0 0 4
+4 +23 13
+4 -26 13 13 0 0 4 0 0 4
+3 * 13
+3 * 13
-10 +26 1
+4 -26 1 1
+3 * 1
+3 * 1
+2 +2 18
+4 * 18
+2 +13 5
+3 * 5
+3 * 5
+4 * 5
+6 +1 4
+3 * 4
+3 * 4 0 0 1 0 0 1
+7 * 4 0 4 0 0 3 0 0 3
+4 +10 4
+4 -26 4 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+2 +33 1
+3 * 1
+6 +20 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +1 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +1 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +1 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +2 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +5 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +1 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +1 1 1
+7 * 1
+3 * 1
+2 * 1 0 1
+4 +6 1 1
+7 * 1
+3 * 1
+2 +5 1 1
+5 * 1
+6 +7 1 1
+7 * 1
+3 * 1
+2 +1 1 1 0 1 0 0 1
+7 * 1 1
+5 * 1
+6 +8 1 1
+7 * 1
+3 * 1
+16 +2 1 1
+7 * 1
+3 * 1
+16 +3 1 1 0 1 0 0 1
+8 * 1
+6 +1 1 1
+8 * 1
fe=(2)
+6 408 1
+3 * 1
+20 302 1
+7 415 1 0 1 1 0 1 1 0 1
+7 302 1 0 1 0 0 1 0 0 1
cfi=(6) /build/glibc-bfm8X4/glibc-2.23/elf/dl-lookup.c
cfn=(10) _dl_setup_hash
calls=1 0xba50 956 
* * 23 7 6 2 1 0 2 1
+5 +1 1
+7 * 1 0 1
+7 +1 1
+7 * 1 0 1 0 0 1 0 0 1
+7 +1 1
+7 * 1 0 1
+7 +1 1
+7 * 1 0 1 1 0 0 1
+7 +8 1
+2 +9 1
+7 -9 1
+4 * 1
+2 * 1
+3 +9 1
+3 -6 1 0 1
+7 -3 1 0 1 0 0 1 0 0 1
+7 +9 1 0 1
cfi=(7) /build/glibc-bfm8X4/glibc-2.23/elf/../elf/dl-sysdep.c
cfn=(12) _dl_sysdep_start
calls=1 0x19210 86 
* * 2039525 494918 188025 666 11287 2073 660 6632 1329
+5 * 1 0 0 1
+3 +9 1
+2 +3 1
+4 * 1
+2 * 1
+3 * 1 1 0 0 1
+7 +4 1 1 0 1
+7 -4 1 0 1 0 0 1
+4 +4 1
+6 440 1
+4 * 1
+3 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1 0 0 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
fi=(3)
+7 62 1 0 0 1 0 0 1
+3 * 1
+2 * 1
+3 * 1
+32 +3 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+4 * 1
fe=(2)
+22 413 1
+3 * 1
+6 * 1 1
+4 * 1 1 0 1 0 0 1
+7 * 1 1
+4 * 1 1
+7 * 1
+3 * 1
+4 * 1
+6 * 1 1
+4 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1
+2 * 1 1
+7 * 1 1
+7 * 1 1 0 1 0 0 1
+4 * 1
+3 * 1 1
+4 * 1
+3 * 1
+3 * 1
+3 * 1
+4 * 1
+4 * 1
fi=(4) /build/glibc-bfm8X4/glibc-2.23/elf/do-rel.h
+3 84 1 1
+7 +27 1
+3 -28 1 1
+4 +28 1
+2 * 1
+3 +1 1
+3 * 1 1 0 0 1 0 0 1
fi=(5)
+3 517 1 1
+4 * 1
fi=(4)
-10 112 9
+3 * 9 9 0 0 1 0 0 1
fi=(5)
+3 517 9 9 0 0 1 0 0 1
+4 * 9
+6 +1 10 0 0 1 0 0 1
+3 * 10 10 0 0 2 0 0 2
fi=(4)
+4 111 10
+4 * 10
fi=(5)
+3 518 10 0 10 0 0 2 0 0 2
fi=(4)
+3 111 10
+2 +5 1 1
+8 * 1
+6 +8 1
fi=(5)
+3 312 1
fi=(4)
+7 124 1
+6 * 1
+7 +12 1 1
+4 +1 1
+3 * 1 1 0 1 0 0 1
+4 * 1
fi=(5)
+3 266 1
fi=(4)
+2 137 1
fi=(5)
+4 294 1
fi=(4)
+3 137 1
+4 * 1
fi=(5)
+4 294 1
fi=(4)
-31 136 5 5 0 0 2 0 0 2
+4 +1 5
+3 * 5 5
+4 * 5
fi=(5)
+3 266 5
fi=(4)
+2 137 5
fi=(5)
+4 294 5
fi=(4)
+3 137 5
+4 * 5
fi=(5)
+4 294 5
+2 +9 6
+3 * 6
+6 +3 6 6 0 0 4 0 0 4
+5 -3 6 6 0 0 2 0 0 2
+4 * 6 6
+7 +3 6
+3 * 6
+3 * 6
+6 +6 6
+4 * 6
+4 * 6
+2 * 6 6 0 0 1 0 0 1
+4 * 6
+3 * 6
fi=(3)
+9 68 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+4 * 1
+6 +2 1
+3 * 1 0 1 0 0 1 0 0 1
+4 * 1
fi=(5)
+20 425 6 6 0 1 0 0 1
+4 * 6 0 6 0 0 1 0 0 1
fi=(4)
+3 124 6
+4 * 6
+3 * 6
+6 * 1
fe=(2)

fn=(104) map_doit
0xe90 496 1 0 1 1 0 0 1
+1 +2 1 1
+4 -2 1
+3 +3 1 1
+3 * 1 1
+4 * 1
+2 * 1
+7 * 1
+3 * 1
+3 * 1
+2 * 1 0 1 0 0 1 0 0 1
cfi=(22) /build/glibc-bfm8X4/glibc-2.23/elf/dl-load.c
cfn=(106) _dl_map_object
calls=1 0x89e0 2167 
* * 2409 491 266 82 20 31 82 20 31
+5 * 1 0 1
+4 +2 1 1
+1 * 1 1

fn=(160) init_tls
0xac0 589 1 0 0 1 0 0 1
+2 +6 1 1 0 0 1
+8 -6 1 0 1
+1 +2 1 1
+7 * 1 0 1
+7 +4 1
+6 +10 1
+4 * 1
+5 * 1
+4 * 1 0 1
cfi=(17) /build/glibc-bfm8X4/glibc-2.23/elf/dl-minimal.c
cfn=(36) calloc
calls=1 0x19f10 103 
* * 38 7 5
* * 1 1
+5 +11 1 1 0 0 1 0 0 1
+8 -5 1
+4 -7 1 0 1 1 0 0 1
+7 +6 1
+4 +2 1 0 1
+8 -1 1 0 1
+3 +5 1
+33 +2 1 1
+7 -1 1
+2 +1 1
+3 * 1 0 0 1 0 0 1
-3 * 7
+3 * 7
+2 +2 7 7 0 0 3 0 0 1
+8 * 7
+2 +4 2
+3 +2 2
+2 -2 2
+4 * 2 0 2
+5 -5 2 2
+4 * 2
-4 * 5 5
+4 * 5
+2 +9 1
+2 * 1
+3 * 1
+33 +3 1 0 1 1 0 0 1
cfi=(31) /build/glibc-bfm8X4/glibc-2.23/elf/dl-tls.c
cfn=(162) _dl_determine_tlsoffset
calls=1 0x132c0 138 
* * 104 19 11 6 1 0 6 1
+5 +7 1 0 1
cfi=(31)
cfn=(164) _dl_allocate_tls_storage
calls=1 0x13560 354 
* * 439 31 314 3 0 37 3 0 37
+5 +1 1
+3 -1 1
+3 +1 1
+33 +6 1 1
+4 +3 1
+5 -3 1 0 1 1 0 0 1
+7 +3 1 0 1
+3 * 1
+5 * 1 0 1
+4 * 1
+2 * 1
+2 * 1
+40 +3 1 0 1 1
+7 +2 1
+3 +1 1 1
+1 * 1 1

fn=(100) _dl_initial_error_catch_tsd
0xc80 664 14
+7 * 14 14

fn=(152) version_check_doit
0x1970 529 1 0 1 1 0 0 1
+1 * 1
+3 +2 1 1
+3 * 1 1
+7 * 1 0 0 1
+5 * 1 0 1
cfi=(44) /build/glibc-bfm8X4/glibc-2.23/elf/dl-version.c
cfn=(154) _dl_check_all_versions
calls=1 0x122d0 380 
* * 16428 4642 1194 29 82 48 29 78 46
+5 * 1
+2 * 1
+8 +4 1 1
+1 * 1 1

fn=(94) handle_ld_preload
0x1fc0 757 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 +1 1
+2 -1 1
+7 -75 1
+5 +86 1
+5 -11 1 0 1 0 0 1 0 0 1
+4 -75 1 0 1
+5 * 1
+5 * 1 0 1
+5 * 1
+5 * 1 0 1
+5 * 1
+3 +80 1 1 0 1 0 0 1
+5 * 1
+3 * 1
fi=(32) /build/glibc-bfm8X4/glibc-2.23/elf/../string/bits/string2.h
+6 961 1
+4 +1 1
+3 * 1
+6 * 1
+3 * 1
+6 * 1
+4 * 1
+2 * 1
+6 * 46
+4 * 46
+4 * 46
+2 +1 46
+3 -2 46 46
+4 +2 46
+4 -2 46
+3 * 46
+4 * 46
-15 * 1 1 0 1 0 0 1
+4 +2 1
+4 -2 1
+3 * 1
+4 * 1
fe=(2)
+2 766 1
+7 * 1
+14 +10 1
+4 * 1
+6 * 1
+4 * 1
+6 108 1 1
+6 * 1
+2 * 1 0 0 1 0 0 1
+6 779 1 1
+5 * 1
+6 677 1 1
+4 +5 1 1
+5 * 1
+5 * 1 1
+5 * 1 1
+5 * 1
+7 -10 1 0 1 0 0 1 0 0 1
+9 +4 1 0 1
+5 +1 1 0 1 1 0 0 1
+5 +1 1 0 1
+8 +2 1 1
+7 +2 1 0 1
cfi=(33) /build/glibc-bfm8X4/glibc-2.23/elf/dl-error.c
cfn=(98) _dl_catch_error
calls=1 0x104f0 163 
* * 2485 513 297 89 20 35 89 20 35
+5 +1 1 1
+5 * 1
+3 * 1
+6 +13 1
+2 * 1 1
+7 * 1
+3 +84 1
+2 -18 1 1
+5 * 1
+3 * 1
+6 +21 1 0 0 1 0 0 1
+7 * 1
+2 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
0x2190 -15 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+3 * 1 0 1
cfi=(18) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../memcpy.S
cfn=(46) memcpy
calls=1 0x1df20 61 
* * 63 10 9 0 0 1 0 0 1
+5 * 1
+3 +1 1 0 1
+6 * 1

fn=(26) dl_main
0x21e0 790 1 0 1 1 0 0 1
+1 +19 1
+7 -19 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1 0 0 1 0 0 1
+1 2390 1
+5 790 1
+3 * 1 0 0 1 0 0 1
+3 * 1
+7 +19 1 0 1
+7 +3 1
+7 -22 1 0 1 0 0 1 0 0 1
+6 2385 1 0 1 0 0 1 0 0 1
+10 812 1 0 1 0 0 1 0 0 1
+7 +4 1
+7 * 1 0 1 0 0 1 0 0 1
+7 +1 1 0 0 1 0 0 1
+7 * 1 0 1
+7 +5 1
+7 * 1 0 1
+7 2383 1 1
+7 * 1 0 1
+4 +7 1 1
+7 * 1
+2 * 1
+4 * 1
+7 -4 1
+2 +4 1
+3 * 1 0 1 1 0 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 +2 1 1
+7 * 1 0 1 0 0 1 0 0 1
cfi=(13) /build/glibc-bfm8X4/glibc-2.23/elf/dl-environ.c
cfn=(28) _dl_next_ld_env_entry
calls=1 0x19d40 30 
* * 46 17 1 1 2 0 1 2
-7 * 2 2
+7 * 2 0 2
cfi=(13)
cfn=(28)
calls=2 0x19d40 30 
* * 391 134 1 1 32 0 1 32
+5 * 3
+3 * 3
+3 * 3
+2 +4 2 2
+3 * 2
+2 * 2
+2 * 2 0 0 1 0 0 1
+2 * 2
+3 * 2
+12 * 19
+3 * 19
+2 +1 19
+4 -1 19 19
+5 * 19
+2 * 19
+2 +3 2
+3 * 2
+2 +6 2
+4 * 2
+4 * 2
+2 * 2
+7 * 2 2 0 0 1 0 0 1
+4 * 2
+3 * 2 0 0 1 0 0 1
+2 2553 1 1
+6 * 1
+2 * 1
+6 +30 1 1
+6 * 1
+2 * 1
0x23e3 832 1 0 0 1 0 0 1
+7 * 1 1
+4 * 1
0x263f 1033 1 0 0 1 0 0 1
+7 * 1
+3 * 1
+2 * 1
+2 * 1
+6 * 1
+3 * 1 0 1
cfi=(15) /build/glibc-bfm8X4/glibc-2.23/elf/dl-object.c
cfn=(32) _dl_new_object
calls=1 0xbb90 61 
* * 250 30 52 23 4 11 22 4 11
+5 +2 1
+3 -2 1
+3 +2 1
+6 +1 1 0 1
+7 +1 1 1
+7 +5 1
+2 * 1
+3 -5 1 0 1 1 0 0 1
+9 +1 1 1
+4 * 1 0 1
+8 +4 1 0 1
cfi=(15)
cfn=(48) _dl_add_to_namespace_list
calls=1 0xbb00 32 
* * 33 9 10 3 0 1 3 0 1
+5 +1 1 1
+7 * 1
+3 * 1
+6 799 1
+3 1072 1 1
+6 -3 1 0 1
+7 -5 1 0 1 0 0 1 0 0 1
+11 +1 1 0 1 1 0 0 1
+11 +2 1 0 1
+11 +5 1
+8 * 1
+4 * 1
+3 * 1
+3 * 1
+3 * 1
+3 * 1
+6 +56 1 1
+7 * 1
+3 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1
+2 -55 5
+3 * 5
+6 * 4
+3 * 4
+6 * 3
+3 * 3
+6 -1 9
+4 * 9
+3 * 9
+6 +1 9 9 0 0 5 0 0 5
+2 * 9
+3 * 9
+6 * 8
+2 * 3
+6 * 3 0 0 1 0 0 1
+6 * 2
+6 * 2
+6 * 1
+3 * 1
0x27be 1175 1 1 0 1 1 0 1 1
+7 * 1 1
+7 * 1 1
+7 * 1
+3 * 1
+12 +3 1
+3 * 1
+13 +2 1
+3 * 1
+13 +2 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+6 +13 1 1
+7 * 1
+3 * 1
+2 +1 1 1
+4 * 1 1
+7 * 1 1
+3 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(19) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../strcmp.S
cfn=(54) strcmp
calls=1 0x1bb00 144 
* * 44 6 0 7 2 0 7 2
+5 * 1
+2 * 1
+2 +7 1 0 1 1 0 1 1 0 1
+11 +3 1 1
+5 -5 1 0 1
+7 +3 1 0 1
+10 +2 1
+6 +1 1
+7 * 1 0 1
+4 +4 1 1
+7 * 1
+6 +2 1
+3 * 1 0 0 1 0 0 1
fi=(3)
+6 30 1 1
+4 +9 1
+3 * 1
+6 +6 1 1 0 0 1 0 0 1
+3 -2 1
+4 +2 1
+3 * 1
+6 +15 1
+6 +5 1
+6 +3 1
+6 +2 1
+10 -3 1 0 0 1 0 0 1
+10 -3 1
+6 -3 1
+5 * 1
+2 * 3
+3 * 3
+3 * 3
+3 * 3 0 3 0 0 2 0 0 2
+4 +10 3
+4 -26 3 3 0 0 1 0 0 1
+3 * 3
+3 * 3
-14 +16 22 0 22 0 0 4 0 0 4
+4 +10 22
+4 -26 22 22 0 0 6 0 0 6
+3 * 22
+3 * 22
-10 +26 1
+4 -26 1 1
+3 * 1
+3 * 1
+2 +2 26
+4 * 26
+2 +13 4
+3 * 4
+3 * 4
+4 * 4
+2 +2 1 0 0 1 0 0 1
+3 * 1
+2 * 1
+3 * 1
+27 +16 1 1
+3 * 1
+3 * 1
0x299b +38 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+2 +5 1 1
+5 * 1
+6 +7 1 1
+5 * 1
+2 +1 1 1
+7 * 1 1 0 1 0 0 1
+5 * 1
+6 +16 1 1
+7 * 1
+3 * 1
+48 +14 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+46 +18 1 1 0 1 0 0 1
+8 * 1
fe=(2)
+13 1218 1
+3 * 1 0 1
cfi=(6)
cfn=(10)
calls=1 0xba50 956 
* * 23 7 6 0 1 0 0 1
+5 +3 1 1
+7 * 1
fi=(20) /build/glibc-bfm8X4/glibc-2.23/elf/setup-vdso.h
+6 24 1 1
+8 * 1
fe=(2)
0x2f5b 1243 1 0 1 1 0 0 1
cfi=(9) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/unix/sysv/linux/dl-sysdep.c
cfn=(60) _dl_discover_osversion
calls=1 0x19b70 45 
* * 93 16 7 7 1 1 7 1 1
+5 * 1
+2 * 1
+6 * 1 1
+6 * 1
+2 * 1
+6 * 1 0 1
+6 * 1
+5 * 1
+46 -75 1 1 0 1 0 0 1
+4 * 1 0 1
+7 +1 1 1
+4 * 1 0 1
+7 +1 1
+5 -6 1 1
+3 * 1 0 1
+6 +1 1
+5 -88 1 0 0 1 0 0 1
+3 * 1 1
+4 * 1 0 1
+3 +1 1
+78 +50 2 2 0 1 1 0 1 1
+4 -1 2 2
+3 * 2
+3 * 2
+3 * 2
+3 +2 2 2 0 1 0 0 1
+7 * 2
+2 +1 1 0 1
+7 +3 1 1
+4 * 1
+3 +1 1 1
+7 * 1
-14 -1 1 1 0 0 1 0 0 1
+4 * 1
+3 +1 1 1
+7 * 1
+2 +1 2 0 2
+7 +1 2 2
+4 * 2
+6 * 1 1
+7 * 1
+6 +1 1 0 1
+7 * 1
+5 -43 1 0 0 1 0 0 1
+7 -2 1 1
+3 * 1 1 0 0 1 0 0 1
+4 +27 1
+6 -25 1 0 1
+7 * 1
+2 +7 1 1
+8 -10 1 0 1 0 0 1 0 0 1
+7 +10 1
+82 -19 1 1 0 1 0 0 1
+3 * 1 1
+4 * 1 0 1
+4 +1 1
fi=(3)
+81 65 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+4 * 1
+50 +3 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+4 * 1
+6 +2 1
+3 * 1
+4 * 1 0 1
+4 * 1
fe=(2)
0x3368 2480 1 1 0 1 0 0 1
+6 +1 1
+5 -1 1
+2 * 1
+6 +1 1 0 0 1 0 0 1
+7 * 1
+3 * 1 0 1
cfi=(14) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../memcmp.S
cfn=(30) bcmp
calls=1 0x1d6a0 24 
* * 31 5 0 5 1 0 5 1
+5 * 1
+2 * 1
0x3458 -55 1 0 0 1 0 0 1
+7 * 1
+5 * 1
+3 * 1 0 1
cfi=(14)
cfn=(30)
calls=1 0x1d6a0 24 
* * 18 3 0 0 1 0 0 1
+5 * 1
+2 * 1
0x3678 +7 1 0 0 1 0 0 1
+7 * 1 0 0 1 0 0 1
+5 * 1
+3 * 1 0 1
cfi=(14)
cfn=(30)
calls=1 0x1d6a0 24 
* * 36 7 0 0 1 0 0 1
+5 * 1
+2 * 1
+6 +2 1
+4 * 1 0 1
+7 * 1
0x376d +48 1 0 0 1 0 0 1
+4 * 1 0 1 0 0 1 0 0 1
+7 * 1
0x37ea 1248 1 1 0 1 0 0 1
+7 * 1 0 1
cfi=(22)
cfn=(64) _dl_init_paths
calls=1 0x84c0 661 
* * 16019 3470 987 76 12 37 76 12 37
+5 +3 1 1
+7 * 1
+2 * 1 0 1 1 0 0 1
cfi=(30) /build/glibc-bfm8X4/glibc-2.23/elf/dl-debug.c
cfn=(88) _dl_debug_initialize
calls=1 0x11070 50 
* * 17 4 4 3 0 0 3
+5 +7 1 1
+8 -7 1
+3 +2 1 0 1
+7 +5 1
+2 +3 1 1
+7 * 1 1
+3 * 1 0 1
+7 +1 1 1
+7 +3 1 0 1
+7 -3 1
+3 * 1
+3 * 1 0 1 1 0 0 1
+6 +1 1
+7 * 1 0 1
+4 +3 1 0 1
+8 +5 1 1
+8 -7 1 0 1
+7 +7 1
+2 +1 1
+2 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
+7 +17 1 1 0 1 1 0 1 1
+8 * 1
+6 +1 1 1
+8 * 1
+6 +5 1 1
+7 -3 1
+7 * 1 1
+7 * 1
+8 * 1
+3 +2 1 0 1
+7 * 1 0 0 1 0 0 1
+4 +1 1 0 1 0 0 1 0 0 1
+7 * 1
+3 * 1
+5 +5 1
+2 * 1
+3 * 1
+2 +1 1
+3 * 1
+4 * 1
+4 * 1 1 0 0 1 0 0 1
+6 * 1
+2 +2 1 1
+4 * 1 0 1 0 0 1 0 0 1
+7 +1 1 1
+4 * 1 0 1
+7 +5 1 1 0 1 0 0 1
+8 * 1
+14 +5 1 1
+7 805 1 0 1
+11 1314 1
+3 * 1
+6 1491 1 0 1
cfi=(31)
cfn=(90) _dl_count_modids
calls=1 0x13260 115 
* * 4 3 0 1 0 0 1
+5 * 1 0 1
+7 +8 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+2 +3 1 0 1
+4 +4 1 1
+7 * 1
+3 * 1
+6 +5 1 0 1
+8 +1 1 0 1
cfi=(30)
cfn=(92) _dl_debug_state
calls=1 0x11060 74 
* * 1 1
+5 +1 1
+1 +4 1 1
+6 * 1
+2 * 1
+6 +15 1 1
+7 * 1 1 0 1 0 0 1
+4 * 1
+6 +4 1 1
+7 -2 1
+3 +2 1
+3 * 1
+2 +2 1
+2 * 1
+4 * 1
+2 +1 1
+3 -1 1
+3 * 1
+3 +1 1 0 1
cfn=(94)
calls=1 0x1fc0 757 
* * 3045 588 323 96 20 38 96 20 38
+5 * 1
+3 +1 1
+2 +2 1
+4 * 1
+2 * 1
+3 * 1 1 0 1 0 0 1
+7 * 1
+3 * 1 0 1
+7 +10 1
+7 * 1
+5 * 1 0 1
cfi=(24) /build/glibc-bfm8X4/glibc-2.23/io/../sysdeps/unix/syscall-template.S
cfn=(68) access
calls=1 0x1b380 84 
* * 9 1 1
+5 * 1
+2 * 1
+6 +77 1 1
+7 -96 1
+2 +96 1 1
+3 * 1
+3 * 1
+6 +17 1
+2 * 1
+2 * 1 0 0 1 0 0 1
+4 +1 1
+3 -1 1
+3 +1 1 1
+7 * 1
+3 -1 1
+3 +1 1
+3 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(41) /build/glibc-bfm8X4/glibc-2.23/elf/dl-deps.c
cfn=(134) _dl_map_object_deps
calls=1 0xdf80 161 
* * 61905 13917 7842 126 148 156 126 137 156
+5 +1 1
+2 +2 1
+4 * 1
+2 +3 1 1
+6 -3 1
+3 * 1 1 0 1 0 0 1
+7 * 1
+3 +3 1
+2 -3 1 0 1
+7 +3 1
+6 * 1 1
+7 * 1
+2 +1 1
+3 * 1
+3 * 1 1
+4 * 1 0 1
+7 -1 1
+2 * 1
-19 +1 6
+3 * 6
+3 * 6 6
+4 * 6 0 6
+7 -1 6
+2 * 6
+2 +4 1 1
+7 * 1 1
+7 * 1 0 1 1 0 0 1
+4 +1 1 1
+7 * 1
+3 * 1
+2 +1 1 0 1
+4 +2 1
+3 * 1
+2 +1 1 1
+7 * 1
+7 * 1
+5 * 1 1
+4 * 1
+4 * 1
+6 -1 1
+3 * 1
+2 * 1
+2 * 5 0 0 1 0 0 1
+4 +1 5 5
+4 * 5
+2 * 4
+2 -1 4
+3 * 4
+2 * 4
+94 -3 1 0 0 1 0 0 1
+4 +16 1 1
+4 +1 1 1
+6 * 1
+2 -1 1 0 1 1 0 0 1
+7 +1 1
+6 +2 1
+3 +2 1
+2 * 1
+2 * 1
+6 +2 1 1 0 0 1
+7 -4 1 0 1
+7 +5 1 1
+4 -1 1
+3 * 1
+26 +14 1 0 0 1 0 0 1
+3 * 1
+6 +1 1
+7 * 1 0 1
+4 +1 1 1
+7 * 1
+3 * 1
+34 +11 1 1 0 1 0 0 1
+7 +2 1
+4 -2 1
+2 +2 1
+7 * 1
+7 -1 1 0 1
+4 +1 1
+3 -2 1
+3 * 1
+3 * 1 0 1
+3 +2 1 0 1
cfi=(33)
cfn=(150) _dl_receive_error
calls=1 0x105c0 205 
* * 16468 4657 1208 33 82 48 32 78 46
+5 +10 1 1
+7 +1 1 1 0 1 1 0 1
+8 -1 1 0 1
+6 +1 1
+2 +1 1 0 1
cfn=(160)
calls=1 0xac0 589 
* * 674 79 344 15 6 37 14 3 37
+5 * 1 0 1
+7 +2 1 1
+8 * 1
+2 719 1 1
+7 +2 1 1 0 0 1
+3 * 1
+2 * 1 0 1
fi=(201) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/unix/sysv/linux/dl-osinfo.h
+9 77 1 1
fe=(2)
+4 730 1 0 1 1 0 0 1
+9 +7 1 0 1
+11 -5 1 0 1
+7 1729 1 1
+7 * 1
+3 * 1
+6 1959 1 1 0 0 1 0 0 1
+7 * 1
+3 * 1
0x3e52 2129 1 1 0 1 1 0 1
+7 * 1
+6 * 1 1
+8 * 1
+6 +2 1 0 1
+8 +5 1 1
+7 * 1
+3 * 1 0 1 1 0 0 1
cfi=(31)
cfn=(232) _dl_allocate_tls_init
calls=1 0x13610 450 
* * 220 47 35 7 6 3 7 0 3
+5 +3 1 1
+7 * 1
+32 +9 1 1 0 0 1
+7 * 1 1 0 0 1
+7 * 1
+6 +2 1 1 0 1 0 0 1
+7 * 1
+2 +15 1
+2 +2 1 0 1
+7 -2 1
+2 * 1
+4 +3 1 1
+7 -3 1
+3 +3 1
+7 -3 1
+3 +3 1
+2 * 1
+2 * 1 0 1
cfi=(45) /build/glibc-bfm8X4/glibc-2.23/elf/dl-reloc.c
cfn=(166) _dl_relocate_object
calls=1 0xc270 149 
* * 5062 1595 636 0 77 2 0 10
+5 +1 1
+2 +2 1
+4 * 1
+2 * 1
+3 * 1 1 0 1 0 0 1
+7 * 1
+3 * 1 0 1
+7 +8 1 0 1
cfi=(7)
cfn=(234) _dl_sysdep_start_cleanup
calls=1 0x199b0 256 
* * 1 1 0 1
+5 +4 1 1
+6 * 1
+2 * 1
+6 +20 1
+2 * 1
+2 * 1 0 1
cfi=(30)
cfn=(88)
calls=1 0x11070 50 
* * 8 3
+5 +1 1 0 1
+7 -1 1
+3 +2 1 0 1
cfi=(30)
cfn=(92)
calls=1 0x11060 74 
* * 1 1
+5 +1 1
+1 +4 1 0 1 1 0 0 1
cfi=(43) /build/glibc-bfm8X4/glibc-2.23/elf/dl-cache.c
cfn=(236) _dl_unload_cache
calls=1 0x18ac0 322 
* * 15 4 2 2 1 0 2
+5 +5 1
+4 * 1 1 0 0 1
+1 * 1 1 0 0 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
0x4055 2080 1 0 0 1 0 0 1
+3 * 1 1
+8 * 1
+4 +7 1 0 1
+7 +2 1
+2 * 1
+2 * 1
+4 +19 1
+7 -19 1
+3 * 1 1 0 1 0 0 1
+6 * 1 0 1
+7 * 1
+4 +2 1
+2 +2 7 7 0 0 2
+7 * 7
+3 * 7 7 0 0 2
+4 +5 7 7
+4 * 7 7 0 0 2
+4 +2 7
+3 * 7
+6 +6 7 0 7
+8 +2 7
+3 * 7
+2 +1 6 6
+6 * 6 6 0 0 5
+7 * 6
+2 * 6
+3 * 6
+2 * 6
+3 * 6
+3 * 6 0 6
cfi=(45)
cfn=(166)
calls=6 0xc270 149 
* * 1933080 469880 176333 149 10818 1713 149 6286 974
+5 +4 7 7 0 0 1
+8 * 7
+2 * 2 2 0 0 2
+7 * 2
+2 * 7
+4 -22 7
+4 * 7
-4 * 1 0 0 1 0 0 1
+4 * 1
+2 +25 1
+2 +2 1
+4 * 1
+2 * 1
+3 * 1
+3 * 1 1 0 0 1
+7 +6 1 1
+8 -6 1 0 1
+7 +6 1
+16 -10 2
+3 * 2 0 2
cfi=(31)
cfn=(200) _dl_add_to_slotinfo
calls=2 0x13d70 890 
* * 40 16 10 3 6 1 3
+5 * 2
+2 -12 1 0 1 1 0 0 1
+7 +1 1 1
+4 -3 1
+3 * 1
+29 -85 1 0 0 1 0 0 1
+7 +11 1 1
+7 -7 1 1
+7 -4 1 0 1
+7 +4 1 1 0 1 0 0 1
+7 * 1 0 1
+7 * 1 0 1
+7 +4 1 1
+7 * 1 0 1
+7 +3 1
0x438c 1672 1 0 1 1 0 0 1
+7 * 1
0x493f -39 1 0 0 1 0 0 1
+3 * 1
+8 * 1
+4 * 1
+4 * 1
+3 +1 1
+2 -1 1
+5 * 1
+4 * 1
+3 +4 1
+2 * 1
+3 * 1 0 1
+4 +1 1 1
+4 +1 1
+3 * 1
+2 +1 1
+3 * 1
0x50a4 1237 1 0 0 1 0 0 1
+7 * 1 0 1
+7 * 1

fn=(52) rtld_lock_default_unlock_recursive
0xca0 710 129 0 129 0 0 1
+4 * 129 129

fn=(50) rtld_lock_default_lock_recursive
0xc90 704 129 0 129 1 0 4 1 0 1
+4 * 129 129

fl=(30)
fn=(92)
0x11060 74 2 2

fn=(88)
0x11070 50 7 0 0 1 0 0 1
+3 * 7
+29 +5 6
+3 * 6
+8 +5 1 0 0 1 0 0 1
+4 * 1
+7 -1 1 0 1
+4 +1 1
+4 * 1 1
+4 +1 1
+7 * 1 0 1
+4 -1 1 0 1
+4 +4 1 1
+7 -13 7 7 0 1 0 0 1
+7 +4 7 7
+5 * 7
+2 +4 1
+3 -1 1 0 1
+6 -58 1
+17 0 6 6

fl=(43)
fn=(142) _dl_load_cache_lookup
0x18280 185 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+1 * 4
+3 * 4
+4 +8 4 4
+7 * 4
+6 +3 4 4
+7 * 4
+3 * 4
+6 +45 3
+4 * 3
+6 * 3 3
+7 * 3 3
+7 +6 3
+4 * 3
-4 * 1 0 0 1 0 0 1
+4 * 1
+6 +9 4
+4 +6 4
+7 * 4
+2 -6 4
+3 * 4
+3 * 4 0 4
+4 * 4 0 4
+3 +6 4 0 4
cfi=(24)
cfn=(68)
calls=4 0x1b380 84 
* * 36 4 4
+5 +19 4 4
+7 -19 4 0 4
+3 +19 4 4 0 1 0 0 1
+5 * 4
+4 * 4
+2 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
+3 * 4
+4 * 4 4 0 0 1 0 0 1
+5 * 4
+3 * 4
+2 * 4
+3 * 4
+12 * 17 17
+4 * 17
+4 * 17
+3 * 17
+2 * 30
+4 * 30
+3 * 30
+4 * 30
+3 * 30
+3 * 30
+3 * 30 0 30
+3 * 30
+4 * 30 30 0 0 27 0 0 27
+5 * 30 30
+3 * 30
+2 * 34 0 0 1 0 0 1
+3 * 34
+3 * 34 0 34
cfn=(146) _dl_cache_libcmp
calls=34 0x18190 138 
* * 2678 410 0 4 30 0 4 30
+5 * 34
+2 * 34
+2 * 30
+2 * 13 13
+4 * 13
+4 * 13
+3 * 13
+26 -15 4 4 0 1 0 0 1
+7 * 4 0 4
+4 * 4 4
+7 * 4 0 4
+4 +15 4 4
+3 * 4
+2 * 4
+6 * 4
+4 * 4
+3 * 4 0 0 1 0 0 1
+4 * 4 4 0 0 1 0 0 1
+5 * 4 4
+3 * 4
+12 * 4
+3 * 4
+2 * 4
+4 * 4
+3 * 4
+4 * 4 4 0 0 1 0 0 1
+5 * 4 4
+3 * 4
+2 * 4
+3 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
+3 * 4 0 4
cfn=(146)
calls=4 0x18190 138 
* * 385 58 0 0 2 0 0 2
-13 * 4
+4 * 4
+3 * 4
+3 * 4 0 4 1 0 0 1
+3 * 4 0 4
cfn=(146)
calls=4 0x18190 138 
* * 573 84 0 0 3 0 0 3
+5 * 8
+2 * 8
+2 * 4 4
+4 * 4 4
+10 * 4 4
+6 * 4 0 4
+3 * 4
0x184f0 -82 1 0 0 1 0 0 1
+7 * 1
+7 * 1 0 0 1 0 0 1
+5 * 1 0 1 0 0 1 0 0 1
cfi=(35) /build/glibc-bfm8X4/glibc-2.23/elf/dl-misc.c
cfn=(144) _dl_sysdep_read_whole_file
calls=1 0x116f0 45 
* * 94 16 15 3 0 0 3
+5 +8 1
+4 -8 1
+3 +8 1
+6 * 1 1
+7 * 1
+4 * 1
+6 +1 1
+7 * 1
+5 * 1
+3 * 1 0 1
cfi=(14)
cfn=(30)
calls=1 0x1d6a0 24 
* * 38 7 0 0 2 0 0 2
+5 * 1
+2 * 1 0 0 1 0 0 1
+6 +7 1 1
+5 -3 1 0 1
+7 +3 1
+4 * 1
+8 * 1
+4 +3 1
+4 +1 1
+4 * 1
+3 -1 1 0 1
+7 +1 1
+2 +1 1
+7 * 1
+5 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(14)
cfn=(30)
calls=1 0x1d6a0 24 
* * 32 5 0 0 1 0 0 1
+5 * 1
+2 * 1
0x18710 +61 4 4 0 1 0 0 1
+4 * 4
+3 * 4
+49 * 4 0 0 1 0 0 1
+4 * 4
+4 * 4 4
+7 * 4
+2 * 4 4
+3 * 4 4
+3 * 4
+2 * 4 4
+4 * 4 4
+4 * 4
+2 * 4 4
+3 * 4 4
+3 * 4
+2 * 4
+3 * 4
+9 * 4 0 0 1 0 0 1
+5 * 4 0 4
+4 * 4
+8 +16 4 4
+7 * 4
+6 +4 4 4
+5 * 4
+6 +8 4 4
+4 * 4
+3 * 4 0 4
cfi=(11) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/strlen.S
cfn=(22) strlen
calls=4 0x1cf90 66 
* * 136 20 0 0 2 0 0 2
+5 * 4
+4 * 4
+4 +1 4
+3 -1 4 0 0 1 0 0 1
+4 * 4
+3 * 4
+5 * 4
+4 +1 4
+3 * 4 0 4
cfi=(18)
cfn=(46)
calls=4 0x1df20 61 
* * 331 48 44
+5 +1 4
+3 * 4 0 4
cfi=(29) /build/glibc-bfm8X4/glibc-2.23/string/strdup.c
cfn=(82) strdup
calls=4 0x1cf40 40 
* * 468 83 59 0 0 1 0 0 1
+5 +1 4
+4 * 4 4
+1 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+1 * 4 4
0x18980 -31 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4
+10 * 4
+3 * 4 4
+3 * 4
+3 * 4 0 4
+4 * 4
+2 * 4

fn=(146)
0x18190 138 42 42 0 1 0 0 1
+3 * 42 42 0 0 34 0 0 34
+3 * 42
+10 +1 42
+2 * 42
-2 * 8
+2 * 8
+6 +2 247
+3 * 247
+3 +2 247
+3 -2 247
+6 +2 8
+3 * 8
+6 +6 8 0 0 1 0 0 1
+4 +2 8 8
+4 -1 8
+3 -1 8
+4 +1 8
+4 +1 8
+3 * 8
+3 * 8
+3 * 8
+28 +2 8 8
+4 * 8
+3 * 8 0 0 1 0 0 1
+4 * 8
+3 * 8
+34 +2 8
+3 * 8
+21 +6 239 0 0 1 0 0 1
+3 * 239
+2 +2 239
+2 * 239
+2 * 205 205
+4 * 205 205 0 0 1 0 0 1
+4 +4 205
+4 +1 205
+4 -29 205
+2 * 205
+6 +32 8
+3 * 8
+2 * 8 8
+7 -7 34
+2 * 34 34

fn=(236)
0x18ac0 322 1 1 0 1 1 0 1
+7 * 1
+4 * 1
+4 * 1
+9 -1 1
+4 +3 1 1
+7 * 1 0 1
cfi=(39) /build/glibc-bfm8X4/glibc-2.23/misc/../sysdeps/unix/syscall-template.S
cfn=(238) munmap
calls=1 0x1b4f0 84 
* * 5 1 0 1 0 0 1
+5 +1 1 0 1
+11 +2 1
+4 * 1 1

fl=(65) /build/glibc-bfm8X4/glibc-2.23/elf/dl-init.c
fn=(244) call_init.part.0
0x10620 28 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+1 * 7 0 7
+1 +8 7 7
+7 +3 7 7 0 0 1
+4 -3 7
+3 * 7 0 7
+6 +3 7 7 0 0 2
+4 * 7 0 0 1 0 0 1
+3 * 7
+6 +5 6 6 0 0 5
+7 * 6
+3 * 6
+3 * 6
+2 * 6
+3 * 6
+3 * 6
+2 +5 5 5
+7 * 5
+2 +9 5 5 0 0 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+2 * 5 0 5
cob=(2)
cfi=(16)
cfn=(398) 0x0000000004cb0a00
calls=1 0x4cb0a00 -58 
* * 12 5 1 2 1 0 2
cob=(2)
cfi=(16)
cfn=(382) 0x0000000004fb1428
calls=1 0x4fb1428 -58 
* * 12 5 1 3 1 0 2
cob=(2)
cfi=(16)
cfn=(354) 0x00000000052b7790
calls=1 0x52b7790 -58 
* * 12 5 1 2 2 0 1
cob=(3)
cfi=(84) /build/glibc-bfm8X4/glibc-2.23/csu/../csu/init-first.c
cfn=(332) _init
calls=1 0x205a0 -6 
* * 206 45 26 15 15 6 15 0 2
cob=(2)
cfi=(16)
cfn=(246) 0x0000000004a28530
calls=1 0x4a28530 -58 
* * 85058 15401 13650 127 1183 3240 126 889 3209
+2 * 5 5 0 1 5 0 1
+7 +4 5
+3 * 5
+2 +6 5 5 0 0 1
+7 +2 5 5
+3 * 5 5 0 0 2
+4 -2 5 5 0 0 2
+4 * 5
+4 +3 5
+2 * 5
+2 * 5
+3 * 5
+5 * 5
+8 +1 5
+3 * 5
+3 * 5
+2 * 5 5 5 0 5
cob=(8)
cfi=(94)
cfn=(406)
calls=1 0x8a610 -72 
* * 17 3 1 3 1 0 3
cob=(4)
cfi=(60) ???
cfn=(390) 0x00000000000056d0
calls=1 0x56d0 -72 
* * 17 3 1 3 1 0 3
cob=(7) /lib/x86_64-linux-gnu/libgcc_s.so.1
cfi=(93) ???
cfn=(362) __cpu_indicator_init
calls=1 0x2ca0 -72 
* * 255 26 25 16 2 0 16 1
cob=(3)
cfi=(90) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/cacheinfo.c
cfn=(344) init_cacheinfo
calls=1 0x202c0 482 
* * 1159 111 57 23 8 1 23 6 1
cob=(6) /usr/lib/valgrind/vgpreload_core-amd64-linux.so
cfi=(83) ???
cfn=(324) 0x0000000000000650
calls=1 0x650 -72 
* * 17 3 1 3 0 0 3
-8 * 12
+3 * 12
+3 * 12
+2 * 12 12 12 0 1
cob=(8)
cfi=(94)
cfn=(568)
calls=1 0x8a480 -72 
* * 49 25 12 3 9 0 3 2
cob=(8)
cfi=(94)
cfn=(542)
calls=1 0x8a3c0 -72 
* * 49 25 12 3 13 0 3 2
cob=(8)
cfi=(94)
cfn=(524)
calls=1 0x8a340 -72 
* * 33 17 8 2 8 0 2 1
cob=(8)
cfi=(94)
cfn=(506)
calls=1 0x8a2c0 -72 
* * 33 17 8 2 8 0 2 1
cob=(8)
cfi=(94)
cfn=(502)
calls=1 0x8a280 -72 
* * 144 28 31 1 0 1 1
cob=(8)
cfi=(94)
cfn=(500)
calls=1 0x8a050 -72 
* * 54 2 52 8 1 6 8 1 6
cob=(8)
cfi=(94)
cfn=(474)
calls=1 0x89f40 -72 
* * 73 7 38 5 1 4 5
cob=(8)
cfi=(94)
cfn=(456)
calls=1 0x89eb0 -72 
* * 1728 469 217 25 27 3 25 3 2
cob=(8)
cfi=(94)
cfn=(434)
calls=1 0x89e90 -72 
* * 2309 678 318 14 34 3 14 6
cob=(8)
cfi=(94)
cfn=(414)
calls=1 0x89e10 -72 
* * 2325 645 275 10 29 2 10 2
cob=(7)
cfi=(93)
cfn=(374) 0x0000000000003140
calls=1 0x3140 -72 
* * 17 3 1 3 0 0 3
cob=(3)
cfi=(92) /build/glibc-bfm8X4/glibc-2.23/elf/dl-altinit.c
cfn=(352) dlinit_alt
calls=1 0x20560 -39 
* * 4 3 0 1 0 0 1
+2 * 17
+4 -1 17 0 0 1 0 0 1
+3 * 17
+2 +3 7 7
+1 * 7 7
+1 * 7 7 0 0 1
+2 * 7 7
+2 * 7 7
+2 * 7 7
+5 -29 1 1 0 0 1
+7 * 1
+3 * 1
+62 -5 1 0 0 1 0 0 1
+2 * 1
+6 * 1

fn=(242) _dl_init
0x10740 80 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 * 1
+2 * 1
+3 * 1
+4 +1 1 1 0 0 1
+7 +1 1 1
+7 +3 1 1
+7 * 1
+3 * 1
+2 +8 1
+3 * 1
+26 +1 1 1 0 1 0 0 1
+7 * 1
+3 +25 1
+6 * 7
+3 * 7
+3 * 7
-3 * 1
+3 * 1
+2 +1 7 7 0 0 1
+7 * 7
+2 * 7 7 0 0 1
+4 -90 7 7 0 0 1
+7 * 7
+2 * 6
+3 * 6
+3 * 6
+2 * 6 0 6
cfn=(244)
calls=6 0x10620 -2 
* * 8853 2230 1141 145 185 26 143 25 11
+5 * 6
+5 +96 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 -96 1 1 0 1 0 0 1
+7 * 1
+2 +58 1 0 1
+11 * 1
+61 +16 1 0 1 1 0 0 1
cfn=(244)
calls=1 0x10620 -76 
* * 85128 15423 13659 133 1190 3240 132 889 3209
+5 * 1

fl=(6)
fn=(176) check_match
0x9cd0 92 2103 0 2103 3 0 0 2
+2 * 2103 0 2103
+2 * 2103 0 2103
+1 * 2103 0 2103 0 0 7 0 0 3
+1 * 2103
+4 * 2103 2103 0 0 57 0 0 30
+5 * 2103 2103
+5 * 2103
+3 +3 2103 2103 0 0 232 0 0 181
+5 * 2103
+10 * 2103
+3 * 2103 2103
+6 * 2103 0 0 3 0 0 2
+4 * 2103
+3 * 2103
+6 +12 2103
+6 * 2103 2103 2103 0 0 30 0 0 4
+4 * 2103
+6 * 2103
+3 * 2103
+3 * 2103
+3 +3 2103
+3 * 2103
+3 * 2103
+3 * 2103
+2 * 63 63
+3 * 63 63
+5 * 63
+3 * 63 0 63 0 0 1
cfi=(19)
cfn=(54)
calls=63 0x1bb00 +34 
* * 2792 517 0 57 76 0 37 54
+5 * 63 0 0 3 0 0 1
+2 * 63
+6 +5 2103 0 0 1 0 0 1
+3 -1 2103 2103 0 0 6
+8 +1 2103
+2 +2 2097
+3 * 2097
+6 +19 2097 2097
+4 * 2097 2097 0 0 47 0 0 24
+5 +1 2097
+3 * 2097
+5 * 2097
+4 * 2097 2097 0 0 1
+8 * 2097
+4 * 2097 2097 0 4 26 0 2 7
+4 * 2097 2097
+4 * 2097
+20 +46 2103
+4 -7 2103
+3 +7 2103 2103
+1 * 2103 2103
+1 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+8 -18 6
+3 * 6
+2 +2 6 6
+4 +1 6
+3 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6
+3 -1 6 6 0 0 4
+4 * 6
+2 * 6
+6 * 6
+2 * 6
+53 -29 2097 2097 0 4 7 0 2 2
+4 * 2097 2097
+3 * 2097 0 2097 0 0 2
cfi=(19)
cfn=(54)
calls=2097 0x1bb00 +6 
* * 52085 14697 0 20 94 0 7 14
+5 * 2097
+2 * 2097
+6 * 2097

fn=(172) _dl_lookup_symbol_x
0xa9d0 806 2118 0 2118 4 0 0 2
+1 * 2118
+3 * 2118 0 2118
+2 * 2118 0 2118
+2 * 2118 0 2118 0 0 2
+2 * 2118 0 2118
+2 * 2118
+3 * 2118 0 2118 0 0 2 0 0 1
+1 * 2118
+3 * 2118
+3 * 2118
+7 568 2118 2118 0 0 864 0 0 692
+3 806 2118 0 2118 0 0 5 0 0 1
+7 * 2118 0 2118 0 0 1
+7 * 2118 0 2118 4 0 0 2
+7 * 2118 2118
+4 568 2118
+2 * 2118
+6 * 2118
+3 * 2118
+5 * 2118
+7 +1 2118
+3 -1 2118
+4 +1 2118
+4 * 2118
+3 * 2118
+3 -1 2118 2118 0 0 24 0 0 24
+3 * 2118
+2 * 2118
-22 +1 88791
+3 -1 88791
+4 +1 88791
+4 * 88791
+3 * 88791
+3 -1 88791 88791 0 0 988 0 0 893
+3 * 88791
+2 * 88791
+2 * 2118
+2 * 2118 0 2118 4 0 0 2
+7 808 2118
+5 +4 2118 0 2118 0 0 9 0 0 2
+8 +4 2118
+3 -8 2118 0 2118 0 0 2 0 0 1
+7 +1 2118 0 2118 0 0 2
+11 * 2118 0 2118
+11 +7 2118
+2 * 2097 2097
+7 * 2097
+6 +7 2118 2118 0 4 0 0 2
+7 -2 2118
+3 +2 2118 2118 0 0 10 0 0 2
+3 -2 2118
+6 +6 2118
+3 -7 2118 0 2118 0 0 1
+11 +7 2118
+6 * 2118
+7 -7 2118 2118
+7 * 2118 2118
+7 * 2118 0 2118
+7 * 2118 0 0 4 0 0 2
+7 * 2118 0 2118
+7 * 2118
+2 +15 15
+11 -8 15
+4 * 15 15
+3 * 15
+2 * 15
+3 * 15
+2 +2 2118 2118
+6 * 2118 2118
+3 * 2118 0 2118 0 0 3 0 0 1
+2 * 2118 2118
+7 * 2118 2118
+3 * 2118 2118 0 4 0 0 1
+7 * 2118 0 2118
+1 * 2118 2118
+7 * 2118 0 2118 0 0 1
+2 * 2118 0 2118
+1 * 2118 2118
+7 * 2118 0 2118 0 0 3
+2 * 2118 0 2118
+1 * 2118 0 2118 0 0 3 0 0 1
cfn=(174) do_lookup_x
calls=2118 0x9e70 355 
* * 774443 265609 102655 222 4789 81 126 1312 15
+5 +3 2118
+4 * 2118
+3 * 2118
+2 +26 2118 2118
+8 * 2118
+6 +22 2103 2103
+3 +1 2103
+3 * 2103
+2 * 2103 2103 0 5 0 0 2
+4 * 2103
+3 * 2103
+2 * 2103
+2 * 2103 2103
+7 +31 2103
+2 +9 2103 2103
+8 * 2103
+3 * 2103
+3 * 2103
+3 * 2103
+6 +14 2103 2103 0 0 24 0 0 6
+6 * 2103
+2 * 2103
+6 +3 2103 2103
+6 * 2103 0 0 5 0 0 2
+6 * 2103
+6 * 2103 2103
+7 +5 2103 0 2103
+3 +2 2103
+4 * 2103 2103
+1 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+1 * 2103 2103
-14 * 15
+4 * 15 15
+1 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+1 * 15 15
0xacd6 -85 15 15 0 1 0 0 1
+3 * 15
+3 * 15
+2 * 15 15
+4 * 15
+3 * 15
+2 * 15
+11 +16 15 0 15
+7 +1 15
+2 * 15
0xaee4 +59 1 0 1 1 0 0 1
+10 * 1

fn=(174)
0x9e70 355 2118 0 2118 4 0 0 2
+2 * 2118 0 2118
+2 * 2118 0 2118
+2 * 2118 0 2118 0 0 2
+2 * 2118 0 2118
+1 * 2118 0 2118 0 0 1
+1 * 2118 0 0 4 0 0 2
+7 +1 2118 2118 0 0 9 0 0 2
+4 -1 2118 0 2118 0 0 12 0 0 2
+5 * 2118 0 2118 0 0 8 0 0 1
+5 * 2118 0 2118 0 0 2 0 0 1
+5 * 2118 0 2118
+5 * 2118 2118
+8 +48 2118
+3 -30 2118 2118
+8 -11 2118 2118
+3 +41 2118
+4 +7 2118 2118
+8 * 2118 0 2118
+5 -7 2118 0 2118 4 0 0 2
+5 * 2118
+8 -30 2118
+4 * 2118 0 2118
+5 * 2118
+8 * 2118 0 2118
+5 +37 2118
+2 * 2118
+3 * 2118 0 2118
+4 * 2118
+4 -44 2118 2118 0 0 9 0 0 3
+4 * 2118 2118 0 0 10 0 0 2
+4 +3 2118
+3 * 2118 0 0 4 0 0 2
-11 -3 4624 4624 0 0 10 0 0 3
+4 * 4624 4624 0 0 52 0 0 10
+4 +3 4624
+3 * 4624
+6 +4 6742
+3 * 6742
+15 +4 6742 6742 0 0 57 0 0 11
+7 * 6742
+6 +4 6742 6742 0 0 9 0 0 2
+7 * 6742
+6 +6 6742 6742 0 0 29 0 0 7
+6 * 6742
+2 * 6742
+6 +8 6742 6742 0 0 55 0 0 10
+4 -4 6742 0 6742 4 0 0 2
+11 +1 6742 0 6742
+12 +3 6742 6742 0 0 52 0 0 10
+4 * 6742 0 6742
+5 +1 6742 6742
+4 * 6742 6742
+4 * 6742 0 6742
+5 +3 6742 6742
+7 +1 6742
+3 * 6742
+6 +2 6742 6742
+4 * 6742 6742 0 3 0 0 2
+6 +8 6742 6742
+5 -8 6742 6742 0 0 873 0 0 156
+4 +8 6742 6742
+6 * 6742
+3 * 6742
+3 * 6742
+3 * 6742
+3 * 6742 6742
+5 * 6742
+3 * 6742
+3 * 6742
+2 * 6742
+6 -99 4639
+5 553 4639 4639 0 3 0 0 2
+9 * 4639
+2 * 4529
+2 * 4529
+2 * 4529 4529
+8 * 4529 4529 0 0 4
+4 * 4529
+3 * 4529
+2 +1 223
+3 * 223 0 223
cfi=(35)
cfn=(108) _dl_name_match_p
calls=223 0x11980 288 
* * 19641 4561 892 36 166 5 13 32
+5 * 223
+2 * 223
+6 * 223
+7 +3 223
+4 * 223
+3 * 223
-7 * 4416
+4 * 4416
+3 * 4416
+6 +3 15
+2 +1 15
+7 * 15 15
+1 * 15 15
+1 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
-17 * 2103 0 0 3 0 0 2
+7 * 2103 2103
+1 * 2103 2103
+1 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
+2 * 2103 2103
0xa158 -92 2103 2103 0 4 0 0 2
+9 * 2103
+6 +50 2103 2103
+5 * 2103
+3 * 2103
+2 * 2103
+2 * 645
+2 * 645
+2 * 523
+2 * 523
+23 +4 1458 1458 0 3 6 0 1
+6 * 1458
+2 * 1458
+6 +12 1981 1981 0 1 0 0 1
+5 * 1981 0 1981
+3 +1 1981 0 1981
+4 +1 1981
+5 * 1981
+9 220 122 122
+4 * 122 122 0 1 0 0 1
+5 * 122 0 122
+5 +2 122
+4 -2 122 0 122
+5 +2 122
+7 * 122
+4 * 122
+5 * 122 0 122
+5 * 122
+3 * 122 122 122 0 2
cfi=(2)
cfn=(50)
calls=122 0xc90 704 
* * 244 122 122 0 0 2
+6 +2 122
+7 * 122
+3 * 122 122 0 0 2 0 0 1
+4 +1 122 122
+4 +1 122 0 0 1 0 0 1
+3 -2 122 0 122
+5 +2 122
+6 +2 121
+3 * 121
+2 * 121 0 121
+5 * 121
+3 +1 121
+4 * 121 0 121
+5 * 121
+3 * 121
+3 * 121 0 121
+5 * 121
+3 -1 121
+3 +1 121
+2 * 121
+3 * 121
+4 * 121
+3 * 121 0 0 1 0 0 1
+3 * 121
+4 * 121
+3 * 121
+3 * 121
+3 488 121
+3 * 121
+4 * 121
+3 * 121 121
+5 * 121
+3 * 121
-24 229 66
+3 * 66
+3 488 66
+3 * 66
+4 * 66
+3 * 66 66
+5 * 66
+3 * 66
+6 252 213 213
+5 * 213
+2 * 132
+3 +4 132
+3 * 132
+4 * 132
+6 * 66
+3 -24 66 66 0 0 20 0 0 6
+3 * 66
+3 * 66
-6 * 187 187 0 1 62 0 1 37
+3 * 187
+3 * 187
+2 +1 40 40
+4 * 40 40
+5 * 40 0 40
cfi=(19)
cfn=(54)
calls=40 0x1bb00 -89 
* * 2663 478 0 1 0 0 1
+5 * 40
+2 * 40
+2 * 40 40
+5 * 40 40
+5 +2 40
+3 * 40
+6 +10 40 40
+4 +1 40 40
+4 * 40 40
+5 +2 40 40 0 1 0 0 1
+5 * 40 0 40
+4 * 40 0 40
+3 * 40 40 40
cfi=(2)
cfn=(52)
calls=40 0xca0 710 
* * 80 40 40
+6 542 40
+5 * 40
+13 260 81 81
+5 * 81
+7 * 81
+3 * 81
+4 * 81 81
+5 * 81 81
+5 * 81
+4 * 81
+4 * 81 81
+5 * 81
+4 * 81
+3 * 81
+6 +62 82 82 0 1 0 0 1
+5 * 82
+3 191 82
+2 * 82 82
+5 322 82 82
+2 191 82
+3 * 82
+3 +1 82
+3 322 82 82
+5 191 82
+3 +1 82
+2 * 82 82
+5 * 82 0 0 1 0 0 1
+4 * 82
+3 * 82
+4 321 82
+3 * 82
+68 +13 82 82 0 1 0 0 1
+5 * 82
+7 * 82
+4 * 82
+4 * 82 0 82
+6 +5 82 82
+5 * 82 82 82
cfi=(2)
cfn=(52)
calls=82 0xca0 710 
* * 164 82 82
+6 +2 82 82
+5 * 82 82
+5 +1 82 0 82
+4 -1 82 0 82
+3 542 82
+5 * 82
+11 197 38
+3 * 38
+3 * 38
+4 * 38
+3 * 38
-10 * 82 0 0 1 0 0 1
+3 * 82
+4 * 82
+3 * 82
+11 -2 84
+3 * 84
+3 +1 84
+3 * 84
+2 -3 166 166 0 0 2 0 0 2
+5 * 166 0 0 1 0 0 1
+2 +8 82 0 82
+4 +1 82 82
+5 -2 82 0 82
+3 +3 82 0 82
+4 -1 82 0 82
+4 329 82 82
+7 * 82
+3 * 82
+2 * 82
+22 +3 66
+3 -75 66
+3 * 66 0 0 1 0 0 1
+3 * 66
+3 * 66
0xa578 413 2255 2255 0 4 0 0 2
+5 * 2255
+2 * 2255 0 0 3 0 0 2
+2 * 2255
+3 * 2255 2255
+7 * 2255 2255 0 0 1128 0 0 217
+3 +2 2255
+2 * 2255
+6 +2 2237 2237
+7 * 2237 0 2237
+5 * 2237 0 2237
+5 * 2237 0 2237
+8 * 2237
+3 * 2237 0 2237
+8 * 2237 0 2237
+5 * 2237 0 0 4 0 0 2
+4 * 2237 2237
+5 * 2237 2237
+5 * 2237 2237
+5 * 2237
+3 * 2237
+11 +13 3024
+4 * 3024
+3 * 3024
+6 -10 5127 5127 0 0 1604 0 0 429
+3 * 5127
+3 * 5127
+3 * 5127
+3 * 5127
+2 +2 2103
+3 * 2103 2103 0 4 0 0 2
+7 +1 2103
+4 * 2103 2103 2103
+4 * 2103 2103 2103 0 0 1
+4 * 2103 0 2103
+1 * 2103 0 2103 0 0 2
+2 -1 2103
+4 +1 2103
+2 * 2103 0 2103
+1 * 2103 2103
+8 * 2103
+4 * 2103 2103
+7 * 2103 2103
+5 * 2103 2103
+5 -1 2103
+2 +1 2103
+4 * 2103 2103 0 3 0 0 2
+8 * 2103 0 2103 0 0 6 0 0 4
cfn=(176)
calls=2103 0x9cd0 92 
* * 166678 53164 12675 96 550 40 55 312 7
+5 +4 2103
+4 * 2103
+3 * 2103
+56 +34 134 134 0 3 0 0 2
+8 * 134
+31 267 2
+4 * 2 0 2
cfi=(35)
cfn=(230) _dl_higher_prime_number
calls=2 0x119f0 +77 
* * 149 13 0 1 4 0 1 2
+5 +1 2
+5 * 2 0 0 1 0 0 1
+3 -1 2
+3 +1 2 0 2
cfi=(17)
cfn=(36)
calls=2 0x19f10 103 
* * 127 24 18 0 1
* * 2 2 0 0 1
+5 +2 2
+3 -2 2
+3 +2 2
+6 * 2
+4 +7 2
+3 * 2 0 2
+5 * 2
+6 * 2 2
+5 * 2
+4 * 2 0 2
+5 * 2
+3 * 2
+4 * 2
+3 +1 2 2 0 1 2 0 1 1
+4 * 2
+3 * 2
-7 * 90 90 0 0 10 0 0 1
+4 * 90
+3 * 90
+2 +1 70 70
+3 -88 70
+2 +88 70 70
+4 * 70 70
+4 -88 70
+3 +88 70
+3 -88 70
+3 +1 70
+3 -1 70
+3 +1 70
+2 * 70
+3 * 70
+4 * 70
+3 * 70
+4 * 70
+3 * 70
+4 * 70
+3 * 70
-10 * 5
+3 * 5
+4 * 5
+3 * 5
+9 +3 14
+3 * 14
+3 +1 14
+3 * 14
+2 -3 84 84 0 0 56 0 0 56
+5 * 84
+2 +7 70 0 70
+3 +1 70 0 70
+4 +1 70 0 70
+4 +1 70 0 70
+4 * 70
+4 +74 70
+3 * 70
-7 -74 22 0 0 1 0 0 1
+4 +74 22
+3 * 22
+2 * 2 2
+5 +6 2 2
+5 * 2 2 0 1 0 0 1
+5 * 2
+4 * 2
+7 * 2
+4 * 2
+3 * 2 2 2
cfi=(17)
cfn=(86) free
calls=2 0x19f50 120 
* * 12 6 2
+4 +4 2 2 0 0 1
+7 -3 2 0 2
+4 +2 2 0 2
+4 +1 2 0 2
+5 * 2 0 2
+4 -20 2
+3 * 2
+14 -70 5
+3 * 5
+52 555 134 0 0 3 0 0 2
+3 * 134 134
+5 * 134 134 0 3 0 0 2
+5 * 134 134
+8 * 134 134
+8 * 134 134
+5 * 134
+5 303 1
+3 * 1
+6 +9 1
+5 * 1
+5 * 1 0 1
cfi=(17)
cfn=(36)
calls=1 0x19f10 103 
* * 38 7 5 0 1
* * 1 1 0 0 1
+5 +1 1
+3 -1 1 0 1
+5 +1 1 0 0 1 0 0 1
+6 +3 1 0 1
+4 +2 1 1 0 0 1
+7 -7 1
+6 +6 1 0 1
+8 +1 1 0 1
+9 * 1 0 1
+4 * 1
0xa92f 439 2103 0 0 4 0 0 2
+3 * 2103
+3 * 2103
+3 * 2103 2103
+5 * 2103 2103 0 4 0 0 2
+5 * 2103 2103
+8 * 2103 2103
+8 * 2103 2103
+5 * 2103

fn=(10)
0xba50 956 7 7 0 1 0 0 1
+7 * 7
+3 * 7
+2 +4 7 7
+4 +4 7 7 0 0 7 0 0 7
+2 * 7 0 7
+6 +2 7 7 0 0 2 0 0 2
+3 -1 7 7
+3 +3 7
+4 * 7
+3 * 7
+2 +1 7 0 7
+7 +1 7 0 0 1 0 0 1
+4 +3 7
+2 -3 7 7
+3 +7 7
+3 -4 7
+4 -1 7 0 7
+7 +3 7 0 7
+7 +2 7
+4 -7 7 0 7
+6 +7 7 0 7
+7 +1 7 7

fl=(41)
fn=(134)
0xdf80 161 1 0 0 1 0 0 1
+3 -1 1 0 1
+1 +1 1
+4 -1 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 +1 1
+8 -1 1 0 1
+2 * 1 0 1
+1 +1 1
+4 -1 1
+7 * 1 0 1
+7 +1 1
+4 -1 1 0 1
+7 * 1 0 1
+6 +1 1 0 0 1 0 0 1
+3 * 1
+5 * 1
+4 -15 1
+4 +15 1
+3 -17 1 0 1
+7 +1 1 0 1
+4 +1 1 0 1
+4 +6 1 1
+7 * 1 0 1
+6 * 1
+3 * 1
+3 +26 1
+2 -26 1 0 1
+6 +26 1 0 0 1 0 0 1
+6 * 1
+3 * 1
+3 * 1
+5 * 1
+5 * 1 0 1
+6 * 1
+3 -34 1
+4 +2 1
+3 +33 1 1
+3 * 1
+4 -33 1
+4 -2 1
+4 +2 1
+3 * 1
+4 -2 1 0 1
+6 +1 1 0 1 1 0 0 1
+4 +1 1 0 1
+4 +6 1 1
+7 * 1
+3 * 1
+3 +26 1
+3 -26 1 0 1
+6 +26 1
+2 * 1
+2 * 1 1
+4 * 1
+4 * 1
+4 +4 1
+3 +21 1 0 1
+8 +1 1 0 1
+7 -22 1 0 1 1 0 0 1
+7 * 1 0 1
+8 +19 1 1
+6 -12 1 0 1
+11 +15 1 0 1
+10 -16 1 0 1
+11 * 1 0 1
+7 +13 1 0 1
+6 317 1 0 0 1 0 0 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+3 217 1 1
+8 -4 1 0 1
+6 -4 1 0 1 1 0 0 1
+11 +8 1
-25 * 6 6
+8 -4 6 0 6
+6 -4 6 0 6
+11 +8 6
+6 +12 7 7
+5 * 7
+6 +2 5 5
+4 +11 5 5
+4 -5 5 0 5
+4 -6 5 5
+4 * 5 0 5
+7 +5 5 0 5
+4 +2 5 5
+6 * 5 0 5
+3 +1 5 5 0 1 0 0 1
+6 * 5 0 5
+3 +3 5 5
+4 * 5
+3 * 5
+6 * 5 5
+7 * 5
+3 * 5
+3 * 5
+2 +50 12 12
+7 * 12
+3 * 12
+2 +1 8
+3 * 8
+4 * 8 0 8
+4 -51 8
+4 * 8 8
+4 * 8
+3 * 8
-11 * 127
+4 * 127 127 0 0 10
+4 * 127
+3 * 127
+6 +1 135 0 0 1 0 0 1
+4 * 135
+6 +6 12 12
+7 * 12 12
+5 * 12
+5 * 12
+3 * 12 0 12
cfi=(28) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../strchr.S
cfn=(76) index
calls=12 0x1b8e0 24 
* * 348 45 0 0 7 0 0 7
+5 * 12
+3 * 12
+6 +5 12 12
+7 * 12 12 0 1 0 0 1
+7 * 12
+7 * 12 12
+7 * 12 12
+7 -3 12 0 12
+4 +3 12 0 12
cfi=(33)
cfn=(98)
calls=12 0x104f0 -91 
* * 58217 13217 7505 88 128 149 88 128 149
+5 +2 12 12
+4 * 12
+3 * 12
+6 +15 12 12
+4 +2 12 12
+7 * 12
+6 +5 5 0 0 1 0 0 1
+4 +6 5 5
+7 +2 5 0 5
+7 -8 5
+5 * 5
+4 +3 5 0 5
+4 +1 5 0 5
+6 +1 5 0 5
+8 +1 5 0 5
+4 +4 5 5
+7 * 5 0 5
+7 * 5 0 0 1 0 0 1
+3 * 5
+3 * 5 0 5
+6 * 5
+5 +7 123
+4 * 123
+6 * 123
0xe3a3 459 7 7 0 1 0 0 1
+7 * 7
+3 * 7
+2 +2 5
+4 * 5
+3 * 5 0 5 0 0 1 0 0 1
+8 +2 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 5
cfi=(17)
cfn=(40) malloc
calls=5 0x19f00 94 
* * 145 30 25
* * 5 5
+5 +2 5
+3 -2 5
+3 +2 5
+6 +4 5 5
+7 * 5
+4 * 5
+4 * 5
+3 -1 5 0 5 0 0 1 0 0 1
+3 +1 5 0 5
cfi=(18)
cfn=(46)
calls=5 0x1df20 61 
* * 133 19 14 0 0 2 0 0 2
+5 +1 5
+4 * 5
+3 * 5
+3 * 5
+4 * 5 0 5
cfi=(18)
cfn=(46)
calls=5 0x1df20 61 
* * 133 19 14 0 0 1 0 0 1
+5 +4 5 0 5
+8 -1 5 0 5
+7 +5 5 5
+7 * 5 5
+2 * 5
+2 * 5
-11 * 2 2 0 1 0 0 1
+7 * 2 2
+2 * 2
+2 * 2
+6 * 6 6
+4 * 6
0xe6cb +7 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+2 * 1 1
+6 * 1
+2 * 1
+2 +1 1 0 1
+6 +3 1 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
+7 * 1 0 0 1 0 0 1
+37 +10 1 1
+6 * 1
+4 * 1
+4 * 1 0 1
cfi=(17)
cfn=(40)
calls=1 0x19f00 94 
* * 29 6 5
* * 1 1
+5 +3 1
+3 -3 1
+3 +3 1 0 0 1 0 0 1
+6 +5 1 1
+6 * 1 1
+7 * 1 1
+7 * 1
+2 * 1
+3 * 1
+3 +1 1 0 1
+6 -1 1
+4 * 1 0 1
+7 * 1
+6 +1 1
+2 * 1 1
+4 +8 1
+3 * 1 0 1 1 0 1 1 0 1
+5 +4 1 1
+4 * 1 1
+7 * 1 0 1
+7 -4 1
+2 -6 1 1
+4 * 1
+3 * 1
-39 -2 6 6
+4 +8 6
+3 * 6 0 6 0 0 1 0 0 1
+5 +4 6 6
+4 * 6 6
+7 * 6 0 6
+7 -4 6
+2 -6 6 6
+4 * 6
+3 * 6
+2 +13 1 1
+7 * 1 0 1
+6 * 1
+6 +51 1 1
+7 * 1 1
+4 * 1 0 0 1 0 0 1
+6 +2 1 1
+7 * 1
+3 * 1
0xe94e +42 1 0 0 1 0 0 1
+4 -4 1 0 1
+7 +5 1
+2 * 1
+6 -1 1
+4 * 1
+4 * 1
+4 * 1
+3 +1 1
+3 * 1 0 1
cfi=(27) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../memset.S
cfn=(74) memset
calls=1 0x1dc00 53 
* * 15 1 2
+5 * 1 1
+6 -2 1 0 0 1 0 0 1
+6 * 1
+3 * 1
+5 * 1
+3 * 1
+3 * 1
+3 * 1 0 1
+6 * 1
+5 * 1
+4 +7 1
+4 -1 1 1
+3 +1 1 1
+3 -1 1
+3 * 1 0 1
+3 +7 1 1
+6 -7 1 0 1 1 0 0 1
+7 +7 1
+3 * 1
-36 -13 5
+4 +7 5
+4 -1 5 5
+3 +1 5 5
+3 -1 5
+3 * 5 0 5
+3 +7 5 5
+6 -7 5 0 5
+7 +7 5
+3 * 5
+6 * 5
+3 +2 5
+3 * 5
+4 * 5 5
+3 * 5 5
+7 +1 5
+3 * 5
-20 -1 10
+3 * 10
+4 * 10 10
+3 * 10 10
+7 +1 10
+3 * 10
+6 * 10
+9 +2 10 10
+3 * 10
+3 * 10
-6 * 25 25
+3 * 25
+3 * 25
+6 +1 25
+4 * 25 0 0 1 0 0 1
+3 * 25
0xea70 +28 5 5 0 1 0 0 1
+6 * 5
+4 * 5
+2 * 5 0 5
+7 * 5 0 5
+7 * 5
+3 * 5
+3 * 5
+3 * 5 0 5
cfi=(27)
cfn=(74)
calls=5 0x1dc00 53 
* * 84 5 9
+5 * 5
+3 * 5 5
+7 * 5
+4 * 5 5
+7 * 5
+11 -6 15 0 0 1 0 0 1
+4 -28 15
+3 * 15 0 0 1 0 0 1
+6 +31 6 6
+7 * 6
+2 * 5
+3 * 5
+90 -6 1 1 0 1 0 0 1
+7 * 1
+3 +16 1 1
+7 * 1 0 1 1 0 0 1
+8 +2 1 1
+7 +1 1 0 1
+7 -1 1 0 1
+7 +2 1 1
+7 * 1
+3 * 1
+21 +7 1 1
+7 * 1 0 0 1 0 0 1
+3 * 1
+10 +3 1 1
+6 * 1
+2 * 1
+6 +3 1
+4 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
+56 481 6 6
+2 * 6
+2 * 6
+6 -1 7 7 0 1 0 0 1
+4 +1 7
+3 * 7
+2 * 1 1
+7 202 1 0 1 1 0 0 1
+10 * 1
+60 +27 2 2 0 0 1 0 0 1
+8 * 2
+6 * 2 2 0 0 1
+8 * 2
+6 -19 2
+3 * 2
+9 +8 7 7 0 1 1 0 1 1
+8 * 7
+6 * 7 7
+7 * 7 0 0 1 0 0 1
+6 * 6 6
+8 * 6
+3 * 6
+6 +2 5
+4 +2 5 5
+7 * 5 5
+7 * 5 0 5
+7 * 5
+6 +2 2
+4 * 2
+4 * 2
+4 * 2 0 0 1 0 0 1
+6 * 2
+3 * 2
+5 * 2
+4 * 2 0 2
+7 * 2
+3 * 2
+3 * 2
+6 * 2 0 2
+7 * 2 2
+7 * 2 0 2
+7 * 2
+76 338 6 0 6 1 0 0 1
+7 * 6
0xefbd 611 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+3 * 1
+3 * 1
+8 * 1
+3 * 1 0 1
+7 * 1 0 1
cfi=(18)
cfn=(46)
calls=1 0x1df20 61 
* * 51 9 8
+5 +2 1
+4 -38 1 0 1
+11 +38 1
0xf18b 209 1 0 1 1 0 0 1
+11 * 1

fn=(136) openaux
0xdb70 60 12 0 12 1 0 0 1
+1 * 12
+3 +7 12 12
+3 -4 12 12
+3 * 12 12
+4 * 12 12 0 1 0 0 1
+4 * 12 12
+7 * 12 12
+4 * 12
+3 * 12
+2 * 12
+3 * 12
+5 * 12
+3 * 12 0 12 0 0 1 0 0 1
cfi=(22)
cfn=(106)
calls=12 0x89e0 2167 
* * 57269 12917 7133 86 128 146 86 128 146
+5 * 12 0 12
+4 +5 12 12
+1 * 12 12

fl=(10) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/unix/sysv/linux/x86_64/brk.c
fn=(18) brk
0x1a4b0 31 1 0 0 1 0 0 1
+5 * 1
+2 * 1
+2 * 1
+6 * 1 0 0 1 0 0 1
+3 * 1
+2 * 1 0 1 0 0 1 0 0 1
+7 +8 1
+2 -6 1
+3 * 1
+2 +7 1 1

fl=(11)
fn=(22)
0x1cf90 66 62 0 0 1 0 0 1
+4 +1 62
+4 +1 62
+4 +1 62
+4 +1 62
+3 +1 62
+3 +1 62
+7 +2 62
+7 +2 62
+2 +30 61 61 0 0 1 0 0 1
+4 +1 61
+4 +1 61 0 0 1 0 0 1
+4 +1 61
+2 +1 61
+2 +1 25
+3 +1 25 25
+1 +4 36
+4 +1 36 36
+5 +1 36 36 0 0 2 0 0 2
+5 +1 36 36 0 0 5 0 0 5
+5 +1 36
+4 +1 36
+5 +1 36
+4 +1 36
+4 +1 36
+4 +1 36
+3 +1 36
+4 +1 36
+3 +5 36
+3 * 36
+3 * 36
+4 * 36
+3 * 36
+3 * 36
+6 * 35
+4 * 35 35
+10 +4 1 0 0 1 0 0 1
+4 +1 1 1
+4 * 1 1
+5 * 1 1
+5 * 1 1
+5 * 1
+4 * 1
+4 * 1 0 0 1 0 0 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1
+4 * 1
+3 +1 1
+3 * 1
+3 * 1
+4 * 1
+3 * 1
+3 * 1
+2 * 1
+4 * 1 1
+29 +65 3 3 0 1 0 0 1
+5 +1 3 3
+5 +1 3 3
+5 +1 3 3
+5 +1 3
+4 +1 3
+4 +1 3
+2 +1 3
+2 +2 2
+4 +2 2 2
+4 +1 2 2
+5 +1 2 2 0 1 0 0 1
+5 +1 2 2
+5 +1 2
+4 +1 2
+4 +1 2
+2 +1 2
+2 +1 2
+13 +4 1
+4 +2 1
+4 +1 1 1
+4 * 1 1
+5 * 1 1
+5 * 1 1
+5 * 1
+4 * 1 0 0 1 0 0 1
+4 * 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1
+4 * 1
+3 +2 1
+4 +1 1
+3 +1 1
+3 +1 1 1

fl=(67)
fn=(260)
0x17870 64 7 0 7 1 0 0 1
+1 +3 7
+3 +2 7
+4 +2 7
+7 +3 7 0 7 1 0 0 1
+8 +1 7 0 7
+8 +1 7 0 7
+8 +1 7 0 7
+8 +1 7 0 7
+8 +1 7 0 7
+8 +1 7 0 7
+8 +1 7 0 7
+5 +1 7 0 7 1 0 0 1
+6 +1 7 0 7
+6 +1 7 0 7
+6 +1 7 0 7
+9 +1 7 0 7
+9 +1 7 0 7
+9 +1 7 0 7
+9 +5 7
+9 +1 7 0 0 1 0 0 1
+9 +1 7
+9 +1 7
+9 +14 7 7
+4 +1 7 7
+4 +1 7 0 7
cfi=(68) /build/glibc-bfm8X4/glibc-2.23/elf/../elf/dl-runtime.c
cfn=(262) _dl_fixup
calls=7 0xf9f0 -46 
* * 7846 2216 744 10 145 12 10 15
+5 +1 7
+3 +5 7
+9 +1 7
+9 +1 7 0 0 1 0 0 1
+9 +1 7
+9 +13 7 7
+8 +1 7 7
+8 +1 7 7
+8 +1 7 7
+8 +1 7 7
+8 +1 7 7
+8 +1 7 7 0 1 0 0 1
+8 +1 7 7
+5 +1 7 7
+6 +1 7 7
+6 +1 7 7
+6 +1 7 7
+9 +1 7 7
+9 +1 7 7
+9 +1 7 7
+9 +2 7
+3 +2 7 7 0 1 0 0 1
+4 +4 7
+4 +3 7
cob=(3)
cfi=(98) /build/glibc-bfm8X4/glibc-2.23/csu/../csu/libc-start.c
cfn=(602) (below main)
calls=1 0x20740 -25 
* * 3345817395 1232529572 845108993 173460 1166507 990945 2438 1724 925464
cob=(3)
cfi=(70)
cfn=(462)
calls=1 0x84130 2902 
* * 432 84 67 22 11 2 22 1 2
cob=(8)
cfi=(94)
cfn=(440)
calls=1 0xb6c30 0 
* * 1548 460 220 13 24 2 13 5
cob=(8)
cfi=(94)
cfn=(422)
calls=1 0x8b480 0 
* * 4 2 1 1 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=2 0x3a280 57 
* * 126 26 31 9 3 3 9 0 2
cob=(3)
cfi=(69) /build/glibc-bfm8X4/glibc-2.23/gmon/gmon.c
cfn=(266) monstartup
calls=1 0x109310 -58 
* * 82305 14612 13358 97 1089 3227 97 879 3207

fn=(261)
0x17870 64 101 0 101 3
+1 +3 101
+3 +2 101
+4 +2 101
+7 +3 101 0 101 4 0 1 1
+8 +1 101 0 101
+8 +1 101 0 101
+8 +1 101 0 101
+8 +1 101 0 101
+8 +1 101 0 101
+8 +1 101 0 101
+8 +1 101 0 101 0 0 3
+5 +1 101 0 101 3 0 1 1
+6 +1 101 0 101 0 0 1
+6 +1 101 0 101 0 0 1 0 0 1
+6 +1 101 0 101
+9 +1 101 0 101 0 0 1
+9 +1 101 0 101
+9 +1 101 0 101 0 0 1
+9 +5 101
+9 +1 101 0 0 3 0 0 1
+9 +1 101
+9 +1 101
+9 +14 101 101
+4 +1 101 101
+4 +1 101 0 101
cfi=(68)
cfn=(262)
calls=101 0xf9f0 -46 
* * 99242 25489 8695 223 1316 78 92 562 22
+5 +1 101
+3 +5 101
+9 +1 101
+9 +1 101 0 0 3 0 0 1
+9 +1 101
+9 +13 101 101
+8 +1 101 101
+8 +1 101 101
+8 +1 101 101
+8 +1 101 101
+8 +1 101 101
+8 +1 101 101 0 3 0 0 1
+8 +1 101 101
+5 +1 101 101
+6 +1 101 101
+6 +1 101 101
+6 +1 101 101
+9 +1 101 101
+9 +1 101 101
+9 +1 101 101
+9 +2 101
+3 +2 101 101 0 3 0 0 1
+4 +4 101
+4 +3 101
cob=(3)
cfi=(200) /build/glibc-bfm8X4/glibc-2.23/libio/putchar.c
cfn=(3398) putchar
calls=1 0x71290 25 
* * 79 27 13 10 6 1 9 0 1
cob=(4)
cfi=(198) /build/glibc-bfm8X4/glibc-2.23/math/w_log.c
cfn=(3366) log
calls=1 0x21d80 28 
* * 116 23 7 13 7 1 12 3
cob=(4)
cfi=(196) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/flt-32/w_expf.c
cfn=(3350) expf
calls=1 0x37420 25 
* * 55 16 2 6 6 0 6 3
cob=(4)
cfi=(190) /build/glibc-bfm8X4/glibc-2.23/math/w_pow.c
cfn=(3124) pow
calls=1 0x21e40 26 
* * 104 16 5 15 9 0 15 7
cob=(3)
cfi=(76) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../memset.S
cfn=(298) __GI_memset
calls=1 0x8f240 53 
* * 15 1 2 3 0 0 3
cob=(4)
cfi=(58)
cfn=(2392)
calls=1 0x16b60 36 
* * 2 1
cob=(8)
cfi=(94)
cfn=(2386)
calls=1 0xb7130 0 
* * 982 299 123 7 10 1 7 10
cob=(4)
cfi=(64)
cfn=(2380)
calls=1 0x17ba0 36 
* * 2 1
cob=(8)
cfi=(94)
cfn=(2374)
calls=1 0xb7280 0 
* * 2972 848 343 18 42 2 17 31
cob=(8)
cfi=(94)
cfn=(2272)
calls=1 0x8dd10 0 
* * 53 5 0 4 0 0 4
cob=(4)
cfi=(179) /build/glibc-bfm8X4/glibc-2.23/math/w_powf.c
cfn=(2238) powf
calls=1 0x37bf0 26 
* * 284 34 3 26 9 0 26 9
cob=(4)
cfi=(177) /build/glibc-bfm8X4/glibc-2.23/math/w_fmodf.c
cfn=(2228) fmodf
calls=1 0x375a0 26 
* * 84 3 0 9 2 0 9 2
cob=(3)
cfi=(70)
cfn=(1604)
calls=1 0x844f0 2934 
* * 100 24 15 10 0 0 10
cob=(8)
cfi=(94)
cfn=(1598)
calls=1 0x8bf10 0 
* * 1447 413 154 19 28 0 19 19
cob=(3)
cfi=(167) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S
cfn=(1588) __memmove_ssse3_back
calls=1 0x15e420 55 
* * 13 3 1 3 1 0 3 1
cob=(8)
cfi=(94)
cfn=(1492)
calls=1 0xf40b0 0 
* * 6 3 1 2 2 1 2 2 1
cob=(8)
cfi=(94)
cfn=(1484)
calls=1 0xec440 0 
* * 210 39 37 2 4 1 2 4 1
cob=(3)
cfi=(155)
cfn=(1456)
calls=1 0x6dd70 -62 
* * 504 96 128 36 8 7 36 7 7
cob=(8)
cfi=(94)
cfn=(1444)
calls=1 0xb00f0 0 
* * 1783 476 270 41 50 8 41 44 8
cob=(8)
cfi=(94)
cfn=(1438)
calls=1 0xb0070 0 
* * 3 2 0 0 1 0 0 1
cob=(8)
cfi=(94)
cfn=(1432)
calls=1 0xf0650 0 
* * 4962 1268 615 50 82 12 50 76 12
cob=(8)
cfi=(94)
cfn=(1426)
calls=1 0xf08b0 0 
* * 7093 1789 810 56 110 14 56 103 14
cob=(8)
cfi=(94)
cfn=(1350)
calls=1 0x8df10 0 
* * 793 231 129 1 3 1 1 2 1
cob=(8)
cfi=(94)
cfn=(1344)
calls=1 0xffca0 0 
* * 112 43 25 2 0 0 2
cob=(8)
cfi=(94)
cfn=(1338)
calls=1 0x101210 0 
* * 114 43 25 1 4 0 1 4
cob=(8)
cfi=(94)
cfn=(1332)
calls=1 0xb0060 0 
* * 3 1 2 1 0 0 1
cob=(8)
cfi=(94)
cfn=(1326)
calls=1 0xebdd0 0 
* * 3231 845 391 14 33 4 14 33 4
cob=(8)
cfi=(94)
cfn=(1320)
calls=1 0xefe40 0 
* * 6122 1788 962 36 92 11 36 92 11
cob=(8)
cfi=(94)
cfn=(1312)
calls=2 0x8de60 0 
* * 384 62 64 3 13 2 3 12 2
cob=(3)
cfi=(141) /build/glibc-bfm8X4/glibc-2.23/stdio-common/printf.c
cfn=(1298) printf
calls=1 0x55800 28 
* * 874 194 142 59 19 1 59 19 1
cob=(4)
cfi=(138) /build/glibc-bfm8X4/glibc-2.23/math/w_logl.c
cfn=(1266) logl
calls=1 0x44d80 27 
* * 30 6 1 3 2 0 3 2
cob=(3)
cfi=(124) /build/glibc-bfm8X4/glibc-2.23/libio/ioputs.c
cfn=(1172) puts
calls=1 0x6f690 33 
* * 1588 418 222 66 19 1 48 2 1
cob=(3)
cfi=(122)
cfn=(1164)
calls=1 0x115810 -66 
* * 20 6 3 3 1 0 3
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 0 
* * 1344 389 139 7 25 0 5 3
cob=(8)
cfi=(94)
cfn=(1128)
calls=1 0x1257c0 0 
* * 112 43 25 2 0 0 2
cob=(8)
cfi=(94)
cfn=(1122)
calls=1 0x1268f0 0 
* * 114 43 25 1 2 0 1
cob=(8)
cfi=(94)
cfn=(1116)
calls=1 0x125770 0 
* * 112 43 25 2 0 0 2
cob=(8)
cfi=(94)
cfn=(1110)
calls=1 0x1268a0 0 
* * 114 43 25 2 3 0 2
cob=(8)
cfi=(94)
cfn=(1104)
calls=1 0x124d60 0 
* * 112 43 25 2 0 0 2
cob=(8)
cfi=(94)
cfn=(1098)
calls=1 0x126760 0 
* * 114 43 25 2 4 0 2
cob=(8)
cfi=(94)
cfn=(1092)
calls=1 0xf4d40 0 
* * 7452 1857 737 18 53 0 18 15
cob=(8)
cfi=(94)
cfn=(1086)
calls=1 0xf4ed0 0 
* * 8663 2155 865 21 63 0 21 17
cob=(8)
cfi=(94)
cfn=(1080)
calls=1 0x100210 0 
* * 112 43 25 1 0 0 1
cob=(8)
cfi=(94)
cfn=(1074)
calls=1 0x101350 0 
* * 114 43 25 1 2 0 1
cob=(8)
cfi=(94)
cfn=(1068)
calls=1 0x1001c0 0 
* * 112 43 25 2 0 0 2
cob=(8)
cfi=(94)
cfn=(1060)
calls=1 0x101300 0 
* * 114 43 25 5 7 0 5
cob=(8)
cfi=(94)
cfn=(1054)
calls=1 0xff550 0 
* * 160 62 34 2 0 0 2
cob=(3)
cfi=(114)
cfn=(1048)
calls=1 0x9f570 24 
* * 15 3 0 4 1 0 4
cob=(8)
cfi=(94)
cfn=(1036)
calls=1 0x8bf70 0 
* * 1373 420 166 18 33 1 18 3
cob=(8)
cfi=(94)
cfn=(1030)
calls=1 0x1011c0 0 
* * 2077 641 265 21 42 1 21 3
cob=(8)
cfi=(94)
cfn=(1024)
calls=1 0xf4400 0 
* * 9517 2490 991 40 96 1 39 14
cob=(8)
cfi=(94)
cfn=(1018)
calls=1 0x9f0d0 0 
* * 12 5 2 1 0 0 1
cob=(8)
cfi=(94)
cfn=(1012)
calls=1 0x9f060 0 
* * 21 7 4 3 0 0 3
cob=(8)
cfi=(94)
cfn=(1006)
calls=1 0x9e3c0 0 
* * 1512 456 214 7 15 1 7 1
cob=(8)
cfi=(94)
cfn=(1000)
calls=1 0xf4590 0 
* * 12868 3426 1407 51 127 3 50 21
cob=(8)
cfi=(94)
cfn=(994)
calls=1 0xb73f0 0 
* * 88 12 34 4 1 4 4 0 4
cob=(8)
cfi=(94)
cfn=(966)
calls=1 0x1247a0 0 
* * 32 11 9 2 0 0 2
cob=(8)
cfi=(94)
cfn=(948)
calls=1 0xaa060 0 
* * 108 29 32 6 0 0 6
cob=(8)
cfi=(94)
cfn=(934)
calls=1 0xaa670 0 
* * 108 29 32 6 0 0 6
cob=(8)
cfi=(94)
cfn=(912)
calls=1 0xab200 0 
* * 349 73 75 6 0 0 6
cob=(8)
cfi=(94)
cfn=(900)
calls=1 0xfef90 0 
* * 32 11 9 2 0 1 2 0 1
cob=(8)
cfi=(94)
cfn=(882)
calls=1 0xa93c0 0 
* * 112 37 31 4 0 0 4
cob=(8)
cfi=(94)
cfn=(868)
calls=1 0xa9920 0 
* * 112 37 31 6 0 0 6
cob=(8)
cfi=(94)
cfn=(846)
calls=1 0xaaf40 0 
* * 413 136 75 6 0 1 6
cob=(8)
cfi=(94)
cfn=(838)
calls=1 0xe3620 0 
* * 32 11 9 2 0 0 2
cob=(8)
cfi=(94)
cfn=(832)
calls=1 0xaf5c0 0 
* * 115 10 52 11 0 0 11
cob=(8)
cfi=(94)
cfn=(826)
calls=1 0x123fe0 0 
* * 1217 275 157 14 10 0 14 2
cob=(8)
cfi=(94)
cfn=(820)
calls=1 0xad880 0 
* * 108 29 32 7 0 0 7
cob=(8)
cfi=(94)
cfn=(814)
calls=1 0xade90 0 
* * 108 29 32 7 1 0 7
cob=(8)
cfi=(94)
cfn=(808)
calls=1 0xae940 0 
* * 349 73 75 6 0 3 6 0 3
cob=(8)
cfi=(94)
cfn=(802)
calls=1 0x9ab60 0 
* * 27 9 7 2 1 1 2 0 1
cob=(3)
cfi=(110)
cfn=(792)
calls=1 0x10b420 27 
* * 97 20 9 9 5 0 9 2
cob=(8)
cfi=(94)
cfn=(786)
calls=1 0xc3e70 0 
* * 1430 398 143 17 14 0 14 4
cob=(3)
cfi=(106)
cfn=(774)
calls=1 0xaca90 38 
* * 9 1 0 2 0 0 2
cob=(3)
cfi=(105)
cfn=(768)
calls=1 0xacc10 40 
* * 6 1 0 1 0 0 1
cob=(3)
cfi=(104)
cfn=(762)
calls=1 0x2d8b0 31 
* * 21 9 4 3 1 0 3
cob=(8)
cfi=(94)
cfn=(756)
calls=1 0xc4410 0 
* * 20850 5071 2272 40 71 20 35 14 20
cob=(8)
cfi=(94)
cfn=(750)
calls=1 0xb4120 0 
* * 21732 5310 2376 43 79 21 38 16 21
cob=(8)
cfi=(94)
cfn=(744)
calls=1 0xdb380 0 
* * 32 11 9 1 0 1 1 0 1
cob=(8)
cfi=(94)
cfn=(738)
calls=1 0xaec30 0 
* * 117 11 53 12 0 0 12
cob=(8)
cfi=(94)
cfn=(732)
calls=1 0xfe7c0 0 
* * 1227 277 158 15 8 1 15 1 1
cob=(8)
cfi=(94)
cfn=(726)
calls=1 0xacbe0 0 
* * 112 37 31 6 0 0 6
cob=(8)
cfi=(94)
cfn=(720)
calls=1 0xad140 0 
* * 112 37 31 4 1 0 4 1
cob=(8)
cfi=(94)
cfn=(714)
calls=1 0xae680 0 
* * 413 136 75 6 5 0 6 2
cob=(8)
cfi=(94)
cfn=(708)
calls=1 0x9aac0 0 
* * 27 9 7 1 0 2 1 0 2
cob=(8)
cfi=(94)
cfn=(702)
calls=1 0x9f310 0 
* * 14 4 2 1 1 0 1 1
cob=(8)
cfi=(94)
cfn=(696)
calls=1 0x9f350 0 
* * 1164 371 107 7 7 0 7 3
cob=(3)
cfi=(103) /build/glibc-bfm8X4/glibc-2.23/locale/newlocale.c
cfn=(690) newlocale
calls=1 0x2cb80 44 
* * 37 10 7 5 0 0 5
cob=(8)
cfi=(94)
cfn=(684)
calls=1 0xb06f0 0 
* * 1370 389 144 8 16 0 8 5
cob=(8)
cfi=(94)
cfn=(676)
calls=1 0x9ee90 0 
* * 2454 652 242 11 25 0 11 7
cob=(8)
cfi=(94)
cfn=(670)
calls=1 0xc3c20 0 
* * 3415 890 417 16 35 10 16 9 9
cob=(8)
cfi=(94)
cfn=(664)
calls=1 0x9eee0 0 
* * 2 1 0 1 0 0 1
cob=(8)
cfi=(94)
cfn=(658)
calls=1 0x9fb20 0 
* * 68922 18644 7063 295 370 102 290 63 95
cob=(8)
cfi=(94)
cfn=(644)
calls=1 0xa0dd0 0 
* * 69694 18870 7169 301 381 105 296 65 95
cob=(8)
cfi=(94)
cfn=(638)
calls=1 0x9d7e0 0 
* * 101194 27534 11515 412 615 157 406 104 141
cob=(3)
cfi=(100) /build/glibc-bfm8X4/glibc-2.23/gmon/../sysdeps/x86_64/_mcount.S
cfn=(626) mcount
calls=1 0x10a310 32 
* * 52 20 16 4 0 0 4
cob=(8)
cfi=(94)
cfn=(452)
calls=1 0x8dc40 0 
* * 14 5 3 3 0 0 3
cob=(8)
cfi=(94)
cfn=(446)
calls=1 0x8da90 0 
* * 33 13 7 5 1 0 5
cfi=(74) /build/glibc-bfm8X4/glibc-2.23/elf/dl-open.c
cfn=(288) _dl_find_dso_for_object
calls=1 0x14bf0 +23 
* * 53 22 0 3 2 0 3
cob=(3)
cfi=(70)
cfn=(274) calloc
calls=1 0x84d10 3172 
* * 81279 14290 13158 68 1072 3214 68 877 3202

fl=(25) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/memcpy.S
fn=(70) mempcpy
0x1dcf0 61 543 0 0 1 0 0 1
+4 +4 543
+2 +3 541
+3 +1 541
+2 +2 208 208 0 0 2 0 0 2
+3 +1 208 0 208 0 0 3 0 0 3
+2 +2 208 0 0 1 0 0 1
+3 +1 208
+3 +5 208
+3 +1 208
-3 -1 333
+3 +1 333
+2 +2 368 368
+3 +1 368 0 368 0 0 2 0 0 2
+3 +2 368
+4 +1 368
+4 +5 368
+3 +1 368
-3 -1 173
+3 +1 173
+2 +2 275 275
+2 +1 275 0 275 0 0 2 0 0 2
+2 +2 275
+4 +1 275
+4 +5 275
+3 +1 275
-3 -1 266
+3 +1 266
+2 +2 322 322
+3 +1 322 0 322 0 0 4 0 0 4
+3 +2 322
+4 +1 322
+4 * 322
+3 +5 322
+6 +1 322
-6 -1 219 0 0 1 0 0 1
+6 +1 219
+2 * 42
+8 +5 42 42 0 0 1
+3 +1 42 42
+4 +1 42 0 42 0 0 3 0 0 3
+3 +1 42 0 42 0 0 1 0 0 1
+4 +2 42
+3 +2 42
+4 +1 42
+4 +2 42
+2 +6 541
+3 +4 541 541
+2 +12 5
+2 +2 5
+3 +1 5
+43 +26 5 0 0 1 0 0 1
+7 +1 5
+2 +3 5
+2 +1 5
+3 +1 5
+2 +5 5
+2 +2 5 5
+3 +1 5 5
+4 +1 5 5
+4 +1 5 5 0 1 0 0 1
+4 +2 5 0 5
+3 +1 5 0 5 0 0 1 0 0 1
+4 +1 5 0 5
+4 +1 5 0 5
+4 +2 5
+4 +1 5
+4 +2 5
+56 +22 5 0 0 1 0 0 1
+3 +2 5
+6 +2 2
+3 +7 2 2

fl=(45)
fn=(166)
0xc270 149 7 0 7 1 0 0 1
+1 * 7
+3 * 7
+3 * 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+2 * 7 0 0 1 0 0 1
+3 * 7 0 7
+1 * 7
+7 +15 7
+6 -15 7 0 7
+7 * 7 0 7
+6 +15 7
+2 +1 7
+2 * 7 7 0 0 3
+8 * 7
+2 * 7
+3 * 7
+2 * 7 0 7
+6 +6 7 7
+8 * 7 0 0 1 0 0 1
+6 +6 7 7
+6 * 7
+2 * 7
+6 -18 7
+3 * 7
+4 +22 7 7
+7 * 7
+6 +7 7 7 0 0 2
+8 -32 7 0 7
+11 +32 7
+6 +44 7 7 0 1 0 0 1
fi=(5)
+4 76 7
+3 * 7
+3 * 7 7
fe=(45)
+8 232 7 7
+4 * 7 0 7
fi=(5)
+7 76 7
+2 * 7
+2 * 7
+2 +6 6 6
+4 * 6 6 0 0 5
+4 +4 6 6 0 0 6 0 0 5
+4 * 6
+3 * 6
+6 +14 6 6
+6 -8 6 0 6 1 0 0 1
+4 +10 6 6 0 0 1
+6 -2 6
+2 * 6
+6 +20 6
+3 * 6
+17 +9 1 1 0 0 1
+7 * 1
+3 * 1
fe=(45)
+24 258 7 0 0 1 0 0 1
+4 * 7
+2 * 7
+5 * 7
+3 * 7 0 7
* * 56 0 49
+3 * 7 7
+4 * 7
+3 * 7
+6 * 7 7 0 0 6
+4 * 7 7 0 0 1
+7 * 7 7 0 0 6
+7 * 7 7 0 0 1
+4 * 7 0 7
+4 * 7
+3 * 7 0 7 1 0 0 1
+4 * 7
+2 * 6 6 0 0 5
+4 * 6 0 6
+4 * 6
+4 * 6 6 0 0 2
+8 * 6
-12 * 1
+4 * 1 1
+8 * 1
+2 * 7 7
+7 * 7 7
+4 * 7 7
+4 * 7 7 0 0 1
+4 * 7
+4 * 7
+3 * 7
+6 * 7
+3 * 7 0 0 1 0 0 1
+2 * 1
+3 * 1
+6 * 6 0 6
+4 * 6 0 6
+4 * 6 0 6
+4 * 6
+4 -98 6
+7 * 6 0 6
+7 * 6 0 6
+7 * 6
+3 * 6
+3 * 6 0 6
fi=(5)
+7 301 6
+4 * 6 0 6 1 0 0 1
+7 * 6
+4 * 6 0 6
+7 * 6
+7 * 6 0 6
+7 * 6
+7 * 6 0 6
fe=(45)
+7 -43 6 6
fi=(4)
+3 58 6 6
+3 -10 6 6
+4 -1 6
+3 * 6 6
+4 +11 6 0 0 1 0 0 1
+2 -11 6 0 6
+7 +11 6
fe=(45)
0xc416 258 1
+4 -98 1
+7 * 1 0 1
+7 * 1 0 1
+7 * 1
+3 * 1
+3 * 1 0 1
fi=(5)
+7 301 1
+4 * 1 0 1
+7 * 1
+4 * 1 0 1
+7 * 1
+7 * 1 0 1
+7 * 1
+7 * 1 0 1
fe=(45)
+7 -43 1 1
fi=(4)
+3 58 1 1
+3 -10 1 1
+4 -1 1
+3 * 1 1
+4 +11 1
+2 -11 1 0 1
+7 +11 1
fe=(45)
-26 258 7 7 0 0 2
fi=(4)
+3 58 7 7
+3 -10 7 7
+4 -1 7
+3 * 7 7
+4 +11 7
+2 -11 7 0 7
+7 +11 7
+6 +3 6
+3 * 6
+2 * 6
+3 * 6
+3 * 6
fi=(5)
+7 528 910
+3 * 910 910
+3 +4 910
+4 * 910
+6 +2 910 910
+8 * 910
+3 * 910
+6 +1 910 0 910 0 0 116 0 0 114
fi=(4)
+3 61 910
+4 * 910
+3 * 910
-7 * 20
+4 * 20
+3 * 20
+2 +2 932 932 0 1 349 0 1 349
+4 * 932
+2 * 932
+4 * 932
+2 +2 22
+3 * 22
+3 * 22
+2 * 2
+3 * 2
+3 -4 2
+4 * 2
+3 * 2
+2 +13 6
+3 * 6
+2 +1 2
+3 * 2
+2 * 2 2
+6 * 2 0 0 1 0 0 1
+2 * 2
+23 +1 22 22
+4 * 22
fi=(5)
+2 528 22 22
+3 +26 22 22
fi=(4)
+4 75 22
fi=(5)
+4 554 22 22
+4 * 22 0 22
cob=(4)
cfi=(60)
cfn=(228) sin
calls=1 0x1ba20 0 
* * 8 3 0 1 0 0 1
cob=(4)
cfi=(60)
cfn=(226) __atan2_finite
calls=1 0xc460 0 
* * 8 3 0 2 0 0 2
cob=(4)
cfi=(62) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/e_asin.c
cfn=(224) __asin_finite
calls=1 0x84e0 16 
* * 5 3
cob=(4)
cfi=(64)
cfn=(222) floor
calls=1 0x17b70 25 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(63) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_floorf.S
cfn=(220) floorf
calls=1 0x36470 25 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(62)
cfn=(218) __acos_finite
calls=1 0x84b0 10 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(61) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_rintf.S
cfn=(216) rintf
calls=1 0x36a50 25 
* * 5 3 0 1 0 0 1
cob=(4)
cfi=(60)
cfn=(214) __log_finite
calls=1 0x116f0 0 
* * 8 3 0 2 0 0 2
cob=(4)
cfi=(59) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/e_pow.c
cfn=(212) __pow_finite
calls=1 0x12ad0 8 
* * 5 3 0 1 0 0 1
cob=(4)
cfi=(58)
cfn=(210) ceil
calls=1 0x16b30 25 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(57) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_ceilf.S
cfn=(208) ceilf
calls=1 0x35300 25 
* * 5 3 0 1 0 0 1
cob=(4)
cfi=(56) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_rint.S
cfn=(206) rint
calls=1 0x18320 25 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(55) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/s_sin.c
cfn=(204) cos
calls=1 0x1b9e0 12 
* * 8 3 0 2 0 0 2
cob=(4)
cfi=(54) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/multiarch/e_exp.c
cfn=(202) __exp_finite
calls=1 0xcd10 9 
* * 8 3 0 1 0 0 1
cob=(3)
cfi=(53) ???
cfn=(198) memcpy@GLIBC_2.2.5
calls=1 0x8f14b 0 
* * 18 4 0 2 0 0 2
cob=(3)
cfi=(52) /build/glibc-bfm8X4/glibc-2.23/time/../sysdeps/unix/sysv/linux/x86/gettimeofday.c
cfn=(194) gettimeofday
calls=1 0xbc460 37 
* * 66 8 5 3 0 0 3
cob=(3)
cfi=(51) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/strspn.S
cfn=(192) strspn
calls=1 0x8da80 30 
* * 6 3 0 1 0 0 1
cob=(3)
cfi=(50) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/strcspn.S
cfn=(190) strpbrk
calls=1 0x8d6f0 45 
* * 6 3 0 2 0 0 2
cob=(3)
cfi=(46) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/strcmp.S
cfn=(188) strncasecmp
calls=1 0x91cf0 129 
* * 5 3 0 3 0 0 3
cob=(3)
cfi=(50)
cfn=(186) strcspn
calls=1 0x8b280 45 
* * 6 3 0 1 1 0 1
cob=(3)
cfi=(47) /build/glibc-bfm8X4/glibc-2.23/time/../sysdeps/unix/sysv/linux/x86/time.c
cfn=(180) time
calls=1 0xbc380 38 
* * 66 8 5 5 2 0 5 1
cob=(3)
cfi=(46)
cfn=(178) strcasecmp
calls=1 0x8fa00 109 
* * 5 3 0 2 1 0 2
fi=(4)
+2 75 22
fi=(5)
+3 555 22 0 22
fi=(4)
+5 75 22
+2 * 2
+6 * 2 0 2
+8 * 2 2
fe=(45)
+7 258 2 2
+7 * 2
fi=(4)
-22 75 12 0 12 1 0 0 1
+8 * 12 12
fe=(45)
+7 258 12 12
+7 * 12
+6 +3 7 7
+7 * 7
+3 * 7
+3 * 7
+6 +24 7 0 7
+8 +3 7 7
+8 * 7
+6 +17 7 7 0 0 4
+7 * 7
+3 * 7
+6 +2 7
+4 * 7 7
+1 * 7 7
+2 * 7 7
+2 * 7 7 0 0 2
+2 * 7 7
+2 * 7 7
+1 * 7 7
fi=(4)
+5 84 8 8 0 1 0 0 1
+5 -1 8 8
+4 +3 8 8
+4 * 8
+4 -3 8 0 8
+7 +3 8 0 0 1 0 0 1
+4 +12 8
+7 * 8
+3 * 8
+2 +10 6
+3 * 6
+6 +3 6
+3 * 6
+2 * 5
fi=(5)
+2 512 5 5 0 0 4 0 0 2
fi=(4)
+3 112 5
+3 * 5 5
fi=(5)
+3 512 5
+4 * 5
-13 * 1935 1935 0 0 483 0 0 483
fi=(4)
+3 112 1935
+3 * 1935 1935
fi=(5)
+3 512 1935
+4 * 1935
+2 +5 1940
+4 * 1940
+6 +1 1940
+3 * 1940 1940 0 0 244 0 0 244
fi=(4)
+4 111 1940 0 0 1 0 0 1
+4 * 1940
fi=(5)
+3 518 1940 0 1940 0 0 442 0 0 436
fi=(4)
+3 111 1940
+2 +7 8 8 0 0 7
+8 * 8
+3 * 8
+6 +6 7 7 0 0 1
+7 -3 7 7 0 0 4
+4 * 7 0 7
+7 +3 7
+6 * 6
+3 * 6 0 6 1 0 2 1
fi=(5)
+11 447 6 0 6
+7 * 6
+3 * 6
fi=(4)
+3 127 6 6 0 0 2
+4 * 6
+3 * 6
+4 * 6
-11 * 3214 3214 0 0 805 0 0 803
+4 * 3214
+3 * 3214
+4 * 3214
+6 +9 3220 3220
+7 * 3220
+3 +3 3220
+3 -3 3220
+4 +3 3220 3220
fi=(5)
+3 269 3220
fi=(4)
+4 138 3220 3220 0 1 4 0 1
+8 -2 3220 3220 0 0 1135 0 0 218
+4 +1 3220 3220
+7 * 3220
+4 * 3220
+4 * 3220 0 3220 0 0 2
fi=(5)
+4 269 3220
+6 +21 3220
+4 * 3220
+6 +4 3220
+3 * 3220
+6 +7 3220 3220 0 0 1647 0 0 1267
+5 * 3220
+3 * 3220
+2 * 3220 0 0 1 0 0 1
+6 * 3205 3205 0 0 6 0 0 2
+8 * 3205
+6 * 1698
+4 * 1698
+6 * 1694
+4 * 1694
+6 * 1999
+4 * 1999
+4 * 1999
+4 * 1999
+4 * 1999
+3 * 1999
+3 * 1999
+4 * 1999 0 0 1 0 0 1
+4 * 1999
+6 * 2005
+3 * 2005
+4 * 2005
+4 * 2005
fi=(4)
+4 137 2005
fi=(5)
+6 301 2005
+3 * 2005 0 2005
fi=(4)
+8 137 2005
fi=(5)
+4 301 2005 0 2005 0 0 2
fi=(4)
+8 137 2005
fi=(5)
+4 301 2005
+3 * 2005
+2 * 2005 2005 0 0 45
+4 * 2005 0 0 1 0 0 1
+2 * 2005
+5 * 2005
+4 * 2005 2005
+3 * 2005 2005
+7 * 2005
+3 * 2005 2005
+7 * 2005 2005
+7 * 2005 0 2005 0 0 2
+2 * 2005 0 2005
+2 * 2005 0 2005
+7 * 2005 0 2005
+7 * 2005 0 2005
cfi=(6)
cfn=(172)
calls=2005 0xa9d0 806 
* * 1600894 392339 146470 63 5631 22 63 2508
+5 * 2005 2005 0 1 0 0 1
+4 * 2005 0 2005
+8 * 2005
+3 * 2005 2005
+7 * 2005 2005
+7 * 2005 0 2005 0 0 1
+8 * 2005 2005
+1 * 2005 2005
+1 +2 2005
+2 * 2005
+3 * 2005
-5 * 1200
+2 * 1200
+3 * 1200
+2 +3 3208 3208
+4 -3 3208 3208 0 0 1 0 0 1
+4 * 3208 3208 0 0 3
+3 +3 3208
+3 * 3208
+4 * 3208
+6 +6 3220
+4 * 3220
+6 * 3220
+7 * 3220 3220 0 0 6 0 0 2
+4 * 3220
+3 * 3220
fe=(45)
+5 178 7 7 0 1 6 0 1
+8 * 7
fi=(5)
0xc888 435 3200 3200 0 1 399 0 1 399
+4 * 3200 0 3200 0 0 1108 0 0 415
+3 * 3200
fi=(4)
+1 124 3200
+4 * 3200 3200
+7 * 3200
-11 * 20
+4 * 20 20
+7 * 20
+6 * 6
+3 * 6 6
+7 +19 6
+3 * 6
fi=(5)
0xca60 301 15 0 0 1 0 0 1
+3 * 15
+3 * 15
+26 * 6 0 0 1 0 0 1
+4 * 6
+5 * 6
fi=(4)
+63 108 1 1 0 1 1 0 1 1
+9 * 1
+6 * 1
fi=(5)
0xcb48 407 15 15 0 1 0 0 1
+4 * 15
+3 * 15
+6 +4 15 15 0 0 1
+7 * 15
+4 * 15
+3 * 15
+4 * 15
+6 +14 15 15 0 0 1 0 0 1
+4 * 15 15
+4 * 15
+3 * 15 0 15 0 0 7 0 0 7
+3 * 15
+5 -72 2 2
+4 * 2
+3 * 2
+6 +11 2 2
+4 * 2 2
+4 * 2 0 2
+3 * 2
+8 -19 3 0 0 1 0 0 1
+3 * 3
+6 +1 3 3 0 0 1
+7 * 3 0 3 0 0 1 0 0 1
+3 * 3
fe=(45)
0xcc78 -33 6 6 0 1 1 0 1
+7 * 6 6 0 1 0 0 1
+3 * 6 6
+7 * 6 0 6
+7 * 6
+3 +3 6
+3 -3 6
+3 * 6
+3 +3 6
+3 +4 6
+3 * 6
+6 +1 6
+3 * 6
+5 * 6
+3 * 6 0 6
cfi=(39)
cfn=(126) mprotect
calls=6 0x1b510 84 
* * 30 6
+5 * 6
+2 * 6 6 0 1 0 0 1
+7 * 6
fi=(5)
+63 123 6 0 0 1 0 0 1
+2 * 6
+7 * 6
+7 * 6
+4 * 6 0 6
+4 +6 6 6 0 0 5 0 0 1
+7 * 6
+3 * 6
+6 * 6
fe=(45)
+8 258 1
+3 * 1 0 1
+4 * 1
fi=(4)
0xcdd0 129 7
+3 * 7
fi=(5)
+29 301 1507 0 0 1 0 0 1
+4 * 1507
+9 * 1507
+4 * 1507
+2 * 1202 1202
+8 * 1202
+2 * 2
+4 * 2
+2 * 2
+4 * 2
+19 * 1507 0 0 1 0 0 1
+3 * 1507
+10 * 1507
+3 * 1507
+3 * 1507 0 0 1 0 0 1
+4 * 1507
+2 * 1507
+2 * 1507
+3 * 1507
+3 * 1507
+2 * 1507
+3 * 1507
+3 * 1507
+3 * 1507
+4 * 1507
+4 * 1507
+4 * 1507
+4 * 1507
+6 * 305 305
+8 * 305
+6 * 1200 1200 0 1 0 0 1
+8 * 1200 0 1200 0 0 4
+8 * 1200 1200
+8 * 1200 0 1200
+4 * 1200
fi=(4)
0xcfe4 160 1 0 0 1 0 0 1
+3 * 1 1
+7 * 1 0 1
+11 * 1
+6 * 1 0 1 1 0 0 1
+7 * 1 0 1
+7 * 1
+3 +2 1 1
+4 * 1
+3 * 1
+4 * 1
-11 * 4 4 0 0 2 0 0 2
+4 * 4
+3 * 4
+4 * 4
+6 +8 5
+3 * 5 5
+7 +1 5 5
+7 -1 5
+4 +1 5 5
fi=(5)
+3 +98 5
fi=(4)
+4 -99 5 0 0 1 0 0 1
+4 * 5
+4 * 5 0 5
fi=(5)
+7 +99 5
+6 +21 5
+4 * 5
+6 +4 5
+3 * 5
+6 +7 5 5 0 0 3 0 0 3
+5 * 5
+3 * 5
+2 * 5
+6 * 5 5 0 0 1
+8 * 5 0 0 1 0 0 1
+6 * 5
+4 * 5
+6 * 5
+4 * 5
+6 * 5
+4 * 5
+4 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5
+6 * 5
+3 * 5 0 0 1 0 0 1
+4 * 5
+4 * 5
+4 * 5 5
+3 * 5
+3 * 5 5
+7 * 5 5
+7 * 5 5
+7 * 5
+3 * 5 0 5
+8 * 5 0 5
+8 * 5
+3 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5 1 0 0 1
+7 * 5 0 5
cfi=(6)
cfn=(172)
calls=5 0xa9d0 806 
* * 2961 855 350 0 44 5 0 3
+5 * 5 5
+7 * 5 0 5
+8 * 5
+3 * 5 5
+7 * 5 0 5
+8 * 5 5
+1 * 5 5
+1 +2 5
+2 * 5
+3 * 5
+2 +3 2 2
+4 -3 2 2
+4 * 2 2
+3 +3 2 0 0 1 0 0 1
+3 * 2
+4 * 2
+6 +6 5
+4 * 5
+6 * 5
+7 * 5 5 0 0 1 0 0 1
+4 * 5
+3 * 5
+13 435 5 5
+4 * 5 0 5 0 0 1 0 0 1
+3 * 5
fi=(4)
+8 160 5 0 0 1 0 0 1
+4 * 5 5
+7 * 5
+6 * 1 1
+7 * 1 1
+7 +14 1
+3 * 1
fi=(5)
0xd6ac 301 1507 0 0 1 0 0 1
+2 * 1507
fe=(45)

fl=(22)
fn=(116) _dl_map_object_from_fd
0x6330 871 5 0 5 1 0 0 1
+1 * 5
+3 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+2 * 5 0 5
+2 * 5
+3 * 5 0 5
+1 * 5 0 0 1 0 0 1
+3 * 5
+7 * 5 0 5 0 0 1 0 0 1
+7 +10 5 5
+4 -10 5 0 5 0 0 1 0 0 1
+7 +10 5
+2 -10 5 0 5
+6 * 5 0 5
+7 * 5 0 5
+7 +10 5 0 5 0 0 1 0 0 1
cfi=(30)
cfn=(88)
calls=5 0x11070 50 
* * 40 15
fi=(36) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/posix/dl-fileid.h
+5 37 5
+7 * 5 0 0 1 0 0 1
+3 * 5
fe=(22)
+5 881 5 0 5
fi=(36)
+7 37 5 0 5
cfi=(37) /build/glibc-bfm8X4/glibc-2.23/io/../sysdeps/unix/sysv/linux/wordsize-64/fxstat.c
cfn=(122) _fxstat
calls=5 0x1b2a0 -3 
* * 50 5 0 1 0 0 1
+5 * 5
+2 * 5
+6 +4 5 5
fe=(22)
+7 897 5
fi=(36)
+7 40 5 5
+7 +1 5 0 5
fe=(22)
+7 897 5 5
+4 * 5
+4 * 5 0 0 1 0 0 1
+4 * 5 5
+4 * 5 5
+7 * 5
+3 * 5
+16 * 20 20
+5 * 20
+3 * 20
+6 +1 20 20
+9 * 20
fi=(36)
+2 49 20 20 0 1 1 0 1 1
+8 * 20
+2 * 10 10
+8 * 10
fe=(22)
0x6492 1443 5
+4 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+1 * 5 5
+8 915 5 5 0 1 0 0 1
+5 * 5
+6 +24 5 5
+4 * 5
+6 +10 5 5 0 1 0 0 1
+7 * 5
+6 +22 5 5
+7 * 5 5
+3 * 5
+2 * 5
+6 +32 5
+3 * 5
+6 882 5 0 5
+7 1006 5 5
+4 * 5 5
+4 * 5
+3 * 5 5
+3 * 5 5 0 1 0 0 1
+7 * 5 5
+7 * 5 0 5
cfi=(15)
cfn=(32)
calls=5 0xbb90 61 
* * 2049 385 284 5 6 40 5 6 40
+5 +1 5
+3 -1 5
+3 +1 5
+6 +11 5 5
+7 * 5 5
+4 +1 5 5
+4 -1 5 0 5 0 0 2 0 0 2
+8 +2 5 5
+4 -1 5 0 5
+7 +4 5 5
+4 -1 5 0 0 1 0 0 1
+8 * 5
+3 -2 5 0 5
+9 +2 5
+4 * 5
+3 +1 5
+4 * 5 5
+3 * 5
+6 +1 5
+5 +19 5
+4 -2 5 0 5
+7 +10 5
+3 -8 5
+4 * 5 0 0 1 0 0 1
+4 * 5
+6 * 5
+3 * 5
+5 * 5
+4 +8 5
+3 -8 5
+8 * 5 0 5
+7 * 5 0 5
+7 +8 5
+6 +87 5 5
+3 +8 5 0 5
+7 -8 5
+3 * 5 0 5 1 0 0 1
+7 * 5
+3 * 5 0 5
+11 +8 5
+3 -8 5
+6 * 5 0 5
+6 * 5
+12 -86 16
+6 * 16
+6 * 11
+6 * 11
+6 * 7
+3 * 7
+6 * 5
+7 -1 5
+8 * 5
+3 * 5
+4 * 5
+4 * 5
+3 * 5
+3 * 5
+3 * 5
-28 * 33
+8 * 33
+3 * 33
+4 * 33
+4 * 33
+3 * 33
+3 * 33
+3 * 33
+6 +1 38 38 0 1 0 0 1
+2 * 38
+3 * 38 0 0 1 0 0 1
+6 * 37
+2 * 21
+3 * 21
+2 * 11
+3 * 11
+2 +6 5 5
+4 * 5 0 5
+5 +1 5 5
+4 * 5
+4 * 5 0 5
+9 +1 5
+69 +9 10 10 0 1 0 0 1
+7 * 10 10
+4 * 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+6 +5 10 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10
+6 * 10
+4 +9 10
+3 * 10
+3 * 10
+3 -1 10
+4 * 10
+4 * 10
+4 +1 10 0 10 0 0 4 0 0 4
+3 +1 10 0 0 1 0 0 1
+3 * 10 10
+4 +2 10 10
+4 -2 10
+3 +1 10 0 10 0 0 2 0 0 2
+4 -1 10
+3 +3 10
+3 +4 10
+4 -7 10 0 10
+4 +2 10 0 10
+4 +1 10 0 10 0 0 1 0 0 1
+4 +4 10
+2 +1 5 5
+3 * 5 5
+5 * 5
+5 * 5 5
+7 * 5
+3 * 5 0 5
+7 +4 5 5
+3 * 5
+4 * 5
+5 -14 5
+3 +14 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5
+3 * 5 0 5
+5 +11 5
-35 -11 5 5 0 1 0 0 1
+3 * 5
+4 * 5
+5 -14 5
+3 +14 5
+4 * 5
+3 * 5
+3 * 5
+2 * 5
+3 * 5 0 5
+5 +11 5
+6 -44 1 1
+4 * 1 0 1
+8 +1 1
+12 +46 2 2 0 1 0 0 1
+4 * 2
+3 * 2
+6 +4 2 0 2 0 0 2 0 0 2
+8 +1 2 2
+4 +1 2
+3 -1 2 0 2
+8 * 2 2
+4 +1 2
+2 +3 2
+4 * 2
+3 * 2 0 2 1 0 0 1
+8 +1 2 2
+4 +3 2 0 2
+8 -3 2 0 2
+8 +7 2 2
+9 * 2
+3 * 2
+3 * 2
+6 +6 2 0 2 0 0 1 0 0 1
cfi=(31)
cfn=(148) _dl_next_tls_modid
calls=2 0x13160 49 
* * 16 6 2 2 0 0 2
+5 * 2 0 2
+8 * 2 2
+9 +1 2
+8 +59 4 4
+4 * 4 0 4 0 0 1 0 0 1
+8 +1 4 4
+4 * 4 0 4
+8 * 4 4
+9 +1 4
+7 -6 5 5 0 1 0 0 1
+3 * 5 0 5
+7 +1 5
+6 +8 5 0 0 1 0 0 1
+3 * 5 5
+7 * 5
+6 1019 5 5
+7 1207 5
+3 1019 5 0 5
+6 1207 5
+6 +10 5 5
+7 * 5 5
+7 * 5
fi=(38) /build/glibc-bfm8X4/glibc-2.23/elf/./dl-map-segments.h
+5 56 5 5
+7 * 5 0 0 1 0 0 1
fe=(22)
+5 1217 5
+4 * 5 5
+8 * 5 5
fi=(38)
+5 56 5 5
fe=(22)
+7 1217 5
fi=(38)
+3 56 5 0 5
fe=(22)
+7 1217 5
+3 * 5 0 5
fi=(38)
+7 56 5
+3 * 5
+3 * 5 5
+7 * 5 5 0 1 0 0 1
+8 * 5
+2 * 5 0 5
cfi=(26) /build/glibc-bfm8X4/glibc-2.23/misc/../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
cfn=(72) mmap
calls=5 0x1b440 -23 
* * 175 40 30 0 0 2 0 0 2
+5 +4 5
+4 -4 5 0 5
+8 +4 5 5
+7 * 5
+6 +3 5 5
+7 * 5
+4 +1 5
+3 +2 5 5
+7 -2 5 0 5
+4 -1 5 0 5 1 0 0 1
+8 +3 5
+6 +10 5 0 5
+9 * 5 5
fi=(40) /build/glibc-bfm8X4/glibc-2.23/elf/./dl-load.h
+7 +14 5
+3 * 5
-3 * 5
+3 * 5
+2 +1 5 5
+4 * 5 5
+4 * 5 0 5
+8 +2 5 5 0 0 1 0 0 1
+9 * 5 0 0 1 0 0 1
-9 * 5 5
+9 * 5
fi=(38)
+6 +7 10 10
+4 * 10 10
+4 * 10
+3 * 10
+2 +6 5 5
+4 +2 5 5
+7 -2 5
+3 +1 5
+3 +2 5
+3 -1 5
+5 +1 5
+3 -1 5
+3 * 5
+3 * 5
+4 +8 5
+3 * 5
+6 +17 5
+3 * 5
+6 +12 10 0 0 1 0 0 1
+4 -59 10
+4 * 10
+4 * 10 10
+7 * 10
+3 * 10
+6 +2 5 5
+4 * 5 5
+3 +2 5 5
+4 -2 5
+3 * 5
+6 +2 5
+3 * 5 5
+4 * 5 5 0 1 0 0 1
+7 * 5
+3 * 5 5
+4 * 5
+5 * 5
+2 * 5 0 5
+7 * 5
+3 * 5 0 5
cfi=(26)
cfn=(72)
calls=5 0x1b440 -57 
* * 155 35 30
+5 * 5
+4 * 5 5
+7 * 5
fe=(22)
0x6b5e 1229 5 5 0 1 0 0 1
+5 * 5 5
+7 * 5
+3 * 5
+6 +9 5 5
+4 * 5
fi=(3)
+3 39 5
fe=(22)
+3 1238 5 0 5 1 0 0 1
fi=(3)
+5 39 5
+6 +6 5 5 0 0 5 0 0 5
+3 -2 5
+5 +2 5
+3 * 5
+6 +15 5
+5 +5 5
+6 +3 5
+6 -1 5
+10 -3 5
+6 -3 5
+6 * 5 0 0 1 0 0 1
+8 * 26
+3 * 26
+3 * 26
+3 * 26 0 26 0 0 12 0 0 12
+4 +10 26
+4 -26 26 26 0 0 7 0 0 7
+3 * 26
+3 * 26
-14 +16 98 0 98 0 0 19 0 0 19
+4 +10 98
+4 -26 98 98 0 0 24 0 0 24
+3 * 98
+3 * 98
-10 +26 5
+4 -26 5 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+2 +2 129
+4 * 129
+2 +13 31
+3 * 31
+3 * 31
+4 * 31
+2 +2 5
+3 * 5
+2 * 5
+3 * 5
+13 +3 5 0 0 1 0 0 1
+3 * 5
+3 * 5
+4 * 5
+19 +13 5
+3 * 5
+2 +20 5 5
+5 * 5
+3 * 5
+2 * 2 0 2
+4 +1 2 2
+5 * 2
+3 * 2
-8 * 3 3
+5 * 3
+3 * 3 0 0 1 0 0 1
+2 * 5 0 5
+4 +1 5 5
+5 * 5
+3 * 5
+2 * 5 0 5
+4 +1 5 5
+5 * 5
+3 * 5
+2 * 5 0 5
+4 +2 5 5
+5 * 5
+3 * 5
+2 * 5 0 5
+4 +5 5 5
+8 * 5
+3 * 5
+2 * 5 0 5 1 0 0 1
+4 +1 5 5 0 0 1 0 0 1
+8 * 5
+3 * 5
+2 * 4 0 4
+4 +1 4 4
+8 * 4
+3 * 4
-11 * 1 1
+8 * 1
+3 * 1
+2 * 5 0 5
+4 +6 5 5
+8 * 5
+3 * 5
+2 +5 5 5
+5 * 5
+6 +7 5 5 0 1 0 0 1
+6 * 5
+2 +1 5 5
+8 * 5 5
+5 * 5
+6 +16 5 5
+8 * 5
+3 * 5
+2 +5 2 2
+4 +2 2
+2 -2 2 0 2 0 0 1 0 0 1
+8 +2 2
+10 +2 2
+2 * 2
+10 +2 2
+2 * 2
+6 +3 5 5 0 1 0 0 1
+8 * 5
+3 * 5
+6 +10 1 1
+7 -8 1 1
+4 * 1
+2 * 1 0 1
+8 * 1
+2 +8 1
+6 +5 1
+3 * 1 0 0 1 0 0 1
+6 +3 5 5
+9 * 5
fe=(22)
+14 1245 5
+3 * 5
0x6dd0 +15 5 5 0 1 0 0 1
+8 * 5
+3 * 5
+6 +19 5 5
+4 * 5 0 5
+8 +2 5 5
+6 * 5
+2 * 5 5
+7 * 5
+2 * 5 0 0 1 0 0 1
+6 +54 5 5 0 0 3 0 0 3
+8 * 5
+3 * 5
+2 +1 2 2
+4 * 2 0 2
+8 +3 2 2
+6 * 2 0 2
cfi=(24)
cfn=(132) close
calls=2 0x1b420 84 
* * 10 2
-6 * 3 3
+6 * 3 0 3
cfi=(24)
cfn=(132)
calls=3 0x1b420 84 
* * 15 3 0 1 0 0 1
+5 * 5
+2 * 5
+6 +9 5 5
+7 * 5
+6 +2 5 5 0 1 0 0 1
+4 * 5
+3 * 5 5
+8 +2 5 5
+7 -2 5 0 5
+8 +2 5
+6 +16 5
+3 * 5 0 5
cfi=(6)
cfn=(10)
calls=5 0xba50 956 
* * 115 35 30 0 7 0 0 7
+5 +4 5 5
+4 * 5
+2 +1 5 5
+9 * 5
+98 +17 5 5 0 1 0 0 1
+9 * 5
+6 +9 5 5
+8 -5 5 5
+7 * 5 0 5
+8 * 5 0 5 1 0 0 1
+8 +5 5
+6 +10 5 5
+8 * 5
+6 +10 5 5
+4 * 5
+3 * 5 0 5
cfi=(15)
cfn=(48)
calls=5 0xbb00 32 
* * 235 65 55
+5 +4 5 5
+6 * 5
+3 * 5
+2 * 5
fi=(3)
0x7104 68 5
+3 * 5
+3 * 5
+4 * 5
+6 +2 5
+3 * 5
+10 * 5
+4 * 5 0 5 0 0 1 0 0 1
+4 * 5
fe=(22)
+5 1391 1 0 1
+7 * 1
fi=(38)
+5 119 5 0 0 1 0 0 1
+3 * 5 0 0 1 0 0 1
+6 +8 5
+3 * 5
+2 * 5
+3 * 5
+3 * 5 0 5
+7 * 5 0 5
+7 * 5 0 5
+7 * 5 0 5
cfi=(27)
cfn=(74)
calls=5 0x1dc00 -74 
* * 512 5 264 1 0 65 1 0 65
+5 * 5 5
+7 * 5 5
+7 * 5 5
+7 * 5 0 0 1 0 0 1
0x7230 -54 5 5 0 1 0 0 1
+7 * 5
+4 * 5
+4 * 5 5 0 1 0 0 1
+8 -1 5 5
+7 * 5 5
+5 * 5
+4 * 5
+3 * 5
+2 * 5 0 5
cfi=(39)
cfn=(126)
calls=5 0x1b510 +12 
* * 25 5 0 1 0 0 1
+5 * 5
fi=(40)
+35 +22 4 4 0 1 0 0 1
+7 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+6 +1 4 4
+4 * 4
+3 * 4 4
+4 * 4 4
+3 * 4
+8 * 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4
+6 +3 4
+4 * 4
+3 * 4 0 4
+8 * 4
fi=(38)
+57 +39 2 0 0 1 0 0 1
+3 * 2
+3 * 2
+6 * 2
+3 * 2
+5 * 2
+2 * 2
+3 * 2 0 2
+7 * 2 0 2
cfi=(26)
cfn=(72)
calls=2 0x1b440 33 
* * 62 14 12
+5 +3 2
+4 * 2 2
+7 * 2 0 0 1 0 0 1
fe=(22)
0x73f8 1233 4 4 0 1 0 0 1
+8 * 4 0 0 1 0 0 1

fn=(64)
0x84c0 661 1 0 1 1 0 0 1
+1 +13 1
+7 * 1
+7 -13 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1
+3 * 1
+4 +13 1 1
+7 * 1 1
+7 * 1 0 1
cfi=(23) /build/glibc-bfm8X4/glibc-2.23/elf/dl-hwcaps.c
cfn=(66) _dl_important_hwcaps
calls=1 0xf1c0 39 
* * 398 67 62 23 2 5 23 2 5
+5 +5 1
+5 -5 1 0 1 1 0 0 1
+7 +5 1 0 1
cfi=(17)
cfn=(40)
calls=1 0x19f00 94 
* * 29 6 5
* * 1 1
+5 +1 1
+3 -2 1 0 1
+7 +2 1
+6 * 1
+3 +8 1 1
+7 -1 1
+10 +1 1 0 1
+4 * 1
+4 -1 1
+4 +1 1 0 1
+4 -1 1
+3 * 1
+3 * 1 0 0 1 0 0 1
+4 +5 1
+7 -5 1
+3 +5 1 0 1
cfi=(17)
cfn=(40)
calls=1 0x19f00 94 
* * 80 16 13 2 0 0 2
* * 1 1
+5 +2 1
+3 -3 1 0 1
+3 +3 1
+6 +17 1
+7 +12 1
+4 -9 1
+7 * 1
+4 +6 1 1
+5 -19 1 0 1 1 0 0 1
+7 +10 1 0 1 0 0 1 0 0 1
+4 +12 1
+8 -11 1 0 1
+8 +2 1 0 1
+4 +1 1 0 1
+8 * 1
+3 * 1
+5 * 1
+4 -15 1 0 1
+10 +23 1 0 1
+4 * 1 0 0 1 0 0 1
+7 * 1
+7 * 1 0 1
+4 -3 1
+2 * 4 4
+4 * 4
+2 * 4
+3 * 4 0 4
+4 * 4 0 4
cfi=(27)
cfn=(74)
calls=4 0x1dc00 53 
* * 60 4 8 2 0 1 2 0 1
+5 * 4 4
+4 +3 4
+7 * 4
+3 * 4
+2 * 3
+4 * 3 3
+4 * 3
+4 * 3 0 0 1 0 0 1
+4 * 3 0 3
+4 -14 3 0 3
+3 +2 3
+7 +1 3 0 3 0 0 2 0 0 2
+8 +2 3 0 3
+4 * 3
+3 -3 3 0 3
+3 +4 3 3 0 0 1 0 0 1
+4 * 3 0 3 0 0 1 0 0 1
+4 * 3
+3 +4 3 3 0 0 1 0 0 1
+4 -3 3
+5 +3 3
+6 +1 3 3
+5 -4 3 0 0 1 0 0 1
+3 * 3
+4 * 3 0 3
+4 +4 3
+21 +10 1 0 1
+8 +4 1 1
+7 -11 1 1
+4 +6 1 0 1 0 0 1 0 0 1
+11 +6 1 0 0 1 0 0 1
+3 -12 1 0 1
+7 +12 1
+2 +2 1 1
+8 * 1
+3 * 1
+2 * 1
+6 +2 1 1
+7 * 1
+3 * 1
+62 +38 1 0 0 1 0 0 1
+3 * 1
+6 * 1 1
+4 * 1
+3 * 1
+6 +8 1
+5 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(28)
cfn=(76)
calls=1 0x1b8e0 24 
* * 168 47 0 7 4 0 7 4
+5 * 1
+3 * 1
+6 +2 1
+3 * 1 0 1
cfi=(11)
cfn=(22)
calls=1 0x1cf90 66 
* * 96 29 0 3 0 0 3
+5 * 1
+4 * 1
+4 * 1
+3 * 1
+4 * 1
+3 * 1
+5 * 1
+4 * 1 0 1 0 0 1 0 0 1
cfi=(18)
cfn=(46)
calls=1 0x1df20 61 
* * 155 41 40 3 0 0 3
+5 * 1
+3 +4 1 0 0 1 0 0 1
+5 * 1
+7 * 1
+4 * 1
+2 * 1
+4 * 1
+3 +17 1
+4 -4 1 1
+4 * 1
+3 * 1
+3 * 1
-27 -13 297
+4 * 297
+2 * 297
+4 * 297
+3 +17 297
+4 -4 297 297
+4 * 297
+3 * 297
+3 * 297
+2 * 1
+8 +8 1 0 1
cfi=(17)
cfn=(40)
calls=1 0x19f00 94 
* * 29 6 5 0 0 1 0 0 1
* * 1 1
+5 +1 1
+3 -2 1 0 1
+7 +2 1 0 0 1 0 0 1
+6 +6 1
+4 * 1 1
+6 * 1
+7 * 1 0 1
+2 * 1
+7 * 1
+3 * 1
+3 * 1
+3 * 1 0 1
cfn=(78) fillin_rpath
calls=1 0x7d30 433 
* * 12090 2911 790 21 4 24 21 4 24
+5 +4 1 1
+7 * 1 1
+1 * 1 1
+1 * 1 1
+4 * 1
+6 +6 1 0 1 1 0 0 1
+10 +4 1
+4 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
+43 -75 1 1 0 1 0 0 1
+7 -2 1 0 1
+11 +2 1
+3 * 1
+59 +14 1 0 1 1 0 0 1
+11 * 1

fn=(78)
0x7d30 433 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 * 1
+3 +2 1 0 0 1 0 0 1
+2 -2 1
+4 * 1
+5 * 1 0 1
+5 * 1 0 1
+4 * 1 0 1
+4 * 1 0 1
+5 * 1
+3 * 1 0 1
+5 * 1 0 1
+5 +5 1 0 1 0 0 1 0 0 1
cfi=(17)
cfn=(80) strsep
calls=1 0x1a430 -84 
* * 386 120 2 2 0 0 2
+5 * 1
+3 * 1
+3 * 1
+6 * 1
+5 -66 1 0 0 1 0 0 1
+5 * 1
+3 * 1 0 1
cfi=(28)
cfn=(76)
calls=1 0x1b8e0 24 
* * 47 6
-8 * 17
+5 * 17
+3 * 17 0 17
cfi=(28)
cfn=(76)
calls=17 0x1b8e0 24 
* * 607 78
+5 * 18
+3 * 18
+6 +4 18
+3 * 18 0 18
cfi=(29)
cfn=(82)
calls=18 0x1cf40 40 
* * 1800 300 216 1 0 7 1 0 7
+5 * 18
+3 +68 18
+3 * 18 0 18
cfi=(11)
cfn=(22)
calls=18 0x1cf90 66 
* * 468 66 0 0 4 0 0 4
+5 +4 18
+3 -4 18
+3 +4 18
+6 +15 1 1
+4 * 1
+2 * 1
+2 -12 1
+7 +19 1 1
+7 * 1
+3 * 1
-10 * 17 17 0 1 0 0 1
+7 * 17
+3 * 17
+10 * 185 185
+3 * 185
+3 * 185
+6 +1 187 187
+4 * 187
+2 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(14)
cfn=(30)
calls=10 0x1d6a0 24 
* * 312 38
+5 * 10
+2 * 10
+2 +7 2
+3 * 2
+2 +1 2 2
+4 * 2
+2 * 2
+2 * 2
+6 * 27 27
+4 * 27
+2 -1 27
+4 * 27
+3 * 27
+2 +48 16 0 16 1 0 2 1 0 2
+4 * 16
+4 +2 16
+3 * 16 0 16
cob=(2)
cfi=(16)
cfn=(84) 0x0000000004000ab0
calls=16 0x4000ab0 0 
* * 112 64 16 1 0 0 1
-3 * 2
+3 * 2 0 2
cob=(2)
cfi=(16)
cfn=(84)
calls=2 0x4000ab0 0 
* * 54 12 10
+5 * 18 18
+4 * 18 18
+5 -90 18 0 18
cfi=(17)
cfn=(80)
calls=18 0x1a430 -84 
* * 4436 1377 33
+5 * 18
+3 * 18
+3 * 18
+6 +94 1 0 1
+8 +3 1
+4 * 1
+3 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+6 -46 16 16 0 1 0 0 1
+6 * 16
+25 +4 16 16 0 1 0 0 1
+7 * 16
+8 -1 16
+5 * 16 16
+5 * 16 0 16
+5 * 16 0 16
cfi=(17)
cfn=(40)
calls=16 0x19f00 94 
* * 464 96 80
* * 16 16
+5 +3 16
+3 -3 16
+3 +3 16 16
+5 * 16
+6 +5 16
+4 +1 16 0 0 1 0 0 1
+3 * 16
+3 -2 16 0 16 0 0 3 0 0 3
+4 +2 16 0 16
cfi=(25)
cfn=(70)
calls=16 0x1dcf0 61 
* * 420 61 45 0 0 10 0 0 10
+5 +3 16 16
+7 -3 16 0 16 0 0 1 0 0 1
+3 +1 16 0 16
+4 +2 16
+2 +1 1 0 1
+7 +5 1
+2 * 1 1
+4 +1 1 1
+7 -1 1
+4 * 1
+2 +1 1
+3 * 1
-22 -1 15
+2 * 15 15
+4 +1 15 15
+7 -1 15
+4 * 15
+2 +1 15
+3 * 15 0 0 1 0 0 1
+6 * 16
+4 * 16
+3 * 16
+4 * 16
+3 * 16
+3 * 16
+3 * 16
+4 * 16
+4 * 16
+6 * 16
+3 * 16
+4 +1 16 0 16
+3 * 16
+6 * 16
+4 * 16 0 16
+3 * 16
+6 * 16 0 0 1 0 0 1
+4 * 16 0 16
+3 * 16
+6 * 16
+4 * 16 0 16
+3 * 16
+28 -1 16
+3 * 16
0x7fed +3 16 16 0 1 0 0 1
+5 * 16 0 16
+4 +1 16 16
+5 * 16
+3 * 16
+31 +7 16 16
+7 +1 16 0 16
+7 -1 16 0 16
+3 * 16
+10 -67 17 0 0 1 0 0 1
+4 * 17
+2 * 17 17 0 1 0 0 1
+6 * 17
+4 * 17
+2 * 7
+6 * 10 10
+6 * 10
+4 * 10
+5 * 10
+4 * 10
+45 +8 17 17 0 1 0 0 1
+4 -3 17
+4 * 17 0 17
+5 * 17
+3 +3 17
+2 * 17
+62 +26 16 0 16 1 0 0 1
+9 * 16
0x81a1 -34 7 0 0 1 0 0 1
+3 * 7
+48 +65 16 0 16
+8 * 16
+16 -9 16 0 0 1 0 0 1
+6 * 16

fn=(106)
0x89e0 2167 13 0 13 1 0 0 1
+2 * 13 0 13 0 0 1 0 0 1
+2 * 13 0 13
+2 * 13 0 13 0 0 1 0 0 1
+2 * 13 0 13
+1 * 13 0 13 0 0 1 0 0 1
+1 * 13
+7 +8 13
+3 -8 13 0 13 0 0 2 0 0 2
+4 * 13 0 13
+4 +8 13 0 0 1 0 0 1
+6 +1 13 13
+7 * 13
+3 * 13
+7 * 13
+6 +3 13
+4 * 13
+3 * 13
+3 * 13
+3 * 13
+4 * 13 13
+4 * 13
+3 * 13
+15 * 50 50
+4 * 50
+3 * 50
+6 +5 58 58 0 1 0 0 1
+8 * 58
+2 * 58
+3 * 58
+2 * 58
+2 * 58
+2 * 58
+2 +2 58
+3 * 58
+3 * 58 0 58 0 0 2 0 0 2
cfi=(35)
cfn=(108)
calls=58 0x11980 288 
* * 6089 1284 245 25 1 0 25 1
+5 * 58
+2 * 58
+6 +4 50 50
+8 * 50
+2 +1 50 50 0 1 0 0 1
+7 * 50
+3 * 50
+2 +3 28 28
+4 +2 28 28
+4 * 28
+3 * 28 28
+4 * 28 0 28
cfi=(19)
cfn=(54)
calls=28 0x1bb00 144 
* * 692 195 0 0 3 0 0 3
+5 * 28
+2 * 28
+66 2478 13
+7 * 13 13
+1 * 13 13
+1 * 13 13
+2 * 13 13
+2 * 13 13
+2 * 13 13
+2 * 13 13
+4 2213 5 0 0 1 0 0 1
+3 * 5 0 5
+5 * 5 5 0 1 0 0 1
+7 * 5 5
+5 * 5
+63 +9 5 5 0 1 0 0 1
+6 -53 5 0 5
+9 +53 5
+2 * 5
+6 +36 5
+5 * 5
+3 -2 5 0 5 0 0 2 0 0 2
+5 +2 5 0 5
cfi=(28)
cfn=(76)
calls=5 0x1b8e0 24 
* * 115 15
+5 * 5
+3 * 5
+6 2409 1
+3 * 1 0 0 1 0 0 1
+6 372 1
+5 * 1
+3 * 1 0 1
cfi=(28)
cfn=(76)
calls=1 0x1b8e0 24 
* * 47 6
+5 * 1
+3 * 1
+6 +4 1
+3 * 1 0 1
cfi=(29)
cfn=(82)
calls=1 0x1cf40 40 
* * 128 22 16 0 0 1 0 0 1
+5 2410 1
+3 -3 1 0 1
+5 +3 1
+6 * 1
+3 +4 1
+5 * 1
+4 * 1
+2 * 1 0 1 1 0 0 1
+2 * 1
+3 * 1
+3 * 1
+3 * 1
+5 * 1 0 1
cfn=(110) open_verify.constprop.7
calls=1 0x5710 1695 
* * 299 61 20 14 9 1 14 9 1
+5 +3 1
+3 -3 1
+2 +3 1 1
+1 * 1 1
+1 * 1
+6 +12 1
+7 * 1
+5 * 1
+4 +46 1 1
+7 +1 1
+3 * 1
+3 * 1 0 0 1 0 0 1
+3 -1 1 0 1
+5 +1 1 0 1
+1 * 1
+5 * 1 0 1
+1 * 1 0 1
+2 * 1 1
+4 * 1 0 1
+1 * 1 1
+8 * 1 1
+5 * 1 0 1
cfn=(116)
calls=1 0x6330 871 
* * 1495 316 195 54 11 26 54 11 26
-48 -1 4 4
+7 +1 4
+3 * 4
+3 * 4
+3 -1 4 0 4
+5 +1 4 0 4
+1 * 4
+5 * 4 0 4
+1 * 4 0 4
+2 * 4 4
+4 * 4 0 4
+1 * 4 4
+8 * 4 4
+5 * 4 0 4
cfn=(116)
calls=4 0x6330 871 
* * 6392 1237 1049 9 45 130 9 45 130
+5 * 5
+4 * 5
+5 * 8
+3 * 8
0x8d2f 2262 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(11)
cfn=(22)
calls=4 0x1cf90 66 
* * 64 8
+5 * 4
+4 +2 4 4 0 1 0 0 1
+7 -2 4 0 4
+5 +2 4
+6 +7 4
+3 * 4
+6 * 4 4
+9 * 4
+6 +35 4 4
+8 * 4
+6 +1 4
+3 * 4
+6 * 4
+4 * 4 0 0 1 0 0 1
+7 * 4
+3 * 4
+5 * 4
+3 * 4 0 4
+1 * 4 0 4
+2 * 4 0 4
+2 * 4 4
+5 * 4
+8 * 4
+8 * 4 0 4
cfn=(138) open_path
calls=4 0x5cd0 2018 
* * 34635 8501 5189 17 0 8 17 0 8
+5 +6 4
+4 * 4
+3 -6 4
+2 +6 4
+2 * 4 4 0 1 0 0 1
+5 * 4
+2 638 4 4
+8 2314 4
+8 638 4
+4 * 4
+79 2401 4 4 0 1 0 0 1
+7 * 4
+6 +28 4
+7 * 4
+5 * 4 0 0 1 0 0 1
+4 +2 4
+3 * 4
+6 * 4
+5 * 4
0x8eb9 2275 4 4 0 1 0 0 1
+7 +5 4 0 0 1 0 0 1
+3 -5 4 0 4
+5 +5 4
+6 +3 4
+5 * 4 0 4
+5 -3 4 0 4
+5 +3 4
+3 * 4 0 4
+5 * 4
+5 * 4 0 4
+5 * 4
+5 * 4
+3 * 4
+73 -3 4 4
+7 * 4
+3 * 4
+6 638 4 4 0 1 0 0 1
+7 2281 4
+7 638 4
+4 * 4
0x913f 2336 4 0 0 1 0 0 1
+7 -14 4 0 4
+9 +14 4
+6 +2 4 4
+7 * 4
+3 * 4
+2 +4 4
+3 * 4 0 4
cfi=(43)
cfn=(142)
calls=4 0x18280 185 
* * 6009 977 283 23 70 2 23 70 2
+5 +2 4
+3 -2 4 0 4
+5 +2 4
+2 +4 4
+3 * 4
+6 +8 4 4 0 1 0 0 1
+9 * 4
+6 * 4
+3 +23 4
+5 * 4
+4 * 4
+3 * 4 0 4
+2 * 4
+5 * 4
+3 * 4 4
+5 * 4
+5 * 4
+3 * 4 0 4
cfn=(110)
calls=4 0x5710 1695 
* * 1361 260 85 2 9 0 2 9
+5 +4 4
+3 -4 4
+2 +4 4 4
+1 * 4 4
+2 * 4
+2 +1 4 0 4 1 0 0 1
+5 * 4
0x9253 -89 4 4 0 1 0 0 1
+5 * 4 4
+5 * 4
+6 +1 4 4
+5 * 4
+3 * 4
+6 * 4 4
+7 * 4 0 4
+4 * 4
+3 * 4 0 0 1 0 0 1
+2 * 4
+6 638 4 4
+7 2297 4
+7 638 4
+4 * 4

fn=(138)
0x5cd0 2018 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4 0 0 1 0 0 1
+2 * 4 0 4
+2 * 4 0 4
+1 * 4
+7 +1 4 4
+3 +6 4
+3 -6 4 0 4 0 0 1 0 0 1
+7 +6 4
+6 +5 4 4
+7 * 4 4 0 1 0 0 1
+7 * 4 0 4
+7 * 4 0 4
+7 * 4 0 4
+7 * 4 0 4 0 0 1 0 0 1
+7 * 4 0 4
+6 * 4 0 4 0 0 1 0 0 1
+7 * 4
+5 +52 4
+3 -59 4 0 4
+10 -1 4 0 4 1 0 0 1
+11 +60 4 0 4
+7 -52 4
+4 * 4
+3 * 4
+5 * 4
+4 * 4
+3 * 4
+2 * 4
+5 * 4 0 4
+6 +74 4
+7 * 4 0 4
+7 * 4 4 0 1 0 0 1
+7 * 4
+9 -62 4 4
+7 -9 4 4
+3 +9 4
-10 * 60 60
+7 -9 60 60
+3 +9 60
+6 +7 64 64
+4 * 64 64
+4 * 64
+3 * 64 0 64 0 0 1 0 0 1
cfi=(25)
cfn=(70)
calls=64 0x1dcf0 61 
* * 1680 244 180 0 0 1 0 0 1
+5 +1 64 64
+7 -1 64 0 64
+7 +1 64 0 0 1 0 0 1
+3 * 64
+6 * 64
+6 * 64
+3 * 64
+8 +20 12
+3 * 12
+58 -20 214 214
+7 * 214
+3 * 214
+4 * 214
-7 * 42
+3 * 42
+4 * 42
+6 * 192
+3 +3 192 192
+6 * 192
-6 * 64 64 0 1 0 0 1
+6 * 64
+2 +5 226 226
+7 * 226
+3 -1 226 226 0 1 0 0 1
+7 +1 226
+4 * 226
+5 -1 226 226
+4 * 226 226
+3 * 226 0 226
cfi=(25)
cfn=(70)
calls=226 0x1dcf0 61 
* * 4759 611 385
+5 * 226 226
+7 * 226 226
+7 * 226
+3 * 226 0 226
cfi=(25)
cfn=(70)
calls=226 0x1dcf0 61 
* * 5926 860 634
+5 -1 226
+3 +7 226 226
+7 -7 226
+3 +7 226 0 0 1 0 0 1
+6 +3 226
+4 * 226 226
+7 * 226 226
+4 * 226 0 226
+2 * 226 226
+4 * 226
+3 * 226 226
+3 * 226 226
+7 * 226 0 226
cfn=(110)
calls=226 0x5710 1695 
* * 9944 2260 2712 1 0 2 1 0 2
+5 * 226
+2 +2 226 226
+5 * 226 226
+1 * 226 226
+2 * 226
+2 * 226
+6 +26 214
+3 * 214 0 0 1 0 0 1
+3 * 214
+3 * 214
+3 +2 214
+3 * 214
0x5f38 +39 64 0 0 1 0 0 1
+3 * 64
+2 * 60 60 0 1 0 0 1
+6 * 60
+3 * 60
+2 * 60
+3 * 60
+2 +7 64 0 64
+8 -2 64 0 64
+7 +2 64 64
+7 * 64 64
+4 * 64
+6 +3 4 4
+6 * 4
+2 * 4
+6 +14 4
+4 -27 4
+5 +27 4 4
+1 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+1 * 4 4
+2 -84 12 12 0 1 0 0 1
+5 * 12
+2 +1 12 12
+4 * 12
+7 * 12 12
+4 * 12
+4 * 12
+4 * 12 12
+4 * 12
+5 * 12 12
+7 * 12
+2 +6 12 12 0 1 0 0 1
+7 +2 12 12
+7 -2 12
+3 +2 12
+3 * 12
+5 -2 12 0 12
+5 +2 12 0 12
cfi=(42) /build/glibc-bfm8X4/glibc-2.23/io/../sysdeps/unix/sysv/linux/wordsize-64/xstat.c
cfn=(140) _xstat
calls=12 0x1b260 34 
* * 150 12 10 1 0 0 1
+5 * 12
+2 * 12
+2 +1 2 2
+6 +2 2
+2 -2 2
+5 +2 2
+5 * 2
+3 * 2
+3 * 2
+5 * 2
+3 * 2
+3 * 2 0 2
+5 +7 2
+3 * 2 2
+7 * 2
-15 -7 10 0 10 1 0 0 1
+5 +7 10
+3 * 10 10
+7 * 10
+39 -30 10 0 0 1 0 0 1
+2 +23 10
+5 * 10

fn=(110)
0x5710 1695 231 0 231 1 0 0 1
+1 * 231
+3 * 231 0 231
+2 * 231 0 231
+2 * 231 0 231
+2 * 231 0 231
+2 * 231
+3 * 231 0 231 0 0 2 0 0 2
+1 * 231
+3 * 231
+4 * 231 231
+3 +39 231
+2 -39 231 0 231 0 0 1 0 0 1
+4 * 231 0 231
+4 * 231 0 231
+3 +39 231 231
+6 * 231
+2 * 230
+2 * 230
+23 +31 231 0 0 1 0 0 1
+2 * 231
+5 * 231
+3 * 231 0 231
cfi=(24)
cfn=(112) open
calls=231 0x1b320 84 
* * 2059 231 226 1 0 0 1
+5 +2 231
+3 -2 231 0 231
+3 +2 231
+6 * 5
+4 +10 5 0 5 1 0 0 1
+10 +1 5
+3 * 5 0 5
+7 +5 5
+6 * 5 0 5
+4 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+3 * 5
+4 * 5 0 5
cfi=(24)
cfn=(114) read
calls=5 0x1b340 84 
* * 25 5 0 1 0 0 1
+5 +2 5
+3 * 5
+6 +2 5 5
+3 +2 5
+4 -2 5
+3 * 5 0 5 1 0 0 1
+3 +2 5
+2 +6 5
+4 * 5
+6 +16 5 5
+4 * 5
+7 * 5
+5 * 5 0 5
cfi=(14)
cfn=(30)
calls=5 0x1d6a0 24 
* * 147 15 0 0 1 0 0 1
+5 * 5
+2 * 5
+6 * 5 5 0 0 2 0 0 2
+4 * 5
+2 * 5
+6 * 5
+4 * 5 0 0 1 0 0 1
+7 * 5
+5 * 5 0 5
cfi=(14)
cfn=(30)
calls=5 0x1d6a0 24 
* * 180 35
+5 * 5
+2 * 5
+6 +74 5 5
+4 * 5
+6 +5 5 5
+5 * 5
+6 +2 5 5
+4 * 5
+3 * 5
+4 * 5
+6 +6 5
+4 * 5 0 0 1 0 0 1
+6 +11 5 5
+5 * 5
+6 +6 5 5
+4 +1 5 5
+4 -1 5
+8 * 5
+3 * 5
+4 * 5
+3 +1 5
+4 -1 5
+3 +1 5
+3 * 5
+6 +1 5 5
+4 * 5 0 5
+4 * 5 0 0 1 0 0 1
+3 +20 5
+3 * 5
+3 * 5
+6 * 5
+3 * 5
+6 * 29
+8 * 29
+3 * 29
+4 * 29
+4 * 29
+3 * 29 29
+4 * 29
+3 * 29
+6 +2 31 31 0 0 10 0 0 10
+5 * 31 0 0 1 0 0 1
+2 * 5 5 0 0 2 0 0 2
+4 * 5
+4 * 5
+2 * 5 5
+5 * 5
+2 +4 5 5
+4 * 5
+4 * 5 5
+3 * 5
+6 +1 5 5
+4 * 5
+4 * 5
+4 +12 5 5
+3 * 5 5
+4 * 5
+4 * 5
+4 * 5
+4 * 5
+4 * 5
+5 +4 5
+5 * 5
+3 * 5
+6 +5 2
+3 +1 2
+3 -13 2
+7 * 2
+5 * 2
+3 * 2 0 2
cfi=(14)
cfn=(30)
calls=2 0x1d6a0 24 
* * 50 6
-15 * 5 0 0 1 0 0 1
+7 * 5
+5 * 5
+3 * 5 0 5
cfi=(14)
cfn=(30)
calls=5 0x1d6a0 24 
* * 150 25 0 0 2 0 0 2
+5 * 7
+2 * 7
+2 +16 2
+3 * 2
+6 +3 2 2
+5 * 2 2
+5 * 2
+3 * 2
+2 * 2 2
+5 * 2
+3 * 2
+2 +3 2 2
+4 * 2
+2 * 2
+6 +1 2 2
+6 * 2
+2 * 2
+2 * 2
+2 * 2
+6 -39 5 5 0 1 0 0 1
+3 +67 5
+4 * 5 5
+1 * 5 5 0 1 0 0 1
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+1 * 5 5
0x5a09 * 226 0 0 1 0 0 1
+4 -23 226
+5 +23 226 226
+1 * 226 226
+2 * 226 226
+2 * 226 226
+2 * 226 226
+2 * 226 226
+1 * 226 226
0x5ac8 1804 3 3 0 1 0 0 1
+4 * 3
0x5b78 +7 3 3 0 1 0 0 1
+4 * 3 0 0 1 0 0 1
+7 * 3
+5 * 3 0 3
cfi=(14)
cfn=(30)
calls=3 0x1d6a0 24 
* * 72 9 0 0 1 0 0 1
+5 * 3
+2 * 3

fl=(33)
fn=(98)
0x104f0 163 13 0 13 1 0 0 1
+1 * 13
+7 +15 13
+5 -3 13 0 13 1 0 2 1 0 2
+5 * 13 0 13 0 0 2 0 0 2
+5 +1 13 0 13
+5 * 13 0 13
+5 -13 13 0 13
+5 * 13 0 13
+5 +14 13 0 13
+5 * 13 0 13
+5 +1 13 0 13
+5 +2 13 13 13
cfi=(2)
cfn=(100)
calls=13 0xc80 664 
* * 26 13
+6 +2 13
+5 -1 13 13
+3 +4 13
+2 -3 13 0 13
+5 * 13 0 13 1 0 0 1
+3 +3 13
+5 -4 13 0 13
+5 +4 13 0 13
cfi=(34) /build/glibc-bfm8X4/glibc-2.23/setjmp/../sysdeps/x86_64/setjmp.S
cfn=(102) __sigsetjmp
calls=13 0x1b5d0 26 
* * 260 65 104 2 0 1 2 0 1
+5 * 13
+2 * 13
+2 * 13
+2 +2 13 13
+5 * 13 13
+5 * 13 0 13
cfi=(41)
cfn=(136)
calls=12 0xdb70 60 
* * 57473 13013 7169 88 128 147 88 128 147
cfi=(2)
cfn=(104)
calls=1 0xe90 496 
* * 2423 496 269 83 20 32 83 20 32
+3 +1 13 13
+5 * 13 13
+5 +2 13 13
+5 +1 13 13
+5 -3 13 0 13
+3 +1 13 13
+5 * 13 0 13 1 0 0 1
+7 +1 13 0 13
+7 +9 13
+2 -8 13 0 13
+3 +8 13
+7 * 13 13
+1 * 13 13

fn=(150)
0x105c0 205 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 * 1
+3 * 1
+4 +1 1 1 1
cfi=(2)
cfn=(100)
calls=1 0xc80 664 
* * 2 1
+6 +5 1 1
+7 -1 1 1
+3 -4 1
+3 +9 1 0 1
+7 +2 1
+3 -3 1 0 1
+7 +3 1 0 1
cfi=(2)
cfn=(152)
calls=1 0x1970 529 
* * 16438 4646 1196 31 82 48 30 78 46
+3 +2 1 0 1 1 0 0 1
+3 +1 1 0 1
+7 +1 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1

fl=(44)
fn=(158) match_symbol
0x11a70 76 31 0 31 1 0 0 1
+1 * 31
+3 * 31 0 31
+2 * 31 0 31
+2 * 31 0 31
+2 * 31 0 31
+2 * 31
+3 * 31 0 31
+1 * 31 0 0 1 0 0 1
+3 * 31
+3 * 31
+4 +9 31 31
+7 -8 31 31
+4 -1 31 0 31
+7 * 31 0 31
+7 +1 31 31
+4 +8 31
+6 +6 31 31
+8 * 31
+3 * 31
+6 +15 31 31 0 1 1 0 1
+4 +1 31
+3 * 31
+6 +2 31 31
+4 +5 31 31 0 0 5 0 0 5
+4 * 31
+2 +14 314 314 0 0 7 0 0 7
+4 * 314
+6 +12 283 283 0 0 9 0 0 9
+3 * 283
+2 * 283
+6 +4 283
+3 -30 283 283 0 0 24 0 0 24
+4 * 283
0x11bc0 +19 31 31 0 1 1 0 1 1
+3 * 31
+3 * 31 31 0 0 1
+3 * 31
+3 * 31 0 31
cfi=(19)
cfn=(54)
calls=31 0x1bb00 +11 
* * 1236 237 0 9 16 0 9 16
+5 * 31
+2 * 31
+6 +35 31
+4 * 31 31
+1 * 31 31
+2 * 31 31
+2 * 31 31
+2 * 31 31
+2 * 31 31
+1 * 31 31

fn=(156) _dl_check_map_versions
0x11e20 189 7 7 0 1 0 0 1
+4 * 7
+3 * 7
+6 -15 7 0 7
+1 * 7
+3 * 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+2 * 7 0 7
+2 * 7
+3 * 7 0 7
+1 * 7 0 0 1 0 0 1
+4 +17 7 7 0 0 1
+4 +3 7 7 0 0 1
+7 * 7 0 7
+3 * 7 0 7
+3 -3 7 0 7
+4 +2 7 7
+7 +1 7 0 7
+7 +2 7
+3 -3 7 0 7
+7 +3 7
+6 +3 5 5
+4 * 5 5
+3 +4 5 5 0 0 3 0 0 3
+4 -4 5 0 5 1 0 0 1
+7 +4 5
+6 * 5
+2 * 5
+3 * 5
+7 +17 5 5
+4 56 5 5
+5 * 5
+7 220 5 5
+4 56 5
+4 * 5
+4 * 5 5
+4 * 5
+3 * 5
-35 220 7 7
+4 56 7 7
+5 * 7
+7 220 7 7
+4 56 7
+4 * 7
+4 * 7 7
+4 * 7
+3 * 7
+13 +1 54 54
+4 -1 54
+3 * 54
+6 +2 66 0 0 1 0 0 1
+3 * 66
+3 * 66 0 66
cfi=(35)
cfn=(108)
calls=66 0x11980 288 
* * 6216 1374 267
+5 * 66
+2 * 66
+2 * 12
+3 228 12 12
+3 * 12
+2 * 12
+6 +5 12 12
+7 * 12 12 0 0 4 0 0 4
+4 * 12
+3 * 12 0 0 1 0 0 1
+3 * 12
+3 * 12
+3 * 12
+3 * 12
+4 +19 19
+3 -15 19 19 0 0 1 0 0 1
+5 * 19 19
+4 * 19 19 0 0 4 0 0 4
+4 * 19 19
+4 * 19 19
+4 * 19 19
+3 * 19 19
+4 * 19
+3 * 19 19
+3 * 19
+3 * 19
-37 * 12 12 0 0 1 0 0 1
+5 * 12 12
+4 * 12 12 0 0 2 0 0 2
+4 * 12 12
+4 * 12 12
+4 * 12 12
+3 * 12 12
+4 * 12
+3 * 12 12
+3 * 12
+3 * 12
+2 * 11 11 0 1 0 0 1
+7 * 11
+7 * 11 11
+3 * 11
+3 * 11
+4 * 11
+4 * 11 11
+4 * 11 0 11
+1 * 11 0 11
cfn=(158)
calls=11 0x11a70 76 
* * 2043 683 99 9 38 0 9 38
-9 * 20
+4 * 20 20
+4 * 20 0 20
+1 * 20 0 20
cfn=(158)
calls=20 0x11a70 76 
* * 2790 930 180 4 26 0 4 24
+5 * 31
+3 +7 31 31
+5 * 31 31
+1 * 31 31
+1 * 31
+5 * 31
+3 * 31
+4 +3 31 31
+4 * 31
+2 * 31
+2 +9 12 12 0 1 0 0 1
+7 * 12
+3 * 12
+3 * 12 12
+3 * 12
+2 * 12
+6 +5 7
+3 * 7 0 7
+7 * 7
+3 +1 7
0x1205f +8 5 5 0 1 0 0 1
+8 * 5
+2 +3 5 5
+7 * 5 5
+4 * 5 5
+4 * 5
+8 +10 78
+3 -7 78 78 0 0 1 0 0 1
+4 * 78
+5 * 78
+2 * 78
+3 +3 78 78
+3 * 78
+2 * 78
-19 -3 5 5
+4 * 5
+5 * 5
+2 * 5
+3 +3 5 5
+3 * 5
+2 * 5
+2 +8 6 0 0 1 0 0 1
+2 * 6
+3 * 6
+2 +87 1
+4 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
+1 -81 6
+3 * 6
+5 * 6
+3 * 6 0 6
cfi=(17)
cfn=(36)
calls=6 0x19f10 103 
* * 279 52 38
* * 6 6
+5 +1 6 0 0 1 0 0 1
+3 -2 6 0 6
+8 +2 6
+6 +11 6 6
+8 +2 6 6
+7 -5 6 0 6
+8 +3 6 6
+4 +2 6
+3 -2 6 0 6 0 0 2
+8 +2 6
+2 +3 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+5 +4 5 5
+3 * 5
+3 * 5
-6 * 7 7
+3 * 7
+3 * 7
+2 +18 19
+3 -15 19 19
+4 * 19
+2 * 19
+5 +2 19
+4 * 19
+3 * 19
-18 -2 12 12
+4 * 12
+2 * 12
+5 +2 12
+4 * 12
+3 * 12
+2 +2 31
+3 +1 31
+5 -1 31 31
+3 * 31
+4 +1 31
+3 -1 31
+4 +1 31 0 31 0 0 12 0 0 12
+3 +1 31 31 0 1 0 0 1
+3 -2 31 0 31
+4 +2 31
+3 * 31 0 31 0 0 2 0 0 2
+3 +1 31 31
+3 * 31
+3 * 31 0 31 0 0 1 0 0 1
+4 +3 31 31
+3 * 31
+2 * 31
+2 +8 12 12
+3 * 12
+2 * 12
+2 +5 7
+3 +1 7
+2 +4 6 6
+7 * 6
+3 * 6
+2 +3 5 5
+4 * 5 5
+4 * 5 5 0 1 0 0 1
+4 * 5
+6 +20 78
+3 -14 78 78
+4 * 78
-4 * 5 5
+4 * 5
+2 -2 78 78
+3 +7 78 78
+4 * 78 78
+3 +1 78 78
+3 -1 78
+6 * 78
+4 * 78
+4 +1 78
+3 -1 78 0 78 0 0 22 0 0 22
+3 +1 78 0 78
+3 +1 78 0 78 0 0 9 0 0 9
+8 +3 78 78
+3 * 78
+2 * 78
-5 * 5 5
+3 * 5
+2 * 5
+2 +10 6 0 0 1 0 0 1
+4 * 6
+3 * 6 6
+1 * 6 6
+2 * 6 6
+2 * 6 6
+2 * 6 6
+2 * 6 6
+1 * 6 6
+1 183 2
+2 -8 2
+3 +95 2 2
+8 * 2
+6 -80 1
+2 * 1

fn=(154)
0x122d0 380 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1
+4 +4 1
+3 * 1
+2 * 1
+3 * 1
+3 * 1
+3 * 1
+2 * 1
+17 +2 7
+2 * 7 7 0 1 0 0 1
+7 * 7
+2 * 7
+3 * 7
+3 * 7
+3 * 7 0 7
cfn=(156)
calls=7 0x11e20 189 
* * 16311 4623 1183 27 82 48 27 78 46
+5 -2 7 7
+4 +2 7
+2 * 7
+3 * 7
+3 -1 7
+2 -1 7
+3 * 7
+2 +5 1
+4 * 1
+2 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1

fl=(29)
fn=(82)
0x1cf40 40 23 0 23 1 0 0 1
+1 * 23 0 23
+1 * 23
+3 * 23
+4 +1 23 0 23
cfi=(11)
cfn=(22)
calls=23 +71 +25 
* * 638 91
+5 * 23
+4 +1 23
+3 * 23 0 23
cfi=(17)
cfn=(40)
calls=23 0x19f00 +52 
* * 667 138 115
* * 23 23
+5 +2 23
+3 * 23
+2 +4 23
+4 -1 23
+3 * 23
+3 +1 23 23
+1 * 23 23
+1 -1 23
+3 * 23
cfi=(18)
cfn=(46)
calls=23 0x1df20 +14 
* * 677 107 84 0 0 9 0 0 9

fl=(39)
fn=(238)
0x1b4f0 84 1 0 0 1 0 0 1
+5 * 1
+2 * 1
+6 * 1
+2 +1 1 1

fn=(126)
0x1b510 84 11 0 0 1 0 0 1
+5 * 11
+2 * 11
+6 * 11
+2 +1 11 11

fl=(7)
fn=(234)
0x199b0 256 1 1 0 1

fn=(12)
0x19210 86 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1 0 0 1 0 0 1
+1 * 1
+4 +25 1 1
+3 -1 1 0 1
+7 +1 1
+4 * 1 0 1 0 0 1 0 0 1
+7 * 1 0 1
+6 * 1
+2 * 1 0 0 1 0 0 1
+5 * 1 0 1 0 0 1 0 0 1
+7 * 1 1
+4 * 1
+2 * 67
+4 * 67 67 0 0 9 0 0 9
+4 * 67
+2 * 1
+4 +6 1 1
+4 -3 1
+7 +1 1 0 1
+11 -4 1 0 1 0 0 1 0 0 1
+7 +3 1 0 1
+5 +3 1 0 0 1 0 0 1
+3 * 1
+6 * 1 1 0 0 1 0 0 1
+7 * 1 1
+7 +1 1
+7 * 1 1
+7 -1 1 0 1
+5 * 1
+3 * 1 0 1
+5 * 1 0 1
+5 * 1
+3 * 1 0 1
+5 * 1 1 0 1 0 0 1
+7 * 1
+3 * 1 0 1
+5 * 1 0 1
+5 * 1
+3 * 1
+2 * 1
+3 * 1
+2 * 1 0 1
+5 * 1 1
+6 * 1 0 1
+4 * 1 1
+7 * 1 0 1
+5 * 1 1
+7 * 1 0 1 1 0 1 1 0 1
+5 * 1 1
+7 * 1 0 1
+4 * 1
+2 * 1
+7 +1 1
+4 * 1
+4 * 1
-8 * 18
+4 * 18
+4 * 18
+2 * 17 17 0 0 2 0 0 2
+4 * 17
+3 * 17
+23 -1 19 0 0 1 0 0 1
+4 * 19 19 0 0 1 0 0 1
+3 * 19
+3 * 19
+2 * 1
+3 * 1
+6 * 1
+3 * 1
+2 * 1 0 1
+5 * 1
+2 * 1
+2 * 1 0 1
+7 * 1
+3 * 1
+2 * 1 0 1
+7 * 1
+3 * 1
+2 * 1 1
+5 * 1 0 1 1 0 0 1
+7 * 1 1
+5 * 1
+14 * 1 1
+5 * 1
+2 * 1 1
+4 * 1 0 1
+6 * 1 1
+5 * 1
+14 * 1 1 0 1 0 0 1
+5 * 1
+14 * 1 1
+5 * 1
+6 * 1 1
+4 * 1 0 1
+7 * 1
+33 +62 1 1
+4 +1 1 0 1
+5 -1 1 0 1
+4 +1 1
+11 -29 1 1 0 1 1 0 1 1
+4 +1 1
+5 * 1
+31 +11 1 1
+3 +1 1 0 1
+5 -1 1 0 1
+4 +1 1
+12 -7 1 1 0 1 0 0 1
+4 +1 1
+6 -1 1 0 1
+5 +1 1
+9 -4 1 1 0 0 1 0 0 1
+4 +1 1
+6 * 1
+14 -25 1 1
+4 +1 1
+6 * 1
+6 -4 1 1 0 1 1 0 1 1
+4 +1 1
+5 * 1
+7 -7 1 1
+4 +1 1
+12 +2 1 1 0 1 1 0 1 1
+4 +1 1
fi=(9)
+10 -90 1
+2 * 1 0 1
cfi=(10)
cfn=(18)
calls=1 0x1a4b0 -4 
* * 11 1 1 2 0 1 2 0 1
fi=(5)
+5 223 1 1
+7 * 1
+3 * 1
+2 * 1 1 0 0 1 0 0 1
+3 * 1
fi=(8) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/x86/cpu-features.c
+15 61 1
+2 * 1
+2 +3 1
+6 -3 1 0 1 1 0 0 1
+6 +3 1
+4 * 1
+6 * 1
+3 * 1
+2 * 1
+6 * 1
+4 * 1
+3 * 1
+3 * 1
+60 175 1 1 0 1 0 0 1
+6 * 1
+3 * 1
+2 +1 1 0 1
+10 +3 1
+3 * 1
+2 +1 1 0 1 1 0 0 1
+10 +2 1 1
+7 * 1
+2 +1 1
+5 * 1
+2 * 1
+2 * 1 0 1
+6 * 1 0 1
+6 * 1 0 1
+6 * 1 0 1
+6 +7 1 1
+6 * 1
+6 * 1
+2 +4 1
+2 * 1
+3 +2 1 0 0 1 0 0 1
+2 * 1
+3 * 1
+3 * 1
+6 +51 1
+3 * 1
fe=(7)
+2 -16 1
fi=(8)
+3 +27 1 0 1
+7 +1 1 0 1
+7 +1 1 0 1
fe=(7)
+7 -29 1
+2 +1 1 0 1
cfi=(11)
cfn=(22)
calls=1 0x1cf90 66 
* * 32 5 0 3 0 0 3
+5 * 1 0 1
+7 +2 1
+2 * 1 0 1
cfi=(12) /build/glibc-bfm8X4/glibc-2.23/elf/../misc/sbrk.c
cfn=(24) sbrk
calls=1 0x1a500 34 
* * 17 5 2 2 1 0 2 1
+5 * 1 0 0 1 0 0 1
+7 * 1
+3 * 1
+6 +12 1 1
+6 * 1
+2 * 1
+6 +3 1
+5 * 1
+3 * 1
+3 * 1 1
+7 * 1 0 1
cfi=(2)
cfn=(26)
calls=1 0x21e0 790 
* * 2038824 494757 187965 629 11265 2066 625 6612 1322
+3 +1 1 1 0 1 1
+5 +1 1
+4 * 1 1
+1 * 1 1 0 0 1
+1 * 1 1
+2 * 1 1 0 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
fi=(8)
+11 -4 1 0 0 1 0 0 1
+4 * 1
+6 +1 1
+4 * 1
+6 * 1
+4 * 1
+2 +1 1
+4 * 1
+2 * 1
+4 * 1
+44 -49 1 0 0 1 0 0 1
+6 * 1
+2 +1 1 0 1
+7 +6 1 1
+6 * 1
+3 * 1
+12 +5 1 0 0 1 0 0 1
+5 * 1
+5 * 1
+6 +16 1
+3 * 1
+12 +3 1 1
+7 * 1
+38 29 1 0 0 1 0 0 1
+5 * 1
+2 +4 1
+3 -4 1 0 1
+6 +5 1
+3 -1 1
+4 +2 1
+2 -1 1
+4 +1 1
+3 -2 1
+4 +1 1
+4 +1 1
+6 +1 1 0 0 1 0 0 1
+4 -7 1 0 1
+6 * 1 0 1
+6 +3 1 0 1
+6 +4 1
+6 +5 1
+3 +32 1
+2 * 1
+4 -32 1
+3 +27 1
+6 +5 1
+6 +3 1
+3 +1 1
+4 * 1
+3 * 1 0 0 1 0 0 1
+6 * 1
+2 * 1
+7 * 1 1 0 0 1 0 0 1
+4 * 1
+3 * 1
0x198ac +57 1 0 1 1 0 1 1 0 1
+7 * 1
+3 -66 1
+6 * 1 0 0 1 0 0 1
+70 +44 1 1 0 1 0 0 1
+7 * 1
0x19974 250 1 0 0 1 0 0 1
+4 * 1
+6 +1 1
+4 * 1
+21 * 1 0 1 1 0 0 1
+7 * 1
fe=(7)

fl=(15)
fn=(32)
0xbb90 61 6 0 6 1 0 0 1
+2 * 6 0 6 0 0 1 0 0 1
+2 * 6 0 6
+2 * 6 0 6
+2 * 6
+3 * 6 0 6
+1 * 6 0 6
+1 * 6
+3 * 6
+4 * 6 0 6 0 0 2 0 0 2
+4 * 6
+3 * 6 0 6
+4 * 6 0 6
+5 * 6 0 6
+5 +1 6 0 6
cfi=(11)
cfn=(22)
calls=6 0x1cf90 +4 
* * 114 15 0 1 1 0 1 1
+5 +6 6 6 0 1 1 0 1 1
+7 -6 6
+3 * 6
+4 +6 6
+3 * 6
+16 +7 6
+8 * 6
+5 * 6 0 6
+5 * 6 0 6
cfi=(17)
cfn=(36)
calls=6 0x19f10 +28 
* * 336 62 47 6 0 1 5 0 1
* * 6 6 0 1 0 0 1
+5 +3 6
+3 -3 6
+3 +3 6 0 0 1 0 0 1
+6 +4 6
+8 +5 6 6
+5 * 6 6
+5 -6 6 0 6 0 0 6 0 0 6
+4 +6 6
+4 -5 6 0 6 0 0 6 0 0 6
+7 +3 6
+4 * 6 0 6
+4 +2 6 0 6
cfi=(18)
cfn=(46)
calls=6 0x1df20 -26 
* * 169 25 19 3 0 7 3 0 7
+5 +10 6 6
+4 -10 6 0 6 0 0 3 0 0 3
+4 +10 6
+3 -8 6 0 6 1 0 0 1
+7 +9 6 6
+5 * 6 6 0 0 6 0 0 6
+8 -1 6 6
+3 * 6
+2 * 6
+4 +1 6
+3 * 6
+3 * 6
+2 +3 6 6
+7 -4 6 0 6 0 0 1 0 0 1
+4 +1 6 0 6
+7 +3 6
+6 +9 6
+3 -7 6 0 6 1 0 1 1 0 1
+7 +4 6 0 6
+4 +3 6
+2 * 1
+4 * 1
+7 * 1
+4 * 1
+4 * 1
+3 * 1
+2 +2 1 0 1 0 0 1 0 0 1
+3 * 1
+4 -2 1
+3 * 1
-10 +2 15 0 15 0 0 3 0 0 3
+3 * 15
+4 -2 15
+3 * 15
+2 +12 6
+7 +6 6
+7 -5 6 0 6 1 0 6 1 0 6
+11 -1 6 0 6 0 0 2 0 0 2
+7 +6 6
+4 * 6
+4 * 6 6 0 0 1 0 0 1
+4 * 6
+3 * 6
+6 +2 5
+6 +3 5
+3 -3 5 0 5 0 0 2 0 0 2
+7 +3 5
+6 -3 5
+5 * 5
+7 +7 5 5
+7 * 5
+3 * 5
+2 +4 5
+2 * 5
+20 +2 1 0 0 1 0 0 1
+2 * 1 1
+5 * 1
+2 * 1
+2 * 1
+4 +6 1 0 1
+8 +6 1
+2 -3 1 0 1 1 0 0 1
+7 * 1
+3 +3 1 0 1
+4 * 1
-16 * 5
+2 -3 5 0 5
+7 * 5
+3 +3 5 0 5
+4 * 5
+6 +2 5 5
+4 * 5
+3 * 5 0 5
cfi=(11)
cfn=(22)
calls=5 0x1cf90 -91 
* * 170 25 0 0 1 0 0 1
+5 +4 5 5
+5 -4 5
+3 * 5
+4 * 5 0 5
+5 * 5
+3 +4 5
+3 * 5
+2 * 5
+89 +64 5 0 5
+7 * 5
+3 +4 5
+4 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
+2 * 5 5
-14 * 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+8 68 6 6 0 1 0 0 1
+4 * 6
+5 * 6
+3 * 6
+3 * 6 0 0 1 0 0 1
+3 * 6
+6 * 6
+2 * 6
+5 * 6
+4 * 6
+13 +34 6 0 6 0 0 6 0 0 6
+11 * 6
+5 * 5 5
+7 +39 5
+7 * 5 0 0 1 0 0 1
+7 * 5
+3 * 5
+66 +70 5 5 0 1 0 0 1
+5 * 5 5
+4 * 5 0 5
cfi=(25)
cfn=(70)
calls=5 0x1dcf0 61 
* * 182 30 25 3 0 3 3 0 3
+5 * 5
+8 * 79
+3 +6 79 79
+4 -1 79
+4 +1 79
-8 * 5 5
+4 -1 5
+4 +1 5
+2 * 5
+3 * 5
+4 +5 5 0 5
+3 * 5
+41 -89 1 0 0 1 0 0 1
+3 * 1
+9 +32 5
+3 * 5 0 5
cfi=(17)
cfn=(40)
calls=5 0x19f00 -71 
* * 145 30 25
* * 5 5
+5 +1 5
+3 -1 5
+3 +1 5
+2 * 5
+3 * 5
+21 +2 1 0 0 1 0 0 1
+7 -35 1
+3 * 1

fn=(48)
0xbb00 32 6 0 6 1 0 0 1
+2 * 6 0 6
+1 * 6
+3 * 6 0 6
+1 * 6
+3 +2 6
+7 * 6 6 6
cfi=(2)
cfn=(50)
calls=6 0xc90 704 
* * 12 6 6 1 0 1 1 0 1
+6 +2 6
+4 -2 6
+7 +2 6
+4 * 6
+3 * 6 6
+3 * 6
+3 * 6
+2 * 1
+7 * 15
+3 +3 15 15
+4 * 15
+3 * 15
-7 * 5 5
+4 * 5
+3 * 5
+2 +2 5 0 5
+5 +2 5 0 5
+4 +4 5
+4 +4 5
+7 -4 5
+4 * 5 0 5
+5 +1 5 5
+7 +4 5 5
+1 * 5 5
+1 -4 5 0 5
+8 +1 5
+4 +3 5 5
+2 -3 5 0 5
+7 +2 5 5
cfi=(2)
cfn=(52)
calls=5 0xca0 710 
* * 10 5 5
-50 -4 1 0 0 1 0 0 1
+4 +4 1
+7 -4 1
+4 * 1 0 1
+5 +1 1 1
+7 +4 1 1
+1 * 1 1
+1 -4 1 0 1
+8 +1 1
+4 +3 1 1
+2 -3 1 0 1
+7 +2 1 1
cfi=(2)
cfn=(52)
calls=1 0xca0 710 
* * 2 1 1
+9 -5 1 0 1
+3 * 1

fl=(17)
fn=(36)
0x19f10 103 17 0 0 1 0 0 1
+3 +8 17
+5 * 17
+3 * 17
+3 -4 17
+4 +4 17
+3 * 17
+20 +3 17
cfn=(40)
calls=17 -57 -20 
* * 703 142 118 5 2 1 4 0 1
* * 17 17

fn=(40)
0x19f00 94 71
+3 +1 71
+5 * 71
cfn=(44) __libc_memalign
calls=71 0x19e00 -43 
* * 2036 405 396 6 2 2 6 0 2
* * 71 71 0 1

fn=(44)
0x19e00 52 72 0 72 1 0 0 1
+1 * 72 0 72 0 0 1 0 0 1
+1 * 72
+4 +1 72 72 0 0 2
+7 * 72
+3 * 72
+6 * 71 71
+7 +11 71
+5 * 71
+3 * 71
+3 +3 71
+4 -3 71 0 71
+7 +3 71
+3 * 71
-25 -3 1
+5 * 1
+3 * 1
+3 +3 1
+4 -3 1 0 1
+7 +3 1
+3 * 1
+2 * 66
+3 * 66
+3 * 66 0 0 1 0 0 1
+3 * 66
+2 +4 6 6
+7 * 6
+5 * 6
+3 * 6
+3 +1 6
+3 * 6
+6 +6 6
+3 * 6
+2 * 6
+3 * 6
+6 * 6
+5 * 6
+5 * 6
+3 * 6 0 6
cfi=(26)
cfn=(72)
calls=6 0x1b440 -45 
* * 198 42 36 2 0 1 2 0 1
+5 +2 6
+4 * 6
+2 * 6 6
+7 * 6
+3 * 6 6
+8 +4 6
+3 * 6 0 6
+7 * 6
+3 +3 6 0 6
+7 +1 6 0 6
+7 +2 6
+4 * 6
+3 * 6 6
+1 * 6 6
+1 * 6 6
-23 -3 66 0 66 1 0 0 1
+7 +1 66 0 66
+7 +2 66
+4 * 66
+3 * 66 66
+1 * 66 66
+1 * 66 66
+6 -31 1 1 0 1 0 0 1
+7 * 1
+7 -1 1
+5 * 1
+3 * 1
+3 * 1 0 1
+7 * 1

fn=(80)
0x1a430 354 19 19 0 1 0 0 1
+3 * 19
+2 +2 19 19
+3 +1 19
+3 * 19
+2 +4 18 18
+3 * 18 0 0 1 0 0 1
+2 * 18
+2 * 18
+3 * 18
+9 * 18
+3 * 18
-3 * 280
+3 * 280
+5 +7 562
+4 * 562 562
+3 * 562
+2 -2 579 579
+2 * 579
+2 +6 17
+4 * 17 0 17
+4 +7 17 0 17
+3 +4 17 17
-3 -4 1 0 1
+3 +4 1 1
* * 1 1
+8 -7 281
+4 -15 281 281
+4 * 281
+2 * 281
+2 * 1
+2 * 1

fn=(86)
0x19f50 120 20 0 20 1 0 0 1
+1 +2 20 20
+7 * 20
+3 * 20
+2 +7 18 18
+1 * 18 18
+2 -3 2 2
+7 * 2
+3 * 2
+2 * 2
+3 * 2 0 2
cfi=(27)
cfn=(74)
calls=2 0x1dc00 -73 
* * 28 2 4
+5 +1 2 0 2
+7 +2 2 2
+1 * 2 2

fl=(23)
fn=(66)
0xf1c0 39 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1 0 0 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 +3 1
+3 -3 1 0 1
+1 * 1
+4 +3 1
+3 -1 1 1
+7 +1 1
+4 +9 1 1
+7 -12 1 0 1 0 0 1 0 0 1
+4 * 1 0 1
+4 * 1 0 1
+4 * 1 0 1
+4 +12 1
+3 * 1
+42 +10 1 1 0 1 0 0 1
+7 * 1
+3 * 1 0 1
+4 * 1
0xf401 162 1 0 0 1 0 0 1
+3 * 1
0xf47e -47 1 0 0 1 0 0 1
+7 * 1
+2 * 1 0 1 0 0 1 0 0 1
cfi=(24)
cfn=(68)
calls=1 0x1b380 -31 
* * 9 1 1 1 0 0 1
+5 * 1
+2 * 1
+70 +55 1 1 0 1 0 0 1
+4 * 1
+3 * 1
+2 +2 1 1
+4 * 1 0 1
+3 +1 1 1
+4 * 1 0 1
+4 * 1
+3 * 1
+4 * 1
+4 +4 1 1
+4 * 1 0 0 1 0 0 1
+7 +4 1
+3 -4 1 0 1
+3 +1 1 0 1
+8 +3 1
+6 +3 1
+4 +1 1 1
+4 -1 1
+6 +4 1
+3 * 1 1
+4 * 1
+4 +1 1
+4 -1 1
+5 * 1
+3 * 1 0 1
+4 * 1 0 0 1 0 0 1
+3 * 1 1
+4 * 1
+3 * 1 0 1
+4 * 1
+3 * 1
+5 +1 1
0xf5c0 +18 1 1 0 1 0 0 1
+4 * 1
+6 * 1 0 1
+4 * 1
+3 * 1 0 1
+4 * 1 0 1
+4 * 1
+2 * 1 1
+4 * 1
+3 * 1 0 1
+6 +1 1
+3 * 1
+4 -1 1 0 1
+3 +1 1
+4 * 1 0 1
+4 * 1 0 1
cfi=(17)
cfn=(40)
calls=1 0x19f00 94 
* * 29 6 5
* * 1 1
+5 +1 1 0 0 1 0 0 1
+3 -1 1 0 1
+4 +1 1 1
+4 * 1 1
+4 * 1 1
+4 * 1 1
+4 * 1
+6 +29 1
+4 +3 1
+4 -3 1 0 1 0 0 1 0 0 1
+3 * 1 0 1
+4 +3 1
0xf735 +23 1 1 0 1 0 0 1
+4 * 1 1
+4 * 1 0 0 1 0 0 1
+5 * 1
+3 * 1
+3 * 1
+3 * 1
+5 +6 1 0 1
+8 * 1
+4 -1 1
+3 * 1
-15 +1 3 0 3
+8 * 3
+4 -1 3
+3 * 3
+2 * 1 1
+4 * 1 1
+4 +5 1
+5 * 1
+3 * 1
+7 * 1
+4 * 1
+3 * 1 0 0 1 0 0 1
+3 +3 1
+3 -3 1
+3 +3 1
-16 -3 1
+4 * 1
+3 * 1
+3 +3 1
+3 -3 1
+3 +3 1
+2 * 2
+3 * 2
+3 +1 2
+4 * 2
+3 * 2
-7 * 2
+4 * 2
+3 * 2
+2 +1 4 4
+4 -1 4
+4 +1 4
+4 * 4 0 4
+4 -2 4
+4 +1 4
+3 * 4
+2 -1 4
+4 * 4
+3 * 4
+2 * 2
+4 +4 2 0 0 1 0 0 1
+3 * 2
+2 +4 1 1
+4 -1 1 1
+7 +2 1 1
+4 -2 1
+4 +1 1
+4 +1 1
+5 -2 1
+3 +2 1
+3 * 1
+3 * 1
+73 * 1 1 0 1 0 0 1
+3 * 1 1
+4 * 1
+2 * 1
+4 * 1 0 0 1 0 0 1
+3 * 1
+4 * 1
+10 +13 1
+3 * 1 1
+4 +1 1
+4 -1 1 0 1
+4 +3 1
+4 * 1
-19 -3 1
+3 * 1 1
+4 +1 1
+4 -1 1 0 1
+4 +3 1
+4 * 1
+2 +3 1 1
+4 * 1 1
+4 * 1 1
+4 * 1 0 1
+3 +3 1
+4 -1 1
+3 +1 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1
+1 * 1 0 1 1 0 0 1
+4 * 1
+78 113 1 0 0 1 0 0 1
+4 +17 1
+5 +1 1
+2 -1 1
+3 * 1
+4 * 1
+4 * 1
+3 * 1
+2 * 1
+5 * 1
+4 * 1 0 1
+4 * 1 0 0 1 0 0 1
+5 243 1 1
+4 * 1 0 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 1
+4 * 1 0 1
cfi=(25)
cfn=(70)
calls=1 0x1dcf0 61 
* * 22 3 2 3 1 1 3 1 1
+5 * 1
+7 * 1
+5 * 1
+3 * 1 0 1
cfi=(25)
cfn=(70)
calls=1 0x1dcf0 61 
* * 18 2 1 0 1 0 0 1
+5 +1 1 1
+4 * 1 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfi=(25)
cfn=(70)
calls=1 0x1dcf0 61 
* * 22 3 2
+5 * 1
+7 * 1
+5 * 1
+3 * 1 0 1
cfi=(25)
cfn=(70)
calls=1 0x1dcf0 61 
* * 18 2 1
+5 * 1 1
+3 * 1 1
+4 * 1 1
+4 * 1
+3 * 1
+2 * 1 0 1
+3 * 1
+3 * 1
+3 * 1
+3 * 1 0 1
+4 * 1 0 1
+4 * 1

fl=(24)
fn=(112)
0x1b320 84 232 0 0 1 0 0 1
+5 * 232
+2 * 232
+6 * 232
+2 +1 6 6
+1 +1 226
+7 * 226
+2 * 226 0 226
+2 * 226
+4 * 226 226

fn=(114)
0x1b340 84 5 0 0 1 0 0 1
+5 * 5
+2 * 5
+6 * 5
+2 +1 5 5

fn=(68)
0x1b380 84 6 0 0 1 0 0 1
+5 * 6
+2 * 6
+6 * 6
+3 +2 6
+7 * 6
+2 * 6 0 6
+2 * 6
+4 * 6 6

fn=(132)
0x1b420 84 6 0 0 1 0 0 1
+5 * 6
+2 * 6
+6 * 6
+2 +1 6 6

fl=(18)
fn=(46)
0x1df20 61 46 0 0 1 0 0 1
+4 +2 46
+3 +2 46
+2 +3 44
+3 +1 44
+2 +2 11 11
+3 +1 11 0 11 0 0 3 0 0 3
+2 +2 11
+3 +1 11
+3 +5 11
+3 +1 11
-3 -1 33
+3 +1 33
+2 +2 18 18
+3 +1 18 0 18 0 0 3 0 0 3
+3 +2 18
+4 +1 18
+4 * 18
+4 +5 18
+3 +1 18
-3 -1 26 0 0 1 0 0 1
+3 +1 26
+2 +2 15 15
+2 +1 15 0 15
+2 +2 15
+4 +1 15
+4 +5 15
+3 +1 15
-3 -1 29
+3 +1 29
+2 +2 27 27
+3 +1 27 0 27 0 0 3 0 0 3
+3 +2 27
+4 +1 27
+4 +5 27
+6 +1 27
-6 -1 17
+6 +1 17
+2 * 22
+4 +5 22 22
+3 +1 22 22
+4 +1 22 0 22 0 0 3 0 0 3
+3 +1 22 0 22 0 0 3 0 0 3
+4 +2 22
+3 +2 22
+4 +1 22
+4 +2 22
+2 +8 44 44 0 1 0 0 1
+5 +8 15 0 15
+5 +6 15
+2 +2 15
+3 +1 15
+2 +3 6
+5 +1 6
+3 * 6
+2 * 6
+10 +5 6 6 0 1 0 0 1
+3 +1 6 0 6 0 0 1 0 0 1
+2 +2 6
+2 +2 6
+4 +1 6
+4 +2 6
-15 -8 16 16
+3 +1 16 0 16
+2 +2 16
+2 +2 16
+4 +1 16
+4 +2 16
+2 * 6
+5 * 6
+10 +9 6
+7 +1 6
-7 -1 9
+7 +1 9
+2 +3 15
+2 +1 15
+3 +1 15
+2 +5 16
+2 +2 16 16
+3 +1 16 16
+4 +1 16 16
+4 +1 16 16 0 1 0 0 1
+4 +2 16 0 16 0 0 1 0 0 1
+3 +1 16 0 16
+4 +1 16 0 16 0 0 3 0 0 3
+4 +1 16 0 16
+4 +2 16
+4 +1 16
+4 +2 16
+2 +2 4
+2 +2 4 4
+3 +1 4 4
+4 +1 4 4
+4 +1 4 4
+4 +2 4 0 4
+3 +1 4 0 4
+4 +1 4 0 4
+4 +1 4 0 4
+4 +2 4
+4 +1 4 0 0 1 0 0 1
+4 +2 4
+14 +5 15
+3 +6 15 15
+5 +1 15
+6 +2 2 2

fl=(14)
fn=(30)
0x1d6a0 24 35 0 0 1 0 0 1
+3 +1 35
+6 +1 35
+4 +1 35
+6 +1 35
+3 +1 35
+3 +1 35
+4 +1 35 0 0 1 0 0 1
+6 +3 35
+7 +1 35
+2 +1 11 11 0 0 1 0 0 1
+3 +1 11 11 0 0 3 0 0 3
+4 +1 11
+4 +1 11
+6 +1 11
+4 +1 11
+2 +1 11
+6 +2 32
+7 +1 32
+2 +1 11 11
+3 +1 11 11
+4 +1 11
+4 +1 11
+2 +1 11
+4 +1 11
+2 +1 11
+2 +2 29 0 0 1 0 0 1
+7 +1 29
+2 +1 10 10 0 0 1 0 0 1
+2 +1 10 10 0 0 1 0 0 1
+3 +1 10
+4 +1 10
+2 +1 4
+4 +1 4
+2 +1 4
+2 +2 23
+7 +1 23
+2 +1 13 13
+3 +1 13 13 0 0 2 0 0 2
+4 +1 13
+4 +1 13
+2 +1 1
+4 +1 1
+3 +1 1
+2 +2 10 10 0 0 2 0 0 2
+4 +1 10 10
+5 +1 10
+4 +1 10
+4 +1 10
+2 +1 10
+6 +1 10
+2 +1 5
+3 +1 5
+4 +1 5 5
+3 +1 5 5
+4 +1 5
+11 +7 5
+2 +2 5 5
* * 3 3
+1 +4 22 0 0 1 0 0 1
+3 +1 22
+2 +1 9
+3 +1 9
+3 +1 9
+4 +1 9
+4 +1 9
+4 +1 9
+3 +1 9
+3 +1 9
+3 +1 9
+3 +1 9
+2 +1 9 9
+2 +4 18 0 0 1 0 0 1
+2 +1 18 18

fl=(26)
fn=(72)
0x1b440 33 19 0 0 1 0 0 1
+3 -1 19 0 19
+2 * 19
+3 * 19 0 19 0 0 2 0 0 2
+2 * 19
+3 * 19 0 19
+2 * 19
+3 * 19 0 19
+2 * 19
+3 * 19 0 19
+1 * 19 0 19 0 0 1 0 0 1
+1 +1 19
+2 * 14
+3 * 14
+3 +1 14
+3 * 14
+3 * 14
+3 * 14
+3 * 14
+3 * 14
+3 * 14
+5 * 14
-23 * 5
+3 * 5
+3 * 5
+3 * 5
+3 * 5
+3 * 5
+3 * 5
+5 * 5
+2 * 19
+6 * 19
+2 +2 19 19
+1 * 19 19
+1 * 19 19
+2 * 19 19
+2 * 19 19
+2 * 19 19
+2 * 19 19
+4 -3 12 0 0 1 0 0 1
+3 * 12
+2 * 5 5
+7 * 5
+3 * 5
+3 * 5

fl=(28)
fn=(76)
0x1b8e0 24 37 0 0 1 0 0 1
+4 +1 37
+2 +1 37
+5 +1 37
+4 +1 37
+5 +1 37
+4 +1 37
+5 +1 37 0 0 1 0 0 1
+6 +1 37 37 0 0 6 0 0 6
+4 +1 37
+4 +1 37
+4 +1 37
+4 +1 37
+4 +1 37
+4 +1 37
+4 +1 37
+2 +1 37
+2 +1 22
+3 +4 22
+5 +1 22
+4 +1 22 22
+3 +1 22
+4 +2 22 22
+2 +4 15 15 0 0 2 0 0 2
+5 +1 15 0 0 1 0 0 1
+4 +1 15
+4 +1 15
+4 +1 15
+4 +1 15
+4 +1 15 15
+5 +1 15
+4 +1 15
+4 +1 15
+4 +1 15
+4 +1 15
+4 +1 15
+4 +1 15 15
+5 +1 15
+4 +1 15
+4 +1 15
+4 +1 15 0 0 1 0 0 1
+3 +1 15
+4 +1 15
+4 +1 15
+4 +1 15
+3 +1 15
+3 +1 15
+6 * 1
+6 +5 1
+4 +1 1
+4 +3 1
+4 +1 1 1
+4 +1 1 1
+5 +1 1 1
+5 +1 1
+4 +1 1 1 0 1 0 0 1
+5 +1 1
+4 +1 1
+4 +1 1 1
+4 +1 1
+4 +1 1 1
+5 +1 1 1
+5 +1 1
+4 +1 1 1
+5 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +2 1
+2 +1 1
-80 -20 4
+4 +1 4 4 0 0 3 0 0 3
+4 +1 4 4
+5 +1 4 4
+5 +1 4
+4 +1 4 4
+5 +1 4
+4 +1 4
+4 +1 4 4
+4 +1 4
+4 +1 4 4
+5 +1 4 4
+5 +1 4
+4 +1 4 4
+5 +1 4
+4 +1 4
+4 +1 4
+4 +1 4
+4 +2 4
+2 +1 4
+2 +2 1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +2 1
+4 +1 1
+4 +1 1
+4 +1 1
+5 +1 1
+4 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+4 +1 1
+3 +3 1 0 0 1 0 0 1
+4 +4 1
+5 +1 1
+4 +1 1 1
+3 +1 1
+4 +2 1 1
-20 -9 14
+4 +4 14
+5 +1 14
+4 +1 14 14
+3 +1 14
+4 +2 14 14

fl=(42)
fn=(140)
0x1b260 34 12 0 0 1 0 0 1
+3 -1 12
+3 +1 12
+2 +1 12
+3 * 12
+3 * 12
+5 * 12
+2 * 12
+6 * 12
+2 +4 2 2
+3 -4 10
+2 * 10 0 10
+6 * 10
+5 * 10 10

fl=(19)
fn=(54)
0x1bb00 144 2970 0 0 5 0 0 2
+2 +1 2970
+2 +2 2970
+4 +1 2970
+4 +21 2970
+3 +1 2970
+2 +1 2683
+3 +1 2683
+2 +1 2627 2627 0 0 77 0 0 30
+4 +1 2627 2627 0 0 68 0 0 18
+4 +1 2627 2627
+5 +1 2627 2627
+5 +21 2627
+4 +1 2627
+4 +1 2627
+4 +1 2627
+4 +1 2627
+4 +1 2627
+6 +1 2627
+6 +5 36
+4 +1 36
+4 +9 36
+4 +1 36
+4 +1 36
+5 +1 36
+3 +1 36
+3 +1 36
+3 +1 36
+2 +1 36
-24 -7 343 0 0 5 0 0 2
+4 +1 343
+4 +1 343
+5 +1 343
+3 +1 343
+3 +1 343
+3 +1 343
+2 +1 343
+2 +1 267
+2 +1 208
+3 +1 208
+1 +1 208
+3 +2 208
+4 +1 208
+3 +1 208 0 0 4 0 0 1
+7 +1 208 208 0 0 16 0 0 5
+4 +1 208
+4 +1 208
-22 -5 59
+4 +1 59
+3 +1 59 0 0 1 0 0 1
+7 +1 59 59 0 0 2 0 0 1
+4 +1 59
+4 +1 59
+7 +10 112 112 0 0 11 0 0 3
+4 +1 112
+4 +1 112
+4 +2 112 112 0 0 7 0 0 2
+4 +6 112
+4 +1 112
+5 +1 112
+2 +1 112
+3 +1 112
+3 +5 112
+6 +2 102
+7 +1 102 0 0 5 0 0 2
+7 +1 102
+4 * 102
+7 +8 102 102 0 0 13 0 0 3
+5 +1 102 102
+5 +3 102
+4 +1 102
+4 +1 102
+4 +1 102
+4 +1 102
+6 +1 102
-32 -9 19 19
+5 +1 19 19
+5 +3 19
+4 +1 19
+4 +1 19
+4 +1 19
+4 +1 19
+6 +1 19
+6 +6 33
+4 +1 33 33
+5 +1 33 33 0 1 0 0 1
+5 +3 33
+4 +1 33
+4 +1 33
+4 +1 33
+4 +1 33
+6 +1 33
+6 +5 19
+4 +1 19
0x1beb0 571 1 0 0 1 0 0 1
+4 +1 1 1
+4 +1 1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+5 +2 1
+4 +1 1
+4 +1 1
+5 +1 1
+2 +1 1
+3 +1 1
+3 +1 1
+6 +1 1 1
+4 +4 1
+4 +1 1
+7 +1 1
+6 +6 1
+4 +1 1
+7 +1 1 0 0 1 0 0 1
+7 * 1
+9 +4 1
+4 +1 1
+6 +3 1 1 0 0 1 0 0 1
+5 +1 1 1
+5 +1 1
+4 +3 1
+5 +1 1
+5 +1 1
+4 +6 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+6 +1 1
+6 +7 1
+4 +1 1
+4 +2 1
+4 +1 1
+2 +2 1 1
+5 +1 1 1
+5 +1 1
+4 +3 1
+5 +1 1
+5 +1 1
+4 +6 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+4 +1 1
+6 +1 1
+94 +41 4 0 0 3 0 0 2
+4 +1 4 4 0 0 1 0 0 1
+4 +1 4 4 0 0 2 0 0 1
+4 +1 4
+4 +1 4 0 0 3 0 0 2
+5 +2 4
+4 +1 4
+4 +1 4
+5 +1 4
+2 +1 4
+3 +1 4
+3 +1 4
+6 +1 4 4
+4 +4 4
+4 +1 4
+7 +1 4
+6 +6 4
+4 +1 4
+7 +1 4 0 0 3 0 0 2
+7 * 4
+9 +4 4
+4 +1 4
-4 -1 1
+4 +1 1
+6 +3 5 5 0 0 3 0 0 2
+5 +1 5 5 0 0 2 0 0 1
+5 +1 5
+4 +3 5
+5 +1 5
+5 +1 5
+4 +6 5
+4 +1 5
+4 +1 5 0 0 3 0 0 2
+4 +1 5
+4 +1 5
+6 +1 5
+6 +7 2
+4 +1 2
+4 +2 2
+4 +1 2
+2 +2 2 2
+5 +1 2 2
+5 +1 2
+4 +3 2
+5 +1 2
+5 +1 2
+4 +6 2
+4 +1 2 0 0 1 0 0 1
+4 +1 2
+4 +1 2
+4 +1 2
+6 +1 2
+6 +7 1
+4 +1 1
+4 +1 1
+80 +32 3 0 0 3 0 0 2
+4 +1 3 3 0 0 2 0 0 2
+4 +1 3 3
+4 +1 3
+4 +1 3 0 0 3 0 0 2
+5 +2 3
+4 +1 3
+4 +1 3
+5 +1 3
+2 +1 3
+3 +1 3
+3 +1 3
+6 +1 3 3
+4 +4 3
+4 +1 3
+7 +1 3
+6 +6 3
+4 +1 3
+7 +1 3 0 0 3 0 0 2
+7 * 3
+9 +4 3
+4 +1 3
+6 +3 3 3
+5 +1 3 3 0 0 2 0 0 1
+5 +1 3
+4 +3 3
+5 +1 3
+5 +1 3
+4 +6 3
+4 +1 3
+4 +1 3 0 0 3 0 0 2
+4 +1 3
+4 +1 3
+6 +1 3
0x1c270 +72 1 0 0 1 0 0 1
+4 +1 1 1 0 0 1 0 0 1
+4 +1 1 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+5 +2 1
+4 +1 1
+4 +1 1
+5 +1 1
+2 +1 1
+3 +1 1
+3 +1 1
+6 +1 1 1
+4 +4 1
+4 +1 1
+7 +1 1
+6 +6 1
+4 +1 1
+7 +1 1 0 0 1 0 0 1
+7 * 1
+9 +4 1
+4 +1 1
+6 +3 1 1
+5 +1 1 1
+5 +1 1
+4 +3 1
+5 +1 1
+5 +1 1
+4 +6 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+6 +1 1
0x1c3b0 +72 32 0 0 3 0 0 2
+4 +1 32 32 0 0 3 0 0 2
+4 +1 32 32 0 0 2 0 0 1
+4 +1 32
+4 +1 32 0 0 4 0 0 2
+5 +2 32
+4 +1 32
+4 +1 32
+5 +1 32
+2 +1 32
+3 +1 32
+3 +1 32
+6 +1 9 9
+4 +4 9
+4 +1 9
+7 +1 9
+6 +6 9
+4 +1 9
+7 +1 9 0 0 3 0 0 2
+7 * 9
+9 +4 9
+4 +1 9
-4 -1 1
+4 +1 1
+6 +3 10 10 0 0 2 0 0 2
+5 +1 10 10 0 0 1 0 0 1
+5 +1 10
+4 +3 10
+5 +1 10
+5 +1 10
+4 +6 10
+4 +1 10
+4 +1 10 0 0 3 0 0 2
+4 +1 10
+4 +1 10
+6 +1 10
+6 +7 3
+4 +1 3
+4 +2 3
+4 +1 3
+2 +2 3 3 0 0 2 0 0 2
+5 +1 3 3
+5 +1 3
+4 +3 3
+5 +1 3
+5 +1 3
+4 +6 3
+4 +1 3 0 0 2 0 0 2
+4 +1 3
+4 +1 3
+4 +1 3
+6 +1 3
+6 +7 1
+4 +1 1
+4 +1 1
+80 +32 7 0 0 2 0 0 1
+4 +1 7 7
+4 +1 7 7 0 0 1 0 0 1
+4 +1 7
+4 +1 7 0 0 2 0 0 1
+5 +2 7
+4 +1 7
+4 +1 7
+5 +1 7
+2 +1 7
+3 +1 7
+3 +1 7
+6 +1 3 3
+4 +4 3
+4 +1 3
+7 +1 3
+6 +6 3
+4 +1 3
+7 +1 3 0 0 2 0 0 1
+7 * 3
+9 +4 3
+4 +1 3
+6 +3 3 3 0 0 1 0 0 1
+5 +1 3 3
+5 +1 3
+4 +3 3
+5 +1 3
+5 +1 3
+4 +6 3
+4 +1 3
+4 +1 3 0 0 2 0 0 1
+4 +1 3
+4 +1 3
+6 +1 3
0x1c630 +72 31 0 0 3 0 0 2
+4 +1 31 31 0 0 2
+4 +1 31 31 0 0 5 0 0 1
+4 +1 31
+4 +1 31 0 0 3 0 0 2
+5 +2 31
+4 +1 31
+4 +1 31
+5 +1 31
+2 +1 31
+3 +1 31
+3 +1 31
+6 +1 2 2
+4 +4 2
+4 +1 2
+7 +1 2
+6 +6 2
+4 +1 2
+7 +1 2 0 0 2 0 0 2
+7 * 2
+9 +4 2
+4 +1 2
-4 -1 1
+4 +1 1
+6 +3 3 3 0 0 1 0 0 1
+5 +1 3 3 0 0 1 0 0 1
+5 +1 3
+4 +3 3
+5 +1 3
+5 +1 3
+4 +6 3
+4 +1 3
+4 +1 3 0 0 2 0 0 2
+4 +1 3
+4 +1 3
+6 +1 3
+6 +7 2
+4 +1 2
+4 +2 2
+4 +1 2
+2 +2 2 2
+5 +1 2 2
+5 +1 2
+4 +3 2
+5 +1 2
+5 +1 2
+4 +6 2
+4 +1 2 0 0 2 0 0 2
+4 +1 2
+4 +1 2
+4 +1 2
+6 +1 2
+6 +7 1
+4 +1 1
+4 +1 1
+80 +32 12 0 0 1 0 0 1
+4 +1 12 12
+4 +1 12 12
+4 +1 12
+4 +1 12 0 0 1 0 0 1
+5 +2 12
+4 +1 12
+4 +1 12
+5 +1 12
+2 +1 12
+3 +1 12
+3 +1 12
+6 +1 2 2
+4 +4 2
+4 +1 2
+7 +1 2
+6 +6 2
+4 +1 2
+7 +1 2 0 0 1 0 0 1
+7 * 2
+9 +4 2
+4 +1 2
+6 +3 2 2 0 0 2 0 0 2
+5 +1 2 2 0 0 1 0 0 1
+5 +1 2
+4 +3 2
+5 +1 2
+5 +1 2
+4 +6 2
+4 +1 2
+4 +1 2 0 0 1 0 0 1
+4 +1 2
+4 +1 2
+6 +1 2
0x1c8b0 +72 18 0 0 2 0 0 2
+4 +1 18 18 0 0 3 0 0 2
+4 +1 18 18
+4 +1 18
+4 +1 18 0 0 2 0 0 2
+5 +2 18
+4 +1 18
+4 +1 18
+5 +1 18
+2 +1 18
+3 +1 18
+3 +1 18
+6 +1 2 2
+4 +4 2
+4 +1 2
+7 +1 2
+6 +6 2
+4 +1 2
+7 +1 2 0 0 2 0 0 2
+7 * 2
+9 +4 2
+4 +1 2
+6 +3 2 2
+5 +1 2 2 0 0 1 0 0 1
+5 +1 2
+4 +3 2
+5 +1 2
+5 +1 2
+4 +6 2
+4 +1 2
+4 +1 2 0 0 2 0 0 2
+4 +1 2
+4 +1 2
+6 +1 2
0x1c9f0 +72 13 0 0 1 0 0 1
+4 +1 13 13 0 0 1
+4 +1 13 13 0 0 1 0 0 1
+4 +1 13
+4 +1 13 0 0 1 0 0 1
+5 +2 13
+4 +1 13
+4 +1 13
+5 +1 13
+2 +1 13
+3 +1 13
+3 +1 13
0x1cb30 1821 16 0 0 2 0 0 1
+4 +1 16 16 0 0 2 0 0 2
+4 +1 16 16 0 0 1
+4 +1 16
+4 +1 16 0 0 1 0 0 1
+5 +2 16
+4 +1 16
+4 +1 16
+5 +1 16
+2 +1 16
+3 +1 16
+3 +1 16
+6 +1 5 5
+4 +4 5
+4 +1 5
+7 +1 5
+6 +6 5
+4 +1 5
+7 +1 5 0 0 2 0 0 1
+7 * 5
+9 +4 5
+4 +1 5
+6 +3 5 5
+5 +1 5 5 0 0 1 0 0 1
+5 +1 5
+4 +3 5
+5 +1 5
+5 +1 5
+4 +6 5
+4 +1 5
+4 +1 5 0 0 2 0 0 1
+4 +1 5
+4 +1 5
+6 +1 5
0x1cc70 +72 52 0 0 3 0 0 2
+4 +1 52 52 0 0 8 0 0 3
+4 +1 52 52 0 0 5 0 0 2
+4 +1 52
+4 +1 52 0 0 4 0 0 2
+5 +2 52
+4 +1 52
+4 +1 52
+5 +1 52
+2 +1 52
+3 +1 52
+3 +1 52
+6 +1 6 6
+4 +4 6
+4 +1 6
+7 +1 6
+6 +6 6
+4 +1 6
+7 +1 6 0 0 2 0 0 1
+7 * 6
+9 +4 6
+4 +1 6
+6 +3 6 6 0 0 1 0 0 1
+5 +1 6 6 0 0 2 0 0 1
+5 +1 6
+4 +3 6
+5 +1 6
+5 +1 6
+4 +6 6
+4 +1 6
+4 +1 6 0 0 1 0 0 1
+4 +1 6
+4 +1 6
+6 +1 6
0x1cdb0 +72 77 0 0 4 0 0 2
+4 +1 77 77 0 0 9 0 0 2
+4 +1 77 77 0 0 14 0 0 3
+4 +1 77
+4 +1 77 0 0 4 0 0 2
+5 +2 77
+4 +1 77
+4 +1 77
+5 +1 77
+2 +1 77
+3 +1 77
+3 +1 77
+6 +2 7 7
+4 +4 7
+4 +1 7
+7 +1 7
+6 +6 7
+4 +1 7
+7 +2 7 0 0 5 0 0 2
+7 * 7
+9 +4 7
+4 +1 7
+6 +3 7 7 0 0 3
+5 +1 7 7
+5 +1 7
+4 +3 7
+5 +1 7
+5 +1 7
+4 +6 7
+4 +1 7
+4 +1 7 0 0 5 0 0 2
+4 +1 7
+4 +1 7
+6 +1 7
0x1cef0 +74 147
+5 +2 147
+4 +1 147
+4 +1 147
+3 +1 147
-11 -3 232 0 0 4 0 0 2
+4 +1 232
+4 +1 232
+3 +1 232 0 0 4 0 0 2
+2 +1 208
+3 * 208
+1 * 208
+10 +5 208
+4 +6 208 208
+4 +1 208 208
+4 +8 208
+2 +1 208 208
-14 -16 2762
+4 +6 2762 2762
+4 +1 2762 2762
+4 +8 2762
+2 +1 2762 2762

fl=(68)
fn=(262)
0xf9f0 66 108 0 108 4 0 0 2
+1 * 108
+3 +5 108
+2 * 108
+4 -5 108
+4 +3 108 108 0 4 6 0 2 2
+4 * 108 108 0 0 7 0 0 2
+4 +3 108 108 0 0 14 0 0 4
+7 -1 108 108 0 0 14 0 0 4
+4 * 108
+4 -3 108 108
+4 +5 108 108 0 0 102 0 0 28
+4 * 108 108
+4 * 108
+3 * 108
+4 * 108
+4 * 108
+4 +1 108 108 0 0 7 0 0 2
+3 -1 108 0 108
+5 +1 108
+3 * 108 108 0 0 12 0 0 6
+3 +5 108 0 0 4 0 0 2
+3 * 108
+6 +4 108 108 0 0 105 0 0 68
+4 * 108
+6 +4 108 108 0 0 15 0 0 4
+7 * 108
+3 * 108
+6 +4 108 108 0 0 13 0 0 4
+4 +1 108 108 0 0 85 0 0 17
+4 * 108
+5 * 108
+4 * 108 108 0 0 6 0 0 2
+7 * 108
+4 +2 108 0 0 4 0 0 1
+5 * 108 108 0 0 23 0 0 7
+4 * 108
+3 * 108
+4 +7 108 108 0 0 1
+8 * 108
+2 -1 108
+6 +1 108
+6 +10 108 108
+2 * 108 108 0 0 14 0 0 4
+7 * 108
+5 * 108 0 108 0 0 2
+2 * 108 0 108
+2 * 108
+3 * 108
+6 * 108 0 0 4 0 0 2
+3 * 108 0 108
cfi=(6)
cfn=(172)
calls=108 0xa9d0 806 
* * 98940 24665 8786 195 1024 88 80 418 22
+5 * 108
+3 +4 108 108
+8 * 108
+2 * 108 108
+1 * 108 108
+1 * 108
+2 +10 108 108
+5 * 108
+3 * 108
+2 * 108
+3 * 108
+2 * 108 108 0 0 3
+3 +16 108 108
+4 -8 108 108
+4 +8 108
+3 * 108
+3 * 108
+6 +4 108 108 0 5 2 0 2 2
+6 * 108
+2 * 108
fi=(5)
+2 +90 108 0 108
fe=(68)
+3 -86 108
+4 * 108 108
+1 * 108 108
fi=(113) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/x86_64/dl-irel.h
0xfb90 32 5 0 5 3 0 0 2
cob=(3)
cfi=(185) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/memset.S
cfn=(2418) memset
calls=1 0x8f1b0 -4 
* * 5 3 0 2 2 0 1
cob=(4)
cfi=(58)
cfn=(210)
calls=1 0x16b30 -7 
* * 5 3 0 2 0 0 2
cob=(4)
cfi=(64)
cfn=(222)
calls=1 0x17b70 -7 
* * 5 3 0 2 2 0 2 1
cob=(3)
cfi=(53)
cfn=(198)
calls=1 0x8f14b -32 
* * 18 4 0 2 2 0 2 2
cob=(3)
cfi=(46)
cfn=(1046) strcmp
calls=1 0x89cd0 +55 
* * 5 3 0 2 2 0 2
+2 * 5
fe=(68)

fl=(35)
fn=(230)
0x119f0 344 2
+7 +1 2
+7 +4 2 0 0 1 0 0 1
+3 * 2
+3 * 2
+4 * 2
+3 * 2
+4 * 2
+3 * 2
+3 * 2
+4 +1 2 2 0 0 2 0 0 1
+2 * 2
+3 * 2
-32 -1 2
+3 * 2
+3 * 2
+4 * 2
+3 * 2
+4 * 2
+3 * 2
+3 * 2
+4 +1 2 2
+2 * 2
+3 * 2
+2 * 1
+8 -1 6
+3 * 6
+3 * 6
+4 * 6
+3 * 6
+4 * 6
+3 * 6
+3 * 6
+4 +1 6 6 0 0 2 0 0 1
+2 * 6
+3 * 6
+2 * 4
+3 -3 4
+3 * 4
-3 * 3
+3 * 3
+2 * 1 1
+6 * 2
+3 +4 2
+4 -4 2
+3 * 2
-7 +4 1
+4 -4 1
+3 * 1
+2 * 1 1
+3 * 1 1
+1 +3 1
+3 * 1

fn=(144)
0x116f0 45 1 0 1 1 0 0 1
+2 * 1 0 1
+2 +7 1
+2 -7 1 0 1
+1 * 1 0 1
+1 * 1
+3 +7 1
+5 -7 1 0 0 1 0 0 1
+3 * 1
+7 * 1
+7 +7 1 0 1
cfi=(24)
cfn=(112)
calls=1 0x1b320 +32 
* * 5 1
+5 +1 1
+2 * 1
+2 +2 1
+3 * 1
+2 * 1
+5 * 1
+2 * 1 0 1
cfi=(37)
cfn=(122)
calls=1 0x1b2a0 -21 
* * 10 1
+5 * 1
+2 * 1
+2 +2 1 1
+5 +3 1
+3 -3 1 0 1
+4 +3 1
+9 +13 1
+2 * 1 0 1
cfi=(24)
cfn=(132)
calls=1 0x1b420 +11 
* * 5 1
+5 +3 1
+7 * 1
+3 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+5 -14 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+5 * 1
+3 * 1
+2 * 1 0 1
cfi=(26)
cfn=(72)
calls=1 0x1b440 -29 
* * 33 7 6
+5 * 1
+3 * 1

fn=(108)
0x11980 288 347 0 347 4 0 0 2
+1 * 347 0 347 0 0 5
+1 * 347
+3 * 347
+3 * 347
+4 +1 347 347 0 0 31 0 0 6
+4 * 347 0 347
cfi=(19)
cfn=(54)
calls=347 0x1bb00 144 
* * 10861 2316 0 44 68 0 25 14
+5 * 347
+2 +1 347
+5 -1 347
+2 +3 347 347
+4 +2 347
+3 * 347
+11 +4 343 343
+4 -4 343
+3 * 343
+2 +1 363 363 0 0 42 0 0 8
+3 * 363
+3 * 363 0 363 4 0 0 2
cfi=(19)
cfn=(54)
calls=363 0x1bb00 144 
* * 11648 2462 0 9 26 0 9 5
+5 * 363
+2 * 363
+2 -5 20
+5 +11 20
+4 * 20
+2 * 20 20
+1 * 20 20
+1 * 20 20
+11 * 327
+4 -1 327
+2 +1 327
+2 * 327 327
+1 * 327 327
+1 * 327 327

fl=(12)
fn=(24)
0x1a500 34 1 0 1 1 0 0 1
+1 * 1 0 1
+1 * 1
+3 * 1
+4 +8 1 1
+7 * 1
+3 * 1
+2 * 1 1 0 0 1 0 0 1
+6 * 1
+2 * 1
+2 +4 1
+4 * 1
+34 +16 1 0 0 1 0 0 1
+4 * 1
+3 * 1 1
+1 * 1 1
+1 * 1 1

fl=(13)
fn=(28)
0x19d40 30 3 3 0 1 0 0 1
+3 +3 3 3
+3 * 3
+3 * 3
+2 * 1
+5 +13 65
+4 -13 65 65
+3 * 65
+3 * 65
+2 +2 67 67 0 0 34 0 0 34
+3 * 67
+2 +1 8 8
+4 * 8
+2 * 2 2
+4 * 2
+2 +5 2
+4 -3 2
+4 +3 2 0 2
+3 +2 2 2
+10 -12 1 0 0 1 0 0 1
+2 +19 1 1

fl=(27)
fn=(74)
0x1dc00 53 19 0 0 1 0 0 1
+4 +1 19
+3 +1 19
+4 +1 19
+4 +1 19
+5 +2 19
+4 +1 19
+2 +1 15
+4 +1 15
+6 +1 3
+4 +1 3 0 3 0 0 1 0 0 1
+4 +1 3 0 3
+6 +1 3
+2 +2 3 3
+28 +9 4 0 0 1 0 0 1
+4 +1 4 0 4 0 0 4 0 0 4
+4 +1 4
+4 +1 4 0 4 0 0 3 0 0 3
+6 +1 4 0 4 0 0 1 0 0 1
+5 +1 4 0 4 0 0 1 0 0 1
+6 +1 4 0 4 0 0 1 0 0 1
+5 +1 4 0 4
+6 +1 4 0 4 0 0 1 0 0 1
+5 +1 4 0 4
+6 +1 4
+3 +1 4
+4 +1 4
+3 +1 4
+2 * 4
+1 +3 4 0 4
+4 +1 4 0 4
+5 +1 4 0 4
+5 +1 4 0 4
+5 +1 4
+4 +1 4
+3 +1 4
-26 -6 56 0 56 0 0 53 0 0 53
+4 +1 56 0 56
+5 +1 56 0 56
+5 +1 56 0 56
+5 +1 56
+4 +1 56
+3 +1 56
+2 +1 4 4
+2 +3 12 0 0 1 0 0 1
+5 +1 12
+3 +1 12
+2 +1 3
+3 +1 3
+2 +1 1
+3 +1 1
+4 +3 1
+3 +1 1
+6 +1 1 0 1
+5 +1 1 1
+1 +2 2 0 2
+2 +1 2 0 2
+4 +1 2 2
+1 +2 9 0 9 0 0 2 0 0 2
+3 +1 9 0 9 0 0 1 0 0 1
+5 +1 9 9

fl=(21) /build/glibc-bfm8X4/glibc-2.23/posix/../sysdeps/unix/syscall-template.S
fn=(62) uname
0x1b550 84 1 0 0 1 0 0 1
+5 * 1
+2 * 1
+6 * 1
+2 +1 1 1

fl=(34)
fn=(102)
0x1b5d0 26 13 0 13 1 0 1 1 0 1
+3 +9 13
+3 +1 13 13
+7 * 13
+4 +1 13 0 13
+4 +4 13 0 13
+4 +1 13 0 13
+4 +1 13 0 13
+4 +1 13 0 13
+4 +1 13
+5 +2 13 13 0 1 0 0 1
+7 * 13
+4 +2 13 0 13
+4 +1 13 13
+4 +1 13
+1 +2 13 13
+7 * 13
+4 +2 13 0 13
+4 +4 13
+2 +1 13 13

fl=(74)
fn=(288)
0x14bf0 182 1 1 0 1 0 0 1
+7 * 1
+3 * 1
+6 * 1 0 0 1 0 0 1
+7 * 1
+3 +1 1 1
+3 * 1
+3 * 1
+6 * 1
+10 +1 1 1
+7 * 1
-7 * 5 5 0 0 2
+7 * 5
+2 * 6 6
+7 * 6
+2 +1 1 1
+7 * 1
+77 +3 1 1
+4 * 1
+2 +4 1 1
+4 -9 5 5 0 1 0 0 1
+4 * 5
+3 * 5

fl=(31)
fn=(164)
0x13560 354 1 0 1 1 0 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 +2 1 1
+7 +11 1 1
+7 * 1
+3 * 1 0 1
cfi=(17)
cfn=(44)
calls=1 0x19e00 52 
* * 76 15 13
* * 1 1
+5 +1 1
+3 * 1
+2 +7 1 0 0 1 0 0 1
+8 * 1
+3 +4 1
+2 -57 1
+5 +57 1
+4 * 1
+3 * 1 0 1 0 0 1 0 0 1
+7 * 1 0 1 0 0 1 0 0 1
+11 * 1
+4 * 1
+3 * 1
+6 * 1
+3 * 1 0 1
* * 287 0 286 0 0 34 0 0 34
+3 -58 1 1 0 1 0 0 1
+7 * 1
+4 +1 1
+4 * 1 0 1
cfi=(17)
cfn=(36)
calls=1 0x19f10 103 
* * 38 7 5
* * 1 1
+5 +1 1
+3 * 1
+2 +3 1 0 1 0 0 1 0 0 1
+3 +6 1
+4 * 1 0 1
+4 +64 1
+3 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1

fn=(200)
0x13d70 890 2 0 2 1 0 0 1
+2 * 2
+3 * 2 0 2
+1 +9 2 2 0 0 2
+7 -9 2 0 2
+1 +6 2 2 0 1 0 0 1
+7 * 2
+26 +8 2 2 0 0 2
+4 * 2
+3 * 2
+2 * 2
+4 * 2
+3 +41 2 0 2 0 0 1
+4 +1 2 2 0 0 2
+7 * 2
+4 * 2 0 2 1 0 0 1
+4 +1 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2

fn=(90)
0x13260 115 1 1 0 1 0 0 1
+7 * 1
+2 +1 1 1
+7 * 1 1

fn=(162)
0x132c0 138 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1
+4 +6 1 1
+7 * 1
+3 * 1
+6 +3 1 1
+5 * 1
+6 +36 1 1
+4 * 1
+3 * 1
+6 +2 1 1
+3 * 1
+3 * 1 0 0 1 0 0 1
+6 * 1
+4 * 1
+3 * 1
+2 * 1
+3 * 1
+2 * 1
+6 * 1
+57 -2 1
+4 +2 1
+3 * 1
+6 +3 2 2 0 1 0 0 1
+7 -1 2 2
+7 +5 2
+3 * 2 2
+7 -5 2
+4 * 2
+3 * 2
+3 +3 2 0 0 1 0 0 1
+3 * 2
+5 * 2
+4 +2 2
+3 * 2
+3 * 2
+3 * 2
+3 * 2
+2 +16 2
+4 * 2
+2 * 2
+3 +2 2
+4 * 2
+3 -2 2
+4 * 2
+4 +2 2
+3 * 2
+11 +10 2 0 2 1 0 0 1
+7 -37 2 2 0 0 1 0 0 1
+3 * 2
+4 +25 2
+3 -25 2
+3 * 2
+6 * 1
+8 * 1
+2 +40 1 0 1
+7 * 1
+3 * 1
+4 * 1
+6 +1 1 0 1
+7 +51 1 0 1 1 0 0 1
+7 +1 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1

fn=(148)
0x13160 49 2 0 0 1 0 0 1
+4 +3 2 2
+7 * 2
+2 * 2 2
+7 * 2
+4 +48 2 0 2
+7 +4 2 0 0 1 0 0 1
+4 * 2 2

fn=(232)
0x13610 450 1 0 0 1 0 0 1
+3 * 1
+6 -1 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1
+4 +5 1 1 0 0 1
+4 +6 1 1
+7 * 1 0 1
+5 * 1 1 0 0 1
+4 -6 1 0 1
+5 +6 1 0 0 1 0 0 1
+6 -4 1 0 1
+9 +16 1 1
+7 -15 1
+3 * 1 1
+5 * 1
+2 +20 1 1
+4 * 1
+3 * 1
+3 * 1
+4 * 1
+3 * 1
+6 +6 1
+4 * 1
+3 * 1 0 0 1 0 0 1
+6 * 1
+3 * 1
+3 * 1
+3 * 1
+5 * 1
+4 * 1
+4 * 1
+3 * 1 0 1
+4 * 1
+7 * 2 2
+4 * 2
+4 * 2
+3 * 2
+6 +3 2 2 0 0 1
+4 +1 2
+3 * 2 0 0 1 0 0 1
+6 +6 2 2
+4 * 2 2
+7 * 2
+6 +3 2 2 0 0 1
+7 -2 2
+3 * 2
+4 +2 2
+3 * 2
+4 * 2 2
+5 * 2 0 2
+7 +1 2 0 2
+4 +3 2 2 0 1 0 0 1
+7 -1 2
+4 * 2
+4 * 2
+2 +4 2
+3 * 2
+6 +1 2 2 0 0 1
+7 * 2 2
+7 * 2
+3 * 2
+6 +2 2
+3 * 2
+6 +9 2 2
+7 * 2 2 0 1 0 0 1
+5 * 2
+3 * 2
+3 * 2
+3 * 2 0 2
cfi=(25)
cfn=(70)
calls=2 0x1dcf0 61 
* * 37 4 2 0 1 1 0 0 1
+5 * 2
+3 * 2
+2 * 2
+3 * 2 0 2
cfi=(27)
cfn=(74)
calls=2 0x1dc00 53 
* * 44 2 14 0 0 2 0 0 2
+5 * 2 2
+4 * 2 2
+7 -38 2
+4 * 2
+3 * 2
+81 +52 1 1 0 1 0 0 1
+5 * 1 0 1
+3 +2 1 1
+5 +1 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1

fl=(1) ???
fn=(0) 0x0000000000000c30
0xc30 0 1 0 0 1 0 0 1
+3 0 1 0 1 0 0 1 0 0 1
cfi=(2)
cfn=(2)
calls=1 0x19b0 353 
* 0 2040173 495055 188092 689 11311 2092 681 6654 1347
+5 0 1
+3 0 1 1 0 1 0 0 1
+6 0 1 1
+1 0 1
+4 0 1
+2 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1 1 0 0 1
+7 0 1
+5 0 1
+4 0 1
+2 0 1 0 1
cfi=(65)
cfn=(242)
calls=1 0x10740 80 
* 0 94104 17686 14814 282 1379 3266 279 914 3220
+5 0 1
+7 0 1
+3 0 1
cob=(5) /home/nathan/DEV/PC-optimisation/pdc_evol_model
cfi=(66) ???
cfn=(596) _start
calls=1 0x4015b0 0 
* 0 3345818774 1232529955 845109130 173461 1166518 990946 2439 1725 925464

fl=(37)
fn=(122)
0x1b2a0 34 6 0 0 1 0 0 1
+3 -1 6
+2 +1 6
+2 +1 6
+3 * 6
+3 * 6
+5 * 6
+2 * 6
+6 * 6
+2 +4 6 6

fl=(9)
fn=(60)
0x19b70 45 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1 0 0 1 0 0 1
+7 +2 1 1
+7 * 1
+3 * 1
0x19c37 +85 1 0 0 1 0 0 1
+7 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+8 -45 1 0 0 1 0 0 1
+5 * 1
+3 * 1 0 1 0 0 1 0 0 1
cfi=(21)
cfn=(62)
calls=1 0x1b550 -3 
* * 5 1 0 1 0 0 1
+5 * 1
+2 +15 1
+7 -15 1
+2 +20 1
+3 -1 1
+2 +3 1 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+3 * 1
-9 * 2 2
+3 * 2
+3 * 2
+3 * 2
+2 +4 3 3
+4 -2 3
+4 * 3 0 0 1 0 0 1
+3 +2 3
+3 * 3
+4 * 3
+2 * 1
+4 +2 1
+3 +1 1
+4 * 1
+4 -3 1 1
+3 * 1
+3 * 1
+4 * 1
+2 +7 3
+3 -1 3
+4 +4 3
+4 -2 3
+2 +2 3
+3 * 3
+2 * 2
+4 * 2
+7 +5 1 0 0 1 0 0 1
+4 * 1

ob=(5)
fl=(171) /home/nathan/DEV/PC-optimisation/src/BP_Move.h
fn=(1962) BP_Move::BP_Move(BP_Move*)
0x404990 16 259111 0 259111 148 0 0 1
+1 * 259111
+3 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 +16 
* * 12437332 4923110 3109336
* * 259111 259111
+5 * 259111 0 259111
+4 * 259111 0 259111
+4 +1 259111 259111
+4 * 259111 259111 0 0 136056
+3 * 259111 259111
+4 * 259111 0 259111
+3 +1 259111 259111
+4 * 259111 259111
+2 * 259111 259111
+4 * 259111 0 259111
+2 +1 259111
+1 * 259111 259111
+1 * 259111 259111

fn=(1714) BP_Move::BP_Move(int, int)
0x41ca40 11 1120 0 1120
+1 * 1120
+3 * 1120
+4 * 1120 0 1120
cob=(3)
cfi=(100)
cfn=(626)
calls=1120 0x10a310 +21 
* * 53764 21281 13444 0 0 1 0 0 1
* * 1120 1120
+5 * 1120 0 1120
+4 * 1120 0 1120
+3 * 1120 0 1120
+3 +1 1120 1120
+4 * 1120 1120
+3 * 1120 0 1120
+2 +1 1120 1120
+4 * 1120 1120
+3 * 1120 0 1120
+3 +1 1120
+1 * 1120 1120
+1 * 1120 1120

fl=(175) /home/nathan/DEV/PC-optimisation/src/Organism.h
fn=(2012) Organism::Organism(DNA*)
0x40539a 23 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 +9 
* * 7160 2833 1796 0 298 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+4 * 149 0 149 0 0 39 0 0 39
+7 * 149 149
+4 * 149 0 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfi=(157) /usr/include/c++/5/bits/stl_vector.h
cfn=(2014) std::vector<RNA*, std::allocator<RNA*> >::vector()
calls=149 0x405da4 253 
* * 45167 17438 12238 892 1041 71 6 5 71
+5 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(147) /usr/include/c++/5/bits/unordered_map.h
cfn=(2024) std::unordered_map<int, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > > >::unordered_map()
calls=149 0x40518e 132 
* * 232804 89413 62511 2235 2539 419 15 10 123
+5 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(147)
cfn=(2062) std::unordered_map<int, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > > >::unordered_map()
calls=149 0x40537a 132 
* * 232788 89409 62495 1341 1188 600 9 4 156
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2088) std::vector<Protein*, std::allocator<Protein*> >::vector()
calls=149 0x405e04 253 
* * 45167 17438 12238 149 445 37 1 1 37
+5 * 149 149
+4 * 149 0 0 149 0 0 1
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2088)
calls=149 0x405e04 253 
* * 45151 17434 12222 0 149 80 0 1 80
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2088)
calls=149 0x405e04 253 
* * 45151 17434 12222 0 0 183 0 0 35
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2088)
calls=149 0x405e04 253 
* * 45151 17434 12222 0 0 76 0 0 76
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149 149 0 0 1
cfi=(147)
cfn=(1370) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::unordered_map()
calls=149 0x4044cc 132 
* * 232742 89401 62435 1937 1788 406 13 12 110
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2098) std::vector<Pump*, std::allocator<Pump*> >::vector()
calls=149 0x405e24 253 
* * 45167 17438 12238 742 445 82 4 1 82
+5 * 149 149
+4 * 149
+6 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2108) std::vector<Move*, std::allocator<Move*> >::vector()
calls=149 0x405e44 253 
* * 45167 17438 12238 148 297 184 1 1 36
+5 * 149 149
+4 * 149 149
+8 * 149 0 149 0 0 34 0 0 34
+8 * 149 149
+4 * 149 0 149
+10 * 149 149
+4 * 149 0 149
+10 * 149 149
+4 * 149 0 149
+10 * 149 149
+4 * 149 149
+4 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fl=(116) /home/nathan/DEV/PC-optimisation/src/GridCell.cpp
fn=(1134) _GLOBAL__sub_I__ZN8GridCell15diffuse_proteinEv
0x40a6df 49 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -17 
* * 69 25 16
* * 1 1
+5 * 1
+5 * 1
+5 * 1 0 1
cfn=(1136) __static_initialization_and_destruction_0(int, int)
calls=1 -86 * 
* * 164 49 44 1 1 1 1
+5 * 1 1
+1 * 1 1

fn=(1136)
0x40a69c 49 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -17 
* * 52 20 16 0 1
* * 1 1
+5 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+4 * 1
+2 * 1 1
+7 * 1
fi=(102) /usr/include/c++/5/iostream
+2 +25 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(638)
calls=1 0x9d7e0 -74 
* * 24 9 7
* * 1 1
+5 * 1
+5 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 -17 
* * 66 13 15 0 0 1
* * 1 1
fe=(116)
+5 -25 1
+1 * 1 1
+1 * 1 1

fl=(117) /home/nathan/DEV/PC-optimisation/src/Organism.cpp
fn=(1138) _GLOBAL__sub_I__ZN8Organism13translate_RNAEv
0x40f5cd 494 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 77 27 16 0 0 1
* * 1 1
+5 * 1
+5 * 1
+5 * 1 0 1
cfn=(1140) __static_initialization_and_destruction_0(int, int)
calls=1 -86 * 
* * 164 49 44 1 1 0 1
+5 * 1 1
+1 * 1 1

fn=(2118) Organism::init_organism()
0x40d720 238 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7160 2833 1796 0 148 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2120) Organism::translate_RNA()
calls=149 0x40c118 10 
* * 835207044 301375936 210399094 38887 429692 297798 79 37 273963
+5 +1 149 149 0 48 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(2200) Organism::translate_protein()
calls=149 0x40c2d4 28 
* * 20997249 8034186 5433406 51858 57645 6632 372 231 557
+5 +1 149 149 0 149
+4 * 149
+3 * 149 0 149
cfn=(2654) Organism::translate_pump()
calls=149 0x40c99a 121 
* * 35134671 13016061 8982465 13800 24713 9520 57 27 8187
+5 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2736) Organism::translate_move()
calls=149 0x40cc32 -97 
* * 64562530 23324863 16306249 9122 44141 23725 47 21 22215
+5 +1 148
+1 * 148 148
+1 * 148 148

fn=(2120)
0x40c118 10 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 +22 
* * 7156 2832 1792 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +2 149 0 149 149 0 0 1
+8 +1 149 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(1886) std::vector<BP*, std::allocator<BP*> >::begin()
calls=149 0x405c08 547 
* * 19374 7749 5070 0 447 0 0 1
+5 * 149 0 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(1890) std::vector<BP*, std::allocator<BP*> >::end()
calls=149 0x405c56 565 
* * 19523 7749 5070 0 0 149 0 0 1
-11 * 68689 68689
+4 * 68689 68689 0 0 14
+4 * 68689
+3 * 68689 0 68689
cfi=(157)
cfn=(1890)
calls=68689 0x405c56 565 
* * 8998259 3571828 2335426 0 8 3
+5 * 68838 0 68838
+4 * 68838
+4 * 68838
+4 * 68838
+3 * 68838
+3 * 68838 0 68838
cfi=(164) /usr/include/c++/5/bits/stl_iterator.h
cfn=(1892) bool __gnu_cxx::operator!=<BP**, std::vector<BP*, std::allocator<BP*> > >(__gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > > const&, __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > > const&)
calls=68838 0x405ca7 841 
* * 12666196 5025175 3373066 0 2
+5 * 68838
+2 * 68838 0 0 149 0 0 1
+6 +1 68689
+4 * 68689
+3 * 68689 0 68689
cfi=(164)
cfn=(1896) __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > >::operator*() const
calls=68689 0x405d12 753 
* * 3983966 1648537 1030339 0 149 0 0 1
+5 * 68689 68689 0 0 8718
+3 * 68689 68689 0 0 41014
+2 * 68689
+2 * 68689
+3 * 68689
+2 * 68689
+2 +1 5662
+4 * 5662
+3 * 5662 0 5662
cfi=(164)
cfn=(1896)
calls=5662 0x405d12 753 
* * 328400 135889 84934 0 634
+5 * 5662 5662
+3 +1 5662 5662
+4 * 5662
+4 * 5662
+3 * 5662 0 5662
cfi=(164)
cfn=(1896)
calls=5662 0x405d12 753 
* * 328400 135889 84934
+5 * 5662 5662
+3 * 5662 5662
+5 * 5662 0 5662
+5 * 5662
+5 * 5662 0 5662
cob=(8)
cfi=(94)
cfn=(1312)
calls=5662 0x8de60 -16 
* * 1082596 182411 164368 0 10 2796 0 3 2794
* * 5662 5662
+5 * 5662
+3 * 5662 5662
+5 * 5662 0 5662
+4 * 5662 5662
+5 * 5662
+3 * 5662 0 5662
cfi=(176) /home/nathan/DEV/PC-optimisation/src/RNA.h
cfn=(2124) RNA::RNA(float, float)
calls=5662 0x40f760 +1 
* * 2117596 826654 583194 480 3590 149 2 1 1
+5 * 5662 0 5662
+4 * 5662
+5 +1 63027 0 0 149 0 0 1
+4 * 63027
+3 * 63027 0 63027 149 0 0 1
cfi=(164)
cfn=(1896)
calls=63027 0x405d12 753 
* * 3655570 1512649 945409 0 297 1 0 1 1
+5 * 63027 63027
+3 * 63027 63027
+2 * 63027
+3 * 63027
+3 * 63027
+2 * 63027
+2 +1 4172 4172
+4 * 4172
+3 * 4172
+2 +1 2384 2384
+4 * 2384
+4 * 2384
+4 * 2384
+3 * 2384
+3 * 2384 0 2384
cfi=(157)
cfn=(2126) std::vector<RNA*, std::allocator<RNA*> >::push_back(RNA* const&)
calls=2384 0x40ff42 913 
* * 3682272 1386205 954418 10232 22388 4869 50 25 611
+5 +1 2384 0 2384
+8 * 2384
+2 +2 58855 58855 0 149 0 0 1
+4 * 58855
+3 * 58855
+2 +1 34419
+4 * 34419
+3 * 34419 0 34419
cfi=(164)
cfn=(1896)
calls=34419 0x405d12 753 
* * 1996306 826057 516289
+5 * 34419 34419
+3 * 34419
+5 * 34419 0 34419
cob=(8)
cfi=(94)
cfn=(1312)
calls=34419 0x8de60 -23 
* * 6243334 1086946 933848 32 463 14632 0 0 14517
* * 34419 34419
+5 * 34419
+3 * 34419
+3 * 34419
+3 * 34419 0 34419
cfi=(158) /home/nathan/DEV/PC-optimisation/src/BP.h
cfn=(1898) BP::BP(BP*)
calls=34419 0x404b6c +52 
* * 692739264 248785784 174174766 25158 342762 264115 0 0 246230
+5 * 34419 0 34419
+4 * 34419 34419
+4 * 34419
+3 * 34419
+4 * 34419
+3 * 34419
+3 * 34419 0 34419
cfi=(157)
cfn=(1900) std::vector<BP*, std::allocator<BP*> >::push_back(BP*&&)
calls=34419 0x405d44 931 
* * 84617353 31913474 22039913 1640 8449 11083 16 1 9807
+5 -10 68689 0 0 149 0 0 1
+4 * 68689
+5 * 68689
+3 * 68689 0 68689
cfi=(164)
cfn=(2122) __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > >::operator++(int)
calls=68689 0x40fedc 768 
* * 9410401 3709208 2541501 153 301 1 3 2 1
+5 * 68689
+29 +13 149
+1 * 149 149
+4 * 149 149 0 149 0 0 1
+9 * 149
+7 * 149
+4 * 149 149 0 0 149 0 0 1
+1 * 149 149
+2 * 149 149
+1 * 149 149

fn=(2736)
0x40cc32 145 149 0 149
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +1 149 0 149
+4 +2 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2202) std::vector<RNA*, std::allocator<RNA*> >::begin()
calls=149 0x40ffb4 547 
* * 19374 7749 5070
+5 * 149 0 149
+4 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2206) std::vector<RNA*, std::allocator<RNA*> >::end()
calls=149 0x410002 565 
* * 19523 7749 5070 0 0 1 0 0 1
-11 * 2370 2370
+4 * 2370
+4 * 2370
+3 * 2370 0 2370
cfi=(157)
cfn=(2206)
calls=2370 0x410002 565 
* * 310470 123240 80580 0 3
+5 * 2519 0 2519 149 0 0 1
+4 * 2519
+4 * 2519
+4 * 2519
+3 * 2519
+3 * 2519 0 2519
cfi=(164)
cfn=(2208) bool __gnu_cxx::operator!=<RNA**, std::vector<RNA*, std::allocator<RNA*> > >(__gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > > const&, __gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > > const&)
calls=2519 0x410053 841 
* * 463500 183888 123435 0 300 0 0 1
+5 * 2519
+2 * 2519
+6 +1 2371
+4 * 2371
+3 * 2371 0 2371
cfi=(164)
cfn=(2212) __gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > >::operator*() const
calls=2371 0x4100fa 753 
* * 137522 56905 35569
+5 * 2371 2371 0 0 67
+3 * 2371
+3 * 2371 0 2371
cfi=(157)
cfn=(1886)
calls=2371 0x405c08 547 
* * 308234 123293 80618 0 1410 149 0 0 1
+5 * 2371 0 2371
+4 * 2371
+4 * 2371
+3 * 2371 0 2371 149 0 0 1
cfi=(164)
cfn=(2212)
calls=2371 0x4100fa 753 
* * 137522 56905 35569
-7 * 13183
+4 * 13183
+3 * 13183 0 13183
cfi=(164)
cfn=(2212)
calls=13183 0x4100fa 753 
* * 764614 316392 197745
+5 * 15554 15554
+3 * 15554
+3 * 15554 0 15554
cfi=(157)
cfn=(1890)
calls=15554 0x405c56 565 
* * 2037578 808809 528840
+5 * 15554 0 15554
+4 * 15554
+4 * 15554
+4 * 15554
+3 * 15554
+3 * 15554 0 15554
cfi=(164)
cfn=(2214) bool __gnu_cxx::operator< <BP**, std::vector<BP*, std::allocator<BP*> > >(__gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > > const&, __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > > const&)
calls=15554 0x410114 856 
* * 2861940 1135443 762150 0 148 1 0 0 1
+5 * 15554
+2 * 15554
+6 +1 13184
+4 * 13184
+3 * 13184 0 13184
cfi=(164)
cfn=(1896)
calls=13184 0x405d12 753 
* * 764676 316417 197764 0 0 1 0 0 1
+5 * 13184 13184 0 0 2424
+3 * 13184 13184 0 0 8524
+2 * 13184 0 0 149 0 0 1
+3 * 13184
+3 * 13184
+2 * 13184
+2 +2 1481 0 1481
+4 * 1481
+5 +1 11703
+4 * 11703
+3 * 11703 0 11703
cfi=(164)
cfn=(1896)
calls=11703 0x405d12 753 
* * 678778 280873 175549 0 297 0 0 1
+5 * 11703 11703
+3 * 11703 11703
+2 * 11703
+3 * 11703
+3 * 11703
+2 * 11703
+2 +2 888 0 888
+4 * 888
+5 +1 10815
+4 * 10815
+3 * 10815 0 10815 149 0 0 1
cfi=(164)
cfn=(1896)
calls=10815 0x405d12 753 
* * 627274 259561 162229
+5 * 10815 10815
+3 * 10815 10815
+2 +1 10815
+3 * 10815
+2 * 2075 2075
+4 * 2075
+2 * 1187
+5 * 1187
+2 * 9628
+5 -1 9628
+2 * 9628
-2 * 1187
+2 * 1187
+6 +2 1187
+4 * 1187
+3 * 1187 0 1187
cfi=(164)
cfn=(1896)
calls=1187 0x405d12 753 
* * 68850 28489 17809
+5 * 1187 1187
+3 * 1187 1187 0 0 531
+4 +1 1187
+3 * 1187 0 1187 149 0 0 1
cfi=(157)
cfn=(1950) std::vector<BP_Move*, std::allocator<BP_Move*> >::begin()
calls=1187 0x405a2c 547 
* * 154314 61725 40362 448 1046 0 0 1
+5 * 1187 0 1187
+4 * 1187
+4 * 1187
+3 * 1187 0 1187
cfi=(164)
cfn=(1896)
calls=1187 0x405d12 753 
* * 68850 28489 17809 0 148 1 0 0 1
-7 * 35015
+4 * 35015
+3 * 35015 0 35015
cfi=(164)
cfn=(1896)
calls=35015 0x405d12 753 
* * 2030870 840360 525225
+5 * 36202 36202
+3 * 36202 36202
+4 +1 36202
+3 * 36202 0 36202
cfi=(157)
cfn=(1954) std::vector<BP_Move*, std::allocator<BP_Move*> >::end()
calls=36202 0x405a7a 565 
* * 4742466 1882505 1230872 2 149
+5 * 36202 0 36202
+4 -2 36202
+4 * 36202
+4 * 36202
+3 * 36202
+3 * 36202 0 36202
cfi=(164)
cfn=(2738) bool __gnu_cxx::operator< <BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >(__gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > > const&, __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > > const&)
calls=36202 0x4103b1 856 
* * 6661180 2642749 1773910 149 148 1 1 0 1
+5 * 36202
+2 * 36202
+2 +3 35016
+4 * 35016 0 0 149 0 0 1
+3 * 35016 0 35016
cfi=(164)
cfn=(1960) __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >::operator*() const
calls=35016 0x405b36 753 
* * 2030932 840385 525244 150 0 149 0 0 1
+5 * 35016 35016 0 0 5284
+3 * 35016 35016 0 0 17807
+3 * 35016
+4 * 35016
+3 * 35016 0 35016
cfi=(164)
cfn=(1960)
calls=35015 0x405b36 753 
* * 2030874 840361 525229
+5 * 35015 35015
+3 * 35015 35015
+4 * 35015
+5 * 35015 0 35015
cob=(8)
cfi=(94)
cfn=(1312)
calls=35015 0x8de60 0 
* * 7257646 1152727 1173665 593 0 12755 0 0 12607
* * 35015 35015
+5 * 35015
+3 * 35015
+3 * 35015
+3 * 35015
+3 * 35015 0 35015
cfi=(188) /home/nathan/DEV/PC-optimisation/src/Move.h
cfn=(2740) Move::Move(int, int)
calls=35015 0x40f604 11 
* * 2416039 980421 735319
+5 * 35015 0 35015
+4 +1 35015 35015
+4 * 35015
+7 * 35015
+4 * 35015
+3 * 35015
+3 * 35015 0 35015
cfi=(157)
cfn=(2742) std::vector<Move*, std::allocator<Move*> >::push_back(Move* const&)
calls=35015 0x410458 913 
* * 18742816 7235644 4952317 6142 5113 10516 35 16 9598
+5 -4 35015
+4 * 35015
+5 * 35015
+3 * 35015 0 35015
cfi=(164)
cfn=(2812) __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >::operator++(int)
calls=35015 0x4103f2 768 
* * 4797063 1890812 1295563 149 297 1 1 1 1
+5 * 35015
+5 -9 13183 0 0 149 0 0 1
+4 * 13183
+5 * 13183
+3 * 13183 0 13183
cfi=(164)
cfn=(2122)
calls=13183 0x40fedc 768 
* * 1806075 711883 487775 0 0 149 0 0 1
+5 * 13183
+5 -1 2370 0 0 149 0 0 1
+4 * 2370
+5 * 2370
+3 * 2370 0 2370
cfi=(164)
cfn=(2216) __gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > >::operator++(int)
calls=2370 0x410094 768 
* * 324694 127981 87694 0 183 0 0 1
+5 * 2370
+13 +20 148
+1 * 148 148
+4 * 148 148
+9 * 148
+7 * 148
+4 * 148 148
+1 * 148 148 0 0 114
+2 * 148 148 0 148 0 0 1
+2 * 148 148
+1 * 148 148

fn=(2818) Organism::build_regulation_network()
0x40ce84 170 1 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 1
+9 * 1 0 1
+4 * 1
+2 +1 1 0 1
+7 +1 1 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2202)
calls=1 0x40ffb4 547 
* * 134 53 38 0 2 0 0 1
+5 * 1 0 1
+4 * 1 1 0 1 0 0 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2206)
calls=1 0x410002 565 
* * 135 53 38
-11 * 16 16
+4 * 16
+4 * 16
+3 * 16 0 16
cfi=(157)
cfn=(2206)
calls=16 0x410002 565 
* * 2096 832 544
+5 * 17 0 17
+4 * 17
+4 * 17
+4 * 17
+3 * 17
+3 * 17 0 17
cfi=(164)
cfn=(2208)
calls=17 0x410053 841 
* * 3132 1242 837 0 0 1 0 0 1
+5 * 17
+2 * 17
+6 +1 16 16
+4 * 16
+6 * 16
+3 * 16 0 16 1 0 0 1
cfi=(157)
cfn=(2820) std::vector<Protein*, std::allocator<Protein*> >::begin()
calls=16 0x40a9e2 547 
* * 2088 834 552 1 3 1 1 2 1
+5 * 16 0 16
+4 * 16 16
+4 * 16
+6 * 16
+3 * 16 0 16
cfi=(157)
cfn=(2824) std::vector<Protein*, std::allocator<Protein*> >::end()
calls=16 0x40aa30 565 
* * 2104 834 552 2 0 0 2
-13 * 16 16 0 1
+4 * 16
+6 * 16
+3 * 16 0 16
cfi=(157)
cfn=(2824)
calls=16 0x40aa30 565 
* * 2096 832 544
+5 * 32 0 32
+4 * 32
+4 * 32
+4 * 32
+3 * 32
+3 * 32 0 32
cfi=(164)
cfn=(2826) bool __gnu_cxx::operator!=<Protein**, std::vector<Protein*, std::allocator<Protein*> > >(__gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > > const&, __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > > const&)
calls=32 0x40aa81 841 
* * 5900 2339 1580 1 1 1 1 1 1
+5 * 32
+2 * 32
+6 +1 16
+4 * 16
+3 * 16 0 16 1 0 0 1
cfi=(164)
cfn=(2212)
calls=16 0x4100fa 753 
* * 932 385 244 0 0 1 0 0 1
+5 * 16 16
+3 * 16 16 0 0 3
+5 * 16 16 0 0 1
+8 * 16
+4 * 16
+4 * 16 0 16
+3 +1 16
+4 * 16
+3 * 16 0 16
cfi=(164)
cfn=(2830) __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > >::operator*() const
calls=16 0x40aaec 753 
* * 932 385 244 1 0 0 1
+5 * 16 16 0 0 1
+3 * 16 16
+5 * 16 16
+8 * 16
+4 * 16 0 0 1 0 0 1
+4 * 16 0 16
+3 +1 16 16
+3 * 16
+6 * 16 16
+3 * 16
+2 * 16
+2 * 16 16 0 0 16 0 0 16
+9 * 16
+4 * 16
+3 * 16
+2 * 16
+4 * 16
+3 * 16
+2 +1 2
+4 * 2
+3 * 2 0 2
cfi=(164)
cfn=(2830)
calls=2 0x40aaec 753 
* * 120 49 34 0 1 1 0 1 1
+5 * 2 2
+3 * 2 0 0 1 0 0 1
+4 * 2 2
+4 * 2
+4 * 2
+4 * 2
+3 * 2
+3 * 2 0 2
cfi=(147)
cfn=(2834) std::unordered_map<int, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > > >::operator[](int const&)
calls=2 0x410530 667 
* * 21494 7989 6045 128 80 58 97 48 53
+5 * 2
+3 * 2
+3 * 2 0 2
cfi=(147)
cfn=(2964) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::operator[](float const&)
calls=2 0x41055a 667 
* * 15184 5600 4213 83 46 33 70 32 32
+5 * 2
+3 * 2 2
+3 * 2
+6 * 2 2
+3 * 2
+2 * 2
+2 * 2 2
+9 * 2 0 2
+4 -4 2
+4 * 2
+5 * 2
+3 * 2 0 2
cfi=(164)
cfn=(2832) __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > >::operator++(int)
calls=2 0x4104ca 768 
* * 274 108 74
-12 * 14 0 0 1 0 0 1
+4 * 14
+5 * 14
+3 * 14 0 14
cfi=(164)
cfn=(2832)
calls=14 0x4104ca 768 
* * 1926 758 526 1 2 1 1 2 1
+5 * 16
+5 +7 16 16
+4 * 16
+6 * 16
+3 * 16 0 16
cfi=(157)
cfn=(2820)
calls=16 0x40a9e2 547 
* * 2084 833 548
+5 * 16 0 16
+4 * 16 16
+4 * 16
+6 * 16
+3 * 16 0 16 1 0 0 1
cfi=(157)
cfn=(2824)
calls=16 0x40aa30 565 
* * 2100 833 548 0 0 1 0 0 1
+5 * 16 0 16
+4 * 16
+4 * 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(164)
cfn=(2826)
calls=16 0x40aa81 841 
* * 2948 1169 788
+5 * 16
+2 * 16
0x40d151 +7 16 16 0 1 0 0 1
+3 * 16
+3 * 16 0 16
+3 -15 16
+4 * 16
+5 * 16
+3 * 16 0 16
cfi=(164)
cfn=(2216)
calls=16 0x410094 768 
* * 2196 865 596 0 1 0 0 1
+5 * 16
+13 +17 1
+1 * 1 1
+4 * 1 1 0 1 0 0 1
+9 * 1
+7 * 1
+4 * 1 1
+1 * 1 1
+1 * 1 1

fn=(3106) Organism::compute_protein_concentration()
0x40de38 296 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 9
* * 10 10
+5 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3108) Organism::compute_protein_concentration_step1()
calls=10 0x40d764 -52 
* * 749542 281770 191969 507 409 71 66 47 38
+5 +1 10 0 0 1
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3166) Organism::compute_protein_concentration_step2()
calls=10 0x40da72 -28 
* * 241361 91233 63906 888 769 169 65 37 52
+5 +1 10
+4 * 10 10
+4 * 10 0 0 10 0 0 1
+3 * 10
+3 * 10 0 10
cfn=(3304) Organism::compute_protein_concentration_step3(std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >&)
calls=10 0x40dd14 -12 
* * 57022 21878 15122 85 77 3 3 3 3
+5 -1 10
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3306) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::~unordered_map()
calls=10 0x40fc54 98 
* * 30134 11230 7898 15 31 20 6 3 11
+5 +2 10
+1 * 10 10
+4 * 10 10
+9 * 10
+35 * 10 0 0 10 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(1140)
0x40f58a 494 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1
* * 1 1
+5 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+4 * 1
+2 * 1 1
+7 * 1
fi=(102)
+2 74 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(638)
calls=1 0x9d7e0 -74 
* * 24 9 7
* * 1 1
+5 * 1
+5 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 -17 
* * 66 13 15
* * 1 1
fe=(117)
+5 494 1
+1 * 1 1
+1 * 1 1

fn=(3304)
0x40dd14 287 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+4 * 10 0 10
+4 * 10 10 0 10 0 0 1
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3110) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::begin()
calls=10 0x41070e +28 
* * 3124 1221 834 0 20 1 0 1 1
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3114) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::end()
calls=10 0x41072e +50 
* * 2504 971 674
+5 * 10 0 10
+4 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149) /usr/include/c++/5/bits/hashtable_policy.h
cfn=(3118) bool std::__detail::operator!=<std::pair<float const, float>, false>(std::__detail::_Node_iterator_base<std::pair<float const, float>, false> const&, std::__detail::_Node_iterator_base<std::pair<float const, float>, false> const&)
calls=10 0x41074d +36 
* * 634 261 164 0 0 1 0 0 1
-14 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3118)
calls=10 0x41074d +36 
* * 630 260 160
+5 * 20
+2 * 20
+6 * 10
+4 * 10 0 0 10 0 0 1
+3 * 10 0 10
cfi=(149)
cfn=(3142) std::__detail::_Node_iterator<std::pair<float const, float>, false, false>::operator*() const
calls=10 0x41079c +69 
* * 2954 1161 794 0 1 0 0 1
+5 * 10 10
+3 * 10 0 10
+4 +1 10 10
+4 * 10
+7 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2290) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::operator[](float const&)
calls=10 0x40a9b8 667 
* * 22044 8441 5844 54 26
+5 * 10 10
+3 * 10 10 0 0 10
+5 * 10 10 0 0 10
+8 * 10
+4 * 10 10 0 10 0 0 1
+5 * 10
+4 * 10
+3 * 10 0 10
+5 +1 10 10
+5 * 10
+4 * 10
+4 * 10 0 10
+5 +2 10 10
+4 * 10
+7 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2290)
calls=10 0x40a9b8 667 
* * 22044 8441 5844 0 0 1 0 0 1
+5 * 10 10
+3 * 10 10 0 1
+5 * 10 10
+5 * 10
+4 * 10 0 10
+5 -4 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3156) std::__detail::_Node_iterator<std::pair<float const, float>, false, false>::operator++()
calls=10 0x410778 +77 
* * 1824 731 484
+5 * 10
+5 +6 10
+1 * 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fn=(3354) Organism::dying_or_not()
0x40ded0 302 1 0 1
+1 * 1
+3 * 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1 0 1 1
* * 1 1
+5 * 1 0 1
+7 * 1 1
+9 * 1 0 1
+4 * 1
+2 +2 1
+4 * 1 0 1 1 0 0 1
+8 +1 1 1
+7 * 1
+6 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2820)
calls=1 0x40a9e2 547 
* * 134 53 38 0 1 0 0 1
+5 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2824)
calls=1 0x40aa30 565 
* * 135 53 38
+5 * 1 0 1 1 0 0 1
+7 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 188 74 53 0 0 1 0 0 1
-20 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 184 73 49
+5 * 2
+2 * 2
+2 * 1
+7 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2830)
calls=1 0x40aaec 753 
* * 62 25 19
+5 * 1 1
+3 * 1 0 1
+7 +1 1 1
+7 * 1 1 0 1 0 0 1
+5 * 1
+4 * 1 1
+8 * 1
+4 * 1 0 1
+8 -1 1
+7 * 1
+3 * 1 0 1
cfi=(164)
cfn=(3340) __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > >::operator++()
calls=1 0x40aac2 761 
* * 66 27 20 0 1 1 0 1 1
+5 * 1
+2 +3 1 1
+7 * 1
+6 * 1 0 1 1 0 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2820)
calls=1 0x40a9e2 547 
* * 134 53 38
+5 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2824)
calls=1 0x40aa30 565 
* * 135 53 38
+5 * 1 0 1
+7 * 1
+7 * 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 188 74 53 0 1 1 0 1 1
+5 * 1
+2 * 1
+80 +4 1 1 0 1 0 0 1
+8 * 1 1
+8 * 1
+26 +4 1 0 0 1 0 0 1
+4 * 1 0 1
+8 * 1
+4 * 1 0 1
+8 +2 1 1
+7 * 1
+6 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2820)
calls=1 0x40a9e2 547 
* * 134 53 38 0 1 0 0 1
+5 * 1 0 1 1 0 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2824)
calls=1 0x40aa30 565 
* * 135 53 38
+5 * 1 0 1
+7 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 188 74 53 0 0 1 0 0 1
+5 * 1
+2 * 1
+80 +4 1 1 0 1 0 0 1
+7 * 1
+6 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2820)
calls=1 0x40a9e2 547 
* * 134 53 38 0 1 0 0 1
+5 * 1 0 1
+7 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2824)
calls=1 0x40aa30 565 
* * 135 53 38 0 0 1 0 0 1
+5 * 1 0 1 1 0 0 1
+7 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 188 74 53 0 1 0 0 1
+5 * 1
+2 * 1
+80 +4 1 1 0 1 0 0 1
+8 * 1 1
+8 * 1 1 0 1 0 0 1
+8 * 1
+9 +4 1
+10 * 1
+7 * 1 0 1
+7 * 1 1
+8 * 1
+5 * 1
+3 * 1 0 1
cfi=(133) /usr/include/c++/5/bits/random.h
cfn=(3356) std::binomial_distribution<int>::binomial_distribution(int, double)
calls=1 0x410abe 3665 
* * 1481 463 242 25 23 9 24 14 2
+5 +1 1 1 0 1 0 0 1
+7 * 1 1
+7 * 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(133)
cfn=(3376) int std::binomial_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=1 0x410b14 3730 
* * 1713 622 459 45 18 8 38 14 8
+5 * 1 0 1
+6 +3 1 1
+6 * 1
+3 * 1
+2 * 1
+3 * 1 0 1
+6 +2 1 1
+7 +1 1 1
+4 * 1 1
+9 * 1
+7 * 1 1
+1 * 1 1

fn=(2654)
0x40c99a 121 149 0 149
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+2 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -89 
* * 7156 2832 1792 0 289 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149 0 0 149 0 0 1
+2 +1 149 0 149
+4 +2 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2202)
calls=149 0x40ffb4 547 
* * 19374 7749 5070 0 291 0 0 1
+5 * 149 0 149
+4 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2206)
calls=149 0x410002 565 
* * 19523 7749 5070 0 0 1 0 0 1
-11 * 2384 2384
+4 * 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(157)
cfn=(2206)
calls=2384 0x410002 565 
* * 312304 123968 81056
+5 * 2533 0 2533
+4 * 2533
+4 * 2533
+4 * 2533
+3 * 2533
+3 * 2533 0 2533
cfi=(164)
cfn=(2208)
calls=2533 0x410053 841 
* * 466076 184910 124121 0 297 0 0 1
+5 * 2533 0 0 149 0 0 1
+2 * 2533
+6 +1 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2212)
calls=2384 0x4100fa 753 
* * 164489 66749 42913 0 148
+5 * 2384 2384 0 0 61
+3 * 2384
+3 * 2384 0 2384
cfi=(157)
cfn=(1886)
calls=2384 0x405c08 547 
* * 336146 133504 88209 0 837 1 0 0 1
+5 * 2384 0 2384
+4 * 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2212)
calls=2384 0x4100fa 753 
* * 138276 57217 35764
-7 * 13261
+4 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(2212)
calls=13261 0x4100fa 753 
* * 769138 318264 198915
+5 * 15645 15645
+3 * 15645
+3 * 15645 0 15645
cfi=(157)
cfn=(1890)
calls=15645 0x405c56 565 
* * 2049499 813541 531934
+5 * 15645 0 15645
+4 * 15645 0 0 149 0 0 1
+4 * 15645
+4 * 15645
+3 * 15645
+3 * 15645 0 15645
cfi=(164)
cfn=(2214)
calls=15645 0x410114 856 
* * 2878684 1142086 766609 0 148 1 0 0 1
+5 * 15645
+2 * 15645
+6 +1 13261
+4 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(1896)
calls=13261 0x405d12 753 
* * 769142 318265 198919 0 0 1 0 0 1
+5 * 13261 13261 0 0 1487
+3 * 13261 13261 0 0 4716
+2 * 13261
+3 * 13261
+3 * 13261
+2 * 13261
+2 +2 1639 0 1639
+4 * 1639
+5 +1 11622 0 0 149 0 0 1
+4 * 11622
+3 * 11622 0 11622
cfi=(164)
cfn=(1896)
calls=11622 0x405d12 753 
* * 674080 278929 174334 0 297 0 0 1
+5 * 11622 11622
+3 * 11622 11622
+2 * 11622
+3 * 11622
+3 * 11622
+2 * 11622
+2 +2 2384 0 2384
+4 * 2384
+5 +1 9238
+4 * 9238
+3 * 9238 0 9238
cfi=(164)
cfn=(1896)
calls=9238 0x405d12 753 
* * 535808 221713 138574 0 0 149 0 0 1
+5 * 9238 9238
+3 * 9238 9238
+2 +1 9238
+3 * 9238
+2 * 1490 1490
+4 * 1490
+2 * 447
+5 * 447
+2 * 8791 0 0 49 0 0 1
+5 -1 8791
+2 * 8791
-2 * 447
+2 * 447
+6 +2 447
+4 * 447
+3 * 447 0 447
cfi=(164)
cfn=(1896)
calls=447 0x405d12 753 
* * 25930 10729 6709
+5 * 447 447
+3 * 447 447 0 0 111
+4 * 447
+3 * 447 0 447
cfi=(157)
cfn=(1982) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::begin()
calls=447 0x405850 547 
* * 58114 23245 15202 596 535
+5 * 447 0 447
+4 * 447
+4 * 447
+3 * 447 0 447
cfi=(164)
cfn=(1896)
calls=447 0x405d12 753 
* * 25930 10729 6709 0 148 1 0 0 1
-7 * 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1896)
calls=12367 0x405d12 753 
* * 717286 296808 185505
+5 * 12814 12814
+3 * 12814 12814 0 2 0 0 1
+4 +1 12814
+3 * 12814 0 12814
cfi=(157)
cfn=(1986) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::end()
calls=12814 0x40589e 565 
* * 1678638 666329 435680 149 238 0 0 1
+5 * 12814 0 12814
+4 -1 12814
+4 * 12814
+4 * 12814
+3 * 12814
+3 * 12814 0 12814
cfi=(164)
cfn=(2656) bool __gnu_cxx::operator< <BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >(__gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > > const&, __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > > const&)
calls=12814 0x410298 856 
* * 2357788 935425 627898 149 164 1 1 0 1
+5 * 12814
+2 * 12814
+6 +2 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1992) __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >::operator*() const
calls=12367 0x40595a 753 
* * 717290 296809 185509 149 0 149 0 0 1
+5 * 12367 12367 0 0 1786
+3 * 12367 12367 0 0 6019
+3 +1 12367
+4 -1 12367 0 0 149 0 0 1
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1992)
calls=12367 0x40595a 753 
* * 717290 296809 185509
+5 * 12367 12367
+3 +1 12367 12367
+4 * 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1992)
calls=12367 0x40595a 753 
* * 717290 296809 185509
+5 * 12367 12367
+3 * 12367 12367
+5 * 12367 0 12367
+5 * 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1992)
calls=12367 0x40595a 753 
* * 717290 296809 185509 0 148 1 0 0 1
+5 * 12367 12367
+3 * 12367 12367
+4 * 12367 0 0 149 0 0 1
+5 * 12367 0 12367
cob=(8)
cfi=(94)
cfn=(1312)
calls=12367 0x8de60 0 
* * 2584455 410207 419813 895 1 3795 0 1 3795
* * 12367 12367
+5 * 12367
+3 * 12367
+3 * 12367 12367
+5 * 12367 0 12367
+4 * 12367 12367
+5 * 12367
+3 * 12367
+3 * 12367 0 12367
cfi=(187) /home/nathan/DEV/PC-optimisation/src/Pump.h
cfn=(2658) Pump::Pump(bool, float, float, int)
calls=12367 0x40f646 11 
* * 1038832 445213 333913 298 0 0 2
+5 * 12367 0 12367
+4 +1 12367 12367
+4 * 12367
+7 * 12367
+4 * 12367
+3 * 12367
+3 * 12367 0 12367
cfi=(157)
cfn=(2660) std::vector<Pump*, std::allocator<Pump*> >::push_back(Pump* const&)
calls=12367 0x410340 913 
* * 9372273 3573153 2457867 10171 6397 5419 43 19 4382
+5 -4 12367
+4 * 12367
+5 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(2730) __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >::operator++(int)
calls=12367 0x4102da 768 
* * 1694287 667820 457587 150 297 0 1 1
+5 * 12367
+5 -9 13261
+4 * 13261
+5 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(2122)
calls=13261 0x40fedc 768 
* * 1816761 716095 490661 0 149 0 0 1
+5 * 13261
+5 -1 2384 0 0 149 0 0 1
+4 * 2384
+5 * 2384
+3 * 2384 0 2384 149 0 0 1
cfi=(164)
cfn=(2216)
calls=2384 0x410094 768 
* * 326612 128737 88212 0 149 0 0 1
+5 * 2384
+13 +19 149
+1 * 149 149
+4 * 149 149
+9 * 149
+7 * 149
+4 * 149 149
+1 * 149 149
+2 * 149 149
+2 * 149 149
+2 * 149 149
+1 * 149 149

fn=(3108)
0x40d764 245 10 0 10 1
+1 * 10
+3 * 10 0 10
+1 * 10
+7 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+7 * 10 10 0 2 0 0 1
+9 * 10 0 10
+4 * 10
+2 +1 10 0 10
+7 +1 10 10
+7 * 10
+4 * 10
+3 * 10 0 10
cfi=(157)
cfn=(2202)
calls=10 0x40ffb4 547 
* * 1304 521 344 0 2 1 0 1 1
+5 * 10 0 10
+4 * 10 10
+7 * 10
+4 * 10
+3 * 10 0 10
cfi=(157)
cfn=(2206)
calls=10 0x410002 565 
* * 1314 521 344
-14 * 160 160
+7 * 160
+4 * 160
+3 * 160 0 160
cfi=(157)
cfn=(2206)
calls=160 0x410002 565 
* * 20960 8320 5440
+5 * 170 0 170
+4 * 170 0 0 1 0 0 1
+4 * 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfi=(164)
cfn=(2208)
calls=170 0x410053 841 
* * 31284 12411 8334 0 9 1 0 0 1
+5 * 170
+2 * 170
+6 +1 160
+4 * 160 0 160
+5 * 160
+4 * 160 0 160
+5 +1 160 160
+7 * 160
+4 * 160
+4 * 160
+3 * 160 0 0 1 0 0 1
+3 * 160 0 160
cfi=(147)
cfn=(2834)
calls=160 0x410530 667 
* * 430783 167119 116625 178 94 27 6 10 26
+5 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(147)
cfn=(3110)
calls=160 0x41070e +67 
* * 49936 19524 13296 4 38 1 3 2 1
+5 * 160 0 160
+4 * 160 160
+4 * 160
+3 * 160 0 160
cfi=(147)
cfn=(3114)
calls=160 0x41072e +89 
* * 40012 15523 10732 2 1 2 2 1 2
+5 * 160 0 160
+4 * 160
+4 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(149)
cfn=(3118)
calls=160 0x41074d +75 
* * 10084 4161 2564
-14 * 20
+4 * 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(149)
cfn=(3118)
calls=20 0x41074d +75 
* * 1260 520 320
+5 * 180
+2 * 180 0 0 1 0 0 1
+6 * 20
+4 * 20
+3 * 20 0 20
cfi=(149)
cfn=(3142)
calls=20 0x41079c 357 
* * 5908 2322 1588 1 0 1 0 0 1
+5 * 20 20
+3 * 20 0 20
+4 +1 20 20
+5 * 20
+4 * 20
+3 * 20
+2 +1 20 20
+5 * 20 0 20
+8 * 20 20
+7 * 20 0 0 1 0 0 1
+7 * 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(147)
cfn=(2290)
calls=20 0x40a9b8 667 
* * 44124 16891 11724 28 28 7 5 3 4
+5 * 20 20
+3 * 20 20 0 0 1
+5 * 20 20
+8 * 20 20
+5 * 20
+4 * 20 0 20
+5 * 20
+77 -2 20 0 0 2 0 0 1
+4 * 20
+3 * 20 0 20
cfi=(149)
cfn=(3156)
calls=20 0x410778 365 
* * 3652 1463 972 0 0 1 0 0 1
+5 * 20
+5 +7 160 160 0 1 0 0 1
+5 * 160 160
+8 * 160 0 160
cob=(4)
cfi=(190)
cfn=(3124)
calls=159 0x21e40 26 
* * 20476 3404 1095 203 86 0 20 12
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1121 303 119 75 67 6 18 14
* * 164 162 2 1
+5 * 160
+4 * 160 0 160
+5 +1 160 160
+5 * 160 160
+8 * 160 0 160
cob=(4)
cfi=(190)
cfn=(3124)
calls=160 0x21e40 26 
* * 16640 2560 800
* * 160 160
+5 * 160
+4 * 160 0 160 1 0 0 1
+5 +2 160 160
+3 * 160
+2 * 160 160
+7 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(157)
cfn=(3130) std::vector<RNA*, std::allocator<RNA*> >::operator[](unsigned long)
calls=160 0x410584 779 
* * 9924 4001 2564 0 1 0 0 1
+5 * 160 160 0 0 19
+3 * 160 160
+3 * 160
+2 * 160 160
+7 * 160
+4 * 160
+3 * 160
+3 * 160 0 160
cfi=(157)
cfn=(3130)
calls=160 0x410584 779 
* * 9924 4001 2564 0 0 1 0 0 1
+5 * 160 160
+3 * 160 160 0 1 60 0 1
+5 +2 160 160
+5 * 160 160
+8 * 160
+4 * 160 160
+8 * 160
+4 * 160
+3 -1 160
+4 * 160 0 160
+8 +2 160 160
+3 * 160
+2 * 160 160
+7 * 160
+4 * 160 0 0 1 0 0 1
+3 * 160
+3 * 160 0 160
cfi=(157)
cfn=(3130)
calls=160 0x410584 779 
* * 9924 4001 2564 0 1 0 0 1
+5 * 160 160
+3 * 160 160
+5 * 160 160
+8 * 160
+4 * 160 160
+8 * 160
+4 * 160
+3 +2 160 160
+5 * 160 160
+8 * 160
+4 -1 160 160 0 1 0 0 1
+5 * 160
+3 * 160
+4 * 160
+3 * 160
+4 -1 160 160
+8 * 160
+4 * 160 160
+8 +3 160 0 160 0 0 23
+5 +1 160 160
+3 * 160
+3 * 160 0 160
+3 -19 160
+4 * 160
+5 * 160
+3 * 160 0 160 1 0 0 1
cfi=(164)
cfn=(2216)
calls=160 0x410094 768 
* * 21924 8641 5924 0 1 0 0 1
+5 * 160
+13 +21 10
+1 * 10 10
+4 * 10 10
+9 * 10
+7 * 10
+7 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3166)
0x40da72 270 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+7 * 10 0 10 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+7 * 10 0 10
+7 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+7 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2892) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::unordered_map()
calls=10 0x40fc34 132 
* * 15624 6001 4194 27 64 19 0 1 1
+5 +2 10 10
+7 * 10
+4 * 10 0 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3168) std::unordered_map<int, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > > >::begin()
calls=10 0x410836 +43 
* * 3136 1224 846 14 13 1 3 2 1
+5 * 10 0 10
+7 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3172) std::unordered_map<int, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > > >::end()
calls=10 0x410856 +65 
* * 2512 973 682 1 0 1 1 0 1
+5 * 10 0 10
+7 * 10
+7 * 10
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3176) bool std::__detail::operator!=<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>(std::__detail::_Node_iterator_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> const&, std::__detail::_Node_iterator_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> const&)
calls=10 0x410875 +51 
* * 634 261 164 1 0 1 1 0 1
-20 * 10
+7 * 10
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3176)
calls=10 0x410875 +51 
* * 630 260 160
+5 * 20
+2 * 20 0 0 1 0 0 1
+6 * 10
+7 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3178) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false, false>::operator*() const
calls=10 0x4108c4 +84 
* * 2958 1162 798 5 6 0 1 2
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(194) /usr/include/c++/5/bits/stl_pair.h
cfn=(3180) std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >::pair(std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > const&)
calls=10 0x40fca0 127 
* * 60384 22579 15900 182 144 53 33 13 23
+5 +1 10 10
+7 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2522) std::unordered_map<int, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > > >::operator[](int const&)
calls=10 0x41026e 667 
* * 20384 7981 5584 66 81 15 4 3 4
+5 * 10 0 10 1 0 0 1
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3250) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::begin()
calls=10 0x40a8b2 +42 
* * 3136 1224 846 14 11 1 0 1 1
+5 * 10 0 10
+7 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2244) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::end()
calls=10 0x40a8d2 +64 
* * 2504 971 674 1 1 10 0 0 1
+5 * 10 0 10
+7 * 10
+7 * 10
+7 * 10
+3 * 10
+3 * 10 0 10 1 0 0 1
cfi=(149)
cfn=(3254) bool std::__detail::operator!=<std::pair<float const, Protein*>, false>(std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false> const&, std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false> const&)
calls=10 0x40a8f1 +50 
* * 634 261 164 1 10 0 1 1
-20 * 10
+7 * 10
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3254)
calls=10 0x40a8f1 +50 
* * 630 260 160
+5 * 20
+2 * 20
+6 * 10
+7 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3256) std::__detail::_Node_iterator<std::pair<float const, Protein*>, false, false>::operator*() const
calls=10 0x40a940 +83 
* * 2958 1162 798 1 1 1 0 1 1
+5 * 10 10
+4 * 10 10
+3 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+7 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3114)
calls=10 0x41072e +63 
* * 2504 971 674
+5 * 10 0 10
+7 * 10 0 0 10 0 0 1
+4 * 10 10
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3258) std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > >::find(float const&)
calls=10 0x410a68 614 
* * 12274 4616 3224 15 43 11 3 3 2
+5 * 10 0 10
+7 * 10
+7 * 10
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3262) bool std::__detail::operator==<std::pair<float const, float>, false>(std::__detail::_Node_iterator_base<std::pair<float const, float>, false> const&, std::__detail::_Node_iterator_base<std::pair<float const, float>, false> const&)
calls=10 0x410a92 +42 
* * 634 261 164 0 0 1 0 0 1
+5 * 10
+2 * 10
+2 +1 10
+4 * 10 10 0 10 0 0 1
+7 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(2964)
calls=10 0x41055a 667 
* * 73146 27533 19218 301 271 22 0 1 1
+5 * 10
+3 * 10 10
+3 * 10
+2 * 10 10
+7 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(157)
cfn=(3130)
calls=10 0x410584 779 
* * 624 251 164 0 0 1 0 0 1
+5 * 10 10
+3 * 10 10 0 0 1
+5 * 10 0 10
+4 * 10
+83 -2 10 0 0 1 0 0 1
+7 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3264) std::__detail::_Node_iterator<std::pair<float const, Protein*>, false, false>::operator++()
calls=10 0x40a91c +91 
* * 1832 733 492 0 10 1 0 1 1
+5 * 10
+5 -1 10
+4 * 10
+3 * 10 0 10
cfi=(194)
cfn=(3268) std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >::~pair()
calls=10 0x40fce0 96 
* * 30537 11385 8004 213 113 30 8 8 11
+5 * 10
+7 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3298) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false, false>::operator++()
calls=10 0x4108a0 +92 
* * 1832 733 492 0 0 1 0 0 1
+5 * 10
+51 +11 10 0 0 10 0 0 1
+1 +1 10 10
+7 * 10 10
+4 * 10 10 0 10 0 0 1
+9 * 10
+7 * 10
+7 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3338) Organism::compute_fitness()
0x40e29c 339 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 1
+9 * 1 0 1
+4 * 1
+2 +1 1 1
+4 * 1 1 0 1 1 0 1
+6 * 1
+3 * 1 1
+4 * 1 0 1
+6 +2 1 0 1
+7 * 1 1
+7 * 1
-7 * 500 500
+7 * 500
+2 +1 500 500
+4 * 500 500
+3 * 500
+3 * 500
+4 * 500
+4 * 500 0 500 0 0 32 0 0 30
+5 -1 500 0 500
+4 * 500
+2 +3 1 1 0 1 0 0 1
+4 * 1
+6 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2820)
calls=1 0x40a9e2 547 
* * 134 53 38 1 3 0 0 1
+5 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(2824)
calls=1 0x40aa30 565 
* * 135 53 38 2
+5 * 1 0 1
+4 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 188 74 53 0 1 1 0 0 1
-14 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2826)
calls=1 0x40aa81 841 
* * 184 73 49
+5 * 2
+2 * 2
+6 * 1
+4 * 1
+3 * 1 0 1
cfi=(164)
cfn=(2830)
calls=1 0x40aaec 753 
* * 62 25 19
+5 * 1 1
+3 * 1 0 1
+4 +1 1 1
+4 * 1 1
+5 * 1 1 0 0 1 0 0 1
+8 * 1
+4 * 1
+4 * 1 0 1
+3 +2 1 1
+4 * 1 1 0 1 0 0 1
+5 * 1 0 1
+5 +2 1 1
+3 * 1
+3 * 1 0 1
+3 +1 1 1
+3 * 1
+3 * 1 1
+3 * 1
-9 * 11 11
+3 * 11
+3 * 11 11
+3 * 11
+6 +1 11 11
+7 * 11
+6 * 11 11
+4 * 11
+6 +1 11 11
+3 * 11 11
+3 * 11
+2 +2 5 5 0 1 0 0 1
+4 * 5 5
+3 * 5
+3 * 5
+4 * 5 5
+5 * 5 5
+3 * 5 5
+3 * 5
+4 * 5
+4 * 5 5
+8 * 5
+4 * 5 5
+5 * 5
+4 * 5 5
+4 * 5 5
+3 * 5
+3 * 5 0 0 1 0 0 1
+4 * 5 0 5
+5 * 5
+2 +1 6 6
+3 * 6 6
+3 * 6
+2 +2 5 5
+4 * 5 5
+3 * 5
+3 * 5
+4 * 5 5
+5 * 5 5
+3 * 5 5
+3 * 5
+4 * 5
+4 * 5 5
+8 * 5
+4 * 5 5
+5 * 5
+4 * 5 5
+4 * 5 5
+3 * 5
+3 * 5
+4 * 5 0 5
+5 * 5
+2 +2 1 1 0 1 0 0 1
+4 * 1 1
+3 * 1
+3 * 1
+4 * 1 1
+5 * 1 1
+5 * 1 1
+4 * 1 1
+3 * 1
+3 * 1
+4 * 1 0 1
+5 -10 1 0 1
+4 * 1
-4 * 10 0 10 1 0 0 1
+4 * 10
+5 -5 1
+4 * 1
+3 * 1 0 1
cfi=(164)
cfn=(3340)
calls=1 0x40aac2 761 
* * 66 27 20 0 1 1 0 1 1
+5 * 1
+5 +21 1 1
+4 * 1
+4 * 1 0 1
+8 +1 1 0 1
+7 * 1 1
+7 * 1
-7 * 500 500
+7 * 500
+2 +1 500 500 0 1 0 0 1
+4 * 500 500
+7 * 500 500
+3 * 500
+3 * 500
+4 * 500 500 0 0 32 0 0 15
+6 * 500 500
+4 * 500 500
+3 * 500
+3 * 500
+4 * 500 500
+5 * 500
+4 * 500 0 500
cfi=(137) /usr/include/c++/5/cmath
cfn=(3342) std::abs(float)
calls=500 0x40f89b 88 
* * 29504 12001 7504 1 0 0 1
+5 * 500
+3 * 500 500
+4 * 500 500 0 1 0 0 1
+8 * 500
+4 * 500 500
+4 * 500 0 500
+8 -1 500 0 500
+4 * 500
+2 +4 1 1
+4 * 1 1
+8 * 1 1
+8 * 1
+4 * 1 1
+4 * 1 0 1
+8 +2 1 1 0 1 0 0 1
+4 * 1 1
+8 * 1 1
+8 * 1 1
+8 * 1
+3 * 1
+4 * 1 0 1
cfi=(137)
cfn=(3344) std::exp(float)
calls=1 0x40f8bf 242 
* * 1108 330 139 57 60 2 6 11
+5 * 1
+4 * 1 1
+4 * 1 0 1
+6 +1 1
+1 * 1 1
+4 * 1 1 0 1 0 0 1
+9 * 1
+7 * 1 1
+1 * 1 1

fn=(2200)
0x40c2d4 28 149 0 149
+1 * 149
+3 * 149 0 149
+1 * 149
+7 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 +4 
* * 7156 2832 1792 0 150
* * 149 149
+5 * 149 0 149
+7 * 149 149
+9 * 149 0 149
+4 * 149
+2 +2 149 149 0 149 149 0 1 1
+8 * 149 0 149
+5 +1 149 0 149
+7 +1 149 149
+7 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2202)
calls=149 0x40ffb4 547 
* * 19378 7750 5074 313 297 1 2 1 1
+5 * 149 0 149
+4 * 149 149
+7 * 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2206)
calls=149 0x410002 565 
* * 19527 7750 5074 149 149 1 1 1 1
-14 * 2384 2384 0 149
+7 * 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(157)
cfn=(2206)
calls=2384 0x410002 565 
* * 312304 123968 81056 1 181
+5 * 2533 0 2533
+4 * 2533 0 0 149 0 0 1
+4 * 2533
+4 * 2533
+3 * 2533
+3 * 2533 0 2533
cfi=(164)
cfn=(2208)
calls=2533 0x410053 841 
* * 466084 184912 124129 50 297 150 2 1 1
+5 * 2533
+2 * 2533
+6 +1 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2212)
calls=2384 0x4100fa 753 
* * 164489 66749 42913 151 0 0 2
+5 * 2384 2384 0 0 285
+3 * 2384
+3 * 2384 0 2384
cfi=(157)
cfn=(1886)
calls=2384 0x405c08 547 
* * 336146 133504 88209 0 2441
+5 * 2384 0 2384
+4 * 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2212)
calls=2384 0x4100fa 753 
* * 138276 57217 35764 0 148 1 0 0 1
-7 * 13261
+4 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(2212)
calls=13261 0x4100fa 753 
* * 769138 318264 198915 149 149
+5 * 15645 15645 0 150 11 0 1
+3 * 15645
+3 * 15645 0 15645
cfi=(157)
cfn=(1890)
calls=15645 0x405c56 565 
* * 2049499 813541 531934 1 244 0 0 2
+5 * 15645 0 15645
+4 * 15645
+4 * 15645
+4 * 15645
+3 * 15645
+3 * 15645 0 15645
cfi=(164)
cfn=(2214)
calls=15645 0x410114 856 
* * 2878692 1142088 766617 150 332 1 1 1 1
+5 * 15645
+2 * 15645
+6 +1 13261
+4 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(1896)
calls=13261 0x405d12 753 
* * 769142 318265 198919 0 1
+5 * 13261 13261 0 0 3180
+3 * 13261 13261 0 0 11299
+2 * 13261
+3 * 13261
+3 * 13261 0 0 149 0 0 1
+2 * 13261
+2 +1 894
+4 * 894
+3 * 894 0 894
cfi=(164)
cfn=(1896)
calls=894 0x405d12 753 
* * 51856 21457 13414 0 148
+5 * 894 894
+3 * 894 894
+5 * 894 0 894
+5 * 894
+5 +1 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(164)
cfn=(1896)
calls=12367 0x405d12 753 
* * 717290 296809 185509 0 148 1 0 0 1
+5 * 12367 12367
+3 * 12367 12367
+2 * 12367
+3 * 12367
+3 * 12367
+2 * 12367
+2 +1 1043 1043
+8 * 1043 0 1043
+5 * 1043
+5 +1 11324 0 0 150 0 0 1
+4 * 11324
+3 * 11324 0 11324
cfi=(164)
cfn=(1896)
calls=11324 0x405d12 753 
* * 656796 271777 169864 0 174 0 0 1
+5 * 11324 11324
+3 * 11324 11324
+2 +1 11324
+3 * 11324
+2 * 1341 1341
+8 * 1341 1341
+4 * 1341
+2 * 1341 1341
+8 * 1341 1341
+4 * 1341
+2 * 149
+5 * 149
+2 * 11175 0 0 149 0 0 1
+5 -1 11175
+2 * 11175
-2 * 149
+2 * 149
+6 +2 149 0 149
+4 +1 149 0 149
+4 +1 149 149
+8 * 149 0 149
+5 +1 149 0 149
+7 +2 149
+4 * 149
+3 * 149 0 149
cfi=(164)
cfn=(1896)
calls=149 0x405d12 753 
* * 8646 3577 2239
+5 * 149 149
+3 * 149 149 0 149 36 0 1
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(1918) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::begin()
calls=149 0x405674 547 
* * 19374 7749 5070 0 250 149 0 1 1
+5 * 149 0 149
+4 +1 149
+4 * 149
+3 * 149 0 149
cfi=(164)
cfn=(1896)
calls=149 0x405d12 753 
* * 8646 3577 2239
-7 * 6258
+4 * 6258
+3 * 6258 0 6258
cfi=(164)
cfn=(1896)
calls=6258 0x405d12 753 
* * 362964 150192 93870
+5 * 6407 6407
+3 * 6407 6407
+4 * 6407
+3 * 6407 0 6407
cfi=(157)
cfn=(1922) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::end()
calls=6407 0x4056c2 565 
* * 839321 333165 217842 0 2
+5 * 6407 0 6407
+4 -1 6407
+4 * 6407
+4 * 6407
+3 * 6407
+3 * 6407 0 6407 149 0 0 1
cfi=(164)
cfn=(2218) bool __gnu_cxx::operator< <BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >(__gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > > const&, __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > > const&)
calls=6407 0x410155 856 
* * 1178900 467714 313955 149 297 2 1 1 2
+5 * 6407
+2 * 6407
+6 +3 6258
+4 * 6258
+3 * 6258 0 6258
cfi=(164)
cfn=(1928) __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >::operator*() const
calls=6258 0x40577e 753 
* * 362968 150193 93874 0 148
+5 * 6258 6258 0 0 894
+3 * 6258 6258 0 0 3352
+2 * 6258
+2 * 6258
+3 * 6258
+2 * 6258
+2 +2 2086 2086
+4 * 2086
+6 +1 1043
+4 * 1043
+3 * 1043 0 1043
cfi=(164)
cfn=(1928)
calls=1043 0x40577e 753 
* * 60498 25033 15649 0 148 1 0 0 1
+5 * 1043 1043
+3 * 1043 1043
+3 * 1043 0 1043
+3 +1 1043 0 1043
+4 * 1043
+5 +2 4172 0 0 149 0 0 1
+4 * 4172
+3 * 4172 0 4172
cfi=(164)
cfn=(1928)
calls=4172 0x40577e 753 
* * 241980 100129 62584 0 149 0 0 1
+5 * 4172 4172
+3 * 4172 4172
+2 * 4172
+3 * 4172
+3 * 4172
+2 * 4172
+6 +2 2235 2235
+4 * 2235
+3 * 2235
+2 * 2235
+2 * 1192 1192
+4 * 1192
+2 +2 149
+4 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfi=(164)
cfn=(1928)
calls=149 0x40577e 753 
* * 8646 3577 2239
+5 * 149 149
+3 * 149 149
+5 * 149 0 149
+5 +1 149 0 149
+4 +1 149 0 149
+4 * 149
+5 +1 2086 2086
+4 * 2086
+3 * 2086
+2 * 2086
+6 * 1043 1043
+4 * 1043
+3 * 1043
+2 * 1043
+6 +1 1043 0 0 149 0 0 1
+4 * 1043
+3 * 1043 0 1043
cfi=(164)
cfn=(1928)
calls=1043 0x40577e 753 
* * 60498 25033 15649 0 149 0 0 1
+5 * 1043 1043
+3 * 1043 1043
+5 * 1043 0 1043
+5 +2 1043 0 1043
+4 +1 1043 1043
+4 * 1043
+19 +2 1043 1043
+4 * 1043
+2 +1 298 298
+3 * 298 298 0 149 0 0 1
+5 * 298
+3 * 298 0 298
+6 * 298 298
+8 * 298 0 298
cfi=(137)
cfn=(2222) std::fmod(float, float)
calls=298 0x40f8e3 299 
* * 37058 8932 5484 1841 505 9 53 17 1
+5 * 298
+4 * 298 0 298
+3 * 298
+2 +1 745 745
+4 * 745
+2 +1 149 149
+5 * 149 149
+5 * 149 0 149
+5 * 149
+2 +1 596 596
+4 * 596
+2 +1 149 149
+3 * 149 149
+5 * 149
+3 * 149 0 149
+6 * 149 149
+8 * 149 0 149
cfi=(137)
cfn=(2232) std::pow(float, float)
calls=149 0x40f914 408 
* * 52953 9248 3254 4030 1506 0 27 21
+5 * 149
+4 * 149 0 149
+3 -27 149
+4 * 149
+5 * 149
+3 * 149 0 149
cfi=(164)
cfn=(2220) __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >::operator++(int)
calls=149 0x410196 768 
* * 20413 8046 5513
-12 * 6109 0 0 149 0 0 1
+4 * 6109
+5 * 6109
+3 * 6109 0 6109
cfi=(164)
cfn=(2220)
calls=6109 0x410196 768 
* * 836941 329888 226041 149 149 149 1 1 1
+5 * 6258
+5 +33 149 0 149
+7 +1 149 149 0 149 0 0 1
+5 * 149
+4 * 149 149 0 0 149 0 0 1
+8 * 149
+4 * 149
+2 +1 149 0 149
+7 * 149
0x40c6f5 +9 149 0 0 149 0 0 1
+5 * 149 0 149
cob=(8)
cfi=(94)
cfn=(1312)
calls=149 0x8de60 -89 
* * 17284 4023 2235 0 13 0 0 4
* * 149 149 0 0 3 0 0 2
+5 * 149 0 0 149 0 0 1
+3 * 149 149
+5 * 149 149
+3 * 149 149
+3 * 149
+3 * 149 0 149
+6 * 149 149
+8 * 149
+2 * 149
+3 * 149 0 149
cfi=(181) /home/nathan/DEV/PC-optimisation/src/Protein.h
cfn=(2242) Protein::Protein(int, float, float)
calls=149 0x40f6d0 -71 
* * 12371 5365 3878 447 149 0 2 1
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(164)
cfn=(2212)
calls=149 0x4100fa 753 
* * 8646 3577 2239 0 0 149 0 0 1
+5 * 149 149
+3 * 149 149 0 149 0 0 1
+5 * 149 0 149
+5 +4 149 149
+7 * 149
+6 * 149
+3 * 149 0 149
cfi=(147)
cfn=(2244)
calls=149 0x40a8d2 338 
* * 37266 14457 9999 795 595 1 6 3 1
+5 * 149 0 149
+4 * 149 149
+7 * 149
+7 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(147)
cfn=(2252) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::find(float const&)
calls=149 0x40a962 614 
* * 183691 68972 47851 3433 2055 307 28 18 6
+5 * 149 0 149 149 0 0 1
+4 * 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2288) bool std::__detail::operator==<std::pair<float const, Protein*>, false>(std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false> const&, std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false> const&)
calls=149 0x40a98c 317 
* * 9391 3875 2388 0 149 1 0 1 1
+5 * 149
+2 * 149
+6 +1 149 149
+7 * 149
+7 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(147)
cfn=(2290)
calls=149 0x40a9b8 667 
* * 1120389 413418 291758 13370 9302 1953 97 92 183
+5 * 149
+3 * 149 149 0 149 0 0 1
+4 * 149 0 149
+3 +3 149 149
+4 * 149
+2 +1 149 149
+7 * 149
+7 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2452) std::vector<Protein*, std::allocator<Protein*> >::push_back(Protein* const&)
calls=149 0x4101fc 913 
* * 578167 217142 150835 6854 5238 978 40 17 90
+5 * 149
0x40c857 +9 149 149 0 149 0 0 1
+7 * 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(147)
cfn=(2522)
calls=149 0x41026e 667 
* * 1308132 492384 346791 15496 11849 2307 85 38 112
+5 * 149
+3 * 149
+4 * 149
+3 * 149
+3 * 149 0 149 149 0 0 1
cfi=(147)
cfn=(2290)
calls=149 0x40a9b8 667 
* * 1114524 411837 290852 598 184 321 0 1 149
+5 * 149
+3 * 149 149 0 0 1 0 0 1
+4 * 149 0 149
+3 * 149
0x40c93e -75 13261 0 0 3 0 0 1
+4 * 13261
+5 * 13261
+3 * 13261 0 13261
cfi=(164)
cfn=(2122)
calls=13261 0x40fedc 768 
* * 1816761 716095 490661 298 151 1 0 0 1
+5 * 13261
+5 +84 2384 2384 0 2 0 0 1
+3 * 2384
+3 * 2384 0 2384
+3 -85 2384
+4 * 2384
+5 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2216)
calls=2384 0x410094 768 
* * 326616 128738 88216 0 298 149 0 1 1
+5 * 2384
+13 +87 149
+1 * 149 149
+4 * 149 149 0 149 0 0 1
+9 * 149
+7 * 149
+7 * 149 149 0 0 141
+1 * 149 149
+1 * 149 149

fl=(166) /usr/include/c++/5/bits/stl_construct.h
fn=(1578) void std::_Destroy<BP**>(BP**, BP**)
0x4076f6 122 19084 0 19084 149 0 0 1
+1 * 19084
+3 * 19084
+4 * 19084 0 19084 2 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=19084 0x10a310 -90 
* * 916036 362597 229012 0 1607 0 0 1
* * 19084 19084
+5 * 19084 0 19084
+4 * 19084 0 19084
+4 +4 19084 19084
+4 * 19084 19084
+4 * 19084
+3 * 19084
+3 * 19084 0 19084
cfn=(1580) void std::_Destroy_aux<true>::__destroy<BP**>(BP**, BP**)
calls=19084 0x4085dd -14 
* * 1106876 419849 305348 2 5 0 1 1
+5 +2 19084
+1 * 19084 19084
+1 * 19084 19084

fn=(1690) void std::_Destroy_aux<true>::__destroy<BP_Protein**>(BP_Protein**, BP_Protein**)
0x407de5 112 64239 0 64239 2 0 0 1
+1 * 64239
+3 * 64239
+4 * 64239 0 64239
cob=(3)
cfi=(100)
cfn=(626)
calls=64239 0x10a310 -80 
* * 3083476 1220542 770872 0 7 0 0 1
* * 64239 64239
+5 * 64239 0 64239
+4 * 64239 0 64239
+4 * 64239
+1 * 64239 64239
+1 * 64239 64239

fn=(1778) void std::_Destroy<BP_Move**, BP_Move*>(BP_Move**, BP_Move**, std::allocator<BP_Move*>&)
0x40657f 148 59309 0 59309
+1 * 59309 0 0 1 0 0 1
+3 * 59309
+4 * 59309 0 59309
cob=(3)
cfi=(100)
cfn=(626)
calls=59309 0x10a310 32 
* * 2846844 1126874 711720 0 0 3 0 0 1
* * 59309 59309
+5 * 59309 0 59309
+4 * 59309 0 59309
+4 * 59309 0 59309
+4 +3 59309 59309
+4 * 59309 59309
+4 * 59309
+3 * 59309
+3 * 59309 0 59309
cfn=(1780) void std::_Destroy<BP_Move**>(BP_Move**, BP_Move**)
calls=59309 0x4073fe -29 
* * 7176397 2728216 1957205 600 2555 0 4 2
+5 +1 59309
+1 * 59309 59309
+1 * 59309 59309

fn=(2722) void std::_Destroy<Pump**, Pump*>(Pump**, Pump**, std::allocator<Pump*>&)
0x41129b 148 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +3 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192 0 0 149 0 0 1
+3 * 1192 0 1192
cfn=(2724) void std::_Destroy<Pump**>(Pump**, Pump**)
calls=1192 0x41391e -29 
* * 144240 54834 39344 596 446 1 4 2 1
+5 +1 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(1686) void std::_Destroy<BP_Protein**, BP_Protein*>(BP_Protein**, BP_Protein**, std::allocator<BP_Protein*>&)
0x40620f 148 64239 0 64239
+1 * 64239
+3 * 64239
+4 * 64239 0 64239
cob=(3)
cfi=(100)
cfn=(626)
calls=64239 0x10a310 32 
* * 3083484 1220544 770880 0 1533 1 0 0 1
* * 64239 64239
+5 * 64239 0 64239
+4 * 64239 0 64239
+4 * 64239 0 64239
+4 +3 64239 64239
+4 * 64239 64239
+4 * 64239
+3 * 64239
+3 * 64239 0 64239
cfn=(1688) void std::_Destroy<BP_Protein**>(BP_Protein**, BP_Protein**)
calls=64239 0x406e0e -29 
* * 7772927 2954996 2119895 4 3319 1906 2 2 1
+5 +1 64239
+1 * 64239 64239
+1 * 64239 64239

fn=(1780)
0x4073fe 122 59309 0 59309 298 0 0 1
+1 * 59309 0 0 2 0 0 1
+3 * 59309
+4 * 59309 0 59309
cob=(3)
cfi=(100)
cfn=(626)
calls=59309 0x10a310 -90 
* * 2846836 1126872 711712 0 2550 0 0 1
* * 59309 59309
+5 * 59309 0 59309
+4 * 59309 0 59309
+4 +4 59309 59309
+4 * 59309 59309
+4 * 59309
+3 * 59309
+3 * 59309 0 59309
cfn=(1782) void std::_Destroy_aux<true>::__destroy<BP_Move**>(BP_Move**, BP_Move**)
calls=59309 0x408335 -14 
* * 3439926 1304799 948948 300 5 0 2 1
+5 +2 59309
+1 * 59309 59309
+1 * 59309 59309

fn=(1870) void std::_Destroy<BP_Pump**, BP_Pump*>(BP_Pump**, BP_Pump**, std::allocator<BP_Pump*>&)
0x4063c7 148 66913 0 66913
+1 * 66913
+3 * 66913
+4 * 66913 0 66913
cob=(3)
cfi=(100)
cfn=(626)
calls=66913 0x10a310 32 
* * 3212320 1271526 803100 0 0 3 0 0 3
* * 66913 66913
+5 * 66913 0 66913
+4 * 66913 0 66913
+4 * 66913 0 66913
+4 +3 66913 66913
+4 * 66913 66913
+4 * 66913
+3 * 66913
+3 * 66913 0 66913
cfn=(1872) void std::_Destroy<BP_Pump**>(BP_Pump**, BP_Pump**)
calls=66913 0x407106 -29 
* * 8096481 3078000 2208137 4 2283 0 2 2
+5 +1 66913
+1 * 66913 66913
+1 * 66913 66913

fn=(2804) void std::_Destroy<Move**, Move*>(Move**, Move**, std::allocator<Move*>&)
0x411357 148 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +3 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340 149
cfn=(2806) void std::_Destroy<Move**>(Move**, Move**)
calls=1340 0x4139a4 -29 
* * 162148 61642 44228 299 298 172 1 0 1
+5 +1 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(1872)
0x407106 122 66913 0 66913 2 0 0 1
+1 * 66913
+3 * 66913
+4 * 66913 0 66913
cob=(3)
cfi=(100)
cfn=(626)
calls=66913 0x10a310 -90 
* * 3211828 1271348 802960 0 2279 0 0 1
* * 66913 66913
+5 * 66913 0 66913
+4 * 66913 0 66913
+4 +4 66913 66913
+4 * 66913 66913
+4 * 66913
+3 * 66913
+3 * 66913 0 66913
cfn=(1874) void std::_Destroy_aux<true>::__destroy<BP_Pump**>(BP_Pump**, BP_Pump**)
calls=66913 0x40808d -14 
* * 3880958 1472087 1070612 2 4 0 1 1
+5 +2 66913
+1 * 66913 66913
+1 * 66913 66913

fn=(2188) void std::_Destroy<RNA**, RNA*>(RNA**, RNA**, std::allocator<RNA*>&)
0x410fbb 148 745 0 745
+1 * 745
+3 * 745 0 0 447 0 0 1
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +3 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfn=(2190) void std::_Destroy<RNA**>(RNA**, RNA**)
calls=745 0x4136aa -29 
* * 90153 34272 24593 894 1289 1 3 2 1
+5 +1 745
+1 * 745 745
+1 * 745 745

fn=(1782)
0x408335 112 59309 0 59309 298 0 0 1
+1 * 59309
+3 * 59309
+4 * 59309 0 59309 2 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=59309 0x10a310 -80 
* * 2846836 1126872 711712 0 5 0 0 1
* * 59309 59309
+5 * 59309 0 59309
+4 * 59309 0 59309
+4 * 59309
+1 * 59309 59309
+1 * 59309 59309

fn=(2514) void std::_Destroy<Protein**, Protein*>(Protein**, Protein**, std::allocator<Protein*>&)
0x4111df 148 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +3 149 149
+4 * 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149 0 149
cfn=(2516) void std::_Destroy<Protein**>(Protein**, Protein**)
calls=149 0x413898 -29 
* * 18037 6856 4925 447 446 1 3 2 1
+5 +1 149
+1 * 149 149
+1 * 149 149

fn=(1874)
0x40808d 112 66913 0 66913 2 0 0 1
+1 * 66913
+3 * 66913
+4 * 66913 0 66913
cob=(3)
cfi=(100)
cfn=(626)
calls=66913 0x10a310 -80 
* * 3211828 1271348 802960 0 4 0 0 1
* * 66913 66913
+5 * 66913 0 66913
+4 * 66913 0 66913
+4 * 66913
+1 * 66913 66913
+1 * 66913 66913

fn=(2516)
0x413898 122 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -90 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +4 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2518) void std::_Destroy_aux<true>::__destroy<Protein**>(Protein**, Protein**)
calls=149 0x4161d5 -14 
* * 8646 3279 2388 149 297 1 1 1 1
+5 +2 149 0 0 149 0 0 1
+1 * 149 149
+1 * 149 149

fn=(2726) void std::_Destroy_aux<true>::__destroy<Pump**>(Pump**, Pump**)
0x416235 112 1192 0 1192 149 0 0 1
+1 * 1192
+3 * 1192
+4 * 1192 0 1192 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 -80 
* * 57220 22649 14308 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(1688)
0x406e0e 122 64239 0 64239 2 0 0 1
+1 * 64239
+3 * 64239
+4 * 64239 0 64239
cob=(3)
cfi=(100)
cfn=(626)
calls=64239 0x10a310 -90 
* * 3083476 1220542 770872 0 3312 1906 0 1 1
* * 64239 64239
+5 * 64239 0 64239
+4 * 64239 0 64239
+4 +4 64239 64239
+4 * 64239 64239
+4 * 64239
+3 * 64239
+3 * 64239 0 64239
cfn=(1690)
calls=64239 0x407de5 -14 
* * 3725866 1413259 1027828 2 7 0 1 1
+5 +2 64239
+1 * 64239 64239
+1 * 64239 64239

fn=(2724)
0x41391e 122 1192 0 1192 149 0 0 1
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 -90 
* * 57220 22649 14308 0 297 1 0 1 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 +4 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192 0 0 149 0 0 1
+3 * 1192 0 1192
cfn=(2726)
calls=1192 0x416235 -14 
* * 69140 26225 19076 298 149 0 2 1
+5 +2 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(2808) void std::_Destroy_aux<true>::__destroy<Move**>(Move**, Move**)
0x416295 112 1340 0 1340 149
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 -80 
* * 64324 25461 16084 0 149
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(1576) void std::_Destroy<BP**, BP*>(BP**, BP**, std::allocator<BP*>&)
0x406737 148 19084 0 19084
+1 * 19084
+3 * 19084
+4 * 19084 0 19084 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=19084 0x10a310 32 
* * 916048 362600 229024 0 0 1 0 0 1
* * 19084 19084
+5 * 19084 0 19084
+4 * 19084 0 19084
+4 * 19084 0 19084
+4 +3 19084 19084
+4 * 19084 19084
+4 * 19084
+3 * 19084
+3 * 19084 0 19084
cfn=(1578)
calls=19084 0x4076f6 -29 
* * 2309172 877866 629780 153 1612 0 3 2
+5 +1 19084
+1 * 19084 19084
+1 * 19084 19084

fn=(2192) void std::_Destroy_aux<true>::__destroy<RNA**>(RNA**, RNA**)
0x415de7 112 745 0 745 149 0 0 1
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 -80 
* * 35764 14156 8944 0 472 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745
+1 * 745 745
+1 * 745 745

fn=(2806)
0x4139a4 122 1340 0 1340 149 0 0 1
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 -90 
* * 64324 25461 16084 0 149 172 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 +4 1340 1340
+4 * 1340 1340 0 1
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2808)
calls=1340 0x416295 -14 
* * 77724 29481 21444 149 149
+5 +2 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(1580)
0x4085dd 112 19084 0 19084 2 0 0 1
+1 * 19084
+3 * 19084
+4 * 19084 0 19084
cob=(3)
cfi=(100)
cfn=(626)
calls=19084 0x10a310 -80 
* * 916036 362597 229012 0 5 0 0 1
* * 19084 19084
+5 * 19084 0 19084
+4 * 19084 0 19084
+4 * 19084
+1 * 19084 19084
+1 * 19084 19084

fn=(2190)
0x4136aa 122 745 0 745 596 0 0 1
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 -90 
* * 35764 14156 8944 0 817 1 0 1 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 +4 745 745 0 149 0 0 1
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfn=(2192)
calls=745 0x415de7 -14 
* * 43214 16391 11924 149 472 0 1 1
+5 +2 745
+1 * 745 745
+1 * 745 745

fn=(2518)
0x4161d5 112 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -80 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fl=(168) /home/nathan/DEV/PC-optimisation/src/BP_Protein_Block.h
fn=(3406) BP_Protein_Block::~BP_Protein_Block()
0x4046be 26 45 0 45 1
+1 * 45 0 0 1 0 0 1
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 +6 
* * 2164 856 544 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 45
+9 * 45 0 45
+4 * 45
+2 +1 45 45
+4 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1918)
calls=45 0x405674 547 
* * 5854 2341 1534 5 9 1 0 0 1
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45 1 0 0 1
cfi=(157)
cfn=(1922)
calls=45 0x4056c2 565 
* * 5899 2341 1534 1 2 0 0 1
+5 * 45 0 45
+4 * 45
+4 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(164)
cfn=(1924) bool __gnu_cxx::operator!=<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >(__gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > > const&, __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > > const&)
calls=45 0x405713 841 
* * 8284 3286 2209 1 2
-14 * 1347
+4 * 1347
+4 * 1347
+3 * 1347
+3 * 1347 0 1347
cfi=(164)
cfn=(1924)
calls=1347 0x405713 841 
* * 247848 98331 66003
+5 * 1392
+2 * 1392
+2 * 1347
+4 * 1347
+3 * 1347 0 1347
cfi=(164)
cfn=(1928)
calls=1347 0x40577e 753 
* * 78130 32329 20209 1 0 1 0 0 1
+5 * 1347 1347 0 0 200
+3 * 1347 0 1347
+4 +1 1347 1347
+5 * 1347
+27 +1 1347 1347 0 1 0 0 1
+4 * 1347
+3 * 1347 0 1347
cob=(8)
cfi=(94)
cfn=(1598)
calls=1347 0x8bf10 -29 
* * 137394 33675 20205 0 690
* * 1347 1347
+5 -2 1347
+4 * 1347
+3 * 1347 0 1347
cfi=(164)
cfn=(1946) __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >::operator++()
calls=1347 0x405754 761 
* * 83518 35023 21556
+5 * 1347
+2 -1 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(3408) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::~vector()
calls=45 0x40562a 423 
* * 40052 14732 10084 20 37 4 2 0 3
+5 +5 45
+1 * 45 45
+4 * 45 45 0 1
+9 * 45
+7 * 45 45
+1 * 45 45

fn=(1610) BP_Protein_Block::BP_Protein_Block()
0x41c9aa 22 45 0 45 1 0 0 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 +10 
* * 2164 856 544
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45 0 0 1 0 0 1
+3 * 45 0 45
cfi=(157)
cfn=(1612) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::vector()
calls=45 0x40560a 253 
* * 13655 5270 3710 48 39 16 6 5 2
+5 +2 45
+1 * 45 45
+1 * 45 45

fn=(1916) BP_Protein_Block::BP_Protein_Block(BP_Protein_Block*)
0x4045c4 16 10281 0 10281 152 0 0 1
+1 * 10281
+3 * 10281 0 10281
+1 * 10281
+4 * 10281 0 10281
cob=(3)
cfi=(100)
cfn=(626)
calls=10281 0x10a310 +16 
* * 493492 195340 123376 0 162 0 0 1
* * 10281 10281
+5 * 10281 0 10281
+4 * 10281 0 10281
+4 * 10281 10281
+9 * 10281 0 10281
+4 * 10281
+2 * 10281 10281
+4 * 10281
+3 * 10281 0 10281
cfi=(157)
cfn=(1612)
calls=10281 0x40560a 253 
* * 3115147 1202878 843046 1929 10610 5011 0 1 1
+5 +1 10281 10281
+4 * 10281 0 10281
+4 * 10281 10281 0 149 0 0 1
+4 * 10281
+3 * 10281 0 10281
cfi=(157)
cfn=(1918)
calls=10281 0x405674 547 
* * 1336538 534614 349562 3457 7799 0 4 2
+5 * 10281 0 10281
+4 * 10281 10281
+4 * 10281
+3 * 10281 0 10281
cfi=(157)
cfn=(1922)
calls=10281 0x4056c2 565 
* * 1346819 534614 349562 149 1209 1 1 0 1
+5 * 10281 0 10281
+4 * 10281
+4 * 10281
+4 * 10281
+3 * 10281
+3 * 10281 0 10281
cfi=(164)
cfn=(1924)
calls=10281 0x405713 841 
* * 1891716 750516 503781 149 2446 1 1 1 1
-14 * 325863
+4 * 325863
+4 * 325863
+3 * 325863
+3 * 325863 0 325863
cfi=(164)
cfn=(1924)
calls=325863 0x405713 841 
* * 59958792 23787999 15967287
+5 * 336144
+2 * 336144
+2 * 325863
+4 * 325863
+3 * 325863 0 325863
cfi=(164)
cfn=(1928)
calls=325863 0x40577e 753 
* * 18900058 7820713 4887949 157 0 1553 1 0 1
+5 * 325863 325863 0 2097 48670 0 1
+3 * 325863 0 325863
+4 +1 325863
+5 * 325863 0 325863
cob=(8)
cfi=(94)
cfn=(1312)
calls=325863 0x8de60 -18 
* * 67624573 10817746 10623465 274 153 117075 0 2 116645
* * 325863 325863
+5 * 325863
+3 * 325863 325863
+4 * 325863
+3 * 325863
+3 * 325863 0 325863
cfi=(169) /home/nathan/DEV/PC-optimisation/src/BP_Protein.h
cfn=(1930) BP_Protein::BP_Protein(BP_Protein*)
calls=325863 0x404150 +15 
* * 24439729 11079343 6843127 747 172826 0 2
+5 * 325863 0 325863
+4 * 325863 325863
+4 * 325863
+4 * 325863
+3 * 325863
+3 * 325863 0 325863
cfi=(157)
cfn=(1932) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::push_back(BP_Protein*&&)
calls=325863 0x4057b0 931 
* * 426248995 161781820 111648727 14438 60952 123469 21 8 110825
+5 -1 325863
+4 * 325863 0 0 609 0 0 1
+3 * 325863 0 325863
cfi=(164)
cfn=(1946)
calls=325863 0x405754 761 
* * 20203510 8472439 5213812 0 1647 1 0 1 1
+5 * 325863
+28 +3 10281
+1 * 10281 10281
+4 * 10281 10281
+9 * 10281
+7 * 10281
+4 * 10281 10281
+1 * 10281 10281
+1 * 10281 10281

fl=(195) /usr/include/c++/5/ext/alloc_traits.h
fn=(3190) __gnu_cxx::__alloc_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_S_select_on_copy(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
0x41234d 139 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(160) /usr/include/c++/5/bits/alloc_traits.h
cfn=(3192) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::select_on_container_copy_construction(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
calls=10 0x415065 559 
* * 1852 713 512 1 1 1 1 1 1
+5 * 10 10
+4 * 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fl=(152) /usr/include/c++/5/bits/allocator.h
fn=(2608) std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::~allocator()
0x416654 121 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -89 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(153) /usr/include/c++/5/ext/new_allocator.h
cfn=(2610) __gnu_cxx::new_allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::~new_allocator()
calls=149 0x418258 -35 
* * 8497 3279 2239
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(1802) std::allocator<BP_Pump*>::allocator()
0x408026 113 11369 0 11369 150 0 0 1
+1 * 11369
+3 * 11369
+4 * 11369 0 11369
cob=(3)
cfi=(100)
cfn=(626)
calls=11369 0x10a310 -81 
* * 545716 216012 136432 0 1717 1 0 1 1
* * 11369 11369
+5 * 11369 0 11369
+4 * 11369 11369
+4 * 11369
+3 * 11369 0 11369 148 0 0 1
cfi=(153)
cfn=(1804) __gnu_cxx::new_allocator<BP_Pump*>::new_allocator()
calls=11369 0x408f3c -34 
* * 648037 250119 170539 148 2514 0 1 1
+5 * 11369
+1 * 11369 11369
+1 * 11369 11369

fn=(2622) std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > const&)
0x417ec4 119 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -87 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2404) __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
calls=149 0x409428 -40 
* * 8497 3279 2239 0 297 1 0 1 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2932) std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > const&)
0x417e56 119 7 0 7 2 0 0 1
+1 * 7
+3 * 7
+4 * 7 0 7
cob=(3)
cfi=(100)
cfn=(626)
calls=7 0x10a310 -87 
* * 344 135 92 0 1 0 0 1
* * 7 7
+5 * 7 0 7
+4 * 7 0 7
+4 * 7 7
+4 * 7
+3 * 7 0 7
cfi=(153)
cfn=(2404)
calls=7 0x409428 -40 
* * 403 155 109 1 2 1 0 1 1
+5 * 7
+1 * 7 7
+1 * 7 7

fn=(3426) std::allocator<BP_Move*>::~allocator()
0x4073a4 121 46 0 46 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 -89 
* * 2212 875 556 0 1
* * 46 46
+5 * 46 0 46
+4 * 46 46
+4 * 46
+3 * 46 0 46
cfi=(153)
cfn=(3428) __gnu_cxx::new_allocator<BP_Move*>::~new_allocator()
calls=46 0x4082ee -35 
* * 2626 1013 694 1
+5 * 46
+1 * 46 46
+1 * 46 46

fn=(1506) std::allocator<BP*>::allocator()
0x408576 113 5812 0 5812 149 0 0 1
+1 * 5812
+3 * 5812
+4 * 5812 0 5812 148 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=5812 0x10a310 -81 
* * 278980 110429 69748 0 1548 1 0 1 1
* * 5812 5812
+5 * 5812 0 5812
+4 * 5812 5812
+4 * 5812
+3 * 5812 0 5812
cfi=(153)
cfn=(1508) __gnu_cxx::new_allocator<BP*>::new_allocator()
calls=5812 0x409198 -34 
* * 331288 127865 87184 297 380 0 1 1
+5 * 5812
+1 * 5812 5812
+1 * 5812 5812

fn=(1618) std::allocator<BP_Protein*>::allocator()
0x407d7e 113 10326 0 10326 150 0 0 1
+1 * 10326 0 0 319 0 0 1
+3 * 10326
+4 * 10326 0 10326
cob=(3)
cfi=(100)
cfn=(626)
calls=10326 0x10a310 -81 
* * 495652 196195 123916 0 1408 3472 0 1 1
* * 10326 10326
+5 * 10326 0 10326
+4 * 10326 10326
+4 * 10326
+3 * 10326 0 10326
cfi=(153)
cfn=(1620) __gnu_cxx::new_allocator<BP_Protein*>::new_allocator()
calls=10326 0x408dda -34 
* * 588586 227173 154894 297 1486 0 1 1
+5 * 10326
+1 * 10326 10326
+1 * 10326 10326

fn=(2918) std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::~allocator()
0x416d00 121 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -89 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(153)
cfn=(2920) __gnu_cxx::new_allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::~new_allocator()
calls=16 0x41888e -35 
* * 916 353 244
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(3024) std::allocator<std::pair<float const, float> >::~allocator()
0x417218 121 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -89 
* * 1172 459 299
* * 22 22
+5 * 22 0 22
+4 * 22 22
+4 * 22
+3 * 22 0 22
cfi=(153)
cfn=(3026) __gnu_cxx::new_allocator<std::pair<float const, float> >::~new_allocator()
calls=22 0x418c40 -35 
* * 1258 485 334 0 0 1 0 0 1
+5 * 22
+1 * 22 22
+1 * 22 22

fn=(3194) std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
0x415094 115 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -83 
* * 968 382 248 0 2 0 0 2
* * 20 20
+5 * 20 0 20
+4 * 20 0 20
+4 +1 20 20
+4 * 20 20
+4 * 20
+3 * 20
+3 * 20 0 20
cfi=(153)
cfn=(3196) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
calls=20 0x417730 -35 
* * 1164 441 324 1 0 0 1
+5 * 20
+1 * 20 20
+1 * 20 20

fn=(3204) std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::~allocator()
0x4054d6 121 20 0 20 1
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -89 
* * 968 382 248 0 1 1 0 0 1
* * 20 20
+5 * 20 0 20
+4 * 20 20
+4 * 20
+3 * 20 0 20
cfi=(153)
cfn=(3206) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::~new_allocator()
calls=20 0x406070 -35 
* * 1144 441 304 2 1 0 1
+5 * 20
+1 * 20 20
+1 * 20 20

fn=(2362) std::allocator<std::pair<float const, Protein*> >::~allocator()
0x408ca2 121 318 0 318
+1 * 318
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -89 
* * 15276 6045 3828
* * 318 318
+5 * 318 0 318
+4 * 318 318
+4 * 318
+3 * 318 0 318
cfi=(153)
cfn=(2364) __gnu_cxx::new_allocator<std::pair<float const, Protein*> >::~new_allocator()
calls=318 0x409394 -35 
* * 18130 6997 4774 0 1
+5 * 318
+1 * 318 318
+1 * 318 318

fn=(2914) std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::allocator()
0x4107be 113 26 0 26 2 0 0 1
+1 * 26 0 0 1 0 0 1
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 -81 
* * 1252 495 316 0 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(153)
cfn=(2916) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::new_allocator()
calls=26 0x412194 -34 
* * 1486 573 394 1 1 0 1 1
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(2996) std::allocator<std::pair<float const, float> >::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > const&)
0x4171f4 119 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -87 
* * 1163 456 299 0 9 3 0 0 2
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 * 22 22
+4 * 22
+3 * 22 0 22
cfi=(153)
cfn=(2998) __gnu_cxx::new_allocator<std::pair<float const, float> >::new_allocator()
calls=22 0x418c2c -40 
* * 1258 485 334 0 1 0 0 1
+5 * 22
+1 * 22 22
+1 * 22 22

fn=(2020) std::allocator<RNA*>::allocator()
0x4087ee 113 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2022) __gnu_cxx::new_allocator<RNA*>::new_allocator()
calls=149 0x4092c6 -34 
* * 8497 3279 2239 149 149 0 1 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2058) std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >::allocator()
0x405dc4 113 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2060) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >::new_allocator()
calls=149 0x4068ac -34 
* * 8497 3279 2239
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2084) std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >::allocator()
0x405de4 113 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfi=(153)
cfn=(2086) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >::new_allocator()
calls=149 0x4068c0 -34 
* * 8497 3279 2239 149 149 0 1 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2094) std::allocator<Protein*>::allocator()
0x40880e 113 596 0 596
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 -81 
* * 28612 11325 7156 0 149 1 0 1 1
* * 596 596
+5 * 596 0 596
+4 * 596 596
+4 * 596
+3 * 596 0 596
cfi=(153)
cfn=(2096) __gnu_cxx::new_allocator<Protein*>::new_allocator()
calls=596 0x4092da -34 
* * 33976 13113 8944 0 148
+5 * 596
+1 * 596 596
+1 * 596 596

fn=(2564) std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > const&)
0x416630 119 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -87 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2566) __gnu_cxx::new_allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::new_allocator()
calls=149 0x418244 -40 
* * 8497 3279 2239 0 148
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(3334) std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::~allocator()
0x4107de 121 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -89 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(153)
cfn=(3336) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::~new_allocator()
calls=10 0x4121a8 -35 
* * 574 221 154
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(2420) std::allocator<std::__detail::_Hash_node_base*>::~allocator()
0x408d86 121 496 0 496
+1 * 496
+3 * 496
+4 * 496 0 496
cob=(3)
cfi=(100)
cfn=(626)
calls=496 0x10a310 -89 
* * 23867 9442 5986 0 148 152 0 0 4
* * 496 496
+5 * 496 0 496
+4 * 496 496
+4 * 496
+3 * 496 0 496
cfi=(153)
cfn=(2422) __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator()
calls=496 0x40943c -35 
* * 28276 10913 7444 0 2
+5 * 496
+1 * 496 496
+1 * 496 496

fn=(3452) std::allocator<BP*>::~allocator()
0x40769c 121 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -89 
* * 52 20 16 0 1 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(153)
cfn=(3454) __gnu_cxx::new_allocator<BP*>::~new_allocator()
calls=1 0x408596 -35 
* * 61 23 19
+5 * 1
+1 * 1 1
+1 * 1 1

fn=(1412) std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::allocator()
0x4054b6 113 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322 299 0 0 2
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 -81 
* * 63460 25119 15868 0 0 1 0 0 1
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(153)
cfn=(1414) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::new_allocator()
calls=1322 0x40605c -34 
* * 75358 29085 19834 299 597 0 2 3
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2114) std::allocator<Move*>::allocator()
0x40884e 113 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2116) __gnu_cxx::new_allocator<Move*>::new_allocator()
calls=149 0x409302 -34 
* * 8497 3279 2239
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(3414) std::allocator<BP_Protein*>::~allocator()
0x406db4 121 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -89 
* * 2164 856 544 0 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(153)
cfn=(3416) __gnu_cxx::new_allocator<BP_Protein*>::~new_allocator()
calls=45 0x407d9e -35 
* * 2569 991 679 0 1
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(1710) std::allocator<BP_Move*>::allocator()
0x4082ce 113 10476 0 10476 148 0 0 1
+1 * 10476
+3 * 10476
+4 * 10476 0 10476
cob=(3)
cfi=(100)
cfn=(626)
calls=10476 0x10a310 -81 
* * 502852 199045 125716 0 2946 1 0 1 1
* * 10476 10476
+5 * 10476 0 10476
+4 * 10476 10476
+4 * 10476
+3 * 10476 0 10476
cfi=(153)
cfn=(1712) __gnu_cxx::new_allocator<BP_Move*>::new_allocator()
calls=10476 0x40906a -34 
* * 597136 230473 157144 148 875 0 1 1
+5 * 10476
+1 * 10476 10476
+1 * 10476 10476

fn=(2104) std::allocator<Pump*>::allocator()
0x40882e 113 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+4 * 149 149 0 148 0 0 1
+4 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2106) __gnu_cxx::new_allocator<Pump*>::new_allocator()
calls=149 0x4092ee -34 
* * 8497 3279 2239 148
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2402) std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
0x408d62 119 318 0 318 149 0 0 1
+1 * 318
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -87 
* * 15272 6044 3824
* * 318 318
+5 * 318 0 318
+4 * 318 0 318
+4 * 318 318
+4 * 318
+3 * 318 0 318 149 0 0 1
cfi=(153)
cfn=(2404)
calls=318 0x409428 -40 
* * 18130 6997 4774 149 297 1 1 1 1
+5 * 318
+1 * 318 318
+1 * 318 318

fn=(2866) std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > const&)
0x416cdc 119 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -87 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(153)
cfn=(2868) __gnu_cxx::new_allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::new_allocator()
calls=16 0x41887a -40 
* * 916 353 244 1 0 1 1 0 1
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(3038) std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > const&)
0x418f3c 119 22 0 22
+1 * 22
+3 * 22 0 0 1
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -87 
* * 1064 420 272 0 1 1 0 1 1
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 * 22 22
+4 * 22
+3 * 22 0 22
cfi=(153)
cfn=(2404)
calls=22 0x409428 -40 
* * 1258 485 334 0 2 0 0 1
+5 * 22
+1 * 22 22
+1 * 22 22

fn=(3438) std::allocator<BP_Pump*>::~allocator()
0x4070ac 121 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -89 
* * 2164 856 544 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(153)
cfn=(3440) __gnu_cxx::new_allocator<BP_Pump*>::~new_allocator()
calls=45 0x408046 -35 
* * 2569 991 679 0 1 1 0 0 1
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(2314) std::allocator<std::pair<float const, Protein*> >::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > const&)
0x408c7e 119 318 0 318
+1 * 318 0 0 150 0 0 1
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -87 
* * 15276 6045 3828 0 148 11 0 0 2
* * 318 318
+5 * 318 0 318
+4 * 318 0 318
+4 * 318 318
+4 * 318
+3 * 318 0 318
cfi=(153)
cfn=(2316) __gnu_cxx::new_allocator<std::pair<float const, Protein*> >::new_allocator()
calls=318 0x409380 -40 
* * 18130 6997 4774 149 150 0 1 1
+5 * 318
+1 * 318 318
+1 * 318 318

fl=(66)
fn=(612) 0x00000000004016d0
0x401670 0 1 0 0 1 0 0 1
+5 0 1 0 1
+1 0 1
+7 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+23 0 1 1
+1 0 1 1
+39 0 1 0 0 1 0 0 1
+5 0 1 1 0 0 1
+4 0 1
+2 0 1

fn=(596)
0x4015b0 0 1 0 0 1 0 0 1
+2 0 1
+3 0 1 1
+1 0 1
+3 0 1
+4 0 1 0 1
+1 0 1 0 1
+1 0 1
+7 0 1
+7 0 1
+7 0 1 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 3345818758 1232529951 845109125 173460 1166518 990946 2438 1725 925464
* 0 5 3 2

fn=(604) __libc_csu_init
0x41e180 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1
+3 0 1 0 1
+2 0 1 0 1
+2 0 1
+7 0 1 0 1
+1 0 1
+7 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1 0 1
cob=(2)
cfi=(16)
cfn=(606) 0x0000000000401278
calls=1 0x401278 0 
* 0 11 3 1 1
+5 0 1
+3 0 1
+2 0 1
+2 0 1
+8 0 1 0 0 1 0 0 1
+3 0 1
+3 0 1
+3 0 1 1 1 0 1 0 0 1
cfn=(612)
calls=1 0x4016d0 0 
* 0 16 3 1 3 1 0 3
-9 0 5
+3 0 5
+3 0 5
+3 0 5 5 5 0 1
cfi=(118) /home/nathan/DEV/PC-optimisation/src/DNA.cpp
cfn=(1142) _GLOBAL__sub_I__ZN3DNAC2EP8GridCell
calls=1 0x41c8f5 377 
* 0 258 81 63 3 1 2 3
cfi=(117)
cfn=(1138)
calls=1 0x40f5cd 494 
* 0 250 79 63 2 1 1 2
cfi=(116)
cfn=(1134)
calls=1 0x40a6df 49 
* 0 242 77 63 2 1 1 2
cfi=(115) /home/nathan/DEV/PC-optimisation/src/World.cpp
cfn=(1130) _GLOBAL__sub_I__ZN5WorldC2Eiij
calls=1 0x40407b 416 
* 0 234 75 63 6 5 3 5
cfi=(99) /home/nathan/DEV/PC-optimisation/main.cpp
cfn=(620) _GLOBAL__sub_I_main
calls=1 0x401aab 56 
* 0 103729 28232 11812 432 646 164 417 108 141
+4 0 6
+4 0 6
+3 0 6
+2 0 1
+4 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1 0 0 1
+2 0 1 1

fn=(252) __gmon_start__
0x4015e0 0 5 5 0 1 2 0 1 1
+6 0 5
+2 0 5
+2 0 4 4
+6 0 1
+4 0 1
+7 0 1 1 0 1 0 0 1
+7 0 1 0 1
+10 0 1 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 83619 14988 13490 110 1099 3228 110 885 3207
* 0 5 3 2 2 0 0 2
+5 0 1 1 0 0 1
+7 0 1
+4 0 1
cfn=(312) atexit
calls=1 0x41e200 0 
* 0 1415 404 155 11 82 12 11 3 2

fn=(312)
0x41e200 0 1 0 0 1 0 0 1
+7 0 1
+3 0 1
+2 0 1 1 0 0 1
+3 0 1
+2 0 1
cob=(1)
cfi=(67)
cfn=(260)
calls=1 0x17870 64 
* 0 1404 400 153 9 79 12 9 3 2
* 0 5 3 2 1 2 0 1

fl=(169)
fn=(1698) BP_Protein::BP_Protein(int, int)
0x41c910 23 462 0 462 1 0 0 1
+1 * 462
+3 * 462
+4 * 462 0 462
cob=(3)
cfi=(100)
cfn=(626)
calls=462 0x10a310 +9 
* * 22180 8779 5548
* * 462 462
+5 * 462 0 462
+4 * 462 0 462
+3 * 462 0 462
+3 * 462 462
+4 * 462 0 462
+7 * 462 462
+4 * 462 462
+8 * 462 0 462
+5 +1 462 462
+4 * 462 462
+3 * 462 0 462
+2 +1 462 462
+4 * 462 462
+3 * 462 0 462
+3 +1 462
+1 * 462 462
+1 * 462 462

fn=(1930)
0x404150 33 325863 0 325863 447 0 0 1
+1 * 325863
+3 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 -1 
* * 15641428 6191398 3910360
* * 325863 325863
+5 * 325863 0 325863
+4 * 325863 0 325863
+4 * 325863 325863
+4 * 325863 0 325863
+7 * 325863 325863
+4 * 325863 325863 0 0 1860
+8 * 325863 0 325863 300 0 0 1
+5 +1 325863 325863
+4 * 325863 325863 0 0 170966
+2 * 325863 325863
+4 * 325863 0 325863
+2 +1 325863 325863
+4 * 325863 325863
+3 * 325863 325863
+4 * 325863 0 325863
+3 +1 325863 325863
+4 * 325863 325863
+5 * 325863 325863
+4 * 325863 0 325863
+5 +1 325863
+1 * 325863 325863
+1 * 325863 325863

fn=(1622) BP_Protein::BP_Protein(int, float)
0x41c95a 28 885 0 885 1 0 0 1
+1 * 885
+3 * 885
+4 * 885 0 885
cob=(3)
cfi=(100)
cfn=(626)
calls=885 0x10a310 +4 
* * 42484 16816 10624
* * 885 885
+5 * 885 0 885
+4 * 885 0 885
+3 * 885 0 885
+5 * 885 885
+4 * 885 0 885
+7 * 885 885
+4 * 885 885
+8 * 885 0 885
+5 +1 885 885
+4 * 885 885
+3 * 885 0 885
+2 +1 885 885
+4 * 885 885
+5 * 885 0 885
+5 +1 885
+1 * 885 885
+1 * 885 885

fl=(132) /home/nathan/DEV/PC-optimisation/src/Common.cpp
fn=(1210) Common::init_binding_matrix(unsigned int)
0x41dd88 11 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+7 * 1 0 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 +21 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+6 * 1 1
+9 * 1 0 1
+4 * 1
+2 +2 1
+7 * 1
+5 * 1
+3 * 1 0 1 1 0 0 1
cfi=(133)
cfn=(1212) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine(unsigned long)
calls=1 0x40552e 495 
* * 171605 65519 46200 10 4 59 10 0 26
+5 +1 1 1
+6 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(134) /usr/include/c++/5/bits/random.tcc
cfn=(1214) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
calls=1 0x40555a 327 
* * 171518 65489 46159
+5 +1 1
+7 * 1 1 0 0 1 0 0 1
+8 * 1 1
+8 * 1
+3 * 1 0 1
cfi=(133)
cfn=(1224) std::uniform_real_distribution<float>::uniform_real_distribution(float, float)
calls=1 0x405ec0 1748 
* * 140 54 46 3 1 1 3
+5 +1 1
+7 * 1 0 0 1 0 0 1
+5 * 1
+5 * 1
+3 * 1 0 1
cfi=(135) /usr/include/c++/5/bits/uniform_int_dist.h
cfn=(1228) std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
calls=1 0x41df1a +88 
* * 138 53 45 3 2 1 3
+5 +2 1 0 1
+10 * 1 1
+10 * 1
-10 * 1000 1000
+10 * 1000
+6 +1 1000 0 1000
+10 * 1000 1000
+10 * 1000 0 0 1 0 0 1
-10 * 1000000 1000000
+10 * 1000000
+6 +1 1000000
+7 * 1000000
+7 * 1000000
+3 * 1000000
+3 * 1000000 0 1000000
cfi=(135)
cfn=(1232) int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=1000000 0x41df48 164 
* * 468855585 185142562 118055608 17 4 5 17
+5 * 1000000
+3 * 1000000
+3 * 1000000
+2 * 1000000
+2 +1 247146 247146
+6 * 247146
+6 * 247146 247146
+6 * 247146
+3 * 247146
+7 * 247146
+7 * 247146
+3 * 247146
+3 * 247146 0 247146
cfi=(133)
cfn=(1244) float std::uniform_real_distribution<float>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=247146 0x405efe 1808 
* * 299682600 115072983 76353384 27 24 170 25 9 4
+5 * 247146
+4 * 247146
+3 * 247146 0 247146 0 0 15391 0 0 15391
+7 * 247146
+2 +2 752854 752854 0 1 0 0 1
+6 * 752854
+6 * 752854 752854
+6 * 752854
+2 * 752854
+2 * 752854 0 0 1 0 0 1
+4 * 752854 0 752854 0 0 47110 0 0 47109
+9 -4 752854 0 752854
+7 * 752854
-7 * 247146 0 247146
+7 * 247146
+5 -1 1000 0 1000
+7 * 1000
+5 +9 1
+1 * 1 1
+4 * 1 1
+9 * 1
+7 * 1
+7 * 1 1 0 0 1 0 0 1
+1 * 1 1
+1 * 1 1

fl=(172) /home/nathan/DEV/PC-optimisation/src/BP_Pump_Block.h
fn=(3430) BP_Pump_Block::~BP_Pump_Block()
0x4048e0 23 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 +9 
* * 2164 856 544 0 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 45
+9 * 45 0 45
+4 * 45
+2 +1 45 45 0 1 0 0 1
+4 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1982)
calls=45 0x405850 547 
* * 5854 2341 1534 4 12 0 0 1
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1986)
calls=45 0x40589e 565 
* * 5899 2341 1534 1 1
+5 * 45 0 45
+4 * 45
+4 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(164)
cfn=(1988) bool __gnu_cxx::operator!=<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >(__gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > > const&, __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > > const&)
calls=45 0x4058ef 841 
* * 8284 3286 2209 1 1 2 0 0 1
-14 * 1275
+4 * 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(164)
cfn=(1988)
calls=1275 0x4058ef 841 
* * 234600 93075 62475
+5 * 1320
+2 * 1320
+2 * 1275 0 0 1 0 0 1
+4 * 1275
+3 * 1275 0 1275
cfi=(164)
cfn=(1992)
calls=1275 0x40595a 753 
* * 73954 30601 19129 1
+5 * 1275 1275 0 0 184
+3 * 1275 0 1275
+4 +1 1275 1275
+4 * 1275
+3 * 1275 0 1275
cob=(8)
cfi=(94)
cfn=(1598)
calls=1275 0x8bf10 -25 
* * 130050 31875 19125 0 648
* * 1275 1275
+5 -1 1275
+4 * 1275
+3 * 1275 0 1275
cfi=(164)
cfn=(2010) __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >::operator++()
calls=1275 0x405930 761 
* * 79054 33151 20404 0 0 1 0 0 1
+5 * 1275
+2 -1 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(3432) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::~vector()
calls=45 0x405806 423 
* * 41916 15415 10591 10 36 3 0 0 3
+5 +4 45
+1 * 45 45
+4 * 45 45 0 1
+9 * 45
+7 * 45 45
+1 * 45 45

fn=(1980) BP_Pump_Block::BP_Pump_Block(BP_Pump_Block*)
0x4047e6 14 11324 0 11324 149 0 0 1
+1 * 11324
+3 * 11324 0 11324
+1 * 11324
+4 * 11324 0 11324
cob=(3)
cfi=(100)
cfn=(626)
calls=11324 0x10a310 +18 
* * 543556 215157 135892 0 7
* * 11324 11324
+5 * 11324 0 11324
+4 * 11324 0 11324
+4 * 11324 11324 0 2 0 0 1
+9 * 11324 0 11324
+4 * 11324
+2 * 11324 11324
+4 * 11324
+3 * 11324 0 11324
cfi=(157)
cfn=(1796) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::vector()
calls=11324 0x4057e6 253 
* * 3431176 1324909 928572 739 9160 0 0 1
+5 +1 11324 11324
+4 * 11324 0 11324
+4 * 11324 11324
+4 * 11324
+3 * 11324 0 11324
cfi=(157)
cfn=(1982)
calls=11324 0x405850 547 
* * 1472128 588850 385024 468 9060 1 3 1 1
+5 * 11324 0 11324
+4 * 11324 11324
+4 * 11324
+3 * 11324 0 11324
cfi=(157)
cfn=(1986)
calls=11324 0x40589e 565 
* * 1483452 588850 385024 1 582 1 1 0 1
+5 * 11324 0 11324
+4 * 11324 0 0 149 0 0 1
+4 * 11324
+4 * 11324
+3 * 11324
+3 * 11324 0 11324
cfi=(164)
cfn=(1988)
calls=11324 0x4058ef 841 
* * 2083628 826655 554888 148 1434 1586 1 1 1
-14 * 320350
+4 * 320350
+4 * 320350
+3 * 320350
+3 * 320350 0 320350
cfi=(164)
cfn=(1988)
calls=320350 0x4058ef 841 
* * 58944400 23385550 15697150
+5 * 331674
+2 * 331674
+2 * 320350
+4 * 320350
+3 * 320350 0 320350
cfi=(164)
cfn=(1992)
calls=320350 0x40595a 753 
* * 18580304 7688401 4805254 1 0 0 1
+5 * 320350 320350 0 0 47576
+3 * 320350 0 320350
+4 +1 320350
+5 * 320350 0 320350
cob=(8)
cfi=(94)
cfn=(1312)
calls=320350 0x8de60 -16 
* * 66490430 10640217 10431982 193 131 116008 2 2 115585
* * 320350 320350
+5 * 320350
+3 * 320350 320350
+4 * 320350
+3 * 320350
+3 * 320350 0 320350 149 0 0 1
cfi=(173) /home/nathan/DEV/PC-optimisation/src/BP_Pump.h
cfn=(1994) BP_Pump::BP_Pump(BP_Pump*)
calls=320350 0x40478e +2 
* * 23705904 10891901 6407004 161 170796 1 1 1 1
+5 * 320350 0 320350
+4 * 320350 320350
+4 * 320350
+4 * 320350
+3 * 320350
+3 * 320350 0 320350
cfi=(157)
cfn=(1996) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::push_back(BP_Pump*&&)
calls=320350 0x40598c 931 
* * 432931555 164223460 113355740 9428 50913 119096 11 4 107075
+5 -1 320350
+4 * 320350
+3 * 320350 0 320350
cfi=(164)
cfn=(2010)
calls=320350 0x405930 761 
* * 19861704 8329101 5125604
+5 * 320350
+28 +3 11324 0 0 148 0 0 1
+1 * 11324 11324
+4 * 11324 11324
+9 * 11324
+7 * 11324
+4 * 11324 11324
+1 * 11324 11324
+1 * 11324 11324

fn=(1794) BP_Pump_Block::BP_Pump_Block()
0x41ca20 20 45 0 45 1 0 0 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 +12 
* * 2164 856 544
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1796)
calls=45 0x4057e6 253 
* * 13655 5270 3710 9 35 2 9 5 2
+5 +1 45
+1 * 45 45
+1 * 45 45

fl=(187)
fn=(2658)
0x40f646 11 12367 0 12367 149 0 0 1
+1 * 12367
+3 * 12367
+4 * 12367 0 12367
cob=(3)
cfi=(100)
cfn=(626)
calls=12367 0x10a310 +21 
* * 593620 234974 148408
* * 12367 12367
+5 * 12367 0 12367
+4 * 12367
+2 * 12367 0 12367
+5 * 12367 0 12367
+5 * 12367 0 12367
+3 * 12367 0 12367
+3 * 12367 12367
+4 * 12367 0 12367
+3 * 12367 12367
+4 * 12367 12367
+8 * 12367 0 12367 149 0 0 1
+5 * 12367 12367
+4 * 12367 12367
+8 * 12367 0 12367
+5 * 12367 12367
+4 * 12367 0 12367
+7 +1 12367 12367
+4 * 12367 12367
+4 * 12367 0 12367
+2 +1 12367 12367
+4 * 12367 12367
+5 * 12367 0 12367
+5 +1 12367 12367
+4 * 12367 12367
+5 * 12367 0 12367
+5 +1 12367 12367
+4 * 12367 12367
+3 * 12367 0 12367
+3 +1 12367
+1 * 12367 12367
+1 * 12367 12367

fl=(148) /usr/include/c++/5/bits/hashtable.h
fn=(2064) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
0x4052c2 394 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2066) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
calls=149 0x4051e6 1694 
* * 110122 42168 29371 298 594 2 2 2 2
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2070) std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Map_base()
calls=149 0x405212 545 
* * 8497 3279 2239
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2072) std::__detail::_Insert<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
calls=149 0x40523a 871 
* * 17441 6707 4627 149 0 149 1 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfi=(149)
cfn=(2076) std::__detail::_Rehash_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Rehash_base()
calls=149 0x40525a 932 
* * 10125 3871 2683 0 297 0 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2078) std::__detail::_Equality<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
calls=149 0x40526e 1800 
* * 10134 3874 2683 149 0 1 1 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2080) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > >::_Hashtable_alloc()
calls=149 0x4052a2 1907 
* * 35329 13563 9403 298 297 1 2 1 1
+5 * 149 149
+4 * 149
+4 * 149 149
+4 * 149 0 149 0 0 35 0 0 35
+3 * 149 149
+4 * 149 0 149
+8 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(1416) std::__detail::_Hash_node_base::_Hash_node_base()
calls=149 0x4040fe 231 
* * 8795 3428 2388 0 0 190 0 0 42
+5 * 149 149
+4 * 149 0 149
+8 * 149 149
+4 * 149
+4 * 149 149
+8 * 149
+3 * 149 0 149
cfi=(149)
cfn=(1418) std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
calls=149 0x40411e +66 
* * 9391 3726 2686 0 0 39 0 0 39
+5 * 149 149
+4 * 149 0 149 0 0 34 0 0 34
+8 * 149
+1 * 149 149
+1 * 149 149

fn=(2254) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(float const&)
0x40abf8 1300 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +5 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2256) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(float const&) const
calls=149 0x40ae9c 1168 
* * 65494 22623 15329 1645 758 155 16 14 2
+5 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149 0 149
cfn=(2274) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(float const&, unsigned long) const
calls=149 0x40aedc 620 
* * 46359 18183 12834 447 595 150 3 2 2
+5 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2284) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, float const&, unsigned long) const
calls=149 0x40af14 629 
* * 20719 8048 5819 447 256 1 3 0 1
+5 * 149 0 149
+4 +1 149 149
+5 * 149
+23 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(2246) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
calls=149 0x40ab5e 490 
* * 28463 11027 7603 0 149 0 0 1
+5 * 149 0 149
+4 * 149 149
+4 +1 149 149
+4 * 149 149
+9 * 149
+7 * 149 149
+1 * 149 149

fn=(2646) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*)
0x416868 1448 149 0 149
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149 149 0 0 1
+4 +4 149 149
+4 * 149 149
+3 * 149 149
+4 * 149
+4 * 149
+3 * 149 149
+3 * 149
+3 * 149
+63 +12 149 149 0 149 0 0 1
+4 * 149 149
+4 * 149 149
+4 * 149 0 149
+3 +1 149 149
+4 * 149 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149 149
+3 * 149
+3 * 149
+54 +4 149 149 0 149 0 0 1
+4 * 149 149
+3 * 149 149
+4 * 149 0 0 149 0 0 1
+4 * 149
+3 * 149 149
+4 * 149
+4 * 149 0 149
+3 +2 149
+1 * 149
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2842) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const
0x414662 620 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
cob=(3)
cfi=(100)
cfn=(626)
calls=166 0x10a310 32 
* * 7976 3156 2000 0 0 1 0 0 1
* * 166 166
+5 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +1 166 166
+4 * 166 166 0 1 0 0 1
+4 * 166 166
+4 * 166 166
+4 * 166 166
+4 * 166
+3 * 166 0 166
cfi=(149)
cfn=(2844) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const
calls=166 0x416b5e 1172 
* * 40852 15774 11304 10 11 2 1 2 2
+5 * 166 166
+1 * 166 166

fn=(1372) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
0x404414 394 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 63460 25119 15868 0 597 0 0 3
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1374) std::__detail::_Hashtable_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
calls=1322 0x4042f8 1694 
* * 962453 368846 256513 1497 2240 154 10 11 5
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1398) std::__detail::_Map_base<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Map_base()
calls=1322 0x404324 545 
* * 89898 34372 23797
+5 * 1322 1322 0 299 0 0 2
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1400) std::__detail::_Insert<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
calls=1322 0x40434c 871 
* * 154682 59492 40990 299 0 299 2 0 2
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1404) std::__detail::_Rehash_base<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Rehash_base()
calls=1322 0x40436c 932 
* * 75358 29085 19834
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1406) std::__detail::_Equality<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
calls=1322 0x404380 1800 
* * 89889 34369 23797 299 298 0 2 1
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1408) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_Hashtable_alloc()
calls=1322 0x4043d4 1907 
* * 327870 125593 87265 1196 896 2 8 5 2
+5 * 1322 1322
+4 * 1322
+4 * 1322 1322
+4 * 1322 0 1322 0 0 256 0 0 256
+3 * 1322 1322
+4 * 1322 0 1322 299 0 295 2 0 295
+8 * 1322 1322
+4 * 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1416)
calls=1322 0x4040fe 231 
* * 78002 30407 21156 1 0 0 1
+5 * 1322 1322
+4 * 1322 0 1322 0 0 290 0 0 290
+8 * 1322 1322
+4 * 1322
+4 * 1322 1322 0 0 150 0 0 1
+8 * 1322
+3 * 1322 0 1322
cfi=(149)
cfn=(1418)
calls=1322 0x40411e +66 
* * 83290 33051 23800 150 0 590 1 0 293
+5 * 1322 1322
+4 * 1322 0 1322
+8 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2246)
0x40ab5e 490 308 0 308 149 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14792 5854 3704 0 299 0 0 2
* * 308 308
+5 * 308 0 308
+4 * 308 308
+9 * 308 0 308
+4 * 308
+2 +1 308 0 0 150 0 0 1
+4 * 308
+5 * 308
+3 * 308 0 308
cfi=(149)
cfn=(2248) std::__detail::_Node_iterator<std::pair<float const, Protein*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
calls=308 0x40ae70 353 
* * 38200 14786 10480 348 446 1 3 2 1
+5 * 308 308
+4 * 308 308
+4 * 308 308
+9 * 308
+7 * 308 308
+1 * 308 308

fn=(2274)
0x40aedc 620 785 0 785
+1 * 785
+3 * 785
+4 * 785 0 785
cob=(3)
cfi=(100)
cfn=(626)
calls=785 0x10a310 32 
* * 37692 14918 9432 0 299 1 0 1 1
* * 785 785
+5 * 785 0 785
+4 * 785 0 785
+4 * 785 0 785
+4 +1 785 785
+4 * 785 785 0 0 150
+4 * 785 785 0 160 0 0 1
+4 * 785 785
+4 * 785 785
+4 * 785
+3 * 785 0 785
cfi=(149)
cfn=(2276) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(float const&, unsigned long, unsigned long) const
calls=785 0x40b38c 1172 
* * 193126 74579 53396 299 450 150 2 2 1
+5 * 785 785
+1 * 785 785

fn=(2284)
0x40af14 629 487 0 487
+1 * 487
+3 * 487
+4 * 487 0 487
cob=(3)
cfi=(100)
cfn=(626)
calls=487 0x10a310 32 
* * 23384 9255 5852
* * 487 487
+5 * 487 0 487
+4 * 487 0 487
+4 * 487 0 487
+4 * 487 0 487
+4 +3 487 487
+4 * 487 487
+4 * 487 487
+4 * 487 487 0 150 0 0 1
+4 * 487
+3 * 487 0 487
cfn=(2286) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, float const&, unsigned long) const
calls=487 0x40b3ce 1420 
* * 71410 27679 19373 324 293 4 7 2 4
+5 * 487 0 487
+4 +1 487 487
+5 * 487
+2 +1 40 40
+4 * 40 40
+3 * 40
+2 +1 447
+5 +1 447 447
+1 * 447 447
-1 * 40 40
+1 * 40 40

fn=(2424) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
0x406c46 369 328 0 328 150 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328
cob=(3)
cfi=(100)
cfn=(626)
calls=328 0x10a310 32 
* * 15760 6236 3952 0 20 2 0 2 2
* * 328 328
+5 * 328 0 328
+4 +1 328 328
+4 * 328 328
+4 * 328 328
+1 * 328 328

fn=(2612) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*)
0x414094 1586 149 0 149
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149 0 0 149 0 0 1
+2 +6 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2368) std::__detail::_Prime_rehash_policy::_M_state() const
calls=149 0x40a7b2 487 
* * 8646 3577 2239 0 149 0 0 1
+5 * 149 0 149
+4 * 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+4 * 149
+5 * 149
+3 * 149 0 149 149 0 0 1
cob=(8)
cfi=(94)
cfn=(2374)
calls=149 0xb7280 0 
* * 11324 3427 1937 149
* * 149 149
+5 * 149
+2 * 149
+3 * 149 0 149
+3 * 149 0 149
+4 +4 149 149
+4 * 149
+2 * 149
+2 +2 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2614) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
calls=149 0x416718 1947 
* * 207613 71832 51908 2682 1804 378 18 9 82
+5 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2632) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::_M_v()
calls=149 0x41232e 257 
* * 35023 13710 9395 298 297 1 2 1 1
+5 * 149
+3 * 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfi=(149)
cfn=(2634) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
calls=149 0x4167b4 1202 
* * 17292 6856 4627 149 297 1 1 1 1
+5 * 149
+3 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2636) decltype ((get<0>)((forward<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&>(std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&) const
calls=149 0x416820 100 
* * 38296 14899 10440 298 297 1 2 1 1
+5 * 149
+3 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2534) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(int const&, unsigned long) const
calls=149 0x413dfa 620 
* * 46343 18179 12818 0 148 1 0 0 1
+5 * 149 0 149
+4 +3 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149 149 0 0 1
cfi=(149)
cfn=(2644) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*, unsigned long) const
calls=149 0x41684c 1183 
* * 8795 3279 2537 0 149 0 0 1
+5 +3 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2646)
calls=149 0x416868 1448 
* * 13265 5663 3133 596 0 1 4 0 1
+5 +1 149 149
+4 * 149 149
+4 * 149
+4 * 149 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149 149 0 0 1
cfi=(149)
cfn=(2648) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*)
calls=149 0x414ffc 353 
* * 18484 7154 5074 447 148 0 3
+5 * 149 149
+4 +7 149 149
+4 * 149 149
+9 * 149
+60 * 149 0 0 149 0 0 1
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2616) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
0x418432 1970 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 0 0 1
* * 149 149
+5 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 +4 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2618) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
calls=149 0x419362 339 
* * 146499 48135 35345 745 911 228 5 4 80
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2624) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
calls=149 0x41378a 369 
* * 8646 3577 2239 149 0 0 1
+5 * 149 0 149
+4 +1 149 149
+4 * 149 0 149
+8 +1 149 0 149 149 0 0 1
+8 +1 149 149
+5 * 149
0x418586 +21 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(2626) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
calls=149 0x411120 360 
* * 29067 11178 7462 894 447 149 6 3 1
+5 +1 149 149
+4 * 149 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149 0 149
+3 +1 149
+1 * 149 149
+1 * 149 149

fn=(2924) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
0x416de8 1947 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 0 1 0 0 1
* * 4 4
+5 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4 2 0 0 1
+4 * 4 4
+9 * 4 0 4
+4 * 4
+2 +6 4 4
+4 * 4 4
+4 * 4
+4 * 4 0 4
+1 * 4
+3 * 4
+3 * 4 0 4
cfn=(2926) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
calls=4 0x4189ce +17 
* * 25383 9589 6778 62 32 22 28 18 21
+5 * 4
+4 +9 4
+1 * 4 4
+4 * 4 4
+9 * 4
+67 * 4 4 0 2 0 0 1
+4 * 4 4
+1 * 4 4

fn=(2956) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*)
0x416f38 1448 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16 0 0 1 0 0 1
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +4 16 16
+4 * 16 16
+3 * 16 16
+4 * 16
+4 * 16
+3 * 16 16
+3 * 16
+3 * 16
+63 +12 16 16 0 1 0 0 1
+4 * 16 16
+4 * 16 16
+4 * 16 0 16
+3 +1 16 16
+4 * 16 16
+4 * 16 0 16 1 0 0 1
+4 +1 16 16
+4 * 16 16
+3 * 16
+3 * 16
+2 +3 15 15
+4 * 15 15
+3 * 15 15
+4 * 15
+3 * 15 0 15
cfi=(149)
cfn=(3070) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>::_M_next() const
calls=15 0x415e00 295 
* * 874 361 229 0 1 0 0 1
+5 * 15
+3 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfn=(3104) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*) const
calls=15 0x4187de 616 
* * 16703 6482 4523 1 0 1 1 0 1
+5 * 15
+4 * 15
+4 * 15 15
+4 * 15 0 15
+3 +1 15 15
+4 * 15 15
+3 * 15 15
+4 * 15
+4 * 15
+3 * 15 15
+4 * 15
+4 * 15 0 15
+3 +2 15
+1 * 15
+4 * 15 15
+1 * 15 15
+1 * 15 15
-36 -2 1 1 0 1 0 0 1
+4 * 1 1
+3 * 1 1
+4 * 1
+4 * 1
+3 * 1 1
+4 * 1
+4 * 1 0 1
+3 +2 1
+1 * 1
+4 * 1 1
+1 * 1 1
+1 * 1 1

fn=(2972) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(float const&, unsigned long) const
0x414ad4 620 34 0 34
+1 * 34
+3 * 34
+4 * 34 0 34
cob=(3)
cfi=(100)
cfn=(626)
calls=34 0x10a310 32 
* * 1644 649 420 0 20 11 0 1 2
* * 34 34
+5 * 34 0 34
+4 * 34 0 34
+4 * 34 0 34
+4 +1 34 34
+4 * 34 34
+4 * 34 34
+4 * 34 34
+4 * 34 34 0 2 0 0 1
+4 * 34
+3 * 34 0 34
cfi=(149)
cfn=(2974) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(float const&, unsigned long, unsigned long) const
calls=34 0x417076 1172 
* * 8380 3234 2328 2 4 1 2 3 1
+5 * 34 34
+1 * 34 34

fn=(3042) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0x41222a 360 22 0 22 1 0 0 1
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1064 420 272 0 12 2 0 1 2
* * 22 22
+5 * 22 0 22
+4 +1 22 22
+4 * 22 22 0 1 0 0 1
+4 * 22 22
+4 * 22 22
+3 * 22 22
+4 * 22
+3 * 22
+3 * 22 0 22
cfn=(3044) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
calls=22 0x414fb0 -10 
* * 11402 4184 2960 8 4 3 5 3 3
+5 * 22
+1 * 22 22
+1 * 22 22

fn=(3062) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<float const, float>, false>*)
0x41742c 1448 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 * 12 0 12
+4 +4 12 12
+4 * 12 12
+3 * 12 12
+4 * 12
+4 * 12
+3 * 12 12
+3 * 12
+3 * 12
+63 +12 12 12 0 1 0 0 1
+4 * 12 12
+4 * 12 12
+4 * 12 0 12
+3 +1 12 12
+4 * 12 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12 12
+3 * 12 0 0 11 0 0 1
+3 * 12
+54 +4 12 12
+4 * 12 12
+3 * 12 12 0 1 0 0 1
+4 * 12
+4 * 12
+3 * 12 12
+4 * 12
+4 * 12 0 12
+3 +2 12
+1 * 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(3252) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::begin()
0x40ab06 482 10 0 10 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2424)
calls=10 0x406c46 369 
* * 584 241 154 0 10 0 0 1
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10 1
cfi=(149)
cfn=(2248)
calls=10 0x40ae70 353 
* * 1244 481 344 11 1
+5 * 10 10
+4 * 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fn=(2614)
0x416718 1947 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149 0 0 149 0 0 1
+2 +6 149 149
+4 * 149 149
+4 * 149
+4 * 149 0 149
+1 * 149
+3 * 149
+3 * 149 0 149
cfn=(2616)
calls=149 0x418432 +17 
* * 196434 67659 48775 2235 1655 377 15 8 81
+5 * 149
+4 +9 149
+1 * 149 149
+4 * 149 149
+9 * 149
+67 * 149 149 0 149 0 0 1
+4 * 149 149
+1 * 149 149

fn=(2630) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
0x4160ac 328 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149 149 0 0 1
+4 +1 149 149
+4 * 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149
+3 * 149
+3 * 149 149
+1 * 149 149

fn=(2848) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const
0x41469a 629 162 0 162
+1 * 162
+3 * 162
+4 * 162 0 162
cob=(3)
cfi=(100)
cfn=(626)
calls=162 0x10a310 32 
* * 7780 3079 1948
* * 162 162
+5 * 162 0 162
+4 * 162 0 162
+4 * 162 0 162
+4 * 162 0 162
+4 +3 162 162
+4 * 162 162
+4 * 162 162 0 1 0 0 1
+4 * 162 162
+4 * 162
+3 * 162 0 162
cfn=(2850) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const
calls=162 0x416ba0 1420 
* * 150222 58549 40782 106 63 4 6 2 4
+5 * 162 0 162
+4 +1 162 162
+5 * 162
+2 +1 146 146
+4 * 146 146
+3 * 146
+2 +1 16
+5 +1 16 16
+1 * 16 16
-1 * 146 146
+1 * 146 146

fn=(2938) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
0x41373e 351 4 0 4 1 0 0 1
+1 * 4 0 0 1 0 0 1
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 1 0 0 1
* * 4 4
+5 * 4 0 4
+4 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(2940) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
calls=4 0x415ef2 -25 
* * 260 97 68 6 1 0 2 1
+5 * 4
+2 * 4
+2 +3 3 3
+4 * 3 3
+4 * 3 3
+4 * 3
+3 * 3
+3 * 3 0 3 1
cfi=(149)
cfn=(3094) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
calls=3 0x415f22 2004 
* * 2624 955 699 22 7 4 3 5 4
+5 * 3
+2 -2 1
+1 +3 1 1
+1 * 1 1
-1 * 3 3
+1 * 3 3

fn=(2980) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, float const&, unsigned long) const
0x4170b8 1420 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1060 419 268 0 10
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 * 22 0 22
+4 * 22 0 22
+4 +6 22 22
+4 * 22 22
+3 * 22 22
+4 * 22
+4 * 22
+3 * 22 22
+3 * 22 0 22
+4 +1 22 22
+5 * 22
+2 +1 22
+5 * 22
0x41718c +13 22 22 0 2 0 0 1
+1 * 22 22

fn=(3028) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<float const, float>, false>*)
0x414d56 1586 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+9 * 12 0 12 11 0 0 1
+4 * 12
+2 +6 12 12
+4 * 12
+4 * 12
+3 * 12 0 12
cfi=(149)
cfn=(2368)
calls=12 0x40a7b2 487 
* * 700 289 184 9 1 0 0 1
+5 * 12 0 12
+4 * 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+4 * 12
+5 * 12
+3 * 12 0 12 11 0 0 1
cob=(8)
cfi=(94)
cfn=(2374)
calls=12 0xb7280 0 
* * 912 276 156 10 20
* * 12 12 0 0 9
+5 * 12
+2 * 12
+3 * 12 0 12
+3 * 12 0 12
+4 +4 12 12
+4 * 12
+2 * 12
+2 +2 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(3030) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
calls=12 0x4172dc 1947 
* * 15953 5744 4079 95 41 7 19 8 7
+5 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(149)
cfn=(3048) std::__detail::_Hash_node_value_base<std::pair<float const, float> >::_M_v()
calls=12 0x412174 257 
* * 2828 1106 764 1 11 0 1 1
+5 * 12
+3 * 12 12 0 2 0 0 1
+4 * 12
+3 * 12 0 12
cfi=(149)
cfn=(3050) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
calls=12 0x417378 1202 
* * 1400 554 380 11 12 1 1 2 1
+5 * 12
+3 * 12
+3 * 12 0 12
cfi=(149)
cfn=(3052) decltype ((get<0>)((forward<std::pair<float const, float>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<float const, float>&>(std::pair<float const, float>&) const
calls=12 0x4173e4 100 
* * 3087 1199 850 2 21 2 2 1 2
+5 * 12
+3 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(2972)
calls=12 0x414ad4 620 
* * 3736 1465 1036 0 10
+5 * 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 0 11 0 0 1
+3 * 12 0 12
cfi=(149)
cfn=(3060) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<float const, float>, false>*, unsigned long) const
calls=12 0x417410 1183 
* * 712 265 208
+5 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(3062)
calls=12 0x41742c 1448 
* * 1072 457 256 14 0 1 4 0 1
+5 +1 12 12
+4 * 12 12
+4 * 12
+4 * 12 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+4 * 12
+3 * 12
+3 * 12 0 12 11 0 0 1
cfi=(149)
cfn=(3064) std::__detail::_Node_iterator<std::pair<float const, float>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<float const, float>, false>*)
calls=12 0x414efa 353 
* * 1496 578 416 4 2 0 3 1
+5 * 12 12
+4 +7 12 12
+4 * 12 12
+9 * 12
+60 * 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(3044)
0x414fb0 351 22 0 22 2 0 0 1
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1060 419 268 0 1 0 0 1
* * 22 22
+5 * 22 0 22 1
+4 * 22 0 22
+4 * 22 0 22
+4 +2 22 22
+4 * 22 22
+4 * 22
+3 * 22
+3 * 22 0 22
cfn=(3046) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
calls=22 0x415166 -25 
* * 1412 529 356 3 2 1 2 1 1
+5 * 22
+2 * 22
+2 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3328) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
calls=10 0x41763a 2004 
* * 8474 3096 2194 2 1 2 2 1 2
+5 * 10
+2 -2 12
+1 +3 12 12
+1 * 12 12
-1 * 10 10
+1 * 10 10

fn=(3046)
0x415166 328 22 0 22 1 0 0 1
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1060 419 268 0 2 1 0 1 1
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 +1 22 22
+4 * 22 0 0 2 0 0 1
+4 * 22 22
+4 * 22
+3 * 22
+3 * 22
+3 * 22
+3 * 22 22
+1 * 22 22

fn=(3210) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*)#1}::operator()(std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*) const
0x4108e6 1115 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3212) std::__detail::_Hash_node_value_base<std::pair<float const, Protein*> >::_M_v() const
calls=10 0x40be38 261 
* * 2366 924 646 10 1 1 1 1 1
+5 * 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3220) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_allocate_node<std::pair<float const, Protein*> const&>(std::pair<float const, Protein*> const&)
calls=10 0x41240a 1947 
* * 18675 6902 4901 38 46 24 3 1 6
+5 * 10 10
+1 * 10 10

fn=(3230) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*) const
0x40b81c 616 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3232) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*, unsigned long) const
calls=10 0x40bc7c 1176 
* * 12618 4691 3292 42 30 4 3 1 4
+5 * 10 10
+1 * 10 10

fn=(3308) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
0x4107fe 1221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(3310) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
calls=10 0x4121bc 1910 
* * 15992 5957 4196 13 20 15 4 2 6
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3042)
calls=10 0x41222a 360 
* * 10488 3877 2708 2 1 3 2 1 3
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3330) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::~_Hashtable_alloc()
calls=10 0x40fb5c 1886 
* * 2386 914 646 0 0 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(2366) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
0x40b1a4 1586 298 0 298
+1 * 298
+3 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 148 1 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298 298 0 0 1
+4 * 298 298
+9 * 298 0 298
+4 * 298
+2 +6 298 298
+4 * 298
+4 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2368)
calls=298 0x40a7b2 487 
* * 17288 7153 4474 50 149 0 1 1
+5 * 298 0 298
+4 * 298
+4 * 298 0 298
+4 +2 298 298
+4 * 298 298
+4 * 298 298
+4 * 298 298
+4 * 298 298 0 298 0 0 1
+4 * 298
+4 * 298
+5 * 298
+3 * 298 0 298
cob=(8)
cfi=(94)
cfn=(2374)
calls=297 0xb7280 0 
* * 22572 6831 3861 1776 740
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 4357 1152 448 19 56 2 18 45
* * 302 300 2
+5 * 298
+2 * 298
+3 * 298 0 298
+3 * 298 0 298
+4 +4 298 298
+4 * 298
+2 * 298
+2 +2 298 298
+4 * 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfn=(2394) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
calls=298 0x40b544 1947 
* * 416435 144023 103907 4324 2263 608 28 21 161
+5 +1 298 298 0 149 0 0 1
+4 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2432) std::__detail::_Hash_node_value_base<std::pair<float const, Protein*> >::_M_v()
calls=298 0x40abd8 257 
* * 70038 27418 18782 0 148
+5 * 298
+3 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2434) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
calls=298 0x40b5e0 1202 
* * 34576 13710 9246 0 0 149 0 0 1
+5 * 298
+3 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2438) decltype ((get<0>)((forward<std::pair<float const, Protein*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<float const, Protein*>&>(std::pair<float const, Protein*>&) const
calls=298 0x40b64c 100 
* * 70046 27420 19088 298 297 2 2 1 2
+5 * 298
+3 * 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfn=(2274)
calls=298 0x40aedc 620 
* * 92682 36357 25632 0 148
+5 * 298 0 298
+4 +3 298 298 0 149 0 0 1
+4 * 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2446) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*, unsigned long) const
calls=298 0x40b678 1183 
* * 17586 6557 5070 149 149 0 1 1
+5 +3 298 298
+4 * 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfn=(2448) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
calls=298 0x40b694 1448 
* * 26526 11325 6262 447 0 149 3 0 1
+5 +1 298 298
+4 * 298 298
+4 * 298
+4 * 298 298
+4 * 298 0 298
+4 +1 298 298 0 149 0 0 1
+4 * 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfi=(149)
cfn=(2248)
calls=298 0x40ae70 353 
* * 36956 14305 10136
+5 * 298 298
+4 +7 298 298
+4 * 298 298
+9 * 298
+60 * 298 0 0 149 0 0 1
+4 * 298 298
+1 * 298 298
+1 * 298 298

fn=(2396) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
0x40ba3c 1970 298 0 298
+1 * 298
+3 * 298 0 0 149 0 0 1
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 297 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 +4 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfn=(2398) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
calls=298 0x40bd7e 339 
* * 294231 96635 70805 2387 1221 605 16 16 158
+5 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298
cfn=(2424)
calls=298 0x406c46 369 
* * 17288 7153 4474 149 0 0 1
+5 * 298 0 298
+4 +1 298 298
+4 * 298 0 298 149 0 0 1
+8 +1 298 0 298
+8 +1 298 298
+5 * 298
0x40bb90 +21 298 298 0 149 0 0 1
+4 * 298
+3 * 298 0 298
cfn=(2426) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
calls=298 0x4060f2 360 
* * 58122 22353 14912 1043 596 2 6 3 2
+5 +1 298 298
+4 * 298 298
+4 * 298 0 298
+4 +1 298 298
+4 * 298 298
+4 * 298 0 298
+3 +1 298
+1 * 298 298
+1 * 298 298

fn=(2426)
0x4060f2 360 308 0 308 149 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14900 5893 3731 0 297 2 0 1 2
* * 308 308
+5 * 308 0 308 299 0 0 1
+4 +1 308 308
+4 * 308 308
+4 * 308 308
+4 * 308 308
+3 * 308 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfn=(2428) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
calls=308 0x406cae -10 
* * 48582 17912 12684 645 329 13 5 3 3
+5 * 308
+1 * 308 308
+1 * 308 308

fn=(2624)
0x41378a 369 159 0 159 158 0 0 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7640 3023 1916 0 10 1 0 1 1
* * 159 159
+5 * 159 0 159
+4 +1 159 159
+4 * 159 159
+4 * 159 159
+1 * 159 159

fn=(2850)
0x416ba0 1420 162 0 162
+1 * 162
+3 * 162
+4 * 162 0 162
cob=(3)
cfi=(100)
cfn=(626)
calls=162 0x10a310 32 
* * 7780 3079 1948 0 0 1 0 0 1
* * 162 162
+5 * 162 0 162
+4 * 162 0 162
+4 * 162 0 162
+4 * 162 0 162
+4 +6 162 162 0 10 0 0 1
+4 * 162 162
+3 * 162 162
+4 * 162
+4 * 162
+3 * 162 162 0 0 11
+3 * 162 0 162
+4 +1 162 162
+5 * 162
+2 +1 16
+5 * 16
+5 +2 146 146
+4 * 146 146 0 0 18
+3 * 146 0 146
+4 +3 146 146
+4 * 146 146
+4 * 146 146
+4 * 146 146 0 10 0 0 1
+4 * 146
+3 * 146 0 146
cfi=(149)
cfn=(3132) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(int const&, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*) const
calls=146 0x41877e 1701 
* * 137272 53152 37408 76 34 3 3 2 3
+5 * 146
+2 * 146
+2 +1 146 146
+4 * 146
+98 +7 162 162 0 10 0 0 1
+1 * 162 162

fn=(2978) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, float const&, unsigned long) const
0x414b0c 629 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1064 420 272 0 0 1 0 0 1
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 * 22 0 22
+4 * 22 0 22
+4 +3 22 22
+4 * 22 22
+4 * 22 22
+4 * 22 22
+4 * 22
+3 * 22 0 22 2 0 0 1
cfn=(2980)
calls=22 0x4170b8 1420 
* * 1544 595 422 3 10 0 2
+5 * 22 0 22
+4 +1 22 22
+5 * 22
+11 +2 22
+5 +1 22 22
+1 * 22 22

fn=(3040) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
0x4127ee 369 192 0 192 1 0 0 1
+1 * 192
+3 * 192
+4 * 192 0 192
cob=(3)
cfi=(100)
cfn=(626)
calls=192 0x10a310 32 
* * 9228 3651 2316 0 11 1 0 1 1
* * 192 192
+5 * 192 0 192
+4 +1 192 192 0 1 0 0 1
+4 * 192 192 0 0 36
+4 * 192 192
+1 * 192 192

fn=(3116) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
0x4120fa 490 190 0 190
+1 * 190
+3 * 190 0 0 1 0 0 1
+4 * 190 0 190
cob=(3)
cfi=(100)
cfn=(626)
calls=190 0x10a310 32 
* * 9128 3612 2288
* * 190 190
+5 * 190 0 190
+4 * 190 190
+9 * 190 0 190
+4 * 190
+2 +1 190
+4 * 190
+5 * 190
+3 * 190 0 190
cfi=(149)
cfn=(3064)
calls=190 0x414efa 353 
* * 23564 9121 6464 0 1 1 0 1 1
+5 * 190 190
+4 * 190 190
+4 * 190 190
+9 * 190
+7 * 190 190
+1 * 190 190

fn=(3272) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
0x4054f6 1221 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 1 0 1 1
* * 10 10
+5 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(3274) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
calls=10 0x406084 1910 
* * 15677 5843 4115 148 79 15 4 5 6
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2426)
calls=10 0x4060f2 360 
* * 10596 3916 2735 50 30 13 1 1 3
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3294) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::~_Hashtable_alloc()
calls=10 0x4043f4 1886 
* * 2382 913 642 2 2 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3274)
0x406084 1910 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 583 227 151 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(2424)
calls=10 0x406c46 369 
* * 584 241 154 0 10 1 0 1 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3276) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
calls=10 0x406c62 +66 
* * 14060 5245 3710 148 59 14 4 3 5
+5 +1 10 10
+4 * 10 10
+4 * 10
+8 * 10 10
+4 * 10 10
+3 * 10
+5 * 10
+3 * 10 0 10
cob=(3)
cfi=(76)
cfn=(298)
calls=10 0x8f240 53 
* * 150 10 20
* * 10 10
+5 +1 10 10
+4 * 10 0 10
+8 +1 10 10
+4 * 10 0 10
+8 +1 10
+1 * 10 10
+1 * 10 10

fn=(2286)
0x40b3ce 1420 487 0 487
+1 * 487
+3 * 487
+4 * 487 0 487
cob=(3)
cfi=(100)
cfn=(626)
calls=487 0x10a310 32 
* * 23380 9254 5848 0 150 1 0 0 1
* * 487 487
+5 * 487 0 487
+4 * 487 0 487
+4 * 487 0 487
+4 * 487 0 487
+4 +6 487 487
+4 * 487 487 0 0 50
+3 * 487 487
+4 * 487
+4 * 487
+3 * 487 487 0 0 71
+3 * 487 0 487 150 0 0 1
+4 +1 487 487
+5 * 487
+2 +1 447
+5 * 447
+5 +2 40 40
+4 * 40 40
+3 * 40 0 40
+4 +3 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfi=(149)
cfn=(3144) std::__detail::_Hashtable_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(float const&, unsigned long, std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*) const
calls=40 0x40b7bc 1701 
* * 36876 14249 10036 24 22 3 4 2 3
+5 * 40
+2 * 40
+2 +1 40 40
+4 * 40 0 0 1 0 0 1
+98 +7 487 487 0 149 0 0 1
+1 * 487 487

fn=(2398)
0x40bd7e 339 308 0 308 10
+1 * 308 0 0 159 0 0 1
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14792 5854 3704 0 159 0 0 2
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 +2 308 308
+5 * 308
+3 * 308
+3 * 308
+3 * 308
+24 +6 308 308
+4 * 308 308 0 149 0 0 1
+4 * 308
+3 * 308
+3 * 308 0 308
cfi=(149)
cfn=(2400) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_allocate_buckets(unsigned long)
calls=308 0x40bf56 1992 
* * 282602 92110 67782 2131 1079 608 17 15 159
+5 +1 308 308
+1 * 308 308

fn=(2428)
0x406cae 351 308 0 308 149 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 170 0 0 1
* * 308 308
+5 * 308 0 308
+4 * 308 0 308 159 0 0 1
+4 * 308 0 308
+4 +2 308 308
+4 * 308 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfn=(2430) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
calls=308 0x407c9c -25 
* * 19716 7393 4932 308 149 1 2 1 1
+5 * 308
+2 * 308
+2 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3292) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
calls=10 0x407ccc 2004 
* * 8474 3096 2194 29 10 12 1 1 2
+5 * 10
+2 -2 298
+1 +3 298 298
+1 * 298 298
-1 * 10 10
+1 * 10 10

fn=(2430)
0x407c9c 328 308 0 308 149 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 149 1 0 1 1
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308
+4 * 308 308
+4 * 308
+3 * 308 0 0 159 0 0 1
+3 * 308
+3 * 308
+3 * 308 308
+1 * 308 308

fn=(2542) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const
0x4164f4 1420 159 0 159
+1 * 159
+3 * 159
+4 * 159 0 159 150 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7636 3022 1912
* * 159 159
+5 * 159 0 159
+4 * 159 0 159
+4 * 159 0 159
+4 * 159 0 159
+4 +6 159 159
+4 * 159 159
+3 * 159 159
+4 * 159
+4 * 159
+3 * 159 159 0 0 10
+3 * 159 0 159
+4 +1 159 159
+5 * 159
+2 +1 149
+5 * 149
+5 +2 10 10
+4 * 10 10 0 1 0 0 1
+3 * 10 0 10
+4 +3 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3242) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(int const&, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*) const
calls=10 0x418148 1701 
* * 9436 3649 2596 15 25 3 3 3 3
+5 * 10
+2 * 10
+2 +1 10 10
+4 * 10
+98 +7 159 159 0 150 0 0 1
+1 * 159 159

fn=(2618)
0x419362 339 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+5 * 149
+3 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149
+24 +6 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2620) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > >::_M_allocate_buckets(unsigned long)
calls=149 0x419a58 1992 
* * 136512 44409 32808 596 762 228 4 3 80
+5 +1 149 149
+1 * 149 149

fn=(2922) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*)
0x4148d0 1586 16 0 16
+1 * 16
+3 * 16 0 16
+1 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+9 * 16 0 16
+4 * 16
+2 +6 16 16 0 1 0 0 1
+4 * 16
+4 * 16
+3 * 16 0 16
cfi=(149)
cfn=(2368)
calls=16 0x40a7b2 487 
* * 932 385 244 0 1 0 0 1
+5 * 16 0 16
+4 * 16
+4 * 16 0 16
+4 +2 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+4 * 16
+5 * 16
+3 * 16 0 16
cob=(8)
cfi=(94)
cfn=(2374)
calls=16 0xb7280 0 
* * 441 126 51 6 13 0 2 7
* * 16 16 0 0 1
+5 * 16
+2 * 16 0 0 1 0 0 1
+3 * 16 0 16
+3 * 16 0 16
+4 +4 16 16
+4 * 16
+2 * 16
+2 +2 4 4
+4 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(2924)
calls=4 0x416de8 1947 
* * 25687 9702 6866 67 32 23 31 18 22
+5 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(149)
cfn=(2942) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_v()
calls=4 0x414a74 257 
* * 948 370 260 2 1 1 2 1 1
+5 * 4
+3 * 4 4
+4 * 4
+3 * 4 0 4 1 0 0 1
cfi=(149)
cfn=(2944) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
calls=4 0x416e84 1202 
* * 505 198 141 0 2 1 0 2 1
+5 * 4
+3 * 4
+3 * 4 0 4
cfi=(149)
cfn=(2946) decltype ((get<0>)((forward<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&>(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&) const
calls=4 0x416ef0 100 
* * 1073 414 299 6 1 1 2 1 1
+5 * 4
+3 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(2842)
calls=4 0x414662 620 
* * 1248 489 348 0 0 1 0 0 1
+5 * 4 0 4
+4 +3 4 4
+4 * 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(149)
cfn=(2954) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*, unsigned long) const
calls=4 0x416f1c 1183 
* * 240 89 72
-18 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(149)
cfn=(2954)
calls=12 0x416f1c 1183 
* * 708 264 204
+5 +3 16 16 0 1 0 0 1
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(2956)
calls=16 0x416f38 1448 
* * 19215 7527 5137 5 1 2 5 1 2
+5 +1 16 16
+4 * 16 16
+4 * 16
+4 * 16 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(149)
cfn=(2958) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*)
calls=16 0x41702a 353 
* * 1992 770 552 1 1 0 1 1
+5 * 16 16 0 1 0 0 1
+4 +7 16 16
+4 * 16 16
+9 * 16
+60 * 16
+4 * 16 16
+1 * 16 16
+1 * 16 16

fn=(2928) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
0x4195fc 339 4 0 4
+1 * 4
+3 * 4 0 0 1 0 0 1
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 2 0 0 1
* * 4 4
+5 * 4 0 4
+4 * 4 0 4
+4 +2 4 4
+5 * 4
+3 * 4
+3 * 4
+3 * 4
+24 +6 4 4
+4 * 4 4
+4 * 4 0 0 1 0 0 1
+3 * 4
+3 * 4 0 4
cfi=(149)
cfn=(2930) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::_M_allocate_buckets(unsigned long)
calls=4 0x419cc4 1992 
* * 3721 1198 934 11 11 11 5 3 10
+5 +1 4 4
+1 * 4 4

fn=(2940)
0x415ef2 328 4 0 4 3 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 1 0 0 1
* * 4 4
+5 * 4 0 4 3 0 0 1
+4 * 4 0 4
+4 +1 4 4
+4 * 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4
+3 * 4
+3 * 4 4
+1 * 4 4

fn=(3034) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
0x41973c 339 12 0 12
+1 * 12
+3 * 12 0 0 2 0 0 1
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+5 * 12
+3 * 12
+3 * 12
+3 * 12
+24 +6 12 12
+4 * 12 12
+4 * 12 0 0 11 0 0 1
+3 * 12
+3 * 12 0 12
cfi=(149)
cfn=(3036) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_allocate_buckets(unsigned long)
calls=12 0x419de0 1992 
* * 10201 3529 2515 25 15 4 3 3 4
+5 +1 12 12
+1 * 12 12

fn=(3112) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::begin()
0x4120a2 482 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
cob=(3)
cfi=(100)
cfn=(626)
calls=170 0x10a310 32 
* * 8164 3231 2044 0 1 1 0 1 1
* * 170 170
+5 * 170 0 170
+4 * 170 170
+9 * 170 0 170
+4 * 170 0 0 1 0 0 1
+2 +1 170 170
+4 * 170
+3 * 170 0 170
cfn=(3040)
calls=170 0x4127ee 369 
* * 9864 4081 2554 0 47 0 0 1
+5 * 170
+3 * 170
+4 * 170
+3 * 170
+3 * 170 0 170
cfi=(149)
cfn=(3064)
calls=170 0x414efa 353 
* * 21084 8161 5784 1
+5 * 170 170
+4 * 170 170
+4 * 170 170
+9 * 170
+7 * 170 170
+1 * 170 170

fn=(2628) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
0x4137f2 351 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2630)
calls=149 0x4160ac -25 
* * 9540 3577 2388 298 149 0 2 1
+5 * 149
+2 * 149
+27 +1 149
+1 +3 149 149
+1 * 149 149

fn=(2926)
0x4189ce 1970 4 0 4 2 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 1 0 0 1
* * 4 4
+5 * 4 0 4
+4 * 4 0 4
+4 +4 4 4
+4 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(2928)
calls=4 0x4195fc 339 
* * 3993 1299 1006 13 13 11 7 4 10
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfn=(2934) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
calls=4 0x4136d6 369 
* * 236 97 64 1 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4 0 4
+8 +1 4 0 4
+8 +1 4 4
+5 * 4
-5 * 15 15
+5 * 15
+6 +2 15 15
+4 * 15
+3 * 15 0 15
cfi=(149)
cfn=(3070)
calls=15 0x415e00 295 
* * 874 361 229 1 0 1 1 0 1
+5 * 15 0 15
+4 +1 15 15
+4 * 15 15 0 1 0 0 1
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfi=(149)
cfn=(3072) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> const*, unsigned long) const
calls=15 0x4194e8 1176 
* * 15782 6100 4314 6 6 5 4 4 5
+5 * 15 0 15
+4 +1 15 15
+4 * 15
+8 * 15 15
+4 * 15
+3 * 15 15
+3 * 15
+3 * 15
+2 +2 15 15
+4 * 15 15
+4 * 15 15
+4 * 15 0 15
+3 +1 15 15 0 1 0 0 1
+4 * 15 15
+4 * 15 0 15
+4 +1 15 15
+4 * 15
+8 * 15 15
+4 * 15
+3 * 15 15
+4 * 15
+4 * 15 0 15
+3 +1 15 15
+4 * 15 15
+3 * 15
+3 * 15
+2 +1 12 12
+4 * 12
+8 * 12 12
+4 * 12
+3 * 12 12
+4 * 12 0 12
+3 +1 12 12
+4 * 12 0 12
+4 * 12
-8 * 3 3 0 1 0 0 1
+4 * 3 0 3
+4 * 3
+63 +7 15 15
+4 * 15 0 15
+4 -18 15
+5 +21 4 4 0 1 0 0 1
+4 * 4
+3 * 4 0 4
cfn=(2936) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
calls=4 0x41106c 360 
* * 3434 1267 914 33 11 5 9 8 5
+5 +1 4 4
+4 * 4 4
+4 * 4 0 4
+4 +1 4 4
+4 * 4 4 0 1 0 0 1
+4 * 4 0 4
+3 +1 4
+1 * 4 4
+1 * 4 4

fn=(3030)
0x4172dc 1947 12 0 12 1 0 0 1
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+9 * 12 0 12 1 0 0 1
+4 * 12
+2 +6 12 12
+4 * 12 12
+4 * 12
+4 * 12 0 12
+1 * 12
+3 * 12
+3 * 12 0 12
cfn=(3032) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
calls=12 0x418d60 +17 
* * 15049 5407 3823 92 41 6 16 8 6
+5 * 12
+4 +9 12
+1 * 12 12
+4 * 12 12
+9 * 12
+67 * 12 12 0 1 0 0 1
+4 * 12 12
+1 * 12 12

fn=(3184) std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)
0x41091e 1101 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10 1 0 0 1
+4 * 10
+2 +11 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(1400)
calls=10 0x40434c 871 
* * 1174 451 314 2 3 11 0 1 1
+5 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(1406)
calls=10 0x404380 1800 
* * 574 221 154 1
+5 -4 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3186) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_node_allocator() const
calls=10 0x41239e 1921 
* * 1168 462 318 3 1 1 3 1 1
+5 * 10
+3 +4 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(195)
cfn=(3190)
calls=10 0x41234d 139 
* * 2546 994 696 1 1 1 1 1 1
+5 * 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3198) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >&&)
calls=10 0x4123d4 1912 
* * 3690 1405 1010 3 3 2 3 3 2
+5 * 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3204)
calls=10 0x4054d6 121 
* * 1178 452 318 3 1 1 1 0 1
+5 * 10 10
+4 * 10 0 10
+7 * 10 10
+4 * 10 10 0 0 10
+4 * 10 10
+4 * 10 0 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfi=(149)
cfn=(1416)
calls=10 0x4040fe 231 
* * 594 231 164
+5 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 0 10
+8 +2 10 10
+4 * 10 0 10
+4 * 10 0 0 1 0 0 1
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3208) void std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign<std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*)#1}>(std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&, std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_assign(std::_Hashtable<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)::{lambda(std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*)#1} const&)
calls=10 0x412550 949 
* * 46938 17390 12234 161 123 36 17 6 16
+5 +3 10
+54 * 10 10 0 1 0 0 1
+4 * 10 10
+9 * 10
+7 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3260) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(float const&)
0x412736 1300 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +5 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(2968) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(float const&) const
calls=10 0x414a94 1168 
* * 4324 1501 1024 0 12 0 0 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 0 10 0 0 1
+3 * 10 0 10
cfn=(2972)
calls=10 0x414ad4 620 
* * 3114 1221 864 1 11 10 0 1 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(2978)
calls=10 0x414b0c 629 
* * 1394 541 394 2 10
+5 * 10 0 10
+4 +1 10 10
+5 * 10
+23 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3116)
calls=10 0x4120fa 490 
* * 1914 741 514
+5 * 10 0 10
+4 * 10 10
+4 +1 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fn=(2394)
0x40b544 1947 298 0 298
+1 * 298
+3 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 1 0 1 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 298
+9 * 298 0 298
+4 * 298
+2 +6 298 298
+4 * 298 298
+4 * 298
+4 * 298 0 298
+1 * 298
+3 * 298
+3 * 298 0 298 149 0 0 1
cfn=(2396)
calls=298 0x40ba3c +17 
* * 394081 135678 97645 4026 2114 607 26 20 160
+5 * 298
+4 +9 298
+1 * 298 298
+4 * 298 298
+9 * 298
+67 * 298 298 0 149 0 0 1
+4 * 298 298
+1 * 298 298

fn=(3104)
0x4187de 616 15 0 15 1 0 0 1
+1 * 15
+3 * 15
+4 * 15 0 15
cob=(3)
cfi=(100)
cfn=(626)
calls=15 0x10a310 32 
* * 724 286 184
* * 15 15
+5 * 15 0 15
+4 * 15 0 15
+4 +1 15 15
+4 * 15 15
+4 * 15 15
+4 * 15 15
+4 * 15
+3 * 15
+3 * 15 0 15
cfi=(149)
cfn=(3072)
calls=15 0x4194e8 1176 
* * 15739 6091 4264 0 0 1 0 0 1
+5 * 15 15
+1 * 15 15

fn=(3174) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::end()
0x4122b4 490 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10
+4 * 10
+5 * 10
+3 * 10 0 10
cfi=(149)
cfn=(2648)
calls=10 0x414ffc 353 
* * 1244 481 344
+5 * 10 10
+4 * 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fn=(2448)
0x40b694 1448 298 0 298
+1 * 298
+3 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 +4 298 298
+4 * 298 298
+3 * 298 298
+4 * 298
+4 * 298
+3 * 298 298 0 149 0 0 1
+3 * 298
+3 * 298
+63 +12 298 298 0 149 0 0 1
+4 * 298 298
+4 * 298 298
+4 * 298 0 298
+3 +1 298 298
+4 * 298 298
+4 * 298 0 298
+4 +1 298 298
+4 * 298 298
+3 * 298
+3 * 298
+54 +4 298 298 0 149 0 0 1
+4 * 298 298
+3 * 298 298
+4 * 298
+4 * 298
+3 * 298 298
+4 * 298
+4 * 298 0 298
+3 +2 298
+1 * 298
+4 * 298 298
+1 * 298 298
+1 * 298 298

fn=(2534)
0x413dfa 620 308 0 308
+1 * 308
+3 * 308 0 0 150 0 0 1
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14792 5854 3704 0 297 2 0 0 2
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308 308 0 0 114
+4 * 308 308
+4 * 308 308
+4 * 308 308
+4 * 308
+3 * 308 0 308
cfi=(149)
cfn=(2536) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(int const&, unsigned long, unsigned long) const
calls=308 0x4164b2 1172 
* * 75784 29264 20960 309 318 1 2 1 1
+5 * 308 308
+1 * 308 308

fn=(2626)
0x411120 360 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 149 0 1 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149
+3 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2628)
calls=149 0x4137f2 -10 
* * 19378 7154 5074 596 298 0 4 2
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2894) std::_Hashtable<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
0x40fb7c 394 26 0 26 1 0 0 1
+1 * 26
+3 * 26 0 0 10 0 0 1
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 10 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2896) std::__detail::_Hashtable_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
calls=26 0x40fa60 1694 
* * 19225 7359 5140 5 63 15 3 3 3
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2900) std::__detail::_Map_base<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Map_base()
calls=26 0x40fa8c 545 
* * 1486 573 394
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2902) std::__detail::_Insert<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
calls=26 0x40fab4 871 
* * 3325 1272 889 1 0 1 1 0 1
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2906) std::__detail::_Rehash_base<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Rehash_base()
calls=26 0x40fad4 932 
* * 1770 676 469
+5 * 26 26 0 10 0 0 1
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2908) std::__detail::_Equality<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
calls=26 0x40fae8 1800 
* * 1486 573 394
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(2910) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_Hashtable_alloc()
calls=26 0x40fb3c 1907 
* * 6178 2370 1654 5 2 2 4 2 2
+5 * 26 26
+4 * 26
+4 * 26 26
+4 * 26 0 26
+3 * 26 26
+4 * 26 0 26
+8 * 26 26
+4 * 26
+4 * 26
+3 * 26 0 26
cfi=(149)
cfn=(1416)
calls=26 0x4040fe 231 
* * 1538 599 420
+5 * 26 26
+4 * 26 0 26
+8 * 26 26
+4 * 26
+4 * 26 26 0 0 1
+8 * 26
+3 * 26 0 26
cfi=(149)
cfn=(1418)
calls=26 0x40411e +66 
* * 1642 651 472 1 0 10 0 0 1
+5 * 26 26
+4 * 26 0 26
+8 * 26
+1 * 26 26
+1 * 26 26

fn=(3032)
0x418d60 1970 12 0 12 11 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 10 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 +4 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 0 11 0 0 1
+3 * 12 0 12
cfn=(3034)
calls=12 0x41973c 339 
* * 11009 3830 2723 38 16 4 5 4 4
+5 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(3040)
calls=12 0x4127ee 369 
* * 700 289 184 2 0 0 2
+5 * 12 0 12
+4 +1 12 12
+4 * 12 0 12
+8 +1 12 0 12
+8 +1 12 12
+5 * 12
0x418eb4 +21 12 12 0 11 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(3042)
calls=12 0x41222a 360 
* * 2352 903 612 8 15 2 5 3 2
+5 +1 12 12 0 11 0 0 1
+4 * 12 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12 12
+4 * 12 0 12
+3 +1 12
+1 * 12 12
+1 * 12 12

fn=(3208)
0x412550 949 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 1 0 1 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 0 10
+8 +1 10 10
+4 * 10 10
+3 * 10
+3 * 10
+2 +1 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(2398)
calls=10 0x40bd7e 339 
* * 9015 3177 2221 62 17 3 3 1 1
+5 * 10 0 10
+4 * 10 10
+4 * 10 10
+4 * 10 0 10
+3 +4 10 10
+4 * 10 10
+4 * 10
+3 * 10
+6 +5 10 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfn=(2424)
calls=10 0x406c46 369 
* * 584 241 154 1 0 1 0 0 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3210)
calls=10 0x4108e6 1115 
* * 21705 8077 5731 48 47 25 4 2 7
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3228) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*, std::__detail::_Hash_node<std::pair<float const, Protein*>, false> const*) const
calls=10 0x41514a 1187 
* * 594 221 174 0 9 1 0 0 1
+5 +1 10 10
+4 * 10 10
+4 * 10 0 10
+4 +1 10 10 0 1 0 0 1
+4 * 10 10
+3 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3230)
calls=10 0x40b81c 616 
* * 13262 4952 3466 42 40 4 3 2 4
+5 * 10
+4 * 10
+3 * 10 10
+4 * 10
+4 * 10 0 10
+3 +3 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3240) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>::_M_next() const
calls=10 0x407baa 295 
* * 584 241 154 2 0 1 1 0 1
+5 * 10 0 10 1 0 0 1
+4 * 10 10
+5 * 10
0x41272e +18 10 0 0 1 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3310)
0x4121bc 1910 10 0 10
+1 * 10
+3 * 10 0 0 1 0 0 1
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(3040)
calls=10 0x4127ee 369 
* * 584 241 154 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(3312) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<float const, float>, false>*)
calls=10 0x414f64 +66 
* * 14474 5395 3818 12 20 14 3 2 5
+5 +1 10 10
+4 * 10 10
+4 * 10
+8 * 10 10
+4 * 10 10
+3 * 10
+5 * 10
+3 * 10 0 10
cob=(3)
cfi=(76)
cfn=(298)
calls=10 0x8f240 53 
* * 150 10 20
* * 10 10
+5 +1 10 10
+4 * 10 0 10
+8 +1 10 10
+4 * 10 0 10
+8 +1 10
+1 * 10 10
+1 * 10 10

fn=(2026) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable()
0x4050d6 394 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2028) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base()
calls=149 0x404ffa 1694 
* * 108501 41577 28943 1192 1636 152 8 8 4
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2044) std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Map_base()
calls=149 0x405026 545 
* * 10134 3874 2683
+5 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2046) std::__detail::_Insert<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
calls=149 0x40504e 871 
* * 17441 6707 4627 149 297 1 1 1 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2050) std::__detail::_Rehash_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Rehash_base()
calls=149 0x40506e 932 
* * 8497 3279 2239 149 0 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2052) std::__detail::_Equality<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
calls=149 0x405082 1800 
* * 10125 3871 2683 0 148 1 0 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(2054) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::_Hashtable_alloc()
calls=149 0x4050b6 1907 
* * 36966 14158 9847 0 148 1 0 0 1
+5 * 149 149
+4 * 149
+4 * 149 149
+4 * 149 0 149
+3 * 149 149 0 149 0 0 1
+4 * 149 0 149 0 0 41 0 0 41
+8 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(149)
cfn=(1416)
calls=149 0x4040fe 231 
* * 8795 3428 2388 149 0 1 1 0 1
+5 * 149 149
+4 * 149 0 149 0 0 39 0 0 39
+8 * 149 149
+4 * 149
+4 * 149 149 0 0 13
+8 * 149
+3 * 149 0 149
cfi=(149)
cfn=(1418)
calls=149 0x40411e +66 
* * 9391 3726 2686 0 148 34 0 0 34
+5 * 149 149
+4 * 149 0 149
+8 * 149
+1 * 149 149
+1 * 149 149

fn=(2540) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, int const&, unsigned long) const
0x413e32 629 159 0 159
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7636 3022 1912 0 0 150 0 0 1
* * 159 159
+5 * 159 0 159 159 0 0 1
+4 * 159 0 159
+4 * 159 0 159
+4 * 159 0 159
+4 +3 159 159
+4 * 159 159
+4 * 159 159
+4 * 159 159
+4 * 159
+3 * 159 0 159
cfn=(2542)
calls=159 0x4164f4 1420 
* * 20680 8013 5641 316 35 3 6 3 3
+5 * 159 0 159
+4 +1 159 159
+5 * 159
+2 +1 10 10
+4 * 10 10
+3 * 10
+2 +1 149
+5 +1 149 149 0 149 0 0 1
+1 * 149 149
-1 * 10 10 0 9
+1 * 10 10

fn=(2934)
0x4136d6 369 4 0 4 1
+1 * 4
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 1 0 0 1
* * 4 4
+5 * 4 0 4
+4 +1 4 4
+4 * 4 4
+4 * 4 4
+1 * 4 4

fn=(2936)
0x41106c 360 4 0 4 1 0 0 1
+1 * 4
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 2 1 0 1 1
* * 4 4
+5 * 4 0 4
+4 +1 4 4 0 1 0 0 1
+4 * 4 4
+4 * 4 4
+4 * 4 4
+3 * 4 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfn=(2938)
calls=4 0x41373e -10 
* * 3170 1158 846 31 9 4 7 7 4
+5 * 4
+1 * 4 4
+1 * 4 4

fn=(3170) std::_Hashtable<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::begin()
0x41225c 482 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +1 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfn=(2624)
calls=10 0x41378a 369 
* * 584 241 154 9 10 1 0 1 1
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(149)
cfn=(2648)
calls=10 0x414ffc 353 
* * 1244 481 344 2 2
+5 * 10 10
+4 * 10 10
+4 * 10 10
+9 * 10
+7 * 10 10
+1 * 10 10

fl=(183) /usr/include/c++/5/ext/aligned_buffer.h
fn=(2334) __gnu_cxx::__aligned_buffer<std::pair<float const, Protein*> >::_M_ptr()
0x4093a8 109 1004 0 1004 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
cob=(3)
cfi=(100)
cfn=(626)
calls=1004 0x10a310 -77 
* * 48196 19077 12052 0 2
* * 1004 1004
+5 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004
+3 * 1004 0 1004 150 0 0 1
cfn=(2336) __gnu_cxx::__aligned_buffer<std::pair<float const, Protein*> >::_M_addr()
calls=1004 0x4097f0 -13 
* * 57232 23093 15064 0 299 1 0 1 1
+5 * 1004 1004
+1 * 1004 1004

fn=(2336)
0x4097f0 97 1004 0 1004
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
cob=(3)
cfi=(100)
cfn=(626)
calls=1004 0x10a310 -65 
* * 48196 19077 12052 0 299 1 0 1 1
* * 1004 1004
+5 * 1004 0 1004
+4 +2 1004 1004
+4 +1 1004 1004
+1 * 1004 1004

fn=(2572) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::__aligned_buffer()
0x413e96 91 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -59 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(184) /usr/include/c++/5/type_traits
cfn=(2574) std::aligned_storage<64ul, 8ul>::aligned_storage()
calls=149 -44 1986 
* * 8497 3279 2239
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(3080) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_addr() const
0x41a616 103 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 -71 
* * 1444 571 364 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +2 30 30
+4 +1 30 30
+1 * 30 30

fn=(2878) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_ptr()
0x4188a2 109 328 0 328
+1 * 328
+3 * 328
+4 * 328 0 328
cob=(3)
cfi=(100)
cfn=(626)
calls=328 0x10a310 -77 
* * 15748 6233 3940 0 10 0 0 1
* * 328 328
+5 * 328 0 328
+4 +1 328 328
+4 * 328
+3 * 328 0 328
cfn=(2880) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_addr()
calls=328 0x41958a -13 
* * 18700 7545 4924 0 1 0 0 1
+5 * 328 328
+1 * 328 328 0 1 0 0 1

fn=(2580) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::_M_ptr()
0x417710 109 477 0 477 149 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
cob=(3)
cfi=(100)
cfn=(626)
calls=477 0x10a310 -77 
* * 22900 9064 5728 0 150 0 0 1
* * 477 477
+5 * 477 0 477
+4 +1 477 477
+4 * 477
+3 * 477 0 477
cfn=(2582) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::_M_addr()
calls=477 0x418f60 -13 
* * 27193 10972 7159 150 150 0 1 1
+5 * 477 477
+1 * 477 477

fn=(2880)
0x41958a 97 328 0 328
+1 * 328
+3 * 328
+4 * 328 0 328
cob=(3)
cfi=(100)
cfn=(626)
calls=328 0x10a310 -65 
* * 15748 6233 3940 0 1 0 0 1
* * 328 328
+5 * 328 0 328
+4 +2 328 328
+4 +1 328 328
+1 * 328 328

fn=(2322) __gnu_cxx::__aligned_buffer<std::pair<float const, Protein*> >::__aligned_buffer()
0x40af78 91 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 -59 
* * 14788 5853 3700
* * 308 308
+5 * 308 0 308
+4 * 308 308
+4 * 308
+3 * 308 0 308
cfi=(184)
cfn=(2324) std::aligned_storage<16ul, 8ul>::aligned_storage()
calls=308 -44 1986 
* * 17560 6777 4624 0 0 1 0 0 1
+5 * 308
+1 * 308 308
+1 * 308 308

fn=(2582)
0x418f60 97 477 0 477 150 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
cob=(3)
cfi=(100)
cfn=(626)
calls=477 0x10a310 -65 
* * 22900 9064 5728 0 150 0 0 1
* * 477 477
+5 * 477 0 477
+4 +2 477 477
+4 +1 477 477
+1 * 477 477

fn=(2874) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::__aligned_buffer()
0x4146ea 91 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -59 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(184)
cfn=(2574)
calls=16 0x413e82 1986 
* * 916 353 244
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(3004) __gnu_cxx::__aligned_buffer<std::pair<float const, float> >::__aligned_buffer()
0x414b70 91 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -59 
* * 580 229 148 0 9
* * 12 12
+5 * 12 0 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(184)
cfn=(3006) std::aligned_storage<8ul, 4ul>::aligned_storage()
calls=12 -44 1986 
* * 688 265 184
+5 * 12
+1 * 12 12
+1 * 12 12

fn=(3010) __gnu_cxx::__aligned_buffer<std::pair<float const, float> >::_M_ptr()
0x41761a 109 76 0 76 1 0 0 1
+1 * 76
+3 * 76
+4 * 76 0 76
cob=(3)
cfi=(100)
cfn=(626)
calls=76 0x10a310 -77 
* * 3652 1445 916 0 1 0 0 1
* * 76 76
+5 * 76 0 76
+4 +1 76 76
+4 * 76
+3 * 76 0 76
cfn=(3012) __gnu_cxx::__aligned_buffer<std::pair<float const, float> >::_M_addr()
calls=76 0x418f24 -13 
* * 4336 1749 1144 3 1 1 1 1 1
+5 * 76 76
+1 * 76 76

fn=(3012)
0x418f24 97 76 0 76 3 0 0 1
+1 * 76
+3 * 76
+4 * 76 0 76
cob=(3)
cfi=(100)
cfn=(626)
calls=76 0x10a310 -65 
* * 3652 1445 916 0 1 1 0 1 1
* * 76 76
+5 * 76 0 76
+4 +2 76 76
+4 +1 76 76
+1 * 76 76

fn=(3216) __gnu_cxx::__aligned_buffer<std::pair<float const, Protein*> >::_M_ptr() const
0x40c07a 113 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -81 
* * 964 381 244
* * 20 20
+5 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfn=(3218) __gnu_cxx::__aligned_buffer<std::pair<float const, Protein*> >::_M_addr() const
calls=20 +80 -11 
* * 1144 461 304
+5 * 20 20
+1 * 20 20

fn=(3218)
0x40c0e2 103 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -71 
* * 964 381 244
* * 20 20
+5 * 20 0 20
+4 +2 20 20
+4 +1 20 20
+1 * 20 20

fn=(3078) __gnu_cxx::__aligned_buffer<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_ptr() const
0x41a36e 113 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 -81 
* * 1444 571 364 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30 0 1
+4 * 30
+3 * 30 0 30
cfn=(3080)
calls=30 0x41a616 -11 
* * 1714 691 454 0 1 0 0 1
+5 * 30 30
+1 * 30 30

fl=(162) /usr/include/c++/5/new
fn=(1542) operator new(unsigned long, void*)
0x4040c7 130 1063520 0 1063520
+1 * 1063520
+3 * 1063520
+4 * 1063520 0 1063520
cob=(3)
cfi=(100)
cfn=(626)
calls=1063520 0x10a310 -98 
* * 51049048 20206902 12762328 0 1096 973 0 1 4
* * 1063520 1063520
+5 * 1063520 0 1063520
+4 * 1063520 0 1063520
+4 * 1063520 1063520
+4 * 1063520 1063520
+1 * 1063520 1063520

fl=(176)
fn=(2124)
0x40f760 17 5662 0 5662 149 0 0 1
+1 * 5662
+3 * 5662
+4 * 5662 0 5662
cob=(3)
cfi=(100)
cfn=(626)
calls=5662 0x10a310 +15 
* * 271780 107579 67948 0 0 149 0 0 1
* * 5662 5662
+5 * 5662 0 5662
+4 * 5662 0 5662
+5 * 5662 0 5662
+5 +1 5662 5662
+4 * 5662 0 0 161 0 0 1
+3 * 5662 0 5662
cfi=(157)
cfn=(1500) std::vector<BP*, std::allocator<BP*> >::vector()
calls=5662 0x405b9e 253 
* * 1715590 662455 464288 170 3590 0 0 1
+5 +1 5662 5662
+4 * 5662 5662
+5 * 5662 0 5662
+5 +1 5662 5662
+4 * 5662 5662
+5 * 5662 0 5662
+5 +1 5662 5662
+4 * 5662 5662
+5 * 5662 0 5662
+5 +1 5662
+1 * 5662 5662
+1 * 5662 5662

fl=(182) /usr/include/c++/5/tuple
fn=(2348) std::_Tuple_impl<0ul, float const&>::_M_head(std::_Tuple_impl<0ul, float const&>&)
0x40b8b8 347 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
cob=(3)
cfi=(100)
cfn=(626)
calls=620 0x10a310 32 
* * 29768 11782 7448 0 151 1 0 1 1
* * 620 620
+5 * 620 0 620
+4 * 620 620
+4 * 620
+3 * 620 0 620
cfn=(2350) std::_Head_base<0ul, float const&, false>::_M_head(std::_Head_base<0ul, float const&, false>&)
calls=620 -50 142 
* * 35964 14881 9304 0 311 120 0 1
+5 * 620 620
+1 * 620 620

fn=(2354) std::pair<float const, Protein*>::pair<float const&>(std::piecewise_construct_t, std::tuple<float const&>, std::tuple<>)
0x40bd24 1156 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 148 1 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 298 0 149 0 0 1
+9 * 298 0 298
+4 * 298
+2 +5 298
+4 * 298 298
+4 * 298 298
+4 * 298 0 298
+2 * 298 0 298
+2 * 298
+3 * 298
+3 * 298 0 298
cfn=(2356) std::pair<float const, Protein*>::pair<float const&, 0ul>(std::tuple<float const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
calls=298 0x40bf0e +7 
* * 114141 44700 31304 447 745 89 3 3 2
+5 * 298
+4 +1 298
+1 * 298 298
+4 * 298 298
+9 * 298
+7 * 298 298
+1 * 298 298

fn=(2360) float const& std::__get_helper<0ul, float const&>(std::_Tuple_impl<0ul, float const&>&)
0x40becf 821 310 0 310
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 14884 5891 3724 0 3 8
* * 310 310
+5 * 310 0 310
+4 +1 310 310
+4 * 310
+3 * 310 0 310
cfn=(2348)
calls=310 0x40b8b8 347 
* * 36274 14571 9614 0 151 79 0 1
+5 * 310 310
+1 * 310 310

fn=(3022) std::pair<float const, float>::pair<float const&, 0ul>(std::tuple<float const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
0x419d96 1168 12 0 12 9
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 2 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +3 12 12
+4 * 12
+3 * 12 0 12
cfn=(2358) std::tuple_element<0ul, std::tuple<float const&> >::type& std::get<0ul, float const&>(std::tuple<float const&>&)
calls=12 0x40beee 832 
* * 2824 1117 760 13 6 0 0 1
+5 * 12
+3 * 12 0 12 11 0 0 1
cfi=(161) /usr/include/c++/5/bits/move.h
cfn=(2352) float const& std::forward<float const&>(std::remove_reference<float const&>::type&)
calls=12 0x40b8d7 76 
* * 688 277 184 0 10 1 0 0 1
+5 +1 12 12
+4 * 12 12
+4 * 12 0 12
+4 * 12 12
+4 * 12
+4 * 12 0 12
+5 +1 12
+1 * 12 12
+1 * 12 12

fn=(2346) std::_Tuple_impl<0ul, float const&>::_Tuple_impl(std::_Tuple_impl<0ul, float const&>&&)
0x40b8ee 367 310 0 310 150 0 0 1
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 14884 5891 3724 0 162 0 0 1
* * 310 310
+5 * 310 0 310
+4 * 310 0 310
+4 +2 310 310
+4 * 310
+3 * 310 0 310
cfn=(2348)
calls=310 -82 -22 
* * 36278 14572 9618 0 311 42 0 1 1
+5 * 310
+3 * 310 0 310
cfi=(161)
cfn=(2352)
calls=310 -59 76 
* * 17674 7131 4654
+5 * 310
+3 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfn=(2298) std::_Head_base<0ul, float const&, false>::_Head_base(float const&)
calls=310 0x40acb0 107 
* * 18914 7441 5274 0 0 173 0 0 1
+5 * 310
+1 * 310 310
+1 * 310 310

fn=(2356)
0x40bf0e 1168 298 0 298 149 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 +3 298 298
+4 * 298
+3 * 298 0 298
cfn=(2358)
calls=298 -64 832 
* * 73309 28905 19677 149 596 88 1 2 1
+5 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2352)
calls=298 0x40b8d7 76 
* * 20266 8046 5365 0 0 1 0 0 1
+5 +1 298 298
+4 * 298 298 0 149 0 0 1
+4 * 298 0 298
+4 * 298 298
+4 * 298 0 298
+8 +1 298
+1 * 298 298
+1 * 298 298

fn=(2888) std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
0x4195a2 1156 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+9 * 16 0 16 1 0 0 1
+4 * 16
+2 +5 16
+4 * 16 16
+4 * 16 16
+4 * 16 0 16
+2 * 16 0 16
+2 * 16
+3 * 16
+3 * 16 0 16
cfn=(2890) std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
calls=16 0x419c64 +7 
* * 31070 11900 8476 20 18 13 16 8 9
+5 * 16
+4 +1 16
+1 * 16 16
+4 * 16 16
+9 * 16
+7 * 16 16
+1 * 16 16

fn=(2296) std::_Tuple_impl<0ul, float const&>::_Tuple_impl(float const&)
0x40acd4 356 310 0 310 160 0 0 1
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 14884 5891 3724 0 3
* * 310 310
+5 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfn=(2298)
calls=310 -71 107 
* * 18914 7441 5274 1 11 1 0 0 1
+5 * 310
+1 * 310 310
+1 * 310 310

fn=(2546) std::_Tuple_impl<0ul, int const&>::_Tuple_impl(int const&)
0x411872 356 165 0 165
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7924 3136 1984 0 299 1 0 1 1
* * 165 165
+5 * 165 0 165
+4 * 165 0 165
+4 +1 165 165
+4 * 165 165
+4 * 165
+3 * 165
+3 * 165 0 165
cfn=(2548) std::_Head_base<0ul, int const&, false>::_Head_base(int const&)
calls=165 -71 107 
* * 10069 3961 2809
+5 * 165
+1 * 165 165
+1 * 165 165

fn=(2590) std::tuple<int const&>::tuple(std::tuple<int const&>&&)
0x4182fa 484 165 0 165 150 0 0 1
+1 * 165
+3 * 165 0 0 1
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7928 3137 1988 0 149 0 0 1
* * 165 165
+5 * 165 0 165
+4 * 165 0 165
+4 * 165 165
+4 * 165 165
+4 * 165
+3 * 165
+3 * 165 0 165
cfn=(2592) std::_Tuple_impl<0ul, int const&>::_Tuple_impl(std::_Tuple_impl<0ul, int const&>&&)
calls=165 -97 367 
* * 50015 19475 13550 150 449 2 1 1 2
+5 * 165
+1 * 165 165
+1 * 165 165

fn=(2294) std::tuple<float const&>::tuple(float const&)
0x40ad00 472 310 0 310 1
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 14888 5892 3728 0 148 1 0 0 1
* * 310 310
+5 * 310 0 310
+4 * 310 0 310
+4 +1 310 310
+4 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfn=(2296)
calls=310 -79 356 
* * 38448 14882 10548 161 14 1 1 0 1
+5 * 310
+1 * 310 310
+1 * 310 310

fn=(2350)
0x40b89e 142 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
cob=(3)
cfi=(100)
cfn=(626)
calls=620 0x10a310 32 
* * 29764 11781 7444 0 311 120 0 1
* * 620 620
+5 * 620 0 620
+4 * 620 620
+4 * 620 620
+3 * 620 620
+1 * 620 620

fn=(2544) std::tuple<int const&>::tuple(int const&)
0x41189e 472 165 0 165 149 0 0 1
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7928 3137 1988
* * 165 165
+5 * 165 0 165
+4 * 165 0 165
+4 +1 165 165
+4 * 165 165
+4 * 165
+3 * 165
+3 * 165 0 165
cfn=(2546)
calls=165 -79 356 
* * 20468 7922 5618 0 299 1 0 1 1
+5 * 165
+1 * 165 165
+1 * 165 165

fn=(2606) int const& std::__get_helper<0ul, int const&>(std::_Tuple_impl<0ul, int const&>&)
0x4199b9 821 165 0 165 149 0 0 1
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7924 3136 1984 0 151 1 0 1 1
* * 165 165
+5 * 165 0 165
+4 +1 165 165
+4 * 165
+3 * 165 0 165
cfn=(2594) std::_Tuple_impl<0ul, int const&>::_M_head(std::_Tuple_impl<0ul, int const&>&)
calls=165 0x418286 347 
* * 19309 7756 5119 0 149 1
+5 * 165 165
+1 * 165 165

fn=(2890)
0x419c64 1168 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 1 1 0 1 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +3 16 16 0 1 0 0 1
+4 * 16
+3 * 16 0 16
cfn=(2604) std::tuple_element<0ul, std::tuple<int const&> >::type& std::get<0ul, int const&>(std::tuple<int const&>&)
calls=16 0x4199d8 832 
* * 3764 1489 1012 0 4 1 0 1
+5 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2598) int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
calls=16 0x4182a5 76 
* * 916 369 244 0 0 1 0 0 1
+5 +1 16 16
+2 * 16 16
+4 * 16 0 16
+2 * 16 16
+4 * 16
+4 * 16
+5 * 16
+5 * 16
+3 * 16 0 16
* * 112 0 96
+3 * 16 16
+4 * 16
+4 * 16
+3 * 16 0 16 1 0 0 1
cfi=(147)
cfn=(2892)
calls=16 0x40fc34 132 
* * 25042 9609 6768 17 13 10 13 6 7
+5 +1 16
+1 * 16 16
+1 * 16 16

fn=(2594)
0x418286 347 330 0 330
+1 * 330
+3 * 330
+4 * 330 0 330
cob=(3)
cfi=(100)
cfn=(626)
calls=330 0x10a310 32 
* * 15848 6272 3968 0 299 0 0 1
* * 330 330
+5 * 330 0 330
+4 * 330 330
+4 * 330
+3 * 330 0 330
cfn=(2596) std::_Head_base<0ul, int const&, false>::_M_head(std::_Head_base<0ul, int const&, false>&)
calls=330 -50 142 
* * 19144 7921 4954 0 0 2 0 0 1
+5 * 330 330
+1 * 330 330

fn=(2596)
0x41826c 142 330 0 330
+1 * 330
+3 * 330
+4 * 330 0 330
cob=(3)
cfi=(100)
cfn=(626)
calls=330 0x10a310 32 
* * 15844 6271 3964 0 0 2 0 0 1
* * 330 330
+5 * 330 0 330
+4 * 330 330
+4 * 330 330
+3 * 330 330
+1 * 330 330

fn=(2604)
0x4199d8 832 165 0 165
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7928 3137 1988 0 150 0 0 2
* * 165 165
+5 * 165 0 165
+4 +1 165 165
+4 * 165
+3 * 165 0 165
cfn=(2606)
calls=165 -55 -12 
* * 29048 11552 7763 149 300 2 1 1 1
+5 * 165 165
+1 * 165 165

fn=(2298)
0x40acb0 107 620 0 620 1
+1 * 620
+3 * 620
+4 * 620 0 620
cob=(3)
cfi=(100)
cfn=(626)
calls=620 0x10a310 -75 
* * 29768 11782 7448 0 11 174 0 0 2
* * 620 620
+5 * 620 0 620
+4 * 620 0 620
+4 +1 620 620
+4 * 620 620
+4 * 620 0 620
+3 * 620
+1 * 620 620
+1 * 620 620

fn=(2358)
0x40beee 832 310 0 310 150 0 0 1
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 18155 7080 4619 0 448 1 0 2 1
* * 310 310
+5 * 310 0 310
+4 +1 310 310 0 12
+4 * 310
+3 * 310 0 310
cfn=(2360)
calls=310 -55 -12 
* * 54568 21702 14578 0 154 87 0 1
+5 * 310 310
+1 * 310 310

fn=(2548)
0x41184e 107 330 0 330
+1 * 330
+3 * 330
+4 * 330 0 330
cob=(3)
cfi=(100)
cfn=(626)
calls=330 0x10a310 -75 
* * 15848 6272 3968
* * 330 330
+5 * 330 0 330
+4 * 330 0 330
+4 +1 330 330
+4 * 330 330
+4 * 330 0 330
+3 * 330
+1 * 330 330
+1 * 330 330

fn=(2592)
0x4182bc 367 165 0 165 150 0 0 1
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7924 3136 1984 0 150 1 0 0 1
* * 165 165
+5 * 165 0 165
+4 * 165 0 165
+4 +2 165 165
+4 * 165
+3 * 165 0 165
cfn=(2594)
calls=165 -82 -22 
* * 19313 7757 5123 0 150 1 0 1 1
+5 * 165
+3 * 165 0 165
cfi=(161)
cfn=(2598)
calls=165 -59 76 
* * 9409 3796 2479 0 149
+5 * 165
+3 * 165 165
+4 * 165
+3 * 165
+3 * 165 0 165
cfn=(2548)
calls=165 0x41184e 107 
* * 10069 3961 2809
+5 * 165
+1 * 165 165
+1 * 165 165

fn=(2600) std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >::pair<int const&>(std::piecewise_construct_t, std::tuple<int const&>, std::tuple<>)
0x419308 1156 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +5 149
+4 * 149 149
+4 * 149 149
+4 * 149 0 149
+2 * 149 0 149
+2 * 149
+3 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfn=(2602) std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >::pair<int const&, 0ul>(std::tuple<int const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
calls=149 0x4199f8 +7 
* * 288786 110713 78249 3278 3127 718 4 3 3
+5 * 149
+4 +1 149
+1 * 149 149
+4 * 149 149
+9 * 149
+7 * 149 149
+1 * 149 149

fn=(2344) std::tuple<float const&>::tuple(std::tuple<float const&>&&)
0x40b92c 484 310 0 310 51 0 0 1
+1 * 310
+3 * 310
+4 * 310 0 310
cob=(3)
cfi=(100)
cfn=(626)
calls=310 0x10a310 32 
* * 14888 5892 3728 0 149 2 0 0 2
* * 310 310
+5 * 310 0 310
+4 * 310 0 310 1
+4 * 310 310
+4 * 310 310
+4 * 310
+3 * 310
+3 * 310 0 310
cfn=(2346)
calls=310 -97 367 
* * 93950 36585 25440 150 473 215 1 2 2
+5 * 310
+1 * 310 310
+1 * 310 310

fn=(2602)
0x4199f8 1168 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +3 149 149
+4 * 149
+3 * 149 0 149
cfn=(2604)
calls=149 -64 832 
* * 35027 13860 9399 149 446 1 1 2 1
+5 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2598)
calls=149 0x4182a5 76 
* * 8497 3428 2239
+5 +1 149 149
+2 * 149 149
+4 * 149 0 149
+2 * 149 149
+4 * 149
+4 * 149
+5 * 149
+5 * 149 0 0 149 0 0 1
+3 * 149 0 149 0 0 36
* * 1043 0 894 0 0 84
+3 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(147)
cfn=(1370)
calls=149 0x4044cc 132 
* * 232742 89401 62435 2682 2384 596 0 0 1
+5 +1 149
+1 * 149 149
+1 * 149 149

fn=(3020) std::pair<float const, float>::pair<float const&>(std::piecewise_construct_t, std::tuple<float const&>, std::tuple<>)
0x4196e2 1156 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+9 * 12 0 12 1 0 0 1
+4 * 12
+2 +5 12
+4 * 12 12
+4 * 12 12
+4 * 12 0 12
+2 * 12 0 12
+2 * 12
+3 * 12
+3 * 12 0 12
cfn=(3022)
calls=12 0x419d96 +7 
* * 4356 1707 1200 33 18 1 1 2 1
+5 * 12
+4 +1 12
+1 * 12 12
+4 * 12 12
+9 * 12
+7 * 12 12
+1 * 12 12

fl=(133)
fn=(1212)
0x40552e 495 1026 0 1026 1 0 0 1
+1 * 1026
+3 * 1026
+4 * 1026 0 1026
cob=(3)
cfi=(100)
cfn=(626)
calls=1026 0x10a310 32 
* * 49260 19497 12324 0 2 2 0 1 1
* * 1026 1026
+5 * 1026 0 1026
+4 * 1026 0 1026 1 0 0 1
+4 +1 1026 1026
+4 * 1026 1026
+4 * 1026
+3 * 1026
+3 * 1026 0 1026
cfi=(134)
cfn=(1214)
calls=1026 +9 327 
* * 175973388 67190694 47355054 8 8 80010 8 5 79978
+5 * 1026
+1 * 1026 1026
+1 * 1026 1026

fn=(1226) std::uniform_real_distribution<float>::param_type::param_type(float, float)
0x406b2a 1716 206 0 206 1 0 0 1
+1 * 206
+3 * 206
+4 * 206 0 206
cob=(3)
cfi=(100)
cfn=(626)
calls=206 0x10a310 32 
* * 9892 3915 2476 0 5 1 0 3 1
* * 206 206
+5 * 206 0 206
+4 * 206 0 206
+5 * 206 0 206 2 0 0 2
+5 +2 206 206
+4 * 206 206
+5 * 206 0 206
+4 * 206 206
+4 * 206 206
+5 * 206 0 206
+5 +3 206
+1 * 206 206
+1 * 206 206

fn=(1250) std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, float>::operator()()
0x407b50 181 251195 0 251195
+1 * 251195
+3 * 251195
+4 * 251195 0 251195
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057364 4772706 3014344 0 2 1 0 2
* * 251195 251195
+5 * 251195 0 251195
+4 +4 251195 251195
+4 * 251195 251195
+3 * 251195
+3 * 251195 0 251195
cfi=(134)
cfn=(1252) float std::generate_canonical<float, 24ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=251195 0x408a33 3312 
* * 192092782 72511665 47212891 42 318 173 31 23 10
+5 +1 251195 251195
+1 * 251195 251195

fn=(1258) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::min()
0x406961 522 502393 0 502393
+1 * 502393
+3 * 502393 0 502393
cob=(3)
cfi=(100)
cfn=(626)
calls=502393 0x10a310 32 
* * 24114900 9545478 6028735
* * 502393 502393
+5 +1 502393
+5 * 502393 502393
+1 * 502393 502393

fn=(1244)
0x405efe 1808 251195 0 251195
+1 * 251195 0 0 2 0 0 2
+3 * 251195
+4 * 251195 0 251195
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057392 4772713 3014372 0 9 27 0 3 4
* * 251195 251195
+5 * 251195 0 251195
+4 * 251195 0 251195
+4 +1 251195 251195
+4 * 251195 251195
+4 * 251195 251195
+4 * 251195
+3 * 251195
+3 * 251195 0 251195
cfn=(1246) float std::uniform_real_distribution<float>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_real_distribution<float>::param_type const&)
calls=251195 0x406b64 +4 
* * 288802881 110693311 73337195 53 331 176 41 31 11
+5 * 251195 251195
+1 * 251195 251195

fn=(1256) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::max()
0x406971 529 251196 0 251196 2 0 0 2
+1 * 251196
+3 * 251196 0 251196
cob=(3)
cfi=(100)
cfn=(626)
calls=251196 0x10a310 32 
* * 12057416 4772726 3014360 0 7 0 0 4
* * 251196 251196
+5 +1 251196
+5 * 251196 251196
+1 * 251196 251196 0 2 0 0 2

fn=(3356)
0x410abe 3665 1 0 1
+1 * 1 0 0 1 0 0 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+5 +2 1 1
+4 * 1 1
+4 * 1 1
+3 * 1 0 1
+4 * 1 1
+5 * 1
+2 * 1
+3 * 1 0 1
cfn=(3358) std::binomial_distribution<int>::param_type::param_type(int, double)
calls=1 0x41283c -40 
* * 1262 379 171 20 20 8 19 11 1
+5 * 1 1
+4 * 1
+4 * 1 1 0 1 0 0 1
+8 * 1
+4 * 1
+3 * 1 0 1
cfn=(3372) std::normal_distribution<double>::normal_distribution(double, double)
calls=1 0x41287c 1965 
* * 142 55 47 3 2 1 3 2 1
+5 +1 1
+1 * 1 1
+1 * 1 1

fn=(3374) std::normal_distribution<double>::param_type::param_type(double, double)
0x415770 1934 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1 0 1 1
* * 1 1
+5 * 1 0 1 1 0 0 1
+4 * 1 0 1
+5 * 1 0 1
+5 +2 1 1
+4 * 1 1
+5 * 1 0 1
+4 * 1 1
+4 * 1 1
+5 * 1 0 1
+5 +3 1
+1 * 1 1
+1 * 1 1

fn=(3376)
0x410b14 3730 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+4 +1 1 1
+4 * 1 1
+4 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(134)
cfn=(3378) int std::binomial_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::binomial_distribution<int>::param_type const&)
calls=1 0x4128c4 1533 
* * 1646 596 438 44 18 8 37 14 8
+5 * 1 1 0 1 0 0 1
+1 * 1 1

fn=(3380) std::binomial_distribution<int>::param_type::t() const
0x4157aa 3637 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 +1 1 1
+4 * 1 1 0 1 0 0 1
+2 * 1 1
+1 * 1 1

fn=(1248) std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, float>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
0x407b2c 164 251195 0 251195
+1 * 251195
+3 * 251195
+4 * 251195 0 251195
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057364 4772706 3014344 0 3 1 0 1 1
* * 251195 251195
+5 * 251195 0 251195
+4 * 251195 0 251195 2 0 0 2
+4 +1 251195 251195
+4 * 251195 251195
+4 * 251195 0 251195
+3 * 251195
+1 * 251195 251195
+1 * 251195 251195

fn=(3384) std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::_Adaptor(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
0x4157e0 164 2 0 2
+1 * 2
+3 * 2
+4 * 2 0 2
cob=(3)
cfi=(100)
cfn=(626)
calls=2 0x10a310 32 
* * 104 40 32 0 1 1 0 1 1
* * 2 2
+5 * 2 0 2
+4 * 2 0 2
+4 +1 2 2
+4 * 2 2
+4 * 2 0 2
+3 * 2 0 0 1 0 0 1
+1 * 2 2
+1 * 2 2

fn=(3388) std::__detail::_Adaptor<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>, double>::operator()()
0x415804 181 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 +4 1 1
+4 * 1 1
+3 * 1
+3 * 1 0 1
cfi=(134)
cfn=(3390) double std::generate_canonical<double, 53ul, std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=1 0x4178ae 3312 
* * 963 357 267 23 9 3 16 6 3
+5 * 1
+5 * 1 0 1
+4 * 1 1
+5 +1 1 1
+1 * 1 1

fn=(1216) unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
0x406124 150 1280448 0 1280448 1 0 0 1
+1 * 1280448
+3 * 1280448
+4 * 1280448 0 1280448
cob=(3)
cfi=(100)
cfn=(626)
calls=1280448 0x10a310 32 
* * 61461512 24328514 15365384 0 1 2 0 1
* * 1280448 1280448
+5 * 1280448 0 1280448
+4 +1 1280448 1280448
+4 * 1280448
+3 * 1280448 0 1280448 1 0 0 1
cfn=(1218) std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
calls=1280448 0x406cfa -12 
* * 78107332 30730753 21767620 2 2 2 2 1 1
+5 * 1280448 1280448
+1 * 1280448 1280448

fn=(1220) unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
0x406143 150 1278396 0 1278396
+1 * 1278396
+3 * 1278396
+4 * 1278396 0 1278396
cob=(3)
cfi=(100)
cfn=(626)
calls=1278396 0x10a310 32 
* * 61363012 24289525 15340756 0 2 0 0 1
* * 1278396 1278396
+5 * 1278396 0 1278396
+4 +1 1278396 1278396
+4 * 1278396
+3 * 1278396 0 1278396
cfn=(1222) std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
calls=1278396 0x406d22 -12 
* * 89487724 31959901 21732736 1 0 0 1
+5 * 1278396 1278396
+1 * 1278396 1278396

fn=(1272) std::uniform_real_distribution<float>::param_type::b() const
0x407b72 1728 251195 0 251195
+1 * 251195
+3 * 251195
+4 * 251195 0 251195
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057364 4772706 3014344 0 0 1
* * 251195 251195
+5 * 251195 0 251195 3 0 0 2
+4 +1 251195 251195
+4 * 251195 251195
+5 * 251195 251195
+1 * 251195 251195

fn=(1224)
0x405ec0 1748 206 0 206 2 0 0 2
+1 * 206
+3 * 206
+4 * 206 0 206
cob=(3)
cfi=(100)
cfn=(626)
calls=206 0x10a310 32 
* * 9916 3921 2500 0 14 3 0 2 2
* * 206 206
+5 * 206 0 206
+4 * 206 0 206
+5 * 206 0 206
+5 +2 206 206
+4 * 206 206
+5 * 206 206
+3 * 206
+3 * 206 0 206
+3 * 206 206
+5 * 206
+3 * 206 0 206
cfn=(1226)
calls=206 0x406b2a -34 
* * 13394 5357 3918 3 5 1 3 3 1
+5 +1 206
+1 * 206 206
+1 * 206 206

fn=(1246)
0x406b64 1813 251195 0 251195
+1 * 251195
+3 * 251195
+4 * 251195 0 251195
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057364 4772706 3014344 0 6 0 0 3
* * 251195 251195
+5 * 251195 0 251195
+4 * 251195 0 251195
+4 * 251195 0 251195
+4 * 251195 251195 0 3 0 0 3
+9 * 251195 0 251195
+4 * 251195
+2 +4 251195 251195
+4 * 251195
+4 * 251195
+3 * 251195
+3 * 251195 0 251195
cfn=(1248)
calls=251195 0x407b2c 164 
* * 15322899 6028681 4270319 2 3 1 2 1 1
+5 +1 251195
+4 * 251195
+3 * 251195 0 251195
cfn=(1250)
calls=251195 0x407b50 181 
* * 207164486 78540346 51232015 42 320 174 31 25 10
+5 * 251195 0 251195
+5 * 251195 251195
+4 * 251195
+3 * 251195 0 251195
cfn=(1272)
calls=251195 0x407b72 -90 
* * 14569314 6028681 3767929 3 0 1 2
+5 * 251195 0 251195 2 0 0 2
+5 * 251195 251195
+4 * 251195
+3 * 251195 0 251195
cfn=(1274) std::uniform_real_distribution<float>::param_type::a() const
calls=251195 0x407b8e -94 
* * 14569314 6028681 3767929 0 2 0 0 2
+5 * 251195 251195
+5 * 251195
+4 * 251195
+3 * 251195
+3 * 251195 251195
+5 * 251195 0 251195
+5 * 251195 251195
+4 * 251195
+3 * 251195 0 251195
cfn=(1274)
calls=251195 0x407b8e -94 
* * 14569314 6028681 3767929
+5 * 251195 251195
+5 +1 251195 251195
+4 * 251195 251195 0 1 0 0 1
+9 * 251195
+7 * 251195 251195
+1 * 251195 251195

fn=(3358)
0x41283c 3627 1 0 1
+1 * 1
+3 * 1 0 0 1 0 0 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+5 +1 1 1
+4 * 1 1
+3 * 1 0 1
+2 * 1 1
+4 * 1 1
+5 * 1 0 1
+5 +5 1 1
+4 * 1
+3 * 1 0 1
cfi=(134)
cfn=(3360) std::binomial_distribution<int>::param_type::_M_initialize()
calls=1 0x415220 1445 
* * 1190 351 147 19 20 7 18 11
+5 +1 1
+1 * 1 1
+1 * 1 1

fn=(3382) std::binomial_distribution<int>::param_type::p() const
0x4157c4 3641 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16
* * 1 1
+5 * 1 0 1
+4 +1 1 1
+4 * 1 1
+5 * 1 1
+1 * 1 1

fn=(3372)
0x41287c 1965 1 0 1
+1 * 1
+3 * 1 0 0 1 0 0 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+5 * 1 0 1
+5 +2 1 1
+4 * 1 1
+5 * 1 1
+4 * 1
+4 * 1 0 1
+4 * 1 1
+5 * 1
+3 * 1 0 1
cfn=(3374)
calls=1 0x415770 -33 
* * 69 27 23 1 1 1 1 1 1
+5 * 1 1
+4 * 1 0 1 1 0 0 1
+4 +1 1
+1 * 1 1
+1 * 1 1

fn=(1218)
0x406cfa 139 1280448 0 1280448 1 0 0 1
+1 * 1280448
+3 * 1280448 0 0 1 0 0 1
+4 * 1280448 0 1280448
cob=(3)
cfi=(100)
cfn=(626)
calls=1280448 0x10a310 32 
* * 61461508 24328513 15365380 0 2 2 0 1 1
* * 1280448 1280448
+5 * 1280448 0 1280448
+4 +2 1280448 1280448
+4 * 1280448 0 1280448
+4 +2 1280448
+5 * 1280448 0 1280448
+4 +1 1280448 1280448
+4 +1 1280448 1280448
+1 * 1280448 1280448

fn=(1222)
0x406d22 139 1278396 0 1278396
+1 * 1278396
+3 * 1278396
+4 * 1278396 0 1278396
cob=(3)
cfi=(100)
cfn=(626)
calls=1278396 0x10a310 32 
* * 61363012 24289525 15340756
* * 1278396 1278396
+5 * 1278396 0 1278396
+4 +2 1278396 1278396
+4 * 1278396 0 1278396
+4 +2 1278396 1278396
+4 * 1278396 0 0 1 0 0 1
+3 * 1278396
+4 * 1278396
+10 * 1278396
+3 * 1278396
+3 * 1278396
+3 * 1278396
+7 * 1278396
+3 * 1278396
+3 * 1278396 0 1278396
+4 +1 1278396 1278396
+4 +1 1278396 1278396
+1 * 1278396 1278396

fn=(1274)
0x407b8e 1724 502390 0 502390
+1 * 502390
+3 * 502390
+4 * 502390 0 502390
cob=(3)
cfi=(100)
cfn=(626)
calls=502390 0x10a310 32 
* * 24114728 9545412 6028688 0 2 0 0 2
* * 502390 502390
+5 * 502390 0 502390
+4 +1 502390 502390
+4 * 502390 502390
+4 * 502390 502390
+1 * 502390 502390

fl=(163) /usr/include/c++/5/bits/stl_uninitialized.h
fn=(1546) BP** std::__uninitialized_move_if_noexcept_a<BP**, BP**, std::allocator<BP*> >(BP**, BP**, BP**, std::allocator<BP*>&)
0x40876a 297 19082 0 19082
+1 * 19082
+3 * 19082 0 19082
+1 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915944 362560 228992 0 0 862 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082 149 0 0 1
+4 * 19082 0 19082
+4 +6 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfi=(164)
cfn=(1548) std::move_iterator<BP**> std::__make_move_if_noexcept_iterator<BP**, std::move_iterator<BP**> >(BP**)
calls=19082 0x40922a 1166 
* * 2461586 973184 648796 321 2479 1 2 1 1
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfi=(164)
cfn=(1548)
calls=19082 0x40922a 1166 
* * 2461582 973183 648792
+5 * 19082
+3 +1 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082
+3 * 19082 0 19082
cfn=(1552) BP** std::__uninitialized_copy_a<std::move_iterator<BP**>, BP**, BP*>(std::move_iterator<BP**>, std::move_iterator<BP**>, BP**, std::allocator<BP*>&)
calls=19082 0x409277 -25 
* * 22956041 8847373 6258425 2449 14937 11256 43 50 9549
+5 +1 19082
+4 * 19082 19082 0 149 0 0 1
+1 * 19082 19082
+1 * 19082 19082

fn=(1554) BP** std::uninitialized_copy<std::move_iterator<BP**>, BP**>(std::move_iterator<BP**>, std::move_iterator<BP**>, BP**)
0x4097a3 107 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 -75 
* * 915940 362559 228988 0 1590 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +13 19082 0 19082
+4 +6 19082 19082 0 2 0 0 1
+4 * 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfn=(1556) BP** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<BP**>, BP**>(std::move_iterator<BP**>, std::move_iterator<BP**>, BP**)
calls=19082 0x40992b -35 
* * 20475373 7893271 5533301 2286 13347 11255 41 49 9548
+5 +1 19082 19082
+1 * 19082 19082

fn=(1748) BP_Move** std::__uninitialized_move_if_noexcept_a<BP_Move**, BP_Move**, std::allocator<BP_Move*> >(BP_Move**, BP_Move**, BP_Move**, std::allocator<BP_Move*>&)
0x4084f1 297 59263 0 59263
+1 * 59263
+3 * 59263 0 59263
+1 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844632 1125999 711164 0 16 1 0 1 1
* * 59263 59263
+5 * 59263 0 59263 4940 0 0 1
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +6 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfi=(164)
cfn=(1750) std::move_iterator<BP_Move**> std::__make_move_if_noexcept_iterator<BP_Move**, std::move_iterator<BP_Move**> >(BP_Move**)
calls=59263 0x4090fc 1166 
* * 7644935 3022415 2014950 596 3030 0 3 2
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfi=(164)
cfn=(1750)
calls=59263 0x4090fc 1166 
* * 7644931 3022414 2014946 0 0 1317 0 0 1
+5 * 59263
+3 +1 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263
+3 * 59263 0 59263 3
cfn=(1754) BP_Move** std::__uninitialized_copy_a<std::move_iterator<BP_Move**>, BP_Move**, BP_Move*>(std::move_iterator<BP_Move**>, std::move_iterator<BP_Move**>, BP_Move**, std::allocator<BP_Move*>&)
calls=59263 0x409149 -25 
* * 71420709 27513586 19442938 3465 9350 24218 8 3 22739
+5 +1 59263
+4 * 59263 59263
+1 * 59263 59263
+1 * 59263 59263

fn=(1754)
0x409149 279 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +2 59263 59263
+4 * 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfn=(1756) BP_Move** std::uninitialized_copy<std::move_iterator<BP_Move**>, BP_Move**>(std::move_iterator<BP_Move**>, std::move_iterator<BP_Move**>, BP_Move**)
calls=59263 0x4096cb 107 
* * 67568610 26032010 18316937 3465 9350 24218 8 3 22739
+5 * 59263 59263
+1 * 59263 59263

fn=(2164) RNA** std::__uninitialized_copy_a<std::move_iterator<RNA**>, RNA**, RNA*>(std::move_iterator<RNA**>, std::move_iterator<RNA**>, RNA**, std::allocator<RNA*>&)
0x416351 279 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 448 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +2 745 745
+4 * 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745 149 0 0 1
cfn=(2166) RNA** std::uninitialized_copy<std::move_iterator<RNA**>, RNA**>(std::move_iterator<RNA**>, std::move_iterator<RNA**>, RNA**)
calls=745 0x418003 107 
* * 845333 325877 229069 3134 5505 874 12 8 41
+5 * 745 745
+1 * 745 745

fn=(2784) Move** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
0x41941f 91 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 -59 
* * 64324 25461 16084 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +2 1340 1340
+4 * 1340 1340
+4 * 1340 1340 0 149 0 0 1
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(136) /usr/include/c++/5/bits/stl_algobase.h
cfn=(2786) Move** std::copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
calls=1340 0x419b7a 462 
* * 1400947 537597 379809 1341 1109 4202 7 4 4052
+5 * 1340 1340
+1 * 1340 1340

fn=(1662) BP_Protein** std::__uninitialized_copy_a<std::move_iterator<BP_Protein**>, BP_Protein**, BP_Protein*>(std::move_iterator<BP_Protein**>, std::move_iterator<BP_Protein**>, BP_Protein**, std::allocator<BP_Protein*>&)
0x408eed 279 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194 298 0 0 1
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +2 64194 64194
+4 * 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194 0 64194
cfn=(1664) BP_Protein** std::uninitialized_copy<std::move_iterator<BP_Protein**>, BP_Protein**>(std::move_iterator<BP_Protein**>, std::move_iterator<BP_Protein**>, BP_Protein**)
calls=64194 0x40951b 107 
* * 73324079 28241578 19877853 1384 12989 35315 23 13 31807
+5 * 64194 64194
+1 * 64194 64194

fn=(1664)
0x40951b 107 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 -75 
* * 3081316 1219687 770332 0 1284 1019 0 1 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +13 64194 0 64194
+4 +6 64194 64194
+4 * 64194 64194
+4 * 64194 64194 0 151 0 0 1
+4 * 64194
+3 * 64194
+3 * 64194 0 64194
cfn=(1666) BP_Protein** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<BP_Protein**>, BP_Protein**>(std::move_iterator<BP_Protein**>, std::move_iterator<BP_Protein**>, BP_Protein**)
calls=64194 0x40983b -35 
* * 69151465 26636727 18658163 1233 11705 34296 22 12 31806
+5 +1 64194 64194
+1 * 64194 64194

fn=(1756)
0x4096cb 107 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 -75 
* * 2844628 1125998 711160
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +13 59263 0 59263
+4 +6 59263 59263
+4 * 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfn=(1758) BP_Move** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<BP_Move**>, BP_Move**>(std::move_iterator<BP_Move**>, std::move_iterator<BP_Move**>, BP_Move**)
calls=59263 0x4098db -35 
* * 63716511 24550434 17190936 3465 9350 24218 8 3 22739
+5 +1 59263 59263
+1 * 59263 59263

fn=(1840) BP_Pump** std::__uninitialized_move_if_noexcept_a<BP_Pump**, BP_Pump**, std::allocator<BP_Pump*> >(BP_Pump**, BP_Pump**, BP_Pump**, std::allocator<BP_Pump*>&)
0x408249 297 66868 0 66868
+1 * 66868
+3 * 66868 0 66868
+1 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209672 1270494 802424 0 1957 1 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +6 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfi=(164)
cfn=(1842) std::move_iterator<BP_Pump**> std::__make_move_if_noexcept_iterator<BP_Pump**, std::move_iterator<BP_Pump**> >(BP_Pump**)
calls=66868 0x408fce 1166 
* * 8625980 3410270 2273520 150 4843 1 1 1 1
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868 298 0 0 1
cfi=(164)
cfn=(1842)
calls=66868 0x408fce 1166 
* * 8625976 3410269 2273516 0 147
+5 * 66868
+3 +1 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1846) BP_Pump** std::__uninitialized_copy_a<std::move_iterator<BP_Pump**>, BP_Pump**, BP_Pump*>(std::move_iterator<BP_Pump**>, std::move_iterator<BP_Pump**>, BP_Pump**, std::allocator<BP_Pump*>&)
calls=66868 0x40901b -25 
* * 80653331 31068504 21959242 1668 11571 34197 3 1 29938
+5 +1 66868
+4 * 66868 66868
+1 * 66868 66868
+1 * 66868 66868

fn=(1846)
0x40901b 279 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420 0 0 1 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +2 66868 66868
+4 * 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1848) BP_Pump** std::uninitialized_copy<std::move_iterator<BP_Pump**>, BP_Pump**>(std::move_iterator<BP_Pump**>, std::move_iterator<BP_Pump**>, BP_Pump**)
calls=66868 0x4095f3 107 
* * 76306907 29396803 20688746 1668 11571 34196 3 1 29937
+5 * 66868 66868
+1 * 66868 66868

fn=(2700) Pump** std::uninitialized_copy<std::move_iterator<Pump**>, Pump**>(std::move_iterator<Pump**>, std::move_iterator<Pump**>, Pump**)
0x41864f 107 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 -75 
* * 57220 22649 14308 0 297 1 0 1 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +13 1192 0 1192
+4 +6 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192 149 0 0 1
cfn=(2702) Pump** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Pump**>, Pump**>(std::move_iterator<Pump**>, std::move_iterator<Pump**>, Pump**)
calls=1192 0x4193cf -35 
* * 1301567 500355 351841 2684 1921 2088 9 5 1792
+5 +1 1192 1192
+1 * 1192 1192

fn=(1848)
0x4095f3 107 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 -75 
* * 3209668 1270493 802420 0 2273
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +13 66868 0 66868
+4 +6 66868 66868
+4 * 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1850) BP_Pump** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<BP_Pump**>, BP_Pump**>(std::move_iterator<BP_Pump**>, std::move_iterator<BP_Pump**>, BP_Pump**)
calls=66868 0x40988b -35 
* * 71960483 27725102 19418250 1668 9298 34196 3 1 29937
+5 +1 66868 66868
+1 * 66868 66868

fn=(2166)
0x418003 107 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 -75 
* * 35764 14156 8944 0 870 1 0 1 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +13 745 0 745
+4 +6 745 745
+4 * 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfn=(2168) RNA** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<RNA**>, RNA**>(std::move_iterator<RNA**>, std::move_iterator<RNA**>, RNA**)
calls=745 0x41914d -35 
* * 796904 307251 214910 3134 4635 873 12 7 40
+5 +1 745 745
+1 * 745 745

fn=(2782) Move** std::uninitialized_copy<std::move_iterator<Move**>, Move**>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**)
0x418727 107 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 -75 
* * 64324 25461 16084 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +13 1340 0 1340 149 0 0 1
+4 +6 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2784)
calls=1340 0x41941f -35 
* * 1486711 571098 403933 1490 1258 4202 8 5 4052
+5 +1 1340 1340
+1 * 1340 1340

fn=(1556)
0x40992b 91 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 -59 
* * 915940 362559 228988 0 891 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082 149 0 0 1
+4 +2 19082 19082
+4 * 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfi=(136)
cfn=(1558) BP** std::copy<std::move_iterator<BP**>, BP**>(std::move_iterator<BP**>, std::move_iterator<BP**>, BP**)
calls=19082 0x409a50 462 
* * 19254121 7416220 5189821 2137 12456 11255 40 48 9548
+5 * 19082 19082
+1 * 19082 19082

fn=(1758)
0x4098db 91 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 -59 
* * 2844628 1125998 711160 0 1389 1 0 0 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +2 59263 59263
+4 * 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfi=(136)
cfn=(1760) BP_Move** std::copy<std::move_iterator<BP_Move**>, BP_Move**>(std::move_iterator<BP_Move**>, std::move_iterator<BP_Move**>, BP_Move**)
calls=59263 0x4099ff 462 
* * 59923675 23068858 16124198 3465 7961 24217 8 3 22738
+5 * 59263 59263
+1 * 59263 59263

fn=(2692) Pump** std::__uninitialized_move_if_noexcept_a<Pump**, Pump**, std::allocator<Pump*> >(Pump**, Pump**, Pump**, std::allocator<Pump*>&)
0x4143ac 297 1192 0 1192
+1 * 1192
+3 * 1192 0 1192
+1 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 148
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192 149 0 0 1
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +6 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(164)
cfn=(2694) std::move_iterator<Pump**> std::__make_move_if_noexcept_iterator<Pump**, std::move_iterator<Pump**> >(Pump**)
calls=1192 0x4169b0 1166 
* * 153776 60794 40536 298 0 149 2 0 1
+5 * 1192
+3 * 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(164)
cfn=(2694)
calls=1192 0x4169b0 1166 
* * 153772 60793 40532
+5 * 1192
+3 +1 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192
+3 * 1192 0 1192
cfn=(2698) Pump** std::__uninitialized_copy_a<std::move_iterator<Pump**>, Pump**, Pump*>(std::move_iterator<Pump**>, std::move_iterator<Pump**>, Pump**, std::allocator<Pump*>&)
calls=1192 0x4169fd -25 
* * 1456535 559957 397145 2982 2218 2089 11 6 1793
+5 +1 1192 0 0 150 0 0 1
+4 * 1192 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(1850)
0x40988b 91 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 -59 
* * 3209668 1270493 802420 0 9
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +2 66868 66868
+4 * 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868 0 66868
cfi=(136)
cfn=(1852) BP_Pump** std::copy<std::move_iterator<BP_Pump**>, BP_Pump**>(std::move_iterator<BP_Pump**>, std::move_iterator<BP_Pump**>, BP_Pump**)
calls=66868 0x4099ae 462 
* * 67680927 26053401 18214622 1668 9289 34196 3 1 29937
+5 * 66868 66868
+1 * 66868 66868

fn=(2484) Protein** std::__uninitialized_move_if_noexcept_a<Protein**, Protein**, std::allocator<Protein*> >(Protein**, Protein**, Protein**, std::allocator<Protein*>&)
0x413d3c 297 149 0 149
+1 * 149
+3 * 149 0 149 149 0 0 1
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +6 149 149
+4 * 149
+3 * 149 0 149
cfi=(164)
cfn=(2486) std::move_iterator<Protein**> std::__make_move_if_noexcept_iterator<Protein**, std::move_iterator<Protein**> >(Protein**)
calls=149 0x4163f6 1166 
* * 19229 7601 5074 447 297 0 3 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(164)
cfn=(2486)
calls=149 0x4163f6 1166 
* * 19225 7600 5070 0 0 149 0 0 1
+5 * 149
+3 +1 149 149
+4 * 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149
+3 * 149 0 149
cfn=(2490) Protein** std::__uninitialized_copy_a<std::move_iterator<Protein**>, Protein**, Protein*>(std::move_iterator<Protein**>, std::move_iterator<Protein**>, Protein**, std::allocator<Protein*>&)
calls=149 0x416443 -25 
* * 176029 67959 48336 1937 1635 153 9 5 5
+5 +1 149
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2490)
0x416443 279 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2492) Protein** std::uninitialized_copy<std::move_iterator<Protein**>, Protein**>(std::move_iterator<Protein**>, std::move_iterator<Protein**>, Protein**)
calls=149 0x4180db 107 
* * 166340 64233 45501 1937 1486 153 9 4 5
+5 * 149 149
+1 * 149 149

fn=(2698)
0x4169fd 279 1192 0 1192
+1 * 1192 0 0 149 0 0 1
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +2 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfn=(2700)
calls=1192 0x41864f 107 
* * 1379051 530156 374493 2833 2218 2089 10 6 1793
+5 * 1192 1192
+1 * 1192 1192

fn=(2774) Move** std::__uninitialized_move_if_noexcept_a<Move**, Move**, std::allocator<Move*> >(Move**, Move**, Move**, std::allocator<Move*>&)
0x4145a4 297 1340 0 1340
+1 * 1340
+3 * 1340 0 1340
+1 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340 149 0 0 1
+4 +6 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(164)
cfn=(2776) std::move_iterator<Move**> std::__make_move_if_noexcept_iterator<Move**, std::move_iterator<Move**> >(Move**)
calls=1340 0x416aa2 1166 
* * 172868 68342 45568 149 153 1 1 0 1
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(164)
cfn=(2776)
calls=1340 0x416aa2 1166 
* * 172864 68341 45564
+5 * 1340
+3 +1 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2780) Move** std::__uninitialized_copy_a<std::move_iterator<Move**>, Move**, Move*>(std::move_iterator<Move**>, std::move_iterator<Move**>, Move**, std::allocator<Move*>&)
calls=1340 0x416aef -25 
* * 1660919 638100 454861 1788 1407 4351 10 6 4053
+5 +1 1340
+4 * 1340 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(2168)
0x41914d 91 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 -59 
* * 35764 14156 8944 0 378 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +2 745 745
+4 * 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfi=(136)
cfn=(2170) RNA** std::copy<std::move_iterator<RNA**>, RNA**>(std::move_iterator<RNA**>, std::move_iterator<RNA**>, RNA**)
calls=745 0x41983b 462 
* * 749220 288625 201496 3134 4257 873 12 6 40
+5 * 745 745
+1 * 745 745

fn=(2492)
0x4180db 107 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -75 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +13 149 0 149
+4 +6 149 149
+4 * 149 149
+4 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2494) Protein** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<Protein**>, Protein**>(std::move_iterator<Protein**>, std::move_iterator<Protein**>, Protein**)
calls=149 0x41919d -35 
* * 156651 60507 42666 1788 1486 153 8 4 5
+5 +1 149 149
+1 * 149 149

fn=(2780)
0x416aef 279 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340 149 0 0 1
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +2 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2782)
calls=1340 0x418727 107 
* * 1573815 604599 429397 1639 1407 4202 9 6 4052
+5 * 1340 1340
+1 * 1340 1340

fn=(1552)
0x409277 279 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082 161 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 0 1 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +2 19082 19082
+4 * 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfn=(1554)
calls=19082 0x4097a3 107 
* * 21715707 8370322 5895863 2288 14937 11255 42 50 9548
+5 * 19082 19082
+1 * 19082 19082

fn=(1656) BP_Protein** std::__uninitialized_move_if_noexcept_a<BP_Protein**, BP_Protein**, std::allocator<BP_Protein*> >(BP_Protein**, BP_Protein**, BP_Protein**, std::allocator<BP_Protein*>&)
0x407fa1 297 64194 0 64194
+1 * 64194
+3 * 64194 0 64194
+1 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081320 1219688 770336 0 5 1 0 0 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +6 64194 64194 0 596 0 0 1
+4 * 64194
+3 * 64194 0 64194
cfi=(164)
cfn=(1658) std::move_iterator<BP_Protein**> std::__make_move_if_noexcept_iterator<BP_Protein**, std::move_iterator<BP_Protein**> >(BP_Protein**)
calls=64194 0x408ea0 1166 
* * 8281034 3273896 2182604 4778 3149 1 2 1 1
+5 * 64194
+3 * 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfi=(164)
cfn=(1658)
calls=64194 0x408ea0 1166 
* * 8281030 3273895 2182600 0 1998
+5 * 64194
+3 +1 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194
+3 * 64194 0 64194
cfn=(1662)
calls=64194 0x408eed -25 
* * 77496693 29846429 21097543 1682 12989 35315 24 13 31807
+5 +1 64194
+4 * 64194 64194
+1 * 64194 64194
+1 * 64194 64194

fn=(1666)
0x40983b 91 64194 0 64194
+1 * 64194
+3 * 64194 0 0 149 0 0 1
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 -59 
* * 3081316 1219687 770332 0 502 0 0 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +2 64194 64194
+4 * 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194 0 64194
cfi=(136)
cfn=(1668) BP_Protein** std::copy<std::move_iterator<BP_Protein**>, BP_Protein**>(std::move_iterator<BP_Protein**>, std::move_iterator<BP_Protein**>, BP_Protein**)
calls=64194 0x40995d 462 
* * 65043045 25031876 17502667 1084 11203 34296 21 11 31806
+5 * 64194 64194
+1 * 64194 64194

fn=(2158) RNA** std::__uninitialized_move_if_noexcept_a<RNA**, RNA**, std::allocator<RNA*> >(RNA**, RNA**, RNA**, std::allocator<RNA*>&)
0x413b44 297 745 0 745
+1 * 745
+3 * 745 0 745
+1 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 945 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +6 745 745
+4 * 745
+3 * 745 0 745
cfi=(164)
cfn=(2160) std::move_iterator<RNA**> std::__make_move_if_noexcept_iterator<RNA**, std::move_iterator<RNA**> >(RNA**)
calls=745 0x416304 1166 
* * 96113 37997 25338 298 0 472 2 0 1
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfi=(164)
cfn=(2160)
calls=745 0x416304 1166 
* * 96109 37996 25334
+5 * 745
+3 +1 745 745 0 149 0 0 1
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745
+3 * 745 0 745
cfn=(2164)
calls=745 0x416351 -25 
* * 893762 344503 243228 3283 5953 874 13 9 41
+5 +1 745
+4 * 745 745
+1 * 745 745
+1 * 745 745

fn=(2494)
0x41919d 91 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -59 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149 149
+4 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(136)
cfn=(2496) Protein** std::copy<std::move_iterator<Protein**>, Protein**>(std::move_iterator<Protein**>, std::move_iterator<Protein**>, Protein**)
calls=149 0x41988c 462 
* * 147111 56781 39980 1639 1189 152 7 3 4
+5 * 149 149
+1 * 149 149

fn=(2702)
0x4193cf 91 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 -59 
* * 57220 22649 14308 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +2 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(136)
cfn=(2704) Pump** std::copy<std::move_iterator<Pump**>, Pump**>(std::move_iterator<Pump**>, std::move_iterator<Pump**>, Pump**)
calls=1192 0x419b29 462 
* * 1225275 470554 330381 2534 1772 2088 8 4 1792
+5 * 1192 1192
+1 * 1192 1192 0 150 0 0 1

fl=(150) /usr/include/c++/5/bits/functional_hash.h
fn=(1384) std::hash<float>::hash()
0x4041f8 164 1348 0 1348
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 32 
* * 64708 25613 16180 0 161 0 0 1
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfn=(1386) std::__hash_base<unsigned long, float>::__hash_base()
calls=1348 -44 50 
* * 76840 29657 20224 0 0 160 0 0 1
+5 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(2532) std::hash<int>::operator()(int) const
0x40f5e8 104 351 0 351 150 0 0 1
+1 * 351
+3 * 351
+4 * 351 0 351
cob=(3)
cfi=(100)
cfn=(626)
calls=351 0x10a310 -72 
* * 18959 7435 4794
* * 351 351
+5 * 351 0 351
+4 * 351 0 351
+3 * 351 351
+3 * 351 0 0 149 0 0 1
+2 * 351 351
+1 * 351 351

fn=(2036) std::__hash_base<unsigned long, int>::__hash_base()
0x404f1a 50 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -18 
* * 14308 5663 3580
* * 298 298
+5 * 298 0 298
+4 * 298
+1 * 298 298
+1 * 298 298

fn=(1386)
0x4041e4 50 1348 0 1348
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 -18 
* * 64708 25613 16180 0 0 160 0 0 1
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(2266) std::_Hash_impl::hash(void const*, unsigned long, unsigned long)
0x40a711 129 519 0 519 149 0 0 1
+1 * 519
+3 * 519
+4 * 519 0 519
cob=(3)
cfi=(100)
cfn=(626)
calls=519 0x10a310 -97 
* * 24916 9862 6232 0 2
* * 519 519
+5 * 519 0 519
+4 * 519 0 519
+4 * 519 0 519
+4 +2 519 519
+4 * 519 519
+4 * 519 519
+4 * 519
+3 * 519
+3 * 519 0 519
cob=(8)
cfi=(94)
cfn=(2272)
calls=518 0x8dd10 0 
* * 27454 2590 0 599
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -67 
* * 1151 270 105 8 15 5 8 11
* * 523 521 2 150 149 0 1
+5 * 519 519
+1 * 519 519

fn=(2034) std::hash<int>::hash()
0x404f2e 104 298 0 298 149 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -72 
* * 14308 5663 3580 0 297 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfn=(2036)
calls=298 -44 -54 
* * 16990 6557 4474
+5 * 298
+1 * 298 298
+1 * 298 298

fn=(2264) unsigned long std::_Hash_impl::hash<float>(float const&)
0x40a889 135 519 0 519 150 0 0 1
+1 * 519
+3 * 519
+4 * 519 0 519
cob=(3)
cfi=(100)
cfn=(626)
calls=519 0x10a310 32 
* * 24916 9862 6232 0 299 1 0 1 1
* * 519 519
+5 * 519 0 519
+4 +1 519 519
+4 * 519
+5 * 519
+5 * 519
+3 * 519 0 519
cfn=(2266)
calls=519 0x40a711 -7 
* * 62348 16357 9453 906 166 5 10 11
+5 * 519 519
+1 * 519 519

fn=(2262) std::hash<float>::operator()(float) const
0x40a744 167 519 0 519 149 0 0 1
+1 * 519
+3 * 519
+4 * 519 0 519
cob=(3)
cfi=(100)
cfn=(626)
calls=519 0x10a310 32 
* * 24924 9864 6240 0 0 1 0 0 1
* * 519 519
+5 * 519 0 519
+4 * 519 0 519
+5 +3 519 519
+5 * 519
+4 * 519
+3 * 519
+2 * 519
+4 * 519
+3 * 519
+2 * 519
+4 * 519
+3 * 519 0 519
cfn=(2264)
calls=519 0x40a889 -35 
* * 94011 28295 17761 1056 465 6 11 12 1
+5 * 519
+7 +1 519 519 0 149 0 0 1
+1 * 519 519

fl=(184)
fn=(2324)
0x40af64 1986 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 0 1 0 0 1
* * 308 308
+5 * 308 0 308
+4 * 308
+1 * 308 308
+1 * 308 308

fn=(3006)
0x414b5c 1986 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148
* * 12 12
+5 * 12 0 12
+4 * 12
+1 * 12 12
+1 * 12 12

fn=(2574)
0x413e82 1986 165 0 165
+1 * 165
+3 * 165
+4 * 165 0 165
cob=(3)
cfi=(100)
cfn=(626)
calls=165 0x10a310 32 
* * 7928 3137 1988
* * 165 165
+5 * 165 0 165
+4 * 165
+1 * 165 165
+1 * 165 165

fl=(147)
fn=(2062)
0x40537a 132 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(148)
cfn=(2064)
calls=149 0x4052c2 394 
* * 223844 85981 60107 1192 1188 600 8 4 156
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2964)
0x41055a 667 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 584 230 152 0 10 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12 1 0 0 1
cfi=(149)
cfn=(2966) std::__detail::_Map_base<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](float const&)
calls=12 0x411f5e -83 
* * 87578 32843 23219 383 307 55 69 32 33
+5 * 12 12
+1 * 12 12

fn=(3114)
0x41072e 338 180 0 180
+1 * 180
+3 * 180
+4 * 180 0 180
cob=(3)
cfi=(100)
cfn=(626)
calls=180 0x10a310 32 
* * 8652 3423 2172 0 0 1 0 0 1
* * 180 180
+5 * 180 0 180
+4 +1 180 180 0 1 0 0 1
+4 * 180
+3 * 180 0 180
cfi=(148)
cfn=(3116)
calls=180 0x4120fa 490 
* * 34388 13322 9188 1 1 1 1 1 1
+5 * 180 180
+1 * 180 180

fn=(3182) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::unordered_map(std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > const&)
0x40fc74 172 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3184)
calls=10 0x41091e 1101 
* * 59056 22067 15542 180 142 52 31 12 22
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3110)
0x41070e 316 170 0 170 1 0 0 1
+1 * 170
+3 * 170
+4 * 170 0 170
cob=(3)
cfi=(100)
cfn=(626)
calls=170 0x10a310 32 
* * 8168 3232 2048 0 10 1 0 1 1
* * 170 170
+5 * 170 0 170
+4 +1 170 170
+4 * 170
+3 * 170 0 170
cfi=(148)
cfn=(3112)
calls=170 0x4120a2 482 
* * 43022 16833 11402 3 48 1 2 2 1
+5 * 170 170
+1 * 170 170

fn=(3172)
0x410856 338 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3174)
calls=10 0x4122b4 490 
* * 1918 742 518 1 0 1 1 0 1
+5 * 10 10
+1 * 10 10

fn=(2024)
0x40518e 132 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(148)
cfn=(2026)
calls=149 0x4050d6 394 
* * 223860 85985 60123 2086 2539 270 14 10 122
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2290)
0x40a9b8 667 338 0 338 1
+1 * 338
+3 * 338
+4 * 338 0 338 150 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 32 
* * 16244 6427 4076 0 299 1 0 2 1
* * 338 338
+5 * 338 0 338
+4 * 338 0 338
+4 +1 338 338
+4 * 338 338
+4 * 338
+3 * 338
+3 * 338 0 338
cfi=(149)
cfn=(2292) std::__detail::_Map_base<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](float const&)
calls=338 0x40ad2c -83 
* * 2302149 850911 600256 13899 9241 2281 101 94 336
+5 * 338 338
+1 * 338 338

fn=(3168)
0x410836 316 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3170)
calls=10 0x41225c 482 
* * 2542 993 682 12 13 1 1 2 1
+5 * 10 10
+1 * 10 10

fn=(2252)
0x40a962 614 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149 0 149
cfi=(148)
cfn=(2254)
calls=149 0x40abf8 1300 
* * 174449 65395 45314 3135 2055 306 26 18 5
+5 * 149 149
+1 * 149 149

fn=(2892)
0x40fc34 132 26 0 26 10 0 0 1
+1 * 26
+3 * 26
+4 * 26 0 26 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1256 496 320 0 1 1 0 1 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(148)
cfn=(2894)
calls=26 0x40fb7c 394 
* * 39098 15010 10538 33 76 28 11 6 7
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(3258)
0x410a68 614 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3260)
calls=10 0x412736 1300 
* * 11650 4375 3050 14 43 10 2 3 1
+5 * 10 10
+1 * 10 10

fn=(2522)
0x41026e 667 159 0 159 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7640 3023 1916 0 149 1 0 1 1
* * 159 159
+5 * 159 0 159
+4 * 159 0 159 150 0 0 1
+4 +1 159 159
+4 * 159 159
+4 * 159
+3 * 159
+3 * 159 0 159
cfi=(149)
cfn=(2524) std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
calls=159 0x4118ca -83 
* * 1318650 496547 349664 15411 11781 2321 88 40 115
+5 * 159 159
+1 * 159 159

fn=(2834)
0x410530 667 162 0 162
+1 * 162
+3 * 162
+4 * 162 0 162
cob=(3)
cfi=(100)
cfn=(626)
calls=162 0x10a310 32 
* * 7784 3080 1952 0 1 0 0 1
* * 162 162
+5 * 162 0 162 1 0 0 1
+4 * 162 0 162
+4 +1 162 162
+4 * 162 162
+4 * 162
+3 * 162
+3 * 162 0 162
cfi=(149)
cfn=(2836) std::__detail::_Map_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
calls=162 0x411e58 -83 
* * 442225 171218 119908 305 173 85 102 57 79
+5 * 162 162
+1 * 162 162

fn=(3270) std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > >::~unordered_map()
0x4044ec 98 10 0 10 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -66 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10 0 1 0 0 1
+4 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3272)
calls=10 0x4054f6 1221 
* * 29319 10923 7676 201 112 30 6 7 11
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1370)
0x4044cc 132 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 63468 25121 15876 0 1 150 0 1 2
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(148)
cfn=(1372)
calls=1322 0x404414 394 
* * 1985714 762808 532850 4339 4181 1886 30 21 1143
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2244)
0x40a8d2 338 159 0 159 149 0 0 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7640 3023 1916 0 0 10 0 0 1
* * 159 159
+5 * 159 0 159
+4 +1 159 159
+4 * 159
+3 * 159 0 159
cfi=(148)
cfn=(2246)
calls=159 0x40ab5e 490 
* * 30381 11769 8121 647 596 1 5 3 1
+5 * 159 159
+1 * 159 159

fn=(3250)
0x40a8b2 316 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10 1
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3252)
calls=10 0x40ab06 482 
* * 2542 993 682 13 11 1 0 1 1
+5 * 10 10
+1 * 10 10

fn=(3306)
0x40fc54 98 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -66 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(148)
cfn=(3308)
calls=10 0x4107fe 1221 
* * 29530 10999 7734 15 31 20 6 3 11
+5 * 10
+1 * 10 10
+1 * 10 10

fl=(164)
fn=(1752) std::move_iterator<BP_Move**>::move_iterator(BP_Move**)
0x4096a8 984 118526 0 118526
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689252 2251995 1422316 0 982 0 0 1
* * 118526 118526
+5 * 118526 0 118526
+4 * 118526 0 118526
+4 +1 118526 118526 0 149 0 0 1
+4 * 118526 118526
+4 * 118526 0 118526
+3 * 118526
+1 * 118526 118526
+1 * 118526 118526

fn=(1858) std::move_iterator<BP_Pump**>::base() const
0x409efe 992 133736 0 133736
+1 * 133736 0 0 298 0 0 1
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419332 2540985 1604836 0 2247 1 0 0 1
* * 133736 133736
+5 * 133736 0 133736
+4 +1 133736 133736
+4 * 133736 133736
+3 * 133736 133736
+1 * 133736 133736

fn=(1958) __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >::base() const
0x4065d4 805 613818 0 613818
+1 * 613818
+3 * 613818
+4 * 613818 0 613818
cob=(3)
cfi=(100)
cfn=(626)
calls=613818 0x10a310 32 
* * 29463280 11662546 7365832 0 149 594 0 0 1
* * 613818 613818
+5 * 613818 0 613818
+4 +1 613818 613818
+4 * 613818 613818
+1 * 613818 613818

fn=(2212)
0x4100fa 753 54148 0 54148 2 0 0 1
+1 * 54148
+3 * 54148 0 0 298 0 0 1
+4 * 54148 0 54148
cob=(3)
cfi=(100)
cfn=(626)
calls=54148 0x10a310 32 
* * 2651562 1047884 664106 0 445 151 0 0 3
* * 54148 54148
+5 * 54148 0 54148
+4 +1 54148 54148
+4 * 54148 54148
+3 * 54148 54148
+1 * 54148 54148

fn=(2486)
0x4163f6 1166 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14312 5664 3584 0 148 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 298
+9 * 298 0 298
+4 * 298
+2 +1 298 298
+4 * 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfn=(2488) std::move_iterator<Protein**>::move_iterator(Protein**)
calls=298 0x4180b8 984 
* * 18182 7153 5070 149 149 0 1 1
+5 * 298 298
+4 * 298 298
+4 * 298 298
+9 * 298
+7 * 298 298 0 149 0 0 1
+1 * 298 298

fn=(2812)
0x4103f2 768 35015 0 35015
+1 * 35015
+3 * 35015
+4 * 35015 0 35015
cob=(3)
cfi=(100)
cfn=(626)
calls=35015 0x10a310 32 
* * 1680724 665286 420184 0 148 1 0 0 1
* * 35015 35015
+5 * 35015 0 35015 149 0 0 1
+4 * 35015 0 35015
+3 * 35015 35015
+9 * 35015 0 35015
+4 * 35015
+2 +1 35015 35015
+4 * 35015 35015
+3 * 35015
+4 * 35015 35015
+4 * 35015 0 35015
+3 * 35015 0 35015
+4 * 35015
+4 * 35015
+4 * 35015
+3 * 35015
+3 * 35015 0 35015
cfn=(1952) __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >::__normal_iterator(BP_Move** const&)
calls=35015 0x4065ae -29 
* * 2170934 875376 595259 0 149 0 0 1
+5 * 35015 35015
+4 * 35015 35015
+4 * 35015 35015
+9 * 35015
+7 * 35015 35015
+1 * 35015 35015

fn=(1660) std::move_iterator<BP_Protein**>::move_iterator(BP_Protein**)
0x4094f8 984 128388 0 128388
+1 * 128388
+3 * 128388
+4 * 128388 0 128388 4629 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162628 2439373 1540660 0 0 1 0 0 1
* * 128388 128388
+5 * 128388 0 128388
+4 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388 128388
+4 * 128388 0 128388
+3 * 128388
+1 * 128388 128388
+1 * 128388 128388

fn=(1844) std::move_iterator<BP_Pump**>::move_iterator(BP_Pump**)
0x4095d0 984 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419332 2540985 1604836 0 2589 1 0 1 1
* * 133736 133736
+5 * 133736 0 133736
+4 * 133736 0 133736
+4 +1 133736 133736
+4 * 133736 133736
+4 * 133736 0 133736
+3 * 133736
+1 * 133736 133736
+1 * 133736 133736

fn=(1896)
0x405d12 753 411484 0 411484 2 0 0 1
+1 * 411484
+3 * 411484
+4 * 411484 0 411484
cob=(3)
cfi=(100)
cfn=(626)
calls=411484 0x10a310 32 
* * 19751324 7818219 4937900 0 2441 155 0 5 7
* * 411484 411484
+5 * 411484 0 411484
+4 +1 411484 411484
+4 * 411484 411484
+3 * 411484 411484
+1 * 411484 411484

fn=(2010)
0x405930 761 321625 0 321625
+1 * 321625
+3 * 321625
+4 * 321625 0 321625
cob=(3)
cfi=(100)
cfn=(626)
calls=321625 0x10a310 32 
* * 15438008 6110877 3859508 0 0 1 0 0 1
* * 321625 321625
+5 * 321625 0 321625
+4 +2 321625 321625
+4 * 321625 321625
+3 * 321625
+4 * 321625 321625
+4 * 321625 0 321625
+3 +1 321625 321625
+4 +1 321625 321625
+1 * 321625 321625

fn=(2122)
0x40fedc 768 108394 0 108394 2 0 0 1
+1 * 108394
+3 * 108394
+4 * 108394 0 108394
cob=(3)
cfi=(100)
cfn=(626)
calls=108394 0x10a310 32 
* * 5202928 2059490 1300744 0 299 150 0 2 2
* * 108394 108394
+5 * 108394 0 108394
+4 * 108394 0 108394
+3 * 108394 108394
+9 * 108394 0 108394
+4 * 108394
+2 +1 108394 108394 0 149 0 0 1
+4 * 108394 108394
+3 * 108394
+4 * 108394 108394
+4 * 108394 0 108394
+3 * 108394 0 108394
+4 * 108394
+4 * 108394
+4 * 108394
+3 * 108394
+3 * 108394 0 108394
cfn=(1888) __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > >::__normal_iterator(BP** const&)
calls=108394 0x406766 -29 
* * 6720432 2709851 1842702 298 302 1 0 1 1
+5 * 108394 108394
+4 * 108394 108394
+4 * 108394 108394
+9 * 108394
+7 * 108394 108394 0 2 0 0 1
+1 * 108394 108394

fn=(2210) __gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > >::base() const
0x4115f2 805 15544 0 15544
+1 * 15544
+3 * 15544
+4 * 15544 0 15544
cob=(3)
cfi=(100)
cfn=(626)
calls=15544 0x10a310 32 
* * 746120 295338 186536 0 158 150 0 1 1
* * 15544 15544
+5 * 15544 0 15544 48 0 0 1
+4 +1 15544 15544
+4 * 15544 15544
+1 * 15544 15544

fn=(2214)
0x410114 856 46844 0 46844
+1 * 46844
+3 * 46844 0 46844
+1 * 46844
+4 * 46844 0 46844
cob=(3)
cfi=(100)
cfn=(626)
calls=46844 0x10a310 32 
* * 2248524 890039 562140 0 296 3 0 0 3
* * 46844 46844
+5 * 46844 0 46844
+4 * 46844 0 46844
+4 +3 46844 46844
+4 * 46844
+3 * 46844 0 46844
cfn=(1894) __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > >::base() const
calls=46844 0x40678c -54 
* * 2670112 1077413 702664 0 332 0 0 1
+5 * 46844 46844
+3 * 46844 46844
+4 * 46844
+3 * 46844 0 46844 150 0 0 1
cfn=(1894)
calls=46844 0x40678c -54 
* * 2670112 1077413 702664
+5 * 46844 46844
+3 * 46844
+3 * 46844
+3 * 46844
+4 * 46844 46844
+1 * 46844 46844
+1 * 46844 46844

fn=(2710) std::move_iterator<Pump**>::base() const
0x41a4de 992 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114436 45297 28612 0 149 149 0 1 1
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384 2384
+3 * 2384 2384
+1 * 2384 2384

fn=(2832)
0x4104ca 768 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 1 1 0 1 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+3 * 16 16
+9 * 16 0 16
+4 * 16
+2 +1 16 16
+4 * 16 16
+3 * 16
+4 * 16 16
+4 * 16 0 16
+3 * 16 0 16 1 0 0 1
+4 * 16
+4 * 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(2822) __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > >::__normal_iterator(Protein** const&)
calls=16 0x40ae32 -29 
* * 996 401 276 0 1 0 0 1
+5 * 16 16
+4 * 16 16
+4 * 16 16
+9 * 16
+7 * 16 16
+1 * 16 16

fn=(3340)
0x40aac2 761 2 0 2
+1 * 2
+3 * 2
+4 * 2 0 2
cob=(3)
cfi=(100)
cfn=(626)
calls=2 0x10a310 32 
* * 104 40 32 0 2 2 0 2 2
* * 2 2
+5 * 2 0 2
+4 +2 2 2
+4 * 2 2
+3 * 2
+4 * 2 2
+4 * 2 0 2
+3 +1 2 2
+4 +1 2 2
+1 * 2 2

fn=(1548)
0x40922a 1166 38164 0 38164
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831880 725118 457976 0 1725 0 0 1
* * 38164 38164
+5 * 38164 0 38164
+4 * 38164 38164 0 161 1 0 1
+9 * 38164 0 38164
+4 * 38164
+2 +1 38164 38164
+4 * 38164
+4 * 38164
+3 * 38164
+3 * 38164 0 38164
cfn=(1550) std::move_iterator<BP**>::move_iterator(BP**)
calls=38164 0x409780 984 
* * 2328008 915937 648792 160 753 1 1 0 1
+5 * 38164 38164
+4 * 38164 38164
+4 * 38164 38164
+9 * 38164
+7 * 38164 38164
+1 * 38164 38164

fn=(1550)
0x409780 984 38164 0 38164 160 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831876 725117 457972 0 753 1 0 0 1
* * 38164 38164
+5 * 38164 0 38164
+4 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164 38164
+4 * 38164 0 38164
+3 * 38164
+1 * 38164 38164
+1 * 38164 38164

fn=(1658)
0x408ea0 1166 128388 0 128388
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162632 2439374 1540664 0 5147 0 0 1
* * 128388 128388
+5 * 128388 0 128388
+4 * 128388 128388
+9 * 128388 0 128388
+4 * 128388
+2 +1 128388 128388 0 149 0 0 1
+4 * 128388
+4 * 128388
+3 * 128388
+3 * 128388 0 128388
cfn=(1660)
calls=128388 0x4094f8 984 
* * 7831672 3081313 2182600 4629 0 1 1 0 1
+5 * 128388 128388
+4 * 128388 128388
+4 * 128388 128388
+9 * 128388
+7 * 128388 128388
+1 * 128388 128388

fn=(1894)
0x40678c 805 369964 0 369964
+1 * 369964
+3 * 369964
+4 * 369964 0 369964
cob=(3)
cfi=(100)
cfn=(626)
calls=369964 0x10a310 32 
* * 17758288 7029320 4439584 0 485 1 0 1 1
* * 369964 369964
+5 * 369964 0 369964
+4 +1 369964 369964
+4 * 369964 369964
+1 * 369964 369964

fn=(1988)
0x4058ef 841 332994 0 332994
+1 * 332994
+3 * 332994 0 332994
+1 * 332994
+4 * 332994 0 332994
cob=(3)
cfi=(100)
cfn=(626)
calls=332994 0x10a310 32 
* * 15983720 6326888 3995936 0 0 1 0 0 1
* * 332994 332994
+5 * 332994 0 332994 149 0 0 1
+4 * 332994 0 332994
+4 +3 332994 332994
+4 * 332994
+3 * 332994 0 332994
cfn=(1990) __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >::base() const
calls=332994 0x40641c -39 
* * 18980662 7658863 4994914 0 1435 1587 0 1 1
+5 * 332994 332994
+3 * 332994 332994
+4 * 332994
+3 * 332994 0 332994
cfn=(1990)
calls=332994 0x40641c -39 
* * 18980662 7658863 4994914
+5 * 332994 332994
+3 * 332994
+3 * 332994
+3 * 332994
+4 * 332994 332994
+1 * 332994 332994
+1 * 332994 332994

fn=(2216)
0x410094 768 7314 0 7314
+1 * 7314
+3 * 7314
+4 * 7314 0 7314
cob=(3)
cfi=(100)
cfn=(626)
calls=7314 0x10a310 32 
* * 351092 138971 87788 0 449 149 0 5 1
* * 7314 7314
+5 * 7314 0 7314
+4 * 7314 0 7314
+3 * 7314 7314
+9 * 7314 0 7314
+4 * 7314
+2 +1 7314 7314
+4 * 7314 7314
+3 * 7314
+4 * 7314 7314
+4 * 7314 0 7314
+3 * 7314 0 7314
+4 * 7314
+4 * 7314
+4 * 7314
+3 * 7314
+3 * 7314 0 7314
cfn=(2204) __gnu_cxx::__normal_iterator<RNA**, std::vector<RNA*, std::allocator<RNA*> > >::__normal_iterator(RNA** const&)
calls=7314 0x4115cc -29 
* * 453472 182851 124342 0 183
+5 * 7314 7314
+4 * 7314 7314
+4 * 7314 7314
+9 * 7314
+7 * 7314 7314
+1 * 7314 7314

fn=(2656)
0x410298 856 12814 0 12814
+1 * 12814
+3 * 12814 0 12814
+1 * 12814
+4 * 12814 0 12814
cob=(3)
cfi=(100)
cfn=(626)
calls=12814 0x10a310 32 
* * 615076 243467 153772 0 0 1 0 0 1
* * 12814 12814
+5 * 12814 0 12814
+4 * 12814 0 12814
+4 +3 12814 12814
+4 * 12814
+3 * 12814 0 12814
cfn=(1990)
calls=12814 0x40641c -54 
* * 730402 294723 192214 0 164
+5 * 12814 12814
+3 * 12814 12814 0 149 0 0 1
+4 * 12814
+3 * 12814 0 12814
cfn=(1990)
calls=12814 0x40641c -54 
* * 730402 294723 192214
+5 * 12814 12814
+3 * 12814
+3 * 12814
+3 * 12814
+4 * 12814 12814
+1 * 12814 12814
+1 * 12814 12814

fn=(2792) std::move_iterator<Move**>::base() const
0x41a57a 992 2680 0 2680
+1 * 2680
+3 * 2680 0 0 149 0 0 1
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128644 50921 32164 0 299 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680 2680
+3 * 2680 2680
+1 * 2680 2680

fn=(1960)
0x405b36 753 330262 0 330262 1
+1 * 330262
+3 * 330262
+4 * 330262 0 330262 151 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=330262 0x10a310 32 
* * 15852592 6274982 3963160 0 0 149 0 0 1
* * 330262 330262
+5 * 330262 0 330262
+4 +1 330262 330262
+4 * 330262 330262
+3 * 330262 330262
+1 * 330262 330262

fn=(1978) __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >::operator++()
0x405b0c 761 260231 0 260231
+1 * 260231
+3 * 260231
+4 * 260231 0 260231
cob=(3)
cfi=(100)
cfn=(626)
calls=260231 0x10a310 32 
* * 12491096 4944391 3122780 0 1822 0 0 1
* * 260231 260231
+5 * 260231 0 260231
+4 +2 260231 260231
+4 * 260231 260231
+3 * 260231
+4 * 260231 260231
+4 * 260231 0 260231
+3 +1 260231 260231
+4 +1 260231 260231
+1 * 260231 260231

fn=(2176) std::move_iterator<RNA**>::base() const
0x41a38e 992 1490 0 1490 149 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71524 28311 17884 0 449 363 0 1 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490 1490
+3 * 1490 1490
+1 * 1490 1490

fn=(2502) std::move_iterator<Protein**>::base() const
0x41a42a 992 298 0 298 149
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298 298 0 149 0 0 1
+3 * 298 298
+1 * 298 298

fn=(1888)
0x406766 740 231664 0 231664 150
+1 * 231664
+3 * 231664
+4 * 231664 0 231664
cob=(3)
cfi=(100)
cfn=(626)
calls=231664 0x10a310 32 
* * 11119884 4401619 2779980 0 980 2 0 4 2
* * 231664 231664
+5 * 231664 0 231664
+4 * 231664 0 231664
+4 +1 231664 231664
+4 * 231664 231664 0 151 4484 0 1
+3 * 231664 231664
+4 * 231664 0 231664
+3 * 231664
+1 * 231664 231664
+1 * 231664 231664

fn=(1914) __gnu_cxx::__normal_iterator<BP**, std::vector<BP*, std::allocator<BP*> > >::operator++()
0x405ce8 761 69150 0 69150
+1 * 69150
+3 * 69150
+4 * 69150 0 69150
cob=(3)
cfi=(100)
cfn=(626)
calls=69150 0x10a310 32 
* * 3319208 1313852 829808 0 150 1 0 1 1
* * 69150 69150
+5 * 69150 0 69150
+4 +2 69150 69150
+4 * 69150 69150
+3 * 69150
+4 * 69150 69150
+4 * 69150 0 69150
+3 +1 69150 69150
+4 +1 69150 69150
+1 * 69150 69150

fn=(1946)
0x405754 761 327210 0 327210
+1 * 327210
+3 * 327210
+4 * 327210 0 327210
cob=(3)
cfi=(100)
cfn=(626)
calls=327210 0x10a310 32 
* * 15706088 6216992 3926528 0 1647 1 0 1 1
* * 327210 327210
+5 * 327210 0 327210
+4 +2 327210 327210
+4 * 327210 327210
+3 * 327210
+4 * 327210 327210
+4 * 327210 0 327210
+3 +1 327210 327210
+4 +1 327210 327210
+1 * 327210 327210

fn=(1952)
0x4065ae 740 93356 0 93356 149
+1 * 93356
+3 * 93356
+4 * 93356 0 93356
cob=(3)
cfi=(100)
cfn=(626)
calls=93356 0x10a310 32 
* * 4481100 1773767 1120284 0 4259 2 0 3 2
* * 93356 93356
+5 * 93356 0 93356
+4 * 93356 0 93356 151 0 0 1
+4 +1 93356 93356
+4 * 93356 93356 0 0 4329
+3 * 93356 93356
+4 * 93356 0 93356
+3 * 93356
+1 * 93356 93356
+1 * 93356 93356

fn=(1990)
0x40641c 805 691616 0 691616
+1 * 691616
+3 * 691616
+4 * 691616 0 691616
cob=(3)
cfi=(100)
cfn=(626)
calls=691616 0x10a310 32 
* * 33197584 13140708 8299408 0 1599 1587 0 1 1
* * 691616 691616
+5 * 691616 0 691616
+4 +1 691616 691616
+4 * 691616 691616
+1 * 691616 691616

fn=(2160)
0x416304 1166 1490 0 1490
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71528 28312 17888
* * 1490 1490
+5 * 1490 0 1490
+4 * 1490 1490
+9 * 1490 0 1490
+4 * 1490
+2 +1 1490 1490
+4 * 1490
+4 * 1490
+3 * 1490
+3 * 1490 0 1490
cfn=(2162) std::move_iterator<RNA**>::move_iterator(RNA**)
calls=1490 0x417fe0 984 
* * 90894 35761 25334 149 0 472 1 0 1
+5 * 1490 1490
+4 * 1490 1490
+4 * 1490 1490 0 149 0 0 1
+9 * 1490
+7 * 1490 1490
+1 * 1490 1490

fn=(2162)
0x417fe0 984 1490 0 1490
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71524 28311 17884 0 0 472 0 0 1
* * 1490 1490
+5 * 1490 0 1490
+4 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490 1490
+4 * 1490 0 1490
+3 * 1490 0 0 149 0 0 1
+1 * 1490 1490
+1 * 1490 1490

fn=(2488)
0x4180b8 984 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 +1 298 298
+4 * 298 298
+4 * 298 0 298
+3 * 298
+1 * 298 298
+1 * 298 298

fn=(2694)
0x4169b0 1166 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114440 45298 28616
* * 2384 2384
+5 * 2384 0 2384 149 0 0 1
+4 * 2384 2384
+9 * 2384 0 2384
+4 * 2384
+2 +1 2384 2384
+4 * 2384
+4 * 2384
+3 * 2384
+3 * 2384 0 2384
cfn=(2696) std::move_iterator<Pump**>::move_iterator(Pump**)
calls=2384 0x41862c 984 
* * 145428 57217 40532 149 0 149 1 0 1
+5 * 2384 2384
+4 * 2384 2384
+4 * 2384 2384
+9 * 2384
+7 * 2384 2384
+1 * 2384 2384

fn=(2696)
0x41862c 984 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114436 45297 28612 0 0 149 0 0 1
* * 2384 2384
+5 * 2384 0 2384
+4 * 2384 0 2384 149 0 0 1
+4 +1 2384 2384
+4 * 2384 2384
+4 * 2384 0 2384
+3 * 2384
+1 * 2384 2384
+1 * 2384 2384

fn=(2830)
0x40aaec 753 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 32 
* * 976 384 256 0 1 1 0 1 1
* * 20 20
+5 * 20 0 20
+4 +1 20 20 0 1 0 0 1
+4 * 20 20
+3 * 20 20
+1 * 20 20

fn=(1750)
0x4090fc 1166 118526 0 118526
+1 * 118526
+3 * 118526 0 0 149 0 0 1
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689256 2251996 1422320 0 2048 1317 0 1 1
* * 118526 118526
+5 * 118526 0 118526
+4 * 118526 118526
+9 * 118526 0 118526
+4 * 118526
+2 +1 118526 118526
+4 * 118526
+4 * 118526
+3 * 118526
+3 * 118526 0 118526
cfn=(1752)
calls=118526 0x4096a8 984 
* * 7230090 2844625 2014946 149 982 0 1 1
+5 * 118526 118526
+4 * 118526 118526
+4 * 118526 118526
+9 * 118526 0 0 298 0 0 1
+7 * 118526 118526
+1 * 118526 118526

fn=(1928)
0x40577e 753 339875 0 339875
+1 * 339875 0 0 158 0 0 1
+3 * 339875
+4 * 339875 0 339875
cob=(3)
cfi=(100)
cfn=(626)
calls=339875 0x10a310 32 
* * 16314028 6457632 4078528 0 594 1555 0 2 3
* * 339875 339875
+5 * 339875 0 339875
+4 +1 339875 339875
+4 * 339875 339875
+3 * 339875 339875
+1 * 339875 339875

fn=(2776)
0x416aa2 1166 2680 0 2680
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128648 50922 32168 0 0 1 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 * 2680 2680
+9 * 2680 0 2680
+4 * 2680 0 0 149 0 0 1
+2 +1 2680 2680
+4 * 2680
+4 * 2680
+3 * 2680
+3 * 2680 0 2680
cfn=(2778) std::move_iterator<Move**>::move_iterator(Move**)
calls=2680 0x418704 984 
* * 163484 64321 45564 0 153
+5 * 2680 2680
+4 * 2680 2680
+4 * 2680 2680
+9 * 2680
+7 * 2680 2680
+1 * 2680 2680

fn=(2778)
0x418704 984 2680 0 2680
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128644 50921 32164 0 153
* * 2680 2680
+5 * 2680 0 2680
+4 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680 2680
+4 * 2680 0 2680
+3 * 2680
+1 * 2680 2680
+1 * 2680 2680

fn=(1564) std::move_iterator<BP**>::base() const
0x40a036 992 38164 0 38164 149 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164 298 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831876 725117 457972 0 1613 90 0 1 1
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164 38164
+3 * 38164 38164
+1 * 38164 38164

fn=(1674) std::move_iterator<BP_Protein**>::base() const
0x409e62 992 128388 0 128388 4
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162628 2439373 1540660 0 507 1 0 0 1
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388 128388
+3 * 128388 128388
+1 * 128388 128388

fn=(1842)
0x408fce 1166 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419336 2540986 1604840 0 2401
* * 133736 133736
+5 * 133736 0 133736
+4 * 133736 133736
+9 * 133736 0 133736
+4 * 133736
+2 +1 133736 133736
+4 * 133736
+4 * 133736
+3 * 133736
+3 * 133736 0 133736 150 0 0 1
cfn=(1844)
calls=133736 0x4095d0 984 
* * 8157900 3209665 2273516 0 2589 1 0 1 1
+5 * 133736 133736
+4 * 133736 133736
+4 * 133736 133736
+9 * 133736
+7 * 133736 133736
+1 * 133736 133736

fn=(1924)
0x405713 841 337536 0 337536
+1 * 337536
+3 * 337536 0 337536
+1 * 337536
+4 * 337536 0 337536
cob=(3)
cfi=(100)
cfn=(626)
calls=337536 0x10a310 32 
* * 16201736 6413186 4050440 0 0 1 0 0 1
* * 337536 337536
+5 * 337536 0 337536
+4 * 337536 0 337536
+4 +3 337536 337536
+4 * 337536
+3 * 337536 0 337536
cfn=(1926) __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >::base() const
calls=337536 0x406264 -39 
* * 19239556 7763329 5063044 0 2448 0 0 1
+5 * 337536 337536
+3 * 337536 337536
+4 * 337536
+3 * 337536 0 337536 150 0 0 1
cfn=(1926)
calls=337536 0x406264 -39 
* * 19239556 7763329 5063044
+5 * 337536 337536
+3 * 337536
+3 * 337536
+3 * 337536
+4 * 337536 337536
+1 * 337536 337536
+1 * 337536 337536

fn=(2738)
0x4103b1 856 36202 0 36202
+1 * 36202
+3 * 36202 0 36202
+1 * 36202
+4 * 36202 0 36202
cob=(3)
cfi=(100)
cfn=(626)
calls=36202 0x10a310 32 
* * 1737700 687839 434428 0 0 1 0 0 1
* * 36202 36202
+5 * 36202 0 36202 149 0 0 1
+4 * 36202 0 36202
+4 +3 36202 36202
+4 * 36202
+3 * 36202 0 36202
cfn=(1958)
calls=36202 0x4065d4 -54 
* * 2063518 832647 543034 0 148
+5 * 36202 36202
+3 * 36202 36202
+4 * 36202
+3 * 36202 0 36202
cfn=(1958)
calls=36202 0x4065d4 -54 
* * 2063518 832647 543034
+5 * 36202 36202
+3 * 36202
+3 * 36202
+3 * 36202
+4 * 36202 36202
+1 * 36202 36202
+1 * 36202 36202

fn=(2826)
0x40aa81 841 55 0 55
+1 * 55
+3 * 55 0 55
+1 * 55
+4 * 55 0 55
cob=(3)
cfi=(100)
cfn=(626)
calls=55 0x10a310 32 
* * 2668 1052 688 0 2 5 0 2 5
* * 55 55
+5 * 55 0 55
+4 * 55 0 55
+4 +3 55 55
+4 * 55
+3 * 55 0 55
cfn=(2828) __gnu_cxx::__normal_iterator<Protein**, std::vector<Protein*, std::allocator<Protein*> > >::base() const
calls=55 0x40ae58 -39 
* * 3139 1266 829 0 2 0 0 1
+5 * 55 55
+3 * 55 55
+4 * 55
+3 * 55 0 55
cfn=(2828)
calls=55 0x40ae58 -39 
* * 3139 1266 829
+5 * 55 55
+3 * 55
+3 * 55
+3 * 55
+4 * 55 55
+1 * 55 55 0 1 0 0 1
+1 * 55 55

fn=(1926)
0x406264 805 687886 0 687886
+1 * 687886
+3 * 687886
+4 * 687886 0 687886
cob=(3)
cfi=(100)
cfn=(626)
calls=687886 0x10a310 32 
* * 33018544 13069838 8254648 0 2597 1 0 2 1
* * 687886 687886
+5 * 687886 0 687886
+4 +1 687886 687886
+4 * 687886 687886
+1 * 687886 687886

fn=(1956) bool __gnu_cxx::operator!=<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > >(__gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > > const&, __gnu_cxx::__normal_iterator<BP_Move**, std::vector<BP_Move*, std::allocator<BP_Move*> > > const&)
0x405acb 841 270707 0 270707
+1 * 270707
+3 * 270707 0 270707
+1 * 270707
+4 * 270707 0 270707
cob=(3)
cfi=(100)
cfn=(626)
calls=270707 0x10a310 32 
* * 12993944 5143435 3248492 0 836 1 0 0 1
* * 270707 270707
+5 * 270707 0 270707
+4 * 270707 0 270707
+4 +3 270707 270707
+4 * 270707
+3 * 270707 0 270707
cfn=(1958)
calls=270707 0x4065d4 -39 
* * 15430303 6226262 4060609 0 1
+5 * 270707 270707
+3 * 270707 270707
+4 * 270707
+3 * 270707 0 270707
cfn=(1958)
calls=270707 0x4065d4 -39 
* * 15430303 6226262 4060609 0 0 594 0 0 1
+5 * 270707 270707
+3 * 270707 0 0 2 0 0 1
+3 * 270707
+3 * 270707
+4 * 270707 270707
+1 * 270707 270707
+1 * 270707 270707

fn=(1992)
0x40595a 753 371093 0 371093 151 0 0 1
+1 * 371093
+3 * 371093
+4 * 371093 0 371093
cob=(3)
cfi=(100)
cfn=(626)
calls=371093 0x10a310 32 
* * 17812488 7050773 4453140 0 148 150 0 0 2
* * 371093 371093
+5 * 371093 0 371093
+4 +1 371093 371093
+4 * 371093 371093
+3 * 371093 371093
+1 * 371093 371093

fn=(2208)
0x410053 841 7772 0 7772
+1 * 7772
+3 * 7772 0 7772
+1 * 7772
+4 * 7772 0 7772
cob=(3)
cfi=(100)
cfn=(626)
calls=7772 0x10a310 32 
* * 373076 147673 93284 0 745 2 0 2 2
* * 7772 7772
+5 * 7772 0 7772
+4 * 7772 0 7772
+4 +3 7772 7772
+4 * 7772
+3 * 7772 0 7772
cfn=(2210)
calls=7772 0x4115f2 -39 
* * 443008 178757 116584 48 0 0 1
+5 * 7772 7772
+3 * 7772 7772
+4 * 7772
+3 * 7772 0 7772 2 0 0 1
cfn=(2210)
calls=7772 0x4115f2 -39 
* * 443008 178757 116584 0 158 150 0 1 1
+5 * 7772 7772
+3 * 7772
+3 * 7772
+3 * 7772
+4 * 7772 7772
+1 * 7772 7772
+1 * 7772 7772

fn=(2218)
0x410155 856 6407 0 6407
+1 * 6407
+3 * 6407 0 6407
+1 * 6407
+4 * 6407 0 6407
cob=(3)
cfi=(100)
cfn=(626)
calls=6407 0x10a310 32 
* * 307540 121734 76888 0 148 1 0 0 1
* * 6407 6407
+5 * 6407 0 6407
+4 * 6407 0 6407
+4 +3 6407 6407
+4 * 6407
+3 * 6407 0 6407
cfn=(1926)
calls=6407 0x406264 -54 
* * 365203 147362 96109
+5 * 6407 6407
+3 * 6407 6407
+4 * 6407 0 0 149 0 0 1
+3 * 6407 0 6407
cfn=(1926)
calls=6407 0x406264 -54 
* * 365203 147362 96109 0 149 1 0 1 1
+5 * 6407 6407
+3 * 6407
+3 * 6407
+3 * 6407
+4 * 6407 6407
+1 * 6407 6407
+1 * 6407 6407

fn=(1766) std::move_iterator<BP_Move**>::base() const
0x409f9a 992 118526 0 118526 149 0 0 1
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689252 2251995 1422316 0 1498 0 0 1
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526 118526
+4 * 118526 118526
+3 * 118526 118526
+1 * 118526 118526

fn=(1892)
0x405ca7 841 138138 0 138138
+1 * 138138
+3 * 138138 0 138138
+1 * 138138
+4 * 138138 0 138138
cob=(3)
cfi=(100)
cfn=(626)
calls=138138 0x10a310 32 
* * 6630636 2624625 1657668 0 2 1 0 0 1
* * 138138 138138
+5 * 138138 0 138138
+4 * 138138 0 138138
+4 +3 138138 138138 0 149 0 0 1
+4 * 138138
+3 * 138138 0 138138
cfn=(1894)
calls=138138 0x40678c -39 
* * 7873870 3177175 2072074 0 2 1 0 0 1
+5 * 138138 138138
+3 * 138138 138138
+4 * 138138
+3 * 138138 0 138138
cfn=(1894)
calls=138138 0x40678c -39 
* * 7873870 3177175 2072074 0 151
+5 * 138138 138138
+3 * 138138
+3 * 138138
+3 * 138138
+4 * 138138 138138
+1 * 138138 138138
+1 * 138138 138138

fn=(1920) __gnu_cxx::__normal_iterator<BP_Protein**, std::vector<BP_Protein*, std::allocator<BP_Protein*> > >::__normal_iterator(BP_Protein** const&)
0x40623e 740 33466 0 33466 297
+1 * 33466 0 0 151 0 0 1
+3 * 33466
+4 * 33466 0 33466
cob=(3)
cfi=(100)
cfn=(626)
calls=33466 0x10a310 32 
* * 1606380 635857 401604 0 1785 149 0 1 1
* * 33466 33466
+5 * 33466 0 33466
+4 * 33466 0 33466
+4 +1 33466 33466
+4 * 33466 33466 0 0 4737
+3 * 33466 33466
+4 * 33466 0 33466
+3 * 33466
+1 * 33466 33466
+1 * 33466 33466

fn=(1984) __gnu_cxx::__normal_iterator<BP_Pump**, std::vector<BP_Pump*, std::allocator<BP_Pump*> > >::__normal_iterator(BP_Pump** const&)
0x4063f6 740 48366 0 48366 299
+1 * 48366
+3 * 48366
+4 * 48366 0 48366 468 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=48366 0x10a310 32 
* * 2321580 918957 580404 0 3631 0 0 2
* * 48366 48366
+5 * 48366 0 48366
+4 * 48366 0 48366
+4 +1 48366 48366
+4 * 48366 48366 0 0 5200
+3 * 48366 48366
+4 * 48366 0 48366
+3 * 48366
+1 * 48366 48366
+1 * 48366 48366

fn=(2204)
0x4115cc 740 15544 0 15544 15
+1 * 15544
+3 * 15544
+4 * 15544 0 15544
cob=(3)
cfi=(100)
cfn=(626)
calls=15544 0x10a310 32 
* * 746124 295339 186540 0 775 2 0 1 2
* * 15544 15544
+5 * 15544 0 15544
+4 * 15544 0 15544
+4 +1 15544 15544
+4 * 15544 15544 0 0 32
+3 * 15544 15544
+4 * 15544 0 15544
+3 * 15544
+1 * 15544 15544
+1 * 15544 15544

fn=(2220)
0x410196 768 6258 0 6258
+1 * 6258
+3 * 6258
+4 * 6258 0 6258
cob=(3)
cfi=(100)
cfn=(626)
calls=6258 0x10a310 32 
* * 300388 118903 75100 0 149 0 0 1
* * 6258 6258
+5 * 6258 0 6258
+4 * 6258 0 6258
+3 * 6258 6258
+9 * 6258 0 6258
+4 * 6258
+2 +1 6258 6258
+4 * 6258 6258
+3 * 6258 0 0 149 0 0 1
+4 * 6258 6258
+4 * 6258 0 6258
+3 * 6258 0 6258
+4 * 6258
+4 * 6258
+4 * 6258
+3 * 6258
+3 * 6258 0 6258
cfn=(1920)
calls=6258 0x40623e -29 
* * 388000 156451 106390 0 0 149 0 0 1
+5 * 6258 6258
+4 * 6258 6258
+4 * 6258 6258
+9 * 6258
+7 * 6258 6258
+1 * 6258 6258

fn=(2730)
0x4102da 768 12367 0 12367
+1 * 12367
+3 * 12367
+4 * 12367 0 12367
cob=(3)
cfi=(100)
cfn=(626)
calls=12367 0x10a310 32 
* * 593620 234974 148408 0 148
* * 12367 12367
+5 * 12367 0 12367
+4 * 12367 0 12367
+3 * 12367 12367
+9 * 12367 0 12367
+4 * 12367
+2 +1 12367 12367 0 149 0 0 1
+4 * 12367 12367
+3 * 12367
+4 * 12367 12367
+4 * 12367 0 12367
+3 * 12367 0 12367
+4 * 12367
+4 * 12367
+4 * 12367
+3 * 12367
+3 * 12367 0 12367
cfn=(1984)
calls=12367 0x4063f6 -29 
* * 766758 309176 210243 1 149 0 0 1
+5 * 12367 12367
+4 * 12367 12367
+4 * 12367 12367
+9 * 12367
+7 * 12367 12367
+1 * 12367 12367

fn=(2822)
0x40ae32 740 106 0 106
+1 * 106
+3 * 106
+4 * 106 0 106
cob=(3)
cfi=(100)
cfn=(626)
calls=106 0x10a310 32 
* * 5100 2017 1284 0 4 1 0 2 1
* * 106 106
+5 * 106 0 106
+4 * 106 0 106
+4 +1 106 106
+4 * 106 106 0 0 1
+3 * 106 106
+4 * 106 0 106
+3 * 106
+1 * 106 106
+1 * 106 106

fn=(2828)
0x40ae58 805 110 0 110
+1 * 110
+3 * 110
+4 * 110 0 110
cob=(3)
cfi=(100)
cfn=(626)
calls=110 0x10a310 32 
* * 5288 2092 1328 0 2 0 0 1
* * 110 110
+5 * 110 0 110
+4 +1 110 110
+4 * 110 110
+1 * 110 110

fl=(136)
fn=(1270) unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
0x408e3d 219 464029 0 464029 3 0 0 2
+1 * 464029 0 0 3 0 0 2
+3 * 464029
+4 * 464029 0 464029
cob=(3)
cfi=(100)
cfn=(626)
calls=464029 0x10a310 32 
* * 22273432 8816561 5568388 0 3340 1 0 4 1
* * 464029 464029
+5 * 464029 0 464029
+4 * 464029 0 464029
+4 +5 464029 464029
+4 * 464029 464029
+3 * 464029 464029
+4 * 464029 464029
+3 * 464029
+3 * 464029
+2 +1 37984 37984
+4 * 37984
+2 +1 426045 426045
+4 +1 426045 426045
+1 * 426045 426045
-1 * 37984 37984
+1 * 37984 37984

fn=(1560) std::_Miter_base<std::move_iterator<BP**> >::iterator_type std::__miter_base<std::move_iterator<BP**> >(std::move_iterator<BP**>)
0x409c15 293 38164 0 38164 149 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831880 725118 457976 0 404 48 0 2 1
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164
+3 * 38164 0 38164
cfi=(165) /usr/include/c++/5/bits/stl_iterator_base_types.h
cfn=(1562) std::_Iter_base<std::move_iterator<BP**>, true>::_S_base(std::move_iterator<BP**>)
calls=38164 0x409ded -71 
* * 4465196 1755546 1183092 609 1764 90 9 2 1
+5 * 38164 38164
+1 * 38164 38164

fn=(1572) BP** std::__copy_move_a<true, BP**, BP**>(BP**, BP**, BP**)
0x409e2b 391 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 166 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082 150 0 0 1
+4 +8 19082 0 19082
+4 +3 19082 19082
+4 * 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfn=(1574) BP** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<BP*>(BP* const*, BP* const*, BP**)
calls=19082 0x40a067 -29 
* * 1755883 661181 419277 927 8971 9601 25 42 9543
+5 +1 19082 19082
+1 * 19082 19082

fn=(1774) BP_Move** std::__copy_move_a<true, BP_Move**, BP_Move**>(BP_Move**, BP_Move**, BP_Move**)
0x409db7 391 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263 1
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160 0 422 1 0 0 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +8 59263 0 59263
+4 +3 59263 59263
+4 * 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfn=(1776) BP_Move** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<BP_Move*>(BP_Move* const*, BP_Move* const*, BP_Move**)
calls=59263 0x409fcb -29 
* * 5579464 2089746 1308408 2248 2212 22870 0 1 22734
+5 +1 59263 59263
+1 * 59263 59263

fn=(2714) std::_Niter_base<Pump**>::iterator_type std::__niter_base<Pump**>(Pump**)
0x41a2a4 282 3576 0 3576
+1 * 3576
+3 * 3576
+4 * 3576 0 3576
cob=(3)
cfi=(100)
cfn=(626)
calls=3576 0x10a310 32 
* * 171660 67947 42924 0 445 2 0 1 2
* * 3576 3576
+5 * 3576 0 3576
+4 +1 3576 3576
+4 * 3576
+3 * 3576 0 3576 149 0 0 1
cfi=(165)
cfn=(2716) std::_Iter_base<Pump**, false>::_S_base(Pump**)
calls=3576 0x41a4f8 -68 
* * 203836 82249 53644 149 0 0 1
+5 * 3576 3576
+1 * 3576 3576

fn=(2800) Move** std::__copy_move_a<true, Move**, Move**>(Move**, Move**, Move**)
0x41a337 391 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +8 1340 0 1340
+4 +3 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2802) Move** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Move*>(Move* const*, Move* const*, Move**)
calls=1340 0x41a5ab -29 
* * 172127 63227 44769 298 23 4046 1 0 4046
+5 +1 1340 1340
+1 * 1340 1340

fn=(2802)
0x41a5ab 373 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 0 1 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340 149 0 0 1
+4 +9 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340
+4 * 1340 0 1340
+4 +1 1340 1340
+5 * 1340
+2 +1 1191 1191
+4 * 1191
+8 * 1191 1191
+4 * 1191 1191
+4 * 1191
+3 * 1191
+3 * 1191 0 1191
cob=(3)
cfi=(167)
cfn=(1588)
calls=1191 0x15e420 55 
* * 68795 22282 19454 0 23 4045 0 0 4045
* * 1191 1191
+5 +1 1340 1340 0 149
+4 * 1340
+8 * 1340 1340
+4 * 1340
+3 +1 1340 1340
+1 * 1340 1340

fn=(1568) std::_Niter_base<BP**>::iterator_type std::__niter_base<BP**>(BP**)
0x409e0c 282 57246 0 57246
+1 * 57246
+3 * 57246
+4 * 57246 0 57246
cob=(3)
cfi=(100)
cfn=(626)
calls=57246 0x10a310 32 
* * 2747820 1087677 686964 0 820 759 0 0 1
* * 57246 57246
+5 * 57246 0 57246
+4 +1 57246 57246
+4 * 57246
+3 * 57246 0 57246
cfi=(165)
cfn=(1570) std::_Iter_base<BP**, false>::_S_base(BP**)
calls=57246 0x40a050 -68 
* * 3263026 1316659 858694
+5 * 57246 57246
+1 * 57246 57246

fn=(1670) std::_Miter_base<std::move_iterator<BP_Protein**> >::iterator_type std::__miter_base<std::move_iterator<BP_Protein**> >(std::move_iterator<BP_Protein**>)
0x409aa1 293 128388 0 128388
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162632 2439374 1540664 0 3962 1 0 1 1
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388
+3 * 128388 0 128388
cfi=(165)
cfn=(1672) std::_Iter_base<std::move_iterator<BP_Protein**>, true>::_S_base(std::move_iterator<BP_Protein**>)
calls=128388 0x409c91 -71 
* * 15021404 5905850 3980036 4 939 23 0 0 1
+5 * 128388 128388
+1 * 128388 128388

fn=(1684) BP_Protein** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<BP_Protein*>(BP_Protein* const*, BP_Protein* const*, BP_Protein**)
0x409e93 373 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332 0 575 150 0 1 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +9 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194
+4 * 64194 0 64194 149 0 0 1
+4 +1 64194 64194
+5 * 64194
+2 +1 53868 53868
+4 * 53868
+8 * 53868 53868
+4 * 53868 53868
+4 * 53868
+3 * 53868
+3 * 53868 0 53868
cob=(3)
cfi=(167)
cfn=(1588)
calls=53868 0x15e420 55 
* * 1252575 358478 244759 329 1339 31893 12 7 31801
* * 53868 53868
+5 +1 64194 64194
+4 * 64194
+8 * 64194 64194
+4 * 64194
+3 +1 64194 64194
+1 * 64194 64194

fn=(1866) BP_Pump** std::__copy_move_a<true, BP_Pump**, BP_Pump**>(BP_Pump**, BP_Pump**, BP_Pump**)
0x409d43 391 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +8 66868 0 66868
+4 +3 66868 66868
+4 * 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1868) BP_Pump** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<BP_Pump*>(BP_Pump* const*, BP_Pump* const*, BP_Pump**)
calls=66868 0x409f2f -29 
* * 6362927 2382118 1497578 1221 3171 30016 1 0 29933
+5 +1 66868 66868
+1 * 66868 66868

fn=(2184) RNA** std::__copy_move_a<true, RNA**, RNA**>(RNA**, RNA**, RNA**)
0x41a1bb 391 745 0 745
+1 * 745
+3 * 745 0 0 149 0 0 1
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +8 745 0 745
+4 +3 745 745
+4 * 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfn=(2186) RNA** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<RNA*>(RNA* const*, RNA* const*, RNA**)
calls=745 0x41a3bf -29 
* * 66011 24884 15202 452 176 507 2 0 36
+5 +1 745 745
+1 * 745 745

fn=(2186)
0x41a3bf 373 745 0 745
+1 * 745 0 0 149 0 0 1
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 0 472 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +9 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745
+4 * 745 0 745
+4 +1 745 745
+5 * 745
+2 +1 596 596
+4 * 596 0 0 5
+8 * 596 596
+4 * 596 596
+4 * 596
+3 * 596
+3 * 596 0 596
cob=(3)
cfi=(167)
cfn=(1588)
calls=596 0x15e420 55 
* * 9089 2384 1192 149 176 35 0 0 35
* * 596 596
+5 +1 745 745 0 149 0 0 1
+4 * 745
+8 * 745 745
+4 * 745
+3 +1 745 745
+1 * 745 745

fn=(2496)
0x41988c 462 149 0 149 149
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +9 149 149
+4 * 149
+3 * 149 0 149
cfn=(2498) std::_Miter_base<std::move_iterator<Protein**> >::iterator_type std::__miter_base<std::move_iterator<Protein**> >(std::move_iterator<Protein**>)
calls=149 0x419fc2 293 
* * 26236 10284 7015 745 595 1 2 1 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfn=(2498)
calls=149 0x419fc2 293 
* * 26228 10282 7007 0 0 149 0 0 1
+5 * 149
+3 +1 149 149
+4 * 149
+3 * 149
+3 * 149
+3 * 149 0 149
cfn=(2504) Protein** std::__copy_move_a2<true, Protein**, Protein**>(Protein**, Protein**, Protein**)
calls=149 0x419fe1 -36 
* * 83617 32340 22825 596 445 2 4 1 2
+5 +1 149
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2796) std::_Niter_base<Move**>::iterator_type std::__niter_base<Move**>(Move**)
0x41a318 282 4020 0 4020
+1 * 4020
+3 * 4020
+4 * 4020 0 4020
cob=(3)
cfi=(100)
cfn=(626)
calls=4020 0x10a310 32 
* * 192972 76383 48252 0 321 150 0 1 2
* * 4020 4020
+5 * 4020 0 4020
+4 +1 4020 4020
+4 * 4020
+3 * 4020 0 4020
cfi=(165)
cfn=(2798) std::_Iter_base<Move**, false>::_S_base(Move**)
calls=4020 0x41a594 -68 
* * 229144 92461 60304 0 0 3 0 0 2
+5 * 4020 4020
+1 * 4020 4020

fn=(1566) BP** std::__copy_move_a2<true, BP**, BP**>(BP**, BP**, BP**)
0x409c34 436 19082 0 19082
+1 * 19082
+3 * 19082 0 19082
+2 * 19082 0 19082
+1 * 19082
+4 * 19082 0 19082 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 0 1 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +2 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1568)
calls=19082 0x409e0c 282 
* * 2213520 877774 591550 0 820
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1568)
calls=19082 0x409e0c 282 
* * 2213516 877773 591546 0 0 759 0 0 1
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1568)
calls=19082 0x409e0c 282 
* * 2213516 877773 591546
+5 +2 19082
+3 * 19082
+3 * 19082 0 0 149 0 0 1
+3 * 19082 0 19082
cfn=(1572)
calls=19082 0x409e2b -49 
* * 2996217 1138232 781839 1077 9137 9601 26 43 9543
+5 +1 19082
+4 * 19082 19082
+1 * 19082 19082
+2 * 19082 19082
+1 * 19082 19082

fn=(1676) BP_Protein** std::__copy_move_a2<true, BP_Protein**, BP_Protein**>(BP_Protein**, BP_Protein**, BP_Protein**)
0x409ac0 436 64194 0 64194 4 0 0 3
+1 * 64194
+3 * 64194 0 64194
+2 * 64194 0 64194
+1 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +2 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1678) std::_Niter_base<BP_Protein**>::iterator_type std::__niter_base<BP_Protein**>(BP_Protein**)
calls=64194 0x409cb0 282 
* * 7446512 2952926 1990022 298 0 2228 2 0 1
+5 * 64194
+3 * 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1678)
calls=64194 0x409cb0 282 
* * 7446508 2952925 1990018
+5 * 64194
+3 * 64194 64194
+4 * 64194 0 0 2 0 0 1
+3 * 64194 0 64194
cfn=(1678)
calls=64194 0x409cb0 282 
* * 7446508 2952925 1990018 0 2233 1 0 1 1
+5 +2 64194
+3 * 64194
+3 * 64194
+3 * 64194 0 64194
cfn=(1682) BP_Protein** std::__copy_move_a<true, BP_Protein**, BP_Protein**>(BP_Protein**, BP_Protein**, BP_Protein**)
calls=64194 0x409ccf -49 
* * 10349717 3912040 2673813 627 1914 32043 14 8 31802
+5 +1 64194
+4 * 64194 64194
+1 * 64194 64194
+2 * 64194 64194
+1 * 64194 64194

fn=(1682)
0x409ccf 391 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +8 64194 0 64194
+4 +3 64194 64194
+4 * 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194 0 64194 149 0 0 1
cfn=(1684)
calls=64194 0x409e93 -29 
* * 6177103 2307189 1454123 478 1914 32043 13 8 31802
+5 +1 64194 64194
+1 * 64194 64194

fn=(1770) std::_Niter_base<BP_Move**>::iterator_type std::__niter_base<BP_Move**>(BP_Move**)
0x409d98 282 177789 0 177789
+1 * 177789
+3 * 177789
+4 * 177789 0 177789
cob=(3)
cfi=(100)
cfn=(626)
calls=177789 0x10a310 32 
* * 8533880 3377993 2133476
* * 177789 177789
+5 * 177789 0 177789
+4 +1 177789 177789
+4 * 177789
+3 * 177789 0 177789
cfi=(165)
cfn=(1772) std::_Iter_base<BP_Move**, false>::_S_base(BP_Move**)
calls=177789 0x409fb4 -68 
* * 10133977 4089148 2666839 150 742 7 1 0 1
+5 * 177789 177789
+1 * 177789 177789

fn=(2180) std::_Niter_base<RNA**>::iterator_type std::__niter_base<RNA**>(RNA**)
0x41a19c 282 2235 0 2235
+1 * 2235
+3 * 2235
+4 * 2235 0 2235
cob=(3)
cfi=(100)
cfn=(626)
calls=2235 0x10a310 32 
* * 107292 42468 26832 0 1287 2 0 1 2
* * 2235 2235
+5 * 2235 0 2235
+4 +1 2235 2235
+4 * 2235
+3 * 2235 0 2235
cfi=(165)
cfn=(2182) std::_Iter_base<RNA**, false>::_S_base(RNA**)
calls=2235 0x41a3a8 -68 
* * 127399 51406 33529
+5 * 2235 2235
+1 * 2235 2235

fn=(2498)
0x419fc2 293 298 0 298 149
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14312 5664 3584 0 149 150 0 0 2
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298
cfi=(165)
cfn=(2500) std::_Iter_base<std::move_iterator<Protein**>, true>::_S_base(std::move_iterator<Protein**>)
calls=298 0x41a1f1 -71 
* * 34874 13710 9246 596 446 0 2 1
+5 * 298 298
+1 * 298 298

fn=(1862) std::_Niter_base<BP_Pump**>::iterator_type std::__niter_base<BP_Pump**>(BP_Pump**)
0x409d24 282 200604 0 200604
+1 * 200604
+3 * 200604
+4 * 200604 0 200604
cob=(3)
cfi=(100)
cfn=(626)
calls=200604 0x10a310 32 
* * 9629004 3811479 2407260 0 1485 1814 0 0 1
* * 200604 200604
+5 * 200604 0 200604
+4 +1 200604 200604
+4 * 200604
+3 * 200604 0 200604
cfi=(165)
cfn=(1864) std::_Iter_base<BP_Pump**, false>::_S_base(BP_Pump**)
calls=200604 0x409f18 -68 
* * 11434432 4613893 3009064 0 0 1
+5 * 200604 200604
+1 * 200604 200604

fn=(1678)
0x409cb0 282 192582 0 192582
+1 * 192582
+3 * 192582
+4 * 192582 0 192582
cob=(3)
cfi=(100)
cfn=(626)
calls=192582 0x10a310 32 
* * 9243948 3659061 2310996 0 2233 2081 0 1 2
* * 192582 192582
+5 * 192582 0 192582 149 0 0 1
+4 +1 192582 192582
+4 * 192582
+3 * 192582 0 192582
cfi=(165)
cfn=(1680) std::_Iter_base<BP_Protein**, false>::_S_base(BP_Protein**)
calls=192582 0x409e7c -68 
* * 10977178 4429387 2888734 149 0 148 1
+5 * 192582 192582
+1 * 192582 192582

fn=(1768) BP_Move** std::__copy_move_a2<true, BP_Move**, BP_Move**>(BP_Move**, BP_Move**, BP_Move**)
0x409bb8 436 59263 0 59263
+1 * 59263
+3 * 59263 0 59263
+2 * 59263 0 59263
+1 * 59263 0 0 149 0 0 1
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +2 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1770)
calls=59263 0x409d98 282 
* * 6874516 2726100 1837161 150 742 7 1 0 1
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1770)
calls=59263 0x409d98 282 
* * 6874508 2726098 1837153
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1770)
calls=59263 0x409d98 282 
* * 6874512 2726099 1837157
+5 +2 59263
+3 * 59263
+3 * 59263
+3 * 59263 0 59263
cfn=(1774)
calls=59263 0x409db7 -49 
* * 9431563 3571322 2434409 2249 2634 22871 0 1 22735
+5 +1 59263
+4 * 59263 59263
+1 * 59263 59263
+2 * 59263 59263
+1 * 59263 59263

fn=(1776)
0x409fcb 373 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160 0 1133 68
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +9 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263
+4 * 59263 0 59263
+4 +1 59263 59263
+5 * 59263
+2 +1 48787 48787
+4 * 48787
+8 * 48787 48787
+4 * 48787 48787
+4 * 48787
+3 * 48787
+3 * 48787 0 48787
cob=(3)
cfi=(167)
cfn=(1588)
calls=48787 0x15e420 55 
* * 1040754 294496 192883 2248 1079 22802 0 1 22734
* * 48787 48787
+5 +1 59263 59263
+4 * 59263
+8 * 59263 59263
+4 * 59263
+3 +1 59263 59263
+1 * 59263 59263

fn=(2170)
0x41983b 462 745 0 745 149 0 0 1
+1 * 745
+3 * 745 0 745
+1 * 745 0 0 149 0 0 1
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 436 1 0 1 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +9 745 745
+4 * 745
+3 * 745 0 745
cfn=(2172) std::_Miter_base<std::move_iterator<RNA**> >::iterator_type std::__miter_base<std::move_iterator<RNA**> >(std::move_iterator<RNA**>)
calls=745 0x419f46 293 
* * 131132 51408 35027 1192 1911 363 4 3 1
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2172)
calls=745 0x419f46 293 
* * 131124 51406 35019
+5 * 745
+3 +1 745 745
+4 * 745
+3 * 745
+3 * 745
+3 * 745 0 745 149 0 0 1
cfn=(2178) RNA** std::__copy_move_a2<true, RNA**, RNA**>(RNA**, RNA**, RNA**)
calls=745 0x419f65 -36 
* * 431830 166440 115801 1495 1910 509 5 2 38
+5 +1 745
+4 * 745 745
+1 * 745 745
+1 * 745 745

fn=(2510) Protein** std::__copy_move_a<true, Protein**, Protein**>(Protein**, Protein**, Protein**)
0x41a22f 391 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+4 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 +8 149 0 149
+4 +3 149 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfn=(2512) Protein** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Protein*>(Protein* const*, Protein* const*, Protein**)
calls=149 0x41a45b -29 
* * 10434 4024 2686 298 0 0 2
+5 +1 149 149
+1 * 149 149

fn=(2706) std::_Miter_base<std::move_iterator<Pump**> >::iterator_type std::__miter_base<std::move_iterator<Pump**> >(std::move_iterator<Pump**>)
0x41a061 293 2384 0 2384 149 0 0 1
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114440 45298 28616 0 297 0 0 1
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(165)
cfn=(2708) std::_Iter_base<std::move_iterator<Pump**>, true>::_S_base(std::move_iterator<Pump**>)
calls=2384 0x41a285 -71 
* * 278936 109666 73912 149 258 149 1 1 1
+5 * 2384 2384
+1 * 2384 2384

fn=(1574)
0x40a067 373 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 828 2 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +9 19082 19082 0 2 0 0 1
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082
+4 * 19082 0 19082
+4 +1 19082 19082
+5 * 19082
+2 +1 13866 13866
+4 * 13866
+8 * 13866 13866
+4 * 13866 13866
+4 * 13866
+3 * 13866
+3 * 13866 0 13866
cob=(3)
cfi=(167)
cfn=(1588)
calls=13865 0x15e420 55 
* * 307883 90125 61795 755 8064 9597 2 3 9542
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1324 375 134 21 77 2 21 38
* * 13870 13868 2 0 2 0 0 1
+5 +1 19082 19082
+4 * 19082 0 0 149 0 0 1
+8 * 19082 19082
+4 * 19082
+3 +1 19082 19082
+1 * 19082 19082

fn=(1668)
0x40995d 462 64194 0 64194
+1 * 64194
+3 * 64194 0 64194
+1 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332 0 2155 0 0 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +9 64194 64194
+4 * 64194
+3 * 64194 0 64194 149 0 0 1
cfn=(1670)
calls=64194 0x409aa1 293 
* * 11298156 4429389 3017130 4 2910 24 0 1 2
+5 * 64194
+3 * 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1670)
calls=64194 0x409aa1 293 
* * 11298148 4429387 3017122 0 1991
+5 * 64194
+3 +1 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194
+3 * 64194 0 64194
cfn=(1676)
calls=64194 0x409ac0 -36 
* * 37696381 14504055 10120337 931 4147 34272 20 9 31804
+5 +1 64194
+4 * 64194 64194
+1 * 64194 64194
+1 * 64194 64194

fn=(1860) BP_Pump** std::__copy_move_a2<true, BP_Pump**, BP_Pump**>(BP_Pump**, BP_Pump**, BP_Pump**)
0x409b3c 436 66868 0 66868
+1 * 66868
+3 * 66868 0 66868 149 0 0 1
+2 * 66868 0 66868
+1 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420 0 0 1 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +2 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1862)
calls=66868 0x409d24 282 
* * 7756696 3075930 2072916 0 1445 1
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1862)
calls=66868 0x409d24 282 
* * 7756692 3075929 2072912 0 0 1814 0 0 1
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1862)
calls=66868 0x409d24 282 
* * 7756692 3075929 2072912 0 40
+5 +2 66868
+3 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1866)
calls=66868 0x409d43 -49 
* * 10709351 4053819 2768074 1221 3171 30016 1 0 29933
+5 +1 66868
+4 * 66868 66868
+1 * 66868 66868
+2 * 66868 66868
+1 * 66868 66868

fn=(1868)
0x409f2f 373 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420 0 1291 2 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868 298 0 0 1
+4 * 66868 0 66868
+4 +9 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868
+4 * 66868 0 66868
+4 +1 66868 66868
+5 * 66868
+2 +1 55499 55499
+4 * 55499
+8 * 55499 55499
+4 * 55499 55499
+4 * 55499
+3 * 55499
+3 * 55499 0 55499
cob=(3)
cfi=(167)
cfn=(1588)
calls=55499 0x15e420 55 
* * 1238171 354685 238451 923 1880 30014 0 0 29932
* * 55499 55499
+5 +1 66868 66868
+4 * 66868
+8 * 66868 66868
+4 * 66868
+3 +1 66868 66868
+1 * 66868 66868

fn=(2788) std::_Miter_base<std::move_iterator<Move**> >::iterator_type std::__miter_base<std::move_iterator<Move**> >(std::move_iterator<Move**>)
0x41a0dd 293 2680 0 2680
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128644 50921 32164 0 152 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680
+3 * 2680 0 2680
cfi=(165)
cfn=(2790) std::_Iter_base<std::move_iterator<Move**>, true>::_S_base(std::move_iterator<Move**>)
calls=2680 0x41a2f9 -71 
* * 313568 123282 83088 298 315 2 2 1 1
+5 * 2680 2680
+1 * 2680 2680

fn=(1760)
0x4099ff 462 59263 0 59263 149 0 0 1
+1 * 59263 0 0 149 0 0 1
+3 * 59263 0 59263
+1 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160 0 948
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +9 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1762) std::_Miter_base<std::move_iterator<BP_Move**> >::iterator_type std::__miter_base<std::move_iterator<BP_Move**> >(std::move_iterator<BP_Move**>)
calls=59263 0x409b99 293 
* * 10430300 4089150 2785373 619 3637 3 4 2 1
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1762)
calls=59263 0x409b99 293 
* * 10430292 4089148 2785365 0 0 1336 0 0 1
+5 * 59263
+3 +1 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263
+3 * 59263 0 59263
cfn=(1768)
calls=59263 0x409bb8 -36 
* * 34677617 13349721 9308933 2548 3376 22878 2 1 22736
+5 +1 59263
+4 * 59263 59263
+1 * 59263 59263
+1 * 59263 59263

fn=(2172)
0x419f46 293 1490 0 1490 149 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71528 28312 17888 0 923 0 0 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490
+3 * 1490 0 1490
cfi=(165)
cfn=(2174) std::_Iter_base<std::move_iterator<RNA**>, true>::_S_base(std::move_iterator<RNA**>)
calls=1490 0x41a17d -71 
* * 174338 68542 46198 1043 988 363 3 2 1
+5 * 1490 1490
+1 * 1490 1490

fn=(2506) std::_Niter_base<Protein**>::iterator_type std::__niter_base<Protein**>(Protein**)
0x41a210 282 447 0 447
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 32 
* * 21468 8496 5376 0 149 1 0 1 1
* * 447 447
+5 * 447 0 447
+4 +1 447 447
+4 * 447
+3 * 447 0 447
cfi=(165)
cfn=(2508) std::_Iter_base<Protein**, false>::_S_base(Protein**)
calls=447 0x41a444 -68 
* * 25483 10282 6709 0 148 1 0 0 1
+5 * 447 447
+1 * 447 447

fn=(2712) Pump** std::__copy_move_a2<true, Pump**, Pump**>(Pump**, Pump**, Pump**)
0x41a080 436 1192 0 1192 149 0 0 1
+1 * 1192
+3 * 1192 0 1192
+2 * 1192 0 1192
+1 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +2 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2714)
calls=1192 0x41a2a4 282 
* * 138280 54834 36960 298 297 1 2 1 1
+5 * 1192
+3 * 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2714)
calls=1192 0x41a2a4 282 
* * 138276 54833 36956 0 0 1 0 0 1
+5 * 1192
+3 * 1192 1192
+4 * 1192 0 0 149 0 0 1
+3 * 1192 0 1192
cfn=(2714)
calls=1192 0x41a2a4 282 
* * 138276 54833 36956 0 148
+5 +2 1192
+3 * 1192
+3 * 1192
+3 * 1192 0 1192
cfn=(2718) Pump** std::__copy_move_a<true, Pump**, Pump**>(Pump**, Pump**, Pump**)
calls=1192 0x41a2c3 -49 
* * 209651 78376 54989 1491 772 1936 1 1 1788
+5 +1 1192
+4 * 1192 1192
+1 * 1192 1192
+2 * 1192 1192
+1 * 1192 1192

fn=(1558)
0x409a50 462 19082 0 19082 2 0 0 1
+1 * 19082
+3 * 19082 0 19082
+1 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 331 756 0 1 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +9 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1560)
calls=19082 0x409c15 293 
* * 3358444 1316661 896866 758 1968 138 10 3 2
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082 2 0 0 1
cfn=(1560)
calls=19082 0x409c15 293 
* * 3358436 1316659 896858 0 200 0 0 1
+5 * 19082
+3 +1 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082
+3 * 19082 0 19082
cfn=(1566)
calls=19082 0x409c34 -36 
* * 11125169 4286767 2995371 1375 9957 10361 28 43 9545
+5 +1 19082
+4 * 19082 19082
+1 * 19082 19082
+1 * 19082 19082

fn=(1762)
0x409b99 293 118526 0 118526 149 0 0 1
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689256 2251996 1422320 0 720 1337 0 0 2
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526 118526
+4 * 118526
+3 * 118526 0 118526
cfi=(165)
cfn=(1764) std::_Iter_base<std::move_iterator<BP_Move**>, true>::_S_base(std::move_iterator<BP_Move**>)
calls=118526 0x409d79 -71 
* * 13867550 5452198 3674314 470 2917 2 3 2
+5 * 118526 118526
+1 * 118526 118526

fn=(1852)
0x4099ae 462 66868 0 66868
+1 * 66868
+3 * 66868 0 66868
+1 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420 0 2362 2362 0 1 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +9 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1854) std::_Miter_base<std::move_iterator<BP_Pump**> >::iterator_type std::__miter_base<std::move_iterator<BP_Pump**> >(std::move_iterator<BP_Pump**>)
calls=66868 0x409b1d 293 
* * 11768780 4613895 3142808 298 2271 2 1 0 1
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1854)
calls=66868 0x409b1d 293 
* * 11768772 4613893 3142800
+5 * 66868
+3 +1 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868
+3 * 66868 0 66868
cfn=(1860)
calls=66868 0x409b3c -36 
* * 39195139 15087044 10524782 1370 4656 31832 2 0 29935
+5 +1 66868
+4 * 66868 66868
+1 * 66868 66868
+1 * 66868 66868

fn=(2704)
0x419b29 462 1192 0 1192
+1 * 1192
+3 * 1192 0 1192
+1 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 0 1 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192 149 0 0 1
+4 +9 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2706)
calls=1192 0x41a061 293 
* * 209804 82251 56036 298 555 149 2 2 1
+5 * 1192
+3 * 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2706)
calls=1192 0x41a061 293 
* * 209796 82249 56028
+5 * 1192
+3 +1 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192
+3 * 1192 0 1192
cfn=(2712)
calls=1192 0x41a080 -36 
* * 717463 275061 193281 2087 1217 1938 5 2 1790
+5 +1 1192
+4 * 1192 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(2794) Move** std::__copy_move_a2<true, Move**, Move**>(Move**, Move**, Move**)
0x41a0fc 436 1340 0 1340
+1 * 1340
+3 * 1340 0 1340 149 0 0 1
+2 * 1340 0 1340
+1 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +2 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2796)
calls=1340 0x41a318 282 
* * 155448 61642 41548 0 171 152 0 1 3
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2796)
calls=1340 0x41a318 282 
* * 155444 61641 41544
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340 149
cfn=(2796)
calls=1340 0x41a318 282 
* * 155444 61641 41544 0 150 1 0 0 1
+5 +2 1340
+3 * 1340
+3 * 1340
+3 * 1340 0 1340
cfn=(2800)
calls=1340 0x41a337 -49 
* * 259231 96728 70233 447 23 4046 2 0 4046
+5 +1 1340
+4 * 1340 1340
+1 * 1340 1340
+2 * 1340 1340
+1 * 1340 1340

fn=(1254) unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&)
0x409316 195 251196 0 251196 3 0 0 2
+1 * 251196
+3 * 251196
+4 * 251196 0 251196
cob=(3)
cfi=(100)
cfn=(626)
calls=251196 0x10a310 32 
* * 12057416 4772726 3014360 0 5 3 0 2 2
* * 251196 251196
+5 * 251196 0 251196
+4 * 251196 0 251196
+4 +5 251196 251196
+4 * 251196 251196
+3 * 251196 251196
+4 * 251196 251196
+3 * 251196
+3 * 251196
+8 +2 251196 251196 0 1 0 0 1
+4 +1 251196 251196
+1 * 251196 251196

fn=(1854)
0x409b1d 293 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419336 2540986 1604840 0 23
* * 133736 133736
+5 * 133736 0 133736
+4 +1 133736 133736
+4 * 133736
+3 * 133736 0 133736
cfi=(165)
cfn=(1856) std::_Iter_base<std::move_iterator<BP_Pump**>, true>::_S_base(std::move_iterator<BP_Pump**>)
calls=133736 0x409d05 -71 
* * 15647120 6151858 4145824 298 2248 2 1 0 1
+5 * 133736 133736
+1 * 133736 133736

fn=(2178)
0x419f65 436 745 0 745
+1 * 745
+3 * 745 0 745
+2 * 745 0 745
+1 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 447 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745 447 0 0 1
+4 +2 745 745
+4 * 745
+3 * 745 0 745
cfn=(2180)
calls=745 0x41a19c 282 
* * 86428 34272 23103 0 973 1 0 1 1
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2180)
calls=745 0x41a19c 282 
* * 86424 34271 23099 0 0 1 0 0 1
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2180)
calls=745 0x41a19c 282 
* * 86424 34271 23099 0 314
+5 +2 745
+3 * 745
+3 * 745
+3 * 745 0 745
cfn=(2184)
calls=745 0x41a1bb -49 
* * 114440 43510 29361 601 176 507 3 0 36
+5 +1 745
+4 * 745 745
+1 * 745 745
+2 * 745 745 0 447 0 0 1
+1 * 745 745

fn=(2504)
0x419fe1 436 149 0 149
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(2506)
calls=149 0x41a210 282 
* * 17292 6856 4627 0 297 1 0 1 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2506)
calls=149 0x41a210 282 
* * 17288 6855 4623
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2506)
calls=149 0x41a210 282 
* * 17288 6855 4623 0 0 1 0 0 1
+5 +2 149
+3 * 149
+3 * 149
+3 * 149 0 149
cfn=(2510)
calls=149 0x41a22f -49 
* * 20123 7750 5521 447 148 0 3
+5 +1 149
+4 * 149 149
+1 * 149 149
+2 * 149 149
+1 * 149 149

fn=(2512)
0x41a45b 373 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +9 149 149
+4 * 149 149
+4 * 149
+3 * 149 0 0 149 0 0 1
+3 * 149
+4 * 149 0 149
+4 +1 149 149
+5 * 149
+33 +2 149 149
+4 * 149
+8 * 149 149
+4 * 149 0 0 149 0 0 1
+3 +1 149 149
+1 * 149 149

fn=(2718)
0x41a2c3 391 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +8 1192 0 1192
+4 +3 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfn=(2720) Pump** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Pump*>(Pump* const*, Pump* const*, Pump**)
calls=1192 0x41a50f -29 
* * 132167 48575 32337 1491 772 1936 1 1 1788
+5 +1 1192 1192
+1 * 1192 1192

fn=(2720)
0x41a50f 373 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +9 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192
+4 * 1192 0 1192
+4 +1 1192 1192 0 149 0 0 1
+5 * 1192
+2 +1 1043 1043
+4 * 1043
+8 * 1043 1043
+4 * 1043 1043
+4 * 1043
+3 * 1043
+3 * 1043 0 1043
cob=(3)
cfi=(167)
cfn=(1588)
calls=1043 0x15e420 55 
* * 40379 12218 9834 1342 768 1787 0 0 1787
* * 1043 1043 0 0 4 0 0 1
+5 +1 1192 1192
+4 * 1192
+8 * 1192 1192
+4 * 1192
+3 +1 1192 1192
+1 * 1192 1192

fn=(2786)
0x419b7a 462 1340 0 1340
+1 * 1340
+3 * 1340 0 1340
+1 * 1340 0 0 149 0 0 1
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 298 1 0 1 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +9 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2788)
calls=1340 0x41a0dd 293 
* * 235852 92463 62992 298 467 2 2 2 1
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2788)
calls=1340 0x41a0dd 293 
* * 235840 92460 62980
+5 * 1340
+3 +1 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340
+3 * 1340 0 1340 149 0 0 1
cfn=(2794)
calls=1340 0x41a0fc -36 
* * 830091 317833 225693 745 344 4199 3 1 4050
+5 +1 1340
+4 * 1340 1340
+1 * 1340 1340
+1 * 1340 1340

fl=(149)
fn=(2050)
0x40506e 932 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149 0 149 0 0 1
+1 * 149 149

fn=(2066)
0x4051e6 1694 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfn=(2068) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
calls=149 -80 1160 
* * 72717 27863 19383 0 445 2 0 1 2
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2038) std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_Hashtable_ebo_helper()
calls=149 0x404fda 976 
* * 28014 10728 7451
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2070)
0x405212 545 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2082) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >, true>::_Hashtable_ebo_helper()
0x405282 976 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2084)
calls=149 0x405de4 113 
* * 17441 6707 4627 298 297 0 2 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2318) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>::_Hash_node()
0x40afc8 292 308 0 308 149 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14792 5854 3704
* * 308 308
+5 * 308 0 308
+4 * 308 308
+4 * 308
+3 * 308 0 308
cfn=(2320) std::__detail::_Hash_node_value_base<std::pair<float const, Protein*> >::_Hash_node_value_base()
calls=308 -72 -50 
* * 73936 28340 19728 150 318 2 1 1 2
+5 * 308
+1 * 308 308
+1 * 308 308

fn=(2450) std::__detail::_Node_iterator<std::pair<float const, Protein*>, false, false>::operator->() const
0x40b326 361 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298 298
+3 * 298
+3 * 298 0 298
cfn=(2332) std::__detail::_Hash_node_value_base<std::pair<float const, Protein*> >::_M_valptr()
calls=298 0x408cc2 249 
* * 52452 20563 14010 0 297 1 0 1 1
+5 * 298 298
+1 * 298 298

fn=(2530) std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true> const&)
0x418111 984 351 0 351 1
+1 * 351
+3 * 351
+4 * 351 0 351
cob=(3)
cfi=(100)
cfn=(626)
calls=351 0x10a310 32 
* * 16856 6671 4220 0 150 1 0 1 1
* * 351 351
+5 * 351 0 351
+4 +1 351 351
+4 * 351 351
+1 * 351 351

fn=(3070)
0x415e00 295 30 0 30 1 0 0 1
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1448 572 368 0 1 1 0 1 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30
+3 * 30 30
+1 * 30 30

fn=(3152) std::__detail::_Equal_helper<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::equal_to<float>, unsigned long, false>::_S_equals(std::equal_to<float> const&, std::__detail::_Select1st const&, float const&, unsigned long, std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
0x40bbe4 1331 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1924 761 484 0 1
* * 40 40
+5 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(2432)
calls=40 0x40abd8 257 
* * 9404 3681 2524 4 6 1 0 0 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfn=(2438)
calls=40 0x40b64c 100 
* * 9404 3681 2564 4 3
+5 * 40
+3 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(151) /usr/include/c++/5/bits/stl_function.h
cfn=(3154) std::equal_to<float>::operator()(float const&, float const&) const
calls=40 0x40bdce 356 
* * 2684 1041 684 1
+5 * 40 40
+1 * 40 40

fn=(3188) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true> const&)
0x4150bf 984 10 0 10 1 0 0 1
+1 * 10 0 0 1 0 0 1
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(3242)
0x418148 1701 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(3244) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
calls=10 0x419246 1199 
* * 1168 462 318 1 1 1 1 1 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfn=(3246) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const
calls=10 0x419226 +12 
* * 1168 462 318 1 10 1 1 1 1
+5 * 10
+3 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(3248) std::__detail::_Equal_helper<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::equal_to<int>, unsigned long, false>::_S_equals(std::equal_to<int> const&, std::__detail::_Select1st const&, int const&, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*)
calls=10 0x4191cf 1331 
* * 6316 2444 1736 12 13 1 0 0 1
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3256)
0x40a940 357 10 0 10 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 10
cfn=(2432)
calls=10 0x40abd8 257 
* * 2354 921 634 0 1 1 0 1 1
+5 * 10 10
+1 * 10 10

fn=(3266) std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false>::_M_incr()
0x40abaa 311 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 10
cfn=(3240)
calls=10 0x407baa -17 
* * 584 241 154 0 0 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10 0 10
+3 * 10
+1 * 10 10
+1 * 10 10

fn=(3278) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
0x407bc4 1968 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +3 10 10
+4 * 10
+3 * 10 0 10
cfi=(189) /usr/include/c++/5/bits/ptr_traits.h
cfn=(3280) std::pointer_traits<std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>&)
calls=10 0x408c3f 168 
* * 1762 693 482 10 20 1 1 2 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10 10 0 0 1
cfn=(2302) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_node_allocator()
calls=10 0x408c5e -55 
* * 1164 461 314 0 10 0 0 1
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2314)
calls=10 0x408c7e 119 
* * 1184 451 324 0 0 1 0 0 1
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2332)
calls=10 0x408cc2 249 
* * 1764 691 474
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3284) void std::allocator_traits<std::allocator<std::pair<float const, Protein*> > >::destroy<std::pair<float const, Protein*> >(std::allocator<std::pair<float const, Protein*> >&, std::pair<float const, Protein*>*)
calls=10 0x408ce5 541 
* * 1218 462 338 10 0 10 1 0 1
+5 +2 10 10
+4 * 10
+3 * 10 0 10 10 0 0 1
cfn=(2302)
calls=10 0x408c5e -58 
* * 1164 461 314
+5 * 10
+3 * 10 10
+4 * 10
+5 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3288) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >&, std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*, unsigned long)
calls=10 0x408d10 516 
* * 2308 742 518 88 19 1 0 0 1
+5 -3 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2362)
calls=10 0x408ca2 121 
* * 1174 451 314
+5 +4 10
+1 * 10 10
+4 * 10 10
+9 * 10
+35 * 10 0 0 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3294)
0x4043f4 1886 10 0 10 1
+1 * 10
+3 * 10
+4 * 10 0 10 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3296) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>::~_Hashtable_ebo_helper()
calls=10 -88 973 
* * 1778 682 478 0 2 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3298)
0x4108a0 365 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(3300) std::__detail::_Node_iterator_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>::_M_incr()
calls=10 0x412300 -56 
* * 1228 492 328 0 0 1 0 0 1
+5 +1 10 10
+4 +1 10 10
+1 * 10 10

fn=(3300)
0x412300 311 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 10
cfn=(3302) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>::_M_next() const
calls=10 0x415028 -17 
* * 584 241 154
+5 * 10
+3 * 10 10
+4 * 10 0 10
+3 * 10
+1 * 10 10
+1 * 10 10

fn=(3302)
0x415028 295 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10 10
+1 * 10 10

fn=(1380) std::__detail::_Select1st::_Select1st()
0x4041b0 96 1646 0 1646 150 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
cob=(3)
cfi=(100)
cfn=(626)
calls=1646 0x10a310 -64 
* * 79012 31275 19756 0 468 3 0 3 1
* * 1646 1646
+5 * 1646 0 1646
+4 * 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(1390) std::__detail::_Mod_range_hashing::_Mod_range_hashing()
0x404238 437 1646 0 1646 149 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
cob=(3)
cfi=(100)
cfn=(626)
calls=1646 0x10a310 32 
* * 79012 31275 19756 0 298 0 0 2
* * 1646 1646
+5 * 1646 0 1646
+4 * 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(2080)
0x4052a2 1907 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2082)
calls=149 -56 976 
* * 26385 10135 7015 298 297 1 2 1 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2248)
0x40ae70 353 616 0 616 159 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
cob=(3)
cfi=(100)
cfn=(626)
calls=616 0x10a310 32 
* * 29580 11707 7404 0 297 1 0 1 1
* * 616 616
+5 * 616 0 616 51 0 0 1
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616
+3 * 616
+3 * 616 0 616
cfn=(2250) std::__detail::_Node_iterator_base<std::pair<float const, Protein*>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*)
calls=616 0x40b348 -47 
* * 37580 14785 10476 149 150 0 1 1
+5 * 616
+1 * 616 616
+1 * 616 616

fn=(2432)
0x40abd8 257 388 0 388 1
+1 * 388
+3 * 388
+4 * 388 0 388
cob=(3)
cfi=(100)
cfn=(626)
calls=388 0x10a310 32 
* * 18640 7376 4672 0 150 3 0 1 3
* * 388 388
+5 * 388 0 388
+4 +1 388 388
+4 * 388
+3 * 388 0 388
cfn=(2332)
calls=388 0x408cc2 -9 
* * 68292 26773 18240 3 6
+5 * 388 388
+1 * 388 388

fn=(2524)
0x4118ca 585 159 0 159 149 0 0 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7636 3022 1912 0 317 0 0 1
* * 159 159
+5 * 159 0 159
+4 * 159 0 159
+4 * 159 159
+9 * 159 0 159
+4 * 159
+2 +5 159 159
+4 * 159 0 159
+4 +1 159 159
+4 * 159 159
+4 * 159 0 0 150 0 0 1
+3 * 159
+3 * 159 0 159
cfn=(2526) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const
calls=159 0x413dc0 1168 
* * 38653 15109 10510 607 301 159 4 2 1
+5 * 159 0 159
+4 +1 159 159
+4 * 159 159
+4 * 159 159
+4 * 159
+3 * 159
+3 * 159 0 159
cfi=(148)
cfn=(2534)
calls=159 0x413dfa +28 
* * 49469 19403 13694 459 581 2 3 1 2
+5 * 159 0 159
+4 +1 159 159
+4 * 159 159
+4 * 159 159
+4 * 159 159
+4 * 159
+3 * 159 0 159
cfi=(148)
cfn=(2540)
calls=159 0x413e32 +36 
* * 31675 12327 8825 633 35 153 8 3 4
+5 * 159 0 159 150 0 0 1
+4 +2 159 159
+5 * 159
+2 +2 149 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(182)
cfn=(2544)
calls=149 0x41189e 472 
* * 27875 10731 7611 149 297 1 1 1 1
+5 * 149
+4 * 149
+4 * 149 149
+4 * 149
+5 * 149
+3 * 149 0 149
cfn=(2550) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
calls=149 0x413f1e 1947 
* * 690352 261243 184795 7301 6514 1472 31 16 17
+5 * 149 0 149
+4 +3 149 149
+4 * 149 149 0 149 0 0 1
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(148)
cfn=(2612)
calls=149 0x414094 1586 
* * 425647 156325 109476 5513 3586 384 36 15 88
+5 * 149 0 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfn=(2652) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false, false>::operator->() const
calls=149 0x414216 361 
* * 35172 13859 9395 0 149 149 0 1 1
+5 * 149
+4 * 149
+2 +3 10 10 0 1
+4 * 10
+3 * 10 0 10
cfn=(2632)
calls=10 0x41232e 257 
* * 2354 921 634 0 1 1 0 0 1
+5 * 10
+4 +1 10 10
+4 * 10 10 0 1
+9 * 10
-13 * 149 149
+4 * 149 149 0 149 0 0 1
+9 * 149
+7 * 159 159
+1 * 159 159

fn=(2550)
0x413f1e 1947 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 149 0 149 0 0 1
+9 * 149 0 149
+4 * 149
+2 +2 149 149
+4 * 149
+3 * 149 0 149
cfn=(2552) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > >::_M_node_allocator()
calls=149 0x4165ca -32 
* * 17292 6856 4627 149 446 0 1 2
+5 * 149
+5 * 149
+3 * 149 0 149
cfi=(160)
cfn=(2556) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >&, unsigned long)
calls=149 0x4165e9 490 
* * 46053 14754 9846 745 416 149 5 2 1
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2562) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>&)
calls=149 0x416618 47 
* * 8497 3428 2239 0 148 1 0 0 1
+5 * 149 0 149
+4 +3 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfn=(2552)
calls=149 0x4165ca -36 
* * 17288 6855 4623 0 149 0 0 1
+5 * 149
+3 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2564)
calls=149 0x416630 119 
* * 17590 6707 4776 149 148 1 1 0 1
+5 +1 149 149
+4 * 149
+3 * 149
+5 * 149 0 149
cfi=(162)
cfn=(1542)
calls=149 0x4040c7 130 
* * 8646 3428 2388
+5 * 149
+3 * 149
+2 * 149
+3 * 149 0 149
cfn=(2568) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>::_Hash_node()
calls=149 0x413ee6 292 
* * 44720 17140 11940 149 297 150 1 1 2
+5 +2 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfi=(161)
cfn=(2326) std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
calls=149 0x40b016 76 
* * 8497 3428 2239 0 0 1 0 0 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2576) std::tuple<int const&>&& std::forward<std::tuple<int const&> >(std::remove_reference<std::tuple<int const&> >::type&)
calls=149 0x413f06 76 
* * 8497 3428 2239 0 148
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2330) std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
calls=149 0x40afe8 76 
* * 8497 3428 2239
+5 * 149
+3 -1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2578) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::_M_valptr()
calls=149 0x415042 249 
* * 26236 10284 7015 447 298 149 3 2 1
+5 * 149
+3 * 149
+4 * 149
+3 * 149
+3 * 149 0 0 149 0 0 1
+3 * 149
+3 * 149 0 149
cfi=(160)
cfn=(2584) _ZNSt16allocator_traitsISaISt4pairIKiSt13unordered_mapIfP7ProteinSt4hashIfESt8equal_toIfESaIS0_IKfS4_EEEEEE9constructISD_IRKSt21piecewise_construct_tSt5tupleIIRS1_EESK_IIEEEEEvRSE_PT_DpOT0_
calls=149 0x416674 529 
* * 442320 169286 120480 4768 4464 1020 14 8 9
+5 +2 149 149
+4 -4 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2608)
calls=149 0x416654 121 
* * 17441 6707 4627
+5 +4 149
+3 +7 149 149
+4 * 149 149
+9 * 149
+96 * 149 0 0 149 0 0 1
+4 * 149 149
+1 * 149 149
+2 * 149 149
+2 * 149 149
+1 * 149 149

fn=(2632)
0x41232e 257 179 0 179 150 0 0 1
+1 * 179
+3 * 179
+4 * 179 0 179
cob=(3)
cfi=(100)
cfn=(626)
calls=179 0x10a310 32 
* * 8608 3405 2164 0 151 3 0 1 3
* * 179 179
+5 * 179 0 179
+4 +1 179 179 0 150 0 0 1
+4 * 179
+3 * 179 0 179
cfn=(2578)
calls=179 0x415042 -9 
* * 31508 12352 8417 2 153 0 0 1
+5 * 179 179
+1 * 179 179

fn=(2836)
0x411e58 585 162 0 162 10
+1 * 162
+3 * 162
+4 * 162 0 162
cob=(3)
cfi=(100)
cfn=(626)
calls=162 0x10a310 32 
* * 7780 3079 1948 0 0 1 0 0 1
* * 162 162
+5 * 162 0 162
+4 * 162 0 162
+4 * 162 162
+9 * 162 0 162
+4 * 162
+2 +5 162 162
+4 * 162 0 162 10 0 0 1
+4 +1 162 162
+4 * 162 162
+4 * 162
+3 * 162
+3 * 162 0 162
cfn=(2838) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const
calls=162 0x414628 1168 
* * 42933 16685 11674 5 11 1 3 2 1
+5 * 162 0 162
+4 +1 162 162
+4 * 162 162
+4 * 162 162
+4 * 162
+3 * 162
+3 * 162 0 162
cfi=(148)
cfn=(2842)
calls=162 0x414662 +28 
* * 50402 19769 13952 11 11 2 2 2 2
+5 * 162 0 162
+4 +1 162 162
+4 * 162 162
+4 * 162 162 0 10 0 0 1
+4 * 162 162
+4 * 162
+3 * 162 0 162
cfi=(148)
cfn=(2848)
calls=162 0x41469a +36 
* * 161696 63216 44026 107 63 4 7 2 4
+5 * 162 0 162
+4 +2 162 162
+5 * 162
+2 +2 16 16
+4 * 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(182)
cfn=(2544)
calls=16 0x41189e 472 
* * 2996 1153 820 0 2
+5 * 16
+4 * 16
+4 * 16 16
+4 * 16
+5 * 16
+3 * 16 0 16 1 0 0 1
cfn=(2852) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
calls=16 0x41475a 1947 
* * 76109 28314 20402 49 32 45 38 18 40
+5 * 16 0 16
+4 +3 16 16
+4 * 16 16
+4 * 16 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(148)
cfn=(2922)
calls=16 0x4148d0 1586 
* * 54925 21083 14682 92 53 30 48 32 29
+5 * 16 0 16
+4 * 16
+4 * 16
+3 * 16 0 16
cfn=(2962) std::__detail::_Node_iterator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false, false>::operator->() const
calls=16 0x414a52 361 
* * 3784 1490 1016 0 1 1 0 1 1
+5 * 16
+4 * 16
+2 +3 146 146 0 9
+4 * 146
+3 * 146 0 146
cfn=(2942)
calls=146 0x414a74 257 
* * 34314 13433 9202 0 0 1 0 0 1
+5 * 146
+4 +1 146 146
+4 * 146 146
+9 * 146
-13 * 16 16 0 1 0 0 1
+4 * 16 16
+9 * 16
+7 * 162 162
+1 * 162 162

fn=(2852)
0x41475a 1947 16 0 16 1 0 0 1
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 16 0 2 0 0 1
+9 * 16 0 16
+4 * 16
+2 +2 16 16
+4 * 16
+3 * 16 0 16
cfn=(2854) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::_M_node_allocator()
calls=16 0x416c76 -32 
* * 1864 738 504 2 2 1 2 2 1
+5 * 16
+5 * 16
+3 * 16 0 16
cfi=(160)
cfn=(2858) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >&, unsigned long)
calls=16 0x416c95 490 
* * 6412 1683 1340 4 1 18 4 1 17
+5 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2864) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>* std::__addressof<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>&)
calls=16 0x416cc4 47 
* * 916 369 244 0 0 1 0 0 1
+5 * 16 0 16
+4 +3 16 16
+4 * 16
+3 * 16 0 16 1 0 0 1
cfn=(2854)
calls=16 0x416c76 -36 
* * 1860 737 500
+5 * 16
+3 * 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfi=(152)
cfn=(2866)
calls=16 0x416cdc 119 
* * 1896 722 520 1 0 1 1 0 1
+5 +1 16 16
+4 * 16
+3 * 16
+5 * 16 0 16
cfi=(162)
cfn=(1542)
calls=16 0x4040c7 130 
* * 932 369 260
+5 * 16
+3 * 16
+2 * 16
+3 * 16 0 16
cfn=(2870) std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>::_Hash_node()
calls=16 0x41473a 292 
* * 4820 1845 1300 2 1 5 1 1 5
+5 +2 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2326)
calls=16 0x40b016 76 
* * 1081 429 289 0 1 0 0 1
+5 * 16 0 0 1 0 0 1
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2576)
calls=16 0x413f06 76 
* * 1090 432 289 2 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2330)
calls=16 0x40afe8 76 
* * 916 369 244
+5 * 16
+3 -1 16 16
+4 * 16
+3 * 16 0 16
cfn=(2876) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_valptr()
calls=16 0x416d20 249 
* * 2828 1107 764 3 2 1 3 2 1
+5 * 16
+3 * 16
+4 * 16
+3 * 16
+3 * 16
+3 * 16
+3 * 16 0 16 1 0 0 1
cfi=(160)
cfn=(2882) _ZNSt16allocator_traitsISaISt4pairIKiSt13unordered_mapIffSt4hashIfESt8equal_toIfESaIS0_IKffEEEEEE9constructISB_IRKSt21piecewise_construct_tSt5tupleIIRS1_EESI_IIEEEEEvRSC_PT_DpOT0_
calls=16 0x416d43 529 
* * 47594 18199 13048 28 24 17 21 10 13
+5 +2 16 16
+4 -4 16
+4 * 16
+3 * 16 0 16
cfi=(152)
cfn=(2918)
calls=16 0x416d00 121 
* * 1880 722 504
+5 +4 16
+3 +7 16 16
+4 * 16 16
+9 * 16
+96 * 16 0 0 1 0 0 1
+4 * 16 16
+1 * 16 16
+2 * 16 16
+2 * 16 16
+1 * 16 16

fn=(2896)
0x40fa60 1694 26 0 26 1 0 0 1
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 10 1 0 1 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(2898) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
calls=26 -80 1160 
* * 12977 4965 3468 1 32 13 1 1 1
+5 * 26 26 0 1 0 0 1
+4 * 26
+3 * 26 0 26
cfn=(1392) std::__detail::_Hashtable_ebo_helper<0, std::equal_to<float>, true>::_Hashtable_ebo_helper()
calls=26 0x4042d8 976 
* * 4606 1769 1226 2 21 1 0 1 1
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(2908)
0x40fae8 1800 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316
* * 26 26
+5 * 26 0 26
+4 * 26
+1 * 26 26
+1 * 26 26

fn=(3008) std::__detail::_Hash_node_value_base<std::pair<float const, float> >::_M_valptr()
0x414f40 249 76 0 76 1 0 0 1
+1 * 76
+3 * 76
+4 * 76 0 76
cob=(3)
cfi=(100)
cfn=(626)
calls=76 0x10a310 32 
* * 3772 1487 955 0 11 1 0 1 1
* * 76 76
+5 * 76 0 76
+4 +1 76 76
+4 * 76
+4 * 76
+3 * 76 0 76
cfi=(183)
cfn=(3010)
calls=76 0x41761a 109 
* * 8824 3498 2364 4 2 1 2 2 1
+5 * 76 76
+1 * 76 76

fn=(3060)
0x417410 1183 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +1 12
+1 * 12 12
+1 * 12 12

fn=(3068) std::__detail::_Node_iterator<std::pair<float const, float>, false, false>::operator->() const
0x414ed8 361 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 9 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 +1 12 12
+4 * 12 12
+3 * 12
+3 * 12 0 12
cfn=(3008)
calls=12 +77 249 
* * 2116 829 568
+5 * 12 12
+1 * 12 12

fn=(3138) std::__detail::_Equal_helper<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::equal_to<int>, unsigned long, false>::_S_equals(std::equal_to<int> const&, std::__detail::_Select1st const&, int const&, unsigned long, std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*)
0x419451 1331 146 0 146
+1 * 146
+3 * 146
+4 * 146 0 146
cob=(3)
cfi=(100)
cfn=(626)
calls=146 0x10a310 32 
* * 7012 2775 1756
* * 146 146
+5 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(2942)
calls=146 0x414a74 257 
* * 34314 13433 9202 18 19 1 0 0 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfn=(2946)
calls=146 0x416ef0 100 
* * 37526 14601 10224 27
+5 * 146
+3 * 146 146
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146 0 146
cfi=(151)
cfn=(3140) std::equal_to<int>::operator()(int const&, int const&) const
calls=146 0x4198de 356 
* * 9348 3797 2486 1 11
+5 * 146 146
+1 * 146 146

fn=(3146) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
0x40bc5c 1199 50 0 50 1 0 0 1
+1 * 50
+3 * 50
+4 * 50 0 50
cob=(3)
cfi=(100)
cfn=(626)
calls=50 0x10a310 32 
* * 2507 988 635 0 9 1 0 0 1
* * 50 50
+5 * 50 0 50
+4 * 50 50
+4 * 50
+3 * 50 0 50
cfn=(3084) std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&)
calls=50 0x40be21 984 
* * 2854 1151 754 0 2 0 0 1
+5 * 50 50
+1 * 50 50

fn=(3150) std::__detail::_Hashtable_ebo_helper<0, std::equal_to<float>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<float>, true> const&)
0x40be0a 984 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1924 761 484 0 0 1 0 0 1
* * 40 40
+5 * 40 0 40
+4 +1 40 40
+4 * 40 40
+1 * 40 40

fn=(3160) std::__detail::_Hash_node<std::pair<float const, float>, false>::_M_next() const
0x414f26 295 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1928 762 488 0 0 1 0 0 1
* * 40 40
+5 * 40 0 40
+4 +1 40 40
+4 * 40 40
+3 * 40 40
+1 * 40 40

fn=(3202) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>::_Hashtable_ebo_helper<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >&&)
0x4150d6 979 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 1 0 1 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3200) std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >&& std::forward<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >(std::remove_reference<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::type&)
calls=10 0x4123bd 76 
* * 574 231 154
+5 * 10
+3 * 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3194)
calls=10 0x415094 115 
* * 1214 461 334 0 1 0 0 1
+5 +1 10
+1 * 10 10
+1 * 10 10

fn=(3214) std::__detail::_Hash_node_value_base<std::pair<float const, Protein*> >::_M_valptr() const
0x40c028 253 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 32 
* * 964 381 244 0 1 1 0 1 1
* * 20 20
+5 * 20 0 20
+4 +1 20 20
+4 * 20
+4 * 20
+3 * 20 0 20
cfi=(183)
cfn=(3216)
calls=20 +54 113 
* * 2328 922 628
+5 * 20 20
+1 * 20 20

fn=(1376) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
0x40426c 1160 1322 0 1322 150 0 0 1
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 63460 25119 15868 0 448 1 0 2 1
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322 0 299 0 0 2
+4 * 1322
+3 * 1322 0 1322
cfn=(1378) std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_Hashtable_ebo_helper()
calls=1322 0x4041c4 976 
* * 154682 59492 40990 300 449 1 2 3 1
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfn=(1382) std::__detail::_Hashtable_ebo_helper<1, std::hash<float>, true>::_Hashtable_ebo_helper()
calls=1322 0x404218 976 
* * 234006 89899 62146 150 448 150 1 2 1
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfn=(1388) std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper()
calls=1322 -80 976 
* * 154682 59492 40990
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(1378)
0x4041c4 976 1646 0 1646 299 0 0 2
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
cob=(3)
cfi=(100)
cfn=(626)
calls=1646 0x10a310 32 
* * 79024 31278 19768 0 596 1 0 3 1
* * 1646 1646
+5 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(1380)
calls=1646 -44 96 
* * 93826 36213 24694 150 468 3 1 3 1
+5 * 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(1388)
0x40424c 976 1646 0 1646 149 0 0 1
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
cob=(3)
cfi=(100)
cfn=(626)
calls=1646 0x10a310 32 
* * 79308 31381 19843 0 0 150 0 0 2
* * 1646 1646
+5 * 1646 0 1646
+4 * 1646 1646
+4 * 1646
+3 * 1646 0 1646
cfn=(1390)
calls=1646 -44 437 
* * 93826 36213 24694 149 298 0 1 2
+5 * 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(1398)
0x404324 545 1322 0 1322
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 78000 30406 19831
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(1402) std::__detail::_Insert_base<float, std::pair<float const, Protein*>, std::allocator<std::pair<float const, Protein*> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
0x404338 678 1332 0 1332 1
+1 * 1332
+3 * 1332
+4 * 1332 0 1332
cob=(3)
cfi=(100)
cfn=(626)
calls=1332 0x10a310 32 
* * 63940 25309 15988 0 2 309 0 0 2
* * 1332 1332
+5 * 1332 0 1332
+4 * 1332
+1 * 1332 1332
+1 * 1332 1332

fn=(1410) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>::_Hashtable_ebo_helper()
0x404394 976 1322 0 1322
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 63460 25119 15868 0 299 0 0 2
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfi=(152)
cfn=(1412)
calls=1322 0x4054b6 113 
* * 154682 59492 40990 897 597 1 6 3 1
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2072)
0x40523a 871 149 0 149
+1 * 149
+3 * 149 0 0 149 0 0 1
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2074) std::__detail::_Insert_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::allocator<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
calls=149 -44 678 
* * 8497 3279 2239
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2256)
0x40ae9c 1168 487 0 487 1
+1 * 487
+3 * 487 0 487
+1 * 487
+4 * 487 0 487
cob=(3)
cfi=(100)
cfn=(626)
calls=487 0x10a310 32 
* * 23384 9255 5852 0 299 150 0 2 1
* * 487 487
+5 * 487 0 487
+4 * 487 0 487
+4 +1 487 487
+4 * 487 487
+2 * 487 487
+4 * 487
+3 * 487 0 487 14 0 0 1
cfn=(2258) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
calls=487 0x40b36c +36 
* * 56500 22404 15105 301 154 150 2 1 1
+5 * 487 0 487
+3 * 487 487
+5 * 487
+3 * 487 0 487
cfi=(150)
cfn=(2262)
calls=487 0x40a744 167 
* * 121403 37769 24956 1348 460 6 13 12 1
+5 * 487
+4 * 487 487
+1 * 487 487
+1 * 487 487

fn=(2368)
0x40a7b2 487 475 0 475
+1 * 475
+3 * 475
+4 * 475 0 475
cob=(3)
cfi=(100)
cfn=(626)
calls=475 0x10a310 32 
* * 22816 9029 5716 0 300 0 0 4
* * 475 475
+5 * 475 0 475 59 0 0 1
+4 +1 475 475
+4 * 475 475
+4 * 475 475
+1 * 475 475

fn=(2438)
0x40b64c 100 338 0 338 150 0 0 1
+1 * 338
+3 * 338
+4 * 338 0 338
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 -68 
* * 16232 6424 4064
* * 338 338
+5 * 338 0 338
+4 * 338 0 338
+4 +2 338 338
+4 * 338
+3 * 338 0 338
cfi=(161)
cfn=(2440) std::pair<float const, Protein*>& std::forward<std::pair<float const, Protein*>&>(std::remove_reference<std::pair<float const, Protein*>&>::type&)
calls=338 0x40b5ff -26 
* * 19270 7775 5074 152 300 1 1 1 1
+5 * 338
+3 * 338 0 338
cfi=(186) /usr/include/c++/5/utility
cfn=(2442) std::tuple_element<0ul, std::pair<float const, Protein*> >::type& std::get<0ul, float const, Protein*>(std::pair<float const, Protein*>&)
calls=338 -67 +45 
* * 39216 15550 10486 0 0 1 0 0 1
+5 * 338 338
+1 * 338 338

fn=(2650) std::__detail::_Node_iterator_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false>*)
0x4176ec 307 169 0 169 150 0 0 1
+1 * 169
+3 * 169
+4 * 169 0 169
cob=(3)
cfi=(100)
cfn=(626)
calls=169 0x10a310 32 
* * 8116 3212 2032 0 2
* * 169 169
+5 * 169 0 169
+4 * 169 0 169
+4 +1 169 169
+4 * 169 169
+4 * 169 0 169
+3 * 169
+1 * 169 169
+1 * 169 169

fn=(2856) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >, true>&)
0x418810 988 39 0 39 1 0 0 1
+1 * 39
+3 * 39
+4 * 39 0 39
cob=(3)
cfi=(100)
cfn=(626)
calls=39 0x10a310 32 
* * 1876 742 472 0 1 0 0 1
* * 39 39
+5 * 39 0 39
+4 +1 39 39
+4 * 39 39
+1 * 39 39

fn=(2944)
0x416e84 1202 4 0 4
+1 * 4
+3 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 229 89 61 0 1 1 0 1 1
* * 4 4
+5 * 4 0 4
+4 * 4 4
+4 * 4
+3 * 4 0 4
cfn=(2436) std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&)
calls=4 0x40bbb6 988 
* * 232 93 64 0 1 0 0 1
+5 * 4 4
+1 * 4 4

fn=(2946)
0x416ef0 100 150 0 150 12 0 0 1
+1 * 150
+3 * 150
+4 * 150 0 150
cob=(3)
cfi=(100)
cfn=(626)
calls=150 0x10a310 -68 
* * 7250 2867 1817
* * 150 150
+5 * 150 0 150 12 0 0 1
+4 * 150 0 150
+4 +2 150 150
+4 * 150
+3 * 150 0 150
cfi=(161)
cfn=(2948) std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >& std::forward<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&>(std::remove_reference<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&>::type&)
calls=150 0x416ea3 -26 
* * 10193 4047 2701 9 1 1 0 1 1
+5 * 150
+3 * 150 0 150
cfi=(186)
cfn=(2950) std::tuple_element<0ul, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::type& std::get<0ul, int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&)
calls=150 -67 +45 
* * 19056 7501 5105
+5 * 150 150
+1 * 150 150

fn=(2958)
0x41702a 353 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 +1 16 16 0 1 0 0 1
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16 0 16
cfn=(2960) std::__detail::_Node_iterator_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false>*)
calls=16 0x418b48 -47 
* * 980 385 276 0 1 0 0 1
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(3094)
0x415f22 2004 3 0 3
+1 * 3
+3 * 3 0 3
+1 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 148 58 40 0 1 1 0 1 1
* * 3 3
+5 * 3 0 3
+4 * 3 0 3
+4 * 3 0 3
+4 * 3 3 0 1 0 0 1
+9 * 3 0 3
+4 * 3
+2 +4 3 3
+4 * 3
+3 * 3 0 3
cfi=(189)
cfn=(3096) std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
calls=3 0x408d43 168 
* * 537 210 153 2 3 1 0 3 1
+5 * 3 0 3
+4 +1 3 3
+4 * 3
+3 * 3 0 3
cfn=(2854)
calls=3 0x416c76 -92 
* * 352 139 97
+5 * 3
+3 * 3
+4 * 3
+3 * 3
+3 * 3 0 3
cfi=(152)
cfn=(2932)
calls=3 0x417e56 119 
* * 358 136 100
+5 +1 3 3
+4 * 3 3 0 1 0 0 1
+4 * 3
+4 * 3
+3 * 3
+3 * 3 0 3
cfi=(160)
cfn=(3100) std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)
calls=3 0x408da6 516 
* * 720 232 167 17 3 1 0 1 1
+5 -1 3
+4 * 3
+3 * 3 0 3
cfi=(152)
cfn=(2420)
calls=3 0x408d86 121 
* * 386 147 103 0 0 1 0 0 1
+5 +2 3
+1 * 3 3
+4 * 3 3
+9 * 3
+35 * 3 0 0 1 0 0 1
+4 * 3 3
+1 * 3 3
+1 * 3 3

fn=(3136) std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true> const&)
0x41990a 984 156 0 156 1 0 0 1
+1 * 156
+3 * 156
+4 * 156 0 156
cob=(3)
cfi=(100)
cfn=(626)
calls=156 0x10a310 32 
* * 7496 2966 1880
* * 156 156
+5 * 156 0 156
+4 +1 156 156
+4 * 156 156
+1 * 156 156

fn=(3142)
0x41079c 357 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1448 572 368 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30
+3 * 30
+3 * 30 0 30
cfn=(3048)
calls=30 0x412174 257 
* * 7054 2761 1894 1 0 1 0 0 1
+5 * 30 30
+1 * 30 30

fn=(3158) std::__detail::_Node_iterator_base<std::pair<float const, float>, false>::_M_incr()
0x412146 311 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1444 571 364
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30
+3 * 30
+3 * 30 0 30
cfn=(3160)
calls=30 0x414f26 -17 
* * 1744 721 454 0 0 1 0 0 1
+5 * 30
+3 * 30 30
+4 * 30 0 30
+3 * 30
+1 * 30 30
+1 * 30 30

fn=(3178)
0x4108c4 357 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+3 * 10
+3 * 10 0 10
cfn=(2632)
calls=10 0x41232e 257 
* * 2354 921 634 4 5 0 0 1
+5 * 10 10
+1 * 10 10

fn=(3228)
0x41514a 1187 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 9 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10
+1 * 10 10
+1 * 10 10

fn=(3246)
0x419226 1715 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 1 0 1 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3136)
calls=10 0x41990a 984 
* * 574 231 154
+5 * 10 10
+1 * 10 10

fn=(3262)
0x410a92 317 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +3 10 10
+4 * 10 10
+3 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10 10
+1 * 10 10

fn=(3276)
0x406c62 1980 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+5 * 10
-5 * 10 10
+5 * 10
+2 +2 10 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3240)
calls=10 0x407baa 295 
* * 584 241 154 0 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3278)
calls=10 0x407bc4 -18 
* * 12732 4723 3352 138 49 14 4 3 5
+5 -4 10
+2 +6 10
+1 * 10 10
+1 * 10 10

fn=(1382)
0x404218 976 1348 0 1348 150 0 0 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 32 
* * 64987 25714 16259 0 298 1 0 1 1
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(150)
cfn=(1384)
calls=1348 -56 164 
* * 157724 60662 41796 0 161 160 0 1 1
+5 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(1392)
0x4042d8 976 1348 0 1348 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 32 
* * 64712 25614 16184 0 299 2 0 2 2
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfi=(151)
cfn=(1394) std::equal_to<float>::equal_to()
calls=1348 -56 352 
* * 157724 60662 41796 1 20 1 0 0 1
+5 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(1404)
0x40436c 932 1322 0 1322
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 63460 25119 15868
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2030) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
0x404f6e 1160 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(1378)
calls=149 0x4041c4 976 
* * 17437 6706 4623 149 447 0 1 3
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2032) std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_Hashtable_ebo_helper()
calls=149 -68 976 
* * 26385 10135 7015 149 297 1 1 1 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(1388)
calls=149 0x40424c 976 
* * 17437 6706 4623 298 298 149 2 2 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2304) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >, true>&)
0x409369 988 954 0 954 150 0 0 1
+1 * 954
+3 * 954
+4 * 954 0 954
cob=(3)
cfi=(100)
cfn=(626)
calls=954 0x10a310 32 
* * 45796 18127 11452 0 151 150 0 1 1
* * 954 954
+5 * 954 0 954
+4 +1 954 954
+4 * 954 954
+1 * 954 954

fn=(2434)
0x40b5e0 1202 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfn=(2436)
calls=298 0x40bbb6 988 
* * 16990 6855 4474
+5 * 298 298
+1 * 298 298

fn=(2436)
0x40bbb6 988 463 0 463 10
+1 * 463
+3 * 463
+4 * 463 0 463
cob=(3)
cfi=(100)
cfn=(626)
calls=463 0x10a310 32 
* * 22240 8801 5572 0 309 0 0 3
* * 463 463
+5 * 463 0 463
+4 +1 463 463
+4 * 463 463
+1 * 463 463

fn=(2552)
0x4165ca 1917 447 0 447
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 32 
* * 21468 8496 5376 0 595 0 0 3
* * 447 447
+5 * 447 0 447
+4 +1 447 447
+4 * 447
+3 * 447 0 447
cfn=(2554) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >, true>&)
calls=447 0x4181da 988 
* * 25483 10282 6709 149 149 0 1 1
+5 * 447 447
+1 * 447 447

fn=(2636)
0x416820 100 159 0 159 149 0 0 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 -68 
* * 7640 3023 1916
* * 159 159
+5 * 159 0 159
+4 * 159 0 159
+4 +2 159 159
+4 * 159
+3 * 159 0 159 150 0 0 1
cfi=(161)
cfn=(2638) std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >& std::forward<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&>(std::remove_reference<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&>::type&)
calls=159 0x4167d3 -26 
* * 10805 4290 2863 10 309 1 0 1 1
+5 * 159
+3 * 159 0 159
cfi=(186)
cfn=(2640) std::tuple_element<0ul, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::type& std::get<0ul, int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >(std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&)
calls=159 -67 +45 
* * 20199 7951 5411
+5 * 159 159
+1 * 159 159

fn=(2644)
0x41684c 1183 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +1 149
+1 * 149 149
+1 * 149 149

fn=(2854)
0x416c76 1917 39 0 39
+1 * 39
+3 * 39
+4 * 39 0 39 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=39 0x10a310 32 
* * 1888 745 484 0 1 1 0 1 1
* * 39 39
+5 * 39 0 39
+4 +1 39 39
+4 * 39
+3 * 39 0 39
cfn=(2856)
calls=39 0x418810 988 
* * 2227 898 589 1 1 0 1 1
+5 * 39 39
+1 * 39 39

fn=(2870)
0x41473a 292 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(2872) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_Hash_node_value_base()
calls=16 -72 -50 
* * 3856 1476 1040 1 1 4 0 1 4
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(2966)
0x411f5e 585 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 11 1 0 1 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+9 * 12 0 12
+4 * 12 0 0 2 0 0 1
+2 +5 12 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfn=(2968)
calls=12 0x414a94 1168 
* * 5200 1804 1240 5 6 1 1 1 1
+5 * 12 0 12
+4 +1 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(148)
cfn=(2972)
calls=12 0x414ad4 +28 
* * 3752 1469 1052 3 3 2 3 3 2
+5 * 12 0 12
+4 +1 12 12
+4 * 12 12 0 2 0 0 1
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(148)
cfn=(2978)
calls=12 0x414b0c +36 
* * 1676 650 476 3 0 1 3 0 1
+5 * 12 0 12
+4 +2 12 12
+5 * 12
+2 +2 12 12
+4 * 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(182)
cfn=(2294)
calls=12 0x40ad00 472 
* * 2248 865 616 13 14
+5 * 12
+4 * 12
+4 * 12 12
+4 * 12 0 0 1 0 0 1
+5 * 12
+3 * 12 0 12
cfn=(2982) std::__detail::_Hash_node<std::pair<float const, float>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&)
calls=12 0x414be0 1947 
* * 36970 13874 9942 160 136 38 23 13 16
+5 * 12 0 12
+4 +3 12 12
+4 * 12 12
+4 * 12 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(148)
cfn=(3028)
calls=12 0x414d56 1586 
* * 33556 12558 8765 192 128 11 35 14 11
+5 * 12 0 12
+4 * 12
+4 * 12
+3 * 12 0 12
cfn=(3068)
calls=12 0x414ed8 361 
* * 2840 1118 764 0 9 1 0 0 1
+5 * 12
+4 * 12
+18 +4 12 12 0 2 0 0 1
+4 * 12 12
+9 * 12
+7 * 12 12
+1 * 12 12

fn=(3134) std::__detail::_Hashtable_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const
0x4194a8 1715 146 0 146 1 0 0 1
+1 * 146
+3 * 146
+4 * 146 0 146
cob=(3)
cfi=(100)
cfn=(626)
calls=146 0x10a310 32 
* * 7012 2775 1756 0 0 1 0 0 1
* * 146 146
+5 * 146 0 146
+4 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(3136)
calls=146 0x41990a 984 
* * 8326 3359 2194 1 0 0 1
+5 * 146 146
+1 * 146 146

fn=(3148) std::__detail::_Hashtable_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const
0x40bc3c 1715 40 0 40 11 0 0 1
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1924 761 484
* * 40 40
+5 * 40 0 40
+4 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(3150)
calls=40 0x40be0a 984 
* * 2284 921 604 0 0 1 0 0 1
+5 * 40 40
+1 * 40 40

fn=(3232)
0x40bc7c 1176 10 0 10
+1 * 10
+3 * 10 0 10 10 0 0 1
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfn=(3212)
calls=10 0x40be38 261 
* * 2354 921 634 0 10 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3146)
calls=10 -80 +19 
* * 1263 497 341 0 10
+5 * 10
+3 * 10
+3 * 10 0 10
cfn=(3234) decltype ((get<0>)((forward<std::pair<float const, Protein*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<float const, Protein*> const&>(std::pair<float const, Protein*> const&) const
calls=10 0x40bea4 100 
* * 2681 1038 737 20 0 2 1 0 2
+5 * 10 10
+2 * 10 10 0 10 0 0 1
+4 * 10
+3 * 10 0 10
cfn=(2258)
calls=10 0x40b36c +25 
* * 1164 461 314
+5 * 10 0 10
+3 * 10 10
+5 * 10
+3 * 10 0 10
cfi=(150)
cfn=(2262)
calls=10 0x40a744 167 
* * 2474 771 514 2 1 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(2278) std::__detail::_Hash_code_base<float, std::pair<float const, Protein*>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
calls=10 0x40b79c +31 
* * 1164 461 314 0 9
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfn=(2282) std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
calls=10 0x40a786 444 
* * 624 241 174
+5 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3328)
0x41763a 2004 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +4 10 10
+4 * 10
+3 * 10 0 10
cfi=(189)
cfn=(3096)
calls=10 0x408d43 168 
* * 1754 691 474
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2984) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_node_allocator()
calls=10 0x41718e -92 
* * 1164 461 314 0 0 1 0 0 1
+5 * 10 0 0 1 0 0 1
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3038)
calls=10 0x418f3c 119 
* * 1184 451 324 0 1 0 0 1
+5 +1 10 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3100)
calls=10 0x408da6 516 
* * 2304 741 514
+5 -1 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2420)
calls=10 0x408d86 121 
* * 1174 451 314 0 0 1 0 0 1
+5 +2 10
+1 * 10 10
+4 * 10 10
+9 * 10
+35 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(1374)
0x4042f8 1694 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322 299 0 0 2
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 77991 30403 19831 0 597 0 0 3
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfn=(1376)
calls=1322 0x40426c 1160 
* * 630626 241934 167926 899 1345 152 6 7 3
+5 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfn=(1392)
calls=1322 -68 976 
* * 234006 89899 62146 0 298 2 0 1 2
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(1408)
0x4043d4 1907 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 32 
* * 78000 30406 19831 0 0 1 0 0 1
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322 1322
+4 * 1322
+3 * 1322 0 1322
cfn=(1410)
calls=1322 -88 976 
* * 234006 89899 62146 897 896 1 6 5 1
+5 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(1416)
0x4040fe 231 2141 0 2141
+1 * 2141 0 0 151 0 0 2
+3 * 2141
+4 * 2141 0 2141
cob=(3)
cfi=(100)
cfn=(626)
calls=2141 0x10a310 32 
* * 102804 40688 25728 0 307 152 0 1 4
* * 2141 2141
+5 * 2141 0 2141
+4 * 2141 2141
+4 * 2141 0 2141 0 0 44 0 0 44
+7 * 2141
+1 * 2141 2141
+1 * 2141 2141

fn=(2028)
0x404ffa 1694 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 0 149 0 0 1
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8784 3424 2236 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2030)
calls=149 0x404f6e 1160 
* * 71097 27273 18947 894 1339 151 6 7 3
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2038)
calls=149 -68 976 
* * 26385 10135 7015 0 0 1 0 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2046)
0x40504e 871 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2048) std::__detail::_Insert_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::allocator<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
calls=149 -44 678 
* * 8497 3279 2239 0 148
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2056) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >, true>::_Hashtable_ebo_helper()
0x405096 976 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2058)
calls=149 0x405dc4 113 
* * 17441 6707 4627 0 148 1 0 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2258)
0x40b36c 1205 497 0 497 1
+1 * 497
+3 * 497
+4 * 497 0 497
cob=(3)
cfi=(100)
cfn=(626)
calls=497 0x10a310 32 
* * 23864 9445 5972 0 4 150 0 0 1
* * 497 497
+5 * 497 0 497
+4 * 497 497 0 150 0 0 1
+4 * 497
+3 * 497 0 497
cfn=(2260) std::__detail::_Hashtable_ebo_helper<1, std::hash<float>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<float>, true> const&)
calls=497 0x40b785 984 
* * 28333 11432 7459 150 150 0 1 1
+5 * 497 497
+1 * 497 497

fn=(2260)
0x40b785 984 519 0 519 150 0 0 1
+1 * 519
+3 * 519
+4 * 519 0 519
cob=(3)
cfi=(100)
cfn=(626)
calls=519 0x10a310 32 
* * 24920 9863 6236 0 151 0 0 1
* * 519 519
+5 * 519 0 519
+4 +1 519 519
+4 * 519 519
+1 * 519 519

fn=(2320)
0x40af98 242 308 0 308 150 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 160 0 0 1
* * 308 308
+5 * 308 0 308
+4 * 308 308
+4 * 308
+3 * 308 0 308
cfn=(1416)
calls=308 0x4040fe -11 
* * 18176 7085 4932 0 158 1 0 0 1
+5 * 308 308
+4 * 308
+4 * 308
+3 * 308 0 308
cfi=(183)
cfn=(2322)
calls=308 -72 91 
* * 36044 13862 9556 0 0 1 0 0 1
+5 * 308
+1 * 308 308
+1 * 308 308

fn=(2570) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > > >::_Hash_node_value_base()
0x413eb6 242 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(1416)
calls=149 0x4040fe -11 
* * 8795 3428 2388 0 149 0 0 1
+5 * 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cfi=(183)
cfn=(2572)
calls=149 -72 91 
* * 17441 6707 4627 0 148 1 0 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2840) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
0x416b3e 1205 192 0 192
+1 * 192 0 0 1 0 0 1
+3 * 192
+4 * 192 0 192
cob=(3)
cfi=(100)
cfn=(626)
calls=192 0x10a310 32 
* * 10995 4294 2795 0 10 0 0 1
* * 192 192
+5 * 192 0 192
+4 * 192 192
+4 * 192
+3 * 192 0 192
cfn=(2530)
calls=192 0x418111 984 
* * 10948 4417 2884 1 0 1 0 0 1
+5 * 192 192
+1 * 192 192

fn=(2844)
0x416b5e 1172 166 0 166
+1 * 166
+3 * 166
+4 * 166 0 166
cob=(3)
cfi=(100)
cfn=(626)
calls=166 0x10a310 32 
* * 7972 3155 1996 0 1 1 0 1 1
* * 166 166
+5 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 * 166 0 166
+4 +1 166 166
+4 * 166 0 0 10 0 0 1
+3 * 166 0 166
cfn=(2846) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
calls=166 0x41875e +38 
* * 19264 7638 5154 0 10 1 0 1 1
+5 * 166
+3 * 166 166
+4 * 166 166
+4 * 166
+3 * 166
+3 * 166 0 166
cfn=(2282)
calls=166 0x40a786 444 
* * 10296 3985 2826
+5 * 166 166
+1 * 166 166

fn=(2902)
0x40fab4 871 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1527 595 391
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(2904) std::__detail::_Insert_base<float, std::pair<float const, float>, std::allocator<std::pair<float const, float> >, std::__detail::_Select1st, std::equal_to<float>, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
calls=26 -44 678 
* * 1486 573 394 0 0 1 0 0 1
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(2904)
0x40faa0 678 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26
+1 * 26 26
+1 * 26 26

fn=(2912) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >, true>::_Hashtable_ebo_helper()
0x40fafc 976 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfi=(152)
cfn=(2914)
calls=26 0x4107be 113 
* * 3050 1172 814 4 1 1 3 1 1
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(3000) std::__detail::_Hash_node<std::pair<float const, float>, false>::_Hash_node()
0x414bc0 292 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 10 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(3002) std::__detail::_Hash_node_value_base<std::pair<float const, float> >::_Hash_node_value_base()
calls=12 -72 -50 
* * 2896 1108 784 11 10 1 1 1 1
+5 * 12
+1 * 12 12
+1 * 12 12

fn=(3002)
0x414b90 242 12 0 12 11 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(1416)
calls=12 0x4040fe -11 
* * 712 277 196 0 0 1 0 0 1
+5 * 12 12
+4 * 12
+4 * 12
+3 * 12 0 12
cfi=(183)
cfn=(3004)
calls=12 -72 91 
* * 1412 542 380 0 9
+5 * 12
+1 * 12 12
+1 * 12 12

fn=(3048)
0x412174 257 42 0 42 1 0 0 1
+1 * 42
+3 * 42
+4 * 42 0 42
cob=(3)
cfi=(100)
cfn=(626)
calls=42 0x10a310 32 
* * 2024 800 512 0 0 1 0 0 1
* * 42 42
+5 * 42 0 42
+4 +1 42 42
+4 * 42
+3 * 42 0 42
cfn=(3008)
calls=42 0x414f40 -9 
* * 7396 2899 1978 1 11 0 0 1
+5 * 42 42
+1 * 42 42

fn=(3076) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_valptr() const
0x41a15a 253 30 0 30 1
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1444 571 364 0 1 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30
+4 * 30
+3 * 30 0 30
cfi=(183)
cfn=(3078)
calls=30 0x41a36e 113 
* * 3488 1382 938 1 2 0 0 1
+5 * 30 30
+1 * 30 30

fn=(3082) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
0x4194c8 1199 176 0 176 9
+1 * 176
+3 * 176
+4 * 176 0 176
cob=(3)
cfi=(100)
cfn=(626)
calls=176 0x10a310 32 
* * 8456 3346 2120 0 2 1 0 1 1
* * 176 176
+5 * 176 0 176
+4 * 176 176
+4 * 176
+3 * 176 0 176
cfn=(3084)
calls=176 0x40be21 984 
* * 10036 4049 2644 1 1 0 1 1
+5 * 176 176
+1 * 176 176

fn=(3176)
0x410875 324 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 32 
* * 964 381 244 0 0 1 0 0 1
* * 20 20
+5 * 20 0 20
+4 * 20 0 20
+4 +3 20 20
+4 * 20 20
+3 * 20 20
+4 * 20 20
+3 * 20
+3 * 20
+3 * 20 20
+1 * 20 20

fn=(3248)
0x4191cf 1331 10 0 10 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(2632)
calls=10 0x41232e 257 
* * 2354 921 634 0 1 1 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(2636)
calls=10 0x416820 100 
* * 2574 1001 704 11 12
+5 * 10
+3 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(151)
cfn=(3140)
calls=10 0x4198de 356 
* * 644 261 174
+5 * 10 10
+1 * 10 10

fn=(3254)
0x40a8f1 324 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 32 
* * 964 381 244 0 10 0 0 1
* * 20 20
+5 * 20 0 20 1 0 0 1
+4 * 20 0 20
+4 +3 20 20
+4 * 20 20
+3 * 20 20
+4 * 20 20
+3 * 20
+3 * 20
+3 * 20 20
+1 * 20 20

fn=(3314) std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<float const, float>, false>*)
0x41751e 1968 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10 1 0 0 1
+4 * 10
+2 +3 10 10
+4 * 10
+3 * 10 0 10
cfi=(189)
cfn=(3316) std::pointer_traits<std::__detail::_Hash_node<std::pair<float const, float>, false>*>::pointer_to(std::__detail::_Hash_node<std::pair<float const, float>, false>&)
calls=10 0x418eda 168 
* * 1762 693 482 0 1 1 0 1 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2984)
calls=10 0x41718e -55 
* * 1164 461 314
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2996)
calls=10 0x4171f4 119 
* * 1283 487 351 0 9 1 0 0 1
+5 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3008)
calls=10 0x414f40 249 
* * 1872 730 501
+5 * 10
+3 * 10 0 0 1 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3320) void std::allocator_traits<std::allocator<std::pair<float const, float> > >::destroy<std::pair<float const, float> >(std::allocator<std::pair<float const, float> >&, std::pair<float const, float>*)
calls=10 0x418ef9 541 
* * 1218 462 338 10 1 10 1 1 1
+5 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(2984)
calls=10 0x41718e -58 
* * 1164 461 314
+5 * 10
+3 * 10 10
+4 * 10
+5 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3324) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >&, std::__detail::_Hash_node<std::pair<float const, float>, false>*, unsigned long)
calls=10 0x4172a9 516 
* * 2407 778 545 0 9 1 0 0 1
+5 -3 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3024)
calls=10 0x417218 121 
* * 1282 490 341
+5 +4 10
+1 * 10 10
+4 * 10 10
+9 * 10
+35 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(1418)
0x40411e 460 1646 0 1646
+1 * 1646
+3 * 1646
+4 * 1646 0 1646
cob=(3)
cfi=(100)
cfn=(626)
calls=1646 0x10a310 32 
* * 79024 31278 19768 0 148 309 0 0 3
* * 1646 1646
+5 * 1646 0 1646
+4 * 1646 0 1646
+5 +1 1646 1646
+4 * 1646 1646
+5 * 1646 0 1646 151 0 39 1 0 39
+4 * 1646 1646
+4 * 1646 0 1646 0 0 325 0 0 325
+8 * 1646
+1 * 1646 1646
+1 * 1646 1646

fn=(2054)
0x4050b6 1907 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8793 3427 2236
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2056)
calls=149 -56 976 
* * 26385 10135 7015 0 148 1 0 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2250)
0x40b348 307 616 0 616 149 0 0 1
+1 * 616
+3 * 616
+4 * 616 0 616
cob=(3)
cfi=(100)
cfn=(626)
calls=616 0x10a310 32 
* * 29572 11705 7396 0 150 0 0 1
* * 616 616
+5 * 616 0 616
+4 * 616 0 616
+4 +1 616 616
+4 * 616 616
+4 * 616 0 616
+3 * 616
+1 * 616 616
+1 * 616 616

fn=(2300) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&)
0x40b02e 1947 298 0 298 149 0 0 1
+1 * 298
+3 * 298 0 298
+2 * 298 0 298
+2 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 148
* * 298 298
+5 * 298 0 298 149 0 0 1
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 298
+9 * 298 0 298
+4 * 298
+2 +2 298 298
+4 * 298
+3 * 298 0 298
cfn=(2302)
calls=298 0x408c5e -32 
* * 34576 13710 9246 298 298 149 2 2 1
+5 * 298
+5 * 298
+3 * 298 0 298
cfi=(160)
cfn=(2306) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >&, unsigned long)
calls=298 0x40b4a4 490 
* * 119212 31293 24746 746 451 156 5 5 147
+5 * 298 0 298
+4 +1 298 298
+4 * 298 0 0 149 0 0 1
+3 * 298 0 298
cfi=(161)
cfn=(2312) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>&)
calls=298 0x4097d9 47 
* * 16990 6855 4474 0 149 0 0 1
+5 * 298 0 298
+4 +3 298 298
+4 * 298
+3 * 298 0 298
cfn=(2302)
calls=298 0x408c5e -36 
* * 34572 13709 9242 0 0 1 0 0 1
+5 * 298
+3 * 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfi=(152)
cfn=(2314)
calls=298 0x408c7e 119 
* * 35172 13412 9544 298 297 0 2 1
+5 +1 298 298
+4 * 298
+3 * 298
+5 * 298 0 298
cfi=(162)
cfn=(1542)
calls=298 0x4040c7 130 
* * 17288 6855 4772 0 0 149 0 0 1
+5 * 298
+3 * 298
+2 * 298 0 0 149 0 0 1
+3 * 298 0 298
cfn=(2318)
calls=298 0x40afc8 292 
* * 89420 34275 23860 298 297 2 2 1 2
+5 +2 298 298
+4 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2326)
calls=298 0x40b016 76 
* * 16990 6855 4474 0 149
+5 * 298
+3 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2328) std::tuple<float const&>&& std::forward<std::tuple<float const&> >(std::remove_reference<std::tuple<float const&> >::type&)
calls=298 0x40afff 76 
* * 16990 6855 4474
+5 * 298
+3 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2330)
calls=298 0x40afe8 76 
* * 16990 6855 4474 0 0 149 0 0 1
+5 * 298
+3 -1 298 298
+4 * 298
+3 * 298 0 298 298 0 0 1
cfn=(2332)
calls=298 0x408cc2 249 
* * 52460 20565 14018 297 446 1 2 2 1
+5 * 298
+3 * 298
+4 * 298
+3 * 298
+3 * 298
+3 * 298
+3 * 298 0 298
cfi=(160)
cfn=(2338) _ZNSt16allocator_traitsISaISt4pairIKfP7ProteinEEE9constructIS4_IRKSt21piecewise_construct_tSt5tupleIIRS1_EESB_IIEEEEEvRS5_PT_DpOT0_
calls=298 0x40b4d3 529 
* * 421145 161830 115702 1689 1961 604 12 7 8
+5 +2 298 298
+4 -4 298
+4 * 298
+3 * 298 0 298
cfi=(152)
cfn=(2362)
calls=298 0x408ca2 121 
* * 34874 13412 9246
+5 +4 298
+3 +7 298 298
+4 * 298 298
+9 * 298
+96 * 298 0 0 149 0 0 1
+4 * 298 298
+1 * 298 298
+2 * 298 298
+2 * 298 298
+1 * 298 298

fn=(2302)
0x408c5e 1917 954 0 954 150 0 0 1
+1 * 954
+3 * 954
+4 * 954 0 954
cob=(3)
cfi=(100)
cfn=(626)
calls=954 0x10a310 32 
* * 45824 18134 11480 0 309 2 0 3 2
* * 954 954
+5 * 954 0 954
+4 +1 954 954
+4 * 954
+3 * 954 0 954
cfn=(2304)
calls=954 0x409369 988 
* * 54382 21943 14314 150 151 150 1 1 1
+5 * 954 954
+1 * 954 954

fn=(2526)
0x413dc0 1168 159 0 159 159 0 0 1
+1 * 159
+3 * 159 0 159
+1 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7636 3022 1912 0 150 0 0 1
* * 159 159
+5 * 159 0 159
+4 * 159 0 159
+4 +1 159 159
+4 * 159 159
+2 * 159 159
+4 * 159
+3 * 159 0 159
cfn=(2528) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
calls=159 0x416492 +36 
* * 18452 7316 4937 150 151 159 1 1 1
+5 * 159
+2 * 159
+3 * 159 0 159
cfi=(150)
cfn=(2532)
calls=159 0x40f5e8 104 
* * 9385 3658 2548 298 0 0 2
+5 * 159
+4 * 159 159
+1 * 159 159
+1 * 159 159

fn=(2648)
0x414ffc 353 169 0 169 149 0 0 1
+1 * 169
+3 * 169 0 0 150 0 0 1
+4 * 169 0 169
cob=(3)
cfi=(100)
cfn=(626)
calls=169 0x10a310 32 
* * 8124 3214 2040 0 148
* * 169 169
+5 * 169 0 169
+4 * 169 0 169
+4 +1 169 169
+4 * 169 169
+4 * 169
+3 * 169
+3 * 169 0 169
cfn=(2650)
calls=169 0x4176ec -47 
* * 10313 4057 2877 150 2 0 1
+5 * 169
+1 * 169 169
+1 * 169 169

fn=(2652)
0x414216 361 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149 149
+3 * 149
+3 * 149 0 149
cfn=(2578)
calls=149 0x415042 249 
* * 26228 10282 7007 0 149 0 0 1
+5 * 149 149
+1 * 149 149

fn=(2838)
0x414628 1168 162 0 162 1 0 0 1
+1 * 162
+3 * 162 0 162
+1 * 162
+4 * 162 0 162
cob=(3)
cfi=(100)
cfn=(626)
calls=162 0x10a310 32 
* * 7780 3079 1948 0 1 0 0 1
* * 162 162
+5 * 162 0 162
+4 * 162 0 162
+4 +1 162 162 0 1 0 0 1
+4 * 162 162
+2 * 162 162
+4 * 162
+3 * 162 0 162
cfn=(2840)
calls=162 0x416b3e +36 
* * 20571 8098 5513 2 10 1 1 1 1
+5 * 162
+2 * 162
+3 * 162 0 162
cfi=(150)
cfn=(2532)
calls=162 0x40f5e8 104 
* * 11342 4374 3079 1
+5 * 162
+4 * 162 162
+1 * 162 162
+1 * 162 162

fn=(2906)
0x40fad4 932 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1536 598 391
* * 26 26
+5 * 26 0 26
+4 * 26
+1 * 26 26
+1 * 26 26

fn=(2968)
0x414a94 1168 22 0 22
+1 * 22
+3 * 22 0 22
+1 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1064 420 272 0 12 0 0 2
* * 22 22
+5 * 22 0 22
+4 * 22 0 22
+4 +1 22 22
+4 * 22 22
+2 * 22 22
+4 * 22
+3 * 22 0 22
cfn=(2970) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
calls=22 0x417056 +36 
* * 2560 1014 690 0 2 1 0 0 1
+5 * 22 0 22
+3 * 22 22 0 1 0 0 1
+5 * 22
+3 * 22 0 22
cfi=(150)
cfn=(2262)
calls=22 0x40a744 167 
* * 5438 1695 1126 4 4
+5 * 22
+4 * 22 22
+1 * 22 22
+1 * 22 22

fn=(2986) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >, true>&)
0x418bcc 988 66 0 66 11 0 0 1
+1 * 66
+3 * 66
+4 * 66 0 66
cob=(3)
cfi=(100)
cfn=(626)
calls=66 0x10a310 32 
* * 3172 1255 796 0 2 0 0 1
* * 66 66
+5 * 66 0 66
+4 +1 66 66
+4 * 66 66
+1 * 66 66

fn=(3052)
0x4173e4 100 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -68 
* * 580 229 148
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 +2 12 12
+4 * 12
+3 * 12 0 12 1 0 0 1
cfi=(161)
cfn=(3054) std::pair<float const, float>& std::forward<std::pair<float const, float>&>(std::remove_reference<std::pair<float const, float>&>::type&)
calls=12 0x417397 -26 
* * 809 321 217 0 21 1 0 1 1
+5 * 12
+3 * 12 0 12
cfi=(186)
cfn=(3056) std::tuple_element<0ul, std::pair<float const, float> >::type& std::get<0ul, float const, float>(std::pair<float const, float>&)
calls=12 -67 +45 
* * 1530 601 413 0 0 1 0 0 1
+5 * 12 12
+1 * 12 12

fn=(3084)
0x40be21 984 236 0 236 1 0 0 1
+1 * 236
+3 * 236
+4 * 236 0 236
cob=(3)
cfi=(100)
cfn=(626)
calls=236 0x10a310 32 
* * 11340 4487 2844 0 4 0 0 3
* * 236 236
+5 * 236 0 236
+4 +1 236 236
+4 * 236 236
+1 * 236 236

fn=(3220)
0x41240a 1947 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(2302)
calls=10 0x408c5e -32 
* * 1164 461 314
+5 * 10
+5 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfi=(160)
cfn=(2306)
calls=10 0x40b4a4 490 
* * 3185 997 681 22 2 1 0 0 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(2312)
calls=10 0x4097d9 47 
* * 574 231 154 0 9
+5 * 10 0 10
+4 +3 10 10
+4 * 10
+3 * 10 0 10
cfn=(2302)
calls=10 0x408c5e -36 
* * 1164 461 314
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2314)
calls=10 0x408c7e 119 
* * 1184 451 324 1 1 10 0 0 1
+5 +1 10 10
+4 * 10 0 0 1 0 0 1
+3 * 10
+5 * 10 0 10
cfi=(162)
cfn=(1542)
calls=10 0x4040c7 130 
* * 584 231 164 0 1 0 0 1
+5 * 10
+3 * 10
+2 * 10
+3 * 10 0 10
cfn=(2318)
calls=10 0x40afc8 292 
* * 3004 1151 804 1 21
+5 +2 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3222) std::pair<float const, Protein*> const& std::forward<std::pair<float const, Protein*> const&>(std::remove_reference<std::pair<float const, Protein*> const&>::type&)
calls=10 0x40be57 76 
* * 574 231 154 0 0 1 0 0 1
+5 * 10
+3 -1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2332)
calls=10 0x408cc2 249 
* * 1764 691 474
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 0 10 0 0 1
+3 * 10 0 10
cfi=(160)
cfn=(3224) _ZNSt16allocator_traitsISaISt4pairIKfP7ProteinEEE9constructIS4_IRKS4_EEEvRS5_PT_DpOT0_
calls=10 0x41510c 529 
* * 3190 1215 890 2 11 11 0 0 2
+5 +2 10 10
+4 -4 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2362)
calls=10 0x408ca2 121 
* * 1174 451 314 0 1
+5 +4 10
+3 +7 10 10
+4 * 10 10
+9 * 10
+96 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3240)
0x407baa 295 30 0 30 1
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1452 573 372 0 10 2 0 0 2
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30 0 1 0 0 1
+3 * 30 30
+1 * 30 30

fn=(3264)
0x40a91c 365 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10
cfn=(3266)
calls=10 0x40abaa -56 
* * 1228 492 328 0 0 1 0 0 1
+5 +1 10 10
+4 +1 10 10
+1 * 10 10

fn=(3292)
0x407ccc 2004 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+9 * 10 0 10
+4 * 10
+2 +4 10 10
+4 * 10
+3 * 10 0 10 10 0 0 1
cfi=(189)
cfn=(3096)
calls=10 0x408d43 168 
* * 1754 691 474 0 10 10 0 1
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2302)
calls=10 0x408c5e -92 
* * 1164 461 314 0 0 1 0 0 1
+5 * 10
+3 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(2402)
calls=10 0x408d62 119 
* * 1184 451 324
+5 +1 10 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(160)
cfn=(3100)
calls=10 0x408da6 516 
* * 2304 741 514 9
+5 -1 10
+4 * 10 0 0 10
+3 * 10 0 10
cfi=(152)
cfn=(2420)
calls=10 0x408d86 121 
* * 1174 451 314 0 0 1 0 0 1
+5 +2 10
+1 * 10 10
+4 * 10 10
+9 * 10
+35 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(3332) std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >, true>::~_Hashtable_ebo_helper()
0x40fb1c 973 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3334)
calls=10 0x4107de 121 
* * 1178 452 318
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(2032)
0x404f4e 976 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14312 5664 3584 0 0 1 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(150)
cfn=(2034)
calls=298 -56 104 
* * 34874 13412 9246 149 297 0 1 1
+5 * 298
+1 * 298 298
+1 * 298 298

fn=(2044)
0x405026 545 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8793 3427 2236
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2048)
0x40503a 678 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2076)
0x40525a 932 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8784 3424 2236 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2292)
0x40ad2c 585 338 0 338 149 0 0 1
+1 * 338
+3 * 338
+4 * 338 0 338
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 32 
* * 16228 6423 4060 0 4
* * 338 338
+5 * 338 0 338
+4 * 338 0 338 160 0 0 1
+4 * 338 338
+9 * 338 0 338
+4 * 338
+2 +5 338 338
+4 * 338 0 338
+4 +1 338 338
+4 * 338 338
+4 * 338
+3 * 338
+3 * 338 0 338
cfn=(2256)
calls=338 0x40ae9c 1168 
* * 146020 50701 34480 19 155 151 0 1 1
+5 * 338 0 338
+4 +1 338 338
+4 * 338 338
+4 * 338 338
+4 * 338
+3 * 338 0 0 160 0 0 1
+3 * 338 0 338
cfi=(148)
cfn=(2274)
calls=338 0x40aedc +28 
* * 105122 41237 29072 12 156 1 0 1
+5 * 338 0 338
+4 +1 338 338
+4 * 338 338
+4 * 338 338
+4 * 338 338
+4 * 338
+3 * 338 0 338
cfi=(148)
cfn=(2284)
calls=338 0x40af14 +36 
* * 84382 32862 23302 27 37 3 5 2 3
+5 * 338 0 338
+4 +2 338 338
+5 * 338
+2 +2 298 298
+4 * 298
+4 * 298
+3 * 298
+3 * 298 0 298
cfi=(182)
cfn=(2294)
calls=298 0x40ad00 472 
* * 55738 21459 15210 149 148 2 1 0 2
+5 * 298 0 0 149 0 0 1
+4 * 298
+4 * 298 298
+4 * 298
+5 * 298
+3 * 298 0 298
cfn=(2300)
calls=298 0x40b02e 1947 
* * 944231 347508 249302 4669 4196 1211 31 19 162
+5 * 298 0 298
+4 +3 298 298
+4 * 298 298
+4 * 298 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(148)
cfn=(2366)
calls=298 0x40b1a4 1586 
* * 850194 311750 217640 8255 4098 911 59 69 166
+5 * 298 0 298
+4 * 298
+4 * 298
+3 * 298 0 298 149 0 0 1
cfn=(2450)
calls=298 0x40b326 361 
* * 70336 27716 18782 0 446 1 0 2 1
+5 * 298
+4 * 298
+2 +3 40 40 0 1
+4 * 40
+3 * 40 0 40
cfn=(2432)
calls=40 0x40abd8 257 
* * 9404 3681 2524 0 1 1 0 0 1
+5 * 40
+4 +1 40 40
+4 * 40 40
+9 * 40
-13 * 298 298
+4 * 298 298
+9 * 298
+7 * 338 338
+1 * 338 338

fn=(2332)
0x408cc2 249 1004 0 1004 149 0 0 1
+1 * 1004
+3 * 1004
+4 * 1004 0 1004
cob=(3)
cfi=(100)
cfn=(626)
calls=1004 0x10a310 32 
* * 48212 19081 12068 0 448 1 0 2 1
* * 1004 1004
+5 * 1004 0 1004
+4 +1 1004 1004
+4 * 1004
+4 * 1004
+3 * 1004 0 1004
cfi=(183)
cfn=(2334)
calls=1004 0x4093a8 109 
* * 116472 46186 31132 151 301 1 1 1 1
+5 * 1004 1004
+1 * 1004 1004

fn=(2400)
0x40bf56 1992 308 0 308 1
+1 * 308
+3 * 308 0 308
+1 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 151 150 0 1 1
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 * 308 308
+9 * 308 0 308
+4 * 308
+2 +2 308 308
+4 * 308 0 0 150 0 0 1
+3 * 308 0 308
cfn=(2302)
calls=308 0x408c5e -77 
* * 35732 14169 9552 2 152 1 0 1
+5 * 308
+3 * 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfi=(152)
cfn=(2402)
calls=308 0x408d62 119 
* * 36352 13862 9864 447 297 1 3 1 1
+5 +2 308 308
+4 * 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfi=(160)
cfn=(2406) std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)
calls=308 0x40c04b 490 
* * 121469 32289 25423 632 448 304 6 2 156
+5 * 308 0 308
+4 +1 308 308
+4 * 308
+3 * 308 0 308
cfi=(161)
cfn=(2412) std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
calls=308 0x409807 47 
* * 17560 7085 4624
+5 * 308 0 308
+4 +1 308 308 0 150 0 0 1
+4 * 308
+8 * 308 308
+4 * 308
+5 * 308
+3 * 308 0 308
cob=(3)
cfi=(76)
cfn=(298)
calls=307 0x8f240 53 
* * 4605 307 614 444
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1264 369 135 6 31 3 4 10
* * 312 310 2 149 0 0 1
+5 +1 308 308
+4 -5 308
+4 * 308
+3 * 308 0 308
cfi=(152)
cfn=(2420)
calls=308 0x408d86 121 
* * 36044 13862 9556 0 0 149 0 0 1
+5 +5 308
+3 +1 308 308
+4 * 308 308
+9 * 308
+35 * 308 0 0 150 0 0 1
+4 * 308 308
+1 * 308 308
+1 * 308 308

fn=(2536)
0x4164b2 1172 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 159 0 0 1
* * 308 308
+5 * 308 0 308 159 0 0 1
+4 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308
+3 * 308 0 308
cfn=(2538) std::__detail::_Hash_code_base<int, std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, std::__detail::_Select1st, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
calls=308 0x418128 +38 
* * 35736 14170 9556 150 159 1 1 0 1
+5 * 308
+3 * 308 308
+4 * 308 308
+4 * 308
+3 * 308
+3 * 308 0 308
cfn=(2282)
calls=308 0x40a786 444 
* * 19100 7393 5240
+5 * 308 308
+1 * 308 308

fn=(2554)
0x4181da 988 447 0 447 149 0 0 1
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 32 
* * 21460 8494 5368 0 149 0 0 1
* * 447 447
+5 * 447 0 447
+4 +1 447 447
+4 * 447 447
+1 * 447 447

fn=(2846)
0x41875e 1211 196 0 196
+1 * 196
+3 * 196
+4 * 196 0 196
cob=(3)
cfi=(100)
cfn=(626)
calls=196 0x10a310 32 
* * 9744 3845 2447 0 1 1 0 1 1
* * 196 196
+5 * 196 0 196
+4 * 196 196
+4 * 196
+3 * 196 0 196
cfn=(2280) std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
calls=196 0x40bbcd 984 
* * 11176 4509 2944 0 9 1 0 0 1
+5 * 196 196
+1 * 196 196

fn=(2910)
0x40fb3c 1907 26 0 26 1 0 0 1
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(2912)
calls=26 -88 976 
* * 4614 1771 1234 4 2 1 3 2 1
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(3036)
0x419de0 1992 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 2 1 0 1 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 12
+9 * 12 0 12 2 0 0 1
+4 * 12
+2 +2 12 12
+4 * 12
+3 * 12 0 12
cfn=(2984)
calls=12 0x41718e -77 
* * 1396 553 376 0 11 0 0 1
+5 * 12
+3 * 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(152)
cfn=(3038)
calls=12 0x418f3c 119 
* * 1424 542 392 1 2 1 0 1 1
+5 +2 12 12
+4 * 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(160)
cfn=(2406)
calls=12 0x40c04b 490 
* * 3949 1207 847 0 0 1 0 0 1
+5 * 12 0 12
+4 +1 12 12
+4 * 12 0 0 11 0 0 1
+3 * 12 0 12
cfi=(161)
cfn=(2412)
calls=12 0x409807 47 
* * 688 277 184 0 0 1 0 0 1
+5 * 12 0 12
+4 +1 12 12
+4 * 12
+8 * 12 12
+4 * 12
+5 * 12
+3 * 12 0 12
cob=(3)
cfi=(76)
cfn=(298)
calls=12 0x8f240 53 
* * 180 12 24
* * 12 12
+5 +1 12 12
+4 -5 12
+4 * 12
+3 * 12 0 12
cfi=(152)
cfn=(2420)
calls=12 0x408d86 121 
* * 1408 541 376
+5 +5 12
+3 +1 12 12
+4 * 12 12 0 11 0 0 1
+9 * 12
+35 * 12
+4 * 12 12
+1 * 12 12
+1 * 12 12

fn=(3050)
0x417378 1202 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 1 1 0 1 1
* * 12 12
+5 * 12 0 12
+4 * 12 12
+4 * 12
+3 * 12 0 12
cfn=(2436)
calls=12 0x40bbb6 988 
* * 688 277 184 10 11 0 0 1
+5 * 12 12
+1 * 12 12

fn=(3072)
0x4194e8 1176 30 0 30 1 0 0 1
+1 * 30
+3 * 30 0 30
+1 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1448 572 368 0 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 * 30 0 30
+4 * 30 0 30 1 0 0 1
+4 +4 30 30
+4 * 30
+3 * 30 0 30
cfn=(3074) std::__detail::_Hash_node_value_base<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::_M_v() const
calls=30 0x419bcc 261 
* * 7066 2764 1906 2 4 1 0 2 1
+5 * 30
+3 * 30 30
+4 * 30
+3 * 30 0 30
cfn=(3082)
calls=30 -80 +19 
* * 3488 1382 938 1 1 1 1 1 1
+5 * 30
+3 * 30
+3 * 30 0 30
cfn=(3086) decltype ((get<0>)((forward<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&>(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&) const
calls=30 0x419c38 100 
* * 7066 2764 1936 1 1 2 1 1 2
+5 * 30 30
+2 * 30 30
+4 * 30
+3 * 30 0 30
cfn=(2840)
calls=30 0x416b3e +25 
* * 3484 1381 934
+5 * 30
+2 * 30
+3 * 30 0 30
cfi=(150)
cfn=(2532)
calls=30 0x40f5e8 104 
* * 2093 807 571
+5 * 30
+3 * 30 30
+4 * 30
+3 * 30 0 30
cfn=(2846)
calls=30 0x41875e +31 
* * 3812 1500 1021 0 0 1 0 0 1
+5 * 30
+3 * 30 30
+4 * 30
+3 * 30
+3 * 30
+3 * 30 0 30
cfn=(2282)
calls=30 0x40a786 444 
* * 1864 721 514
+5 * 30
+4 * 30 30
+1 * 30 30
+1 * 30 30

fn=(3212)
0x40be38 261 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20 10 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 32 
* * 968 382 248 0 10 0 0 1
* * 20 20
+5 * 20 0 20
+4 +1 20 20
+4 * 20
+3 * 20 0 20
cfn=(3214)
calls=20 0x40c028 -9 
* * 3532 1383 952 0 1 1 0 1 1
+5 * 20 20
+1 * 20 20

fn=(3234)
0x40bea4 100 10 0 10 10 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -68 
* * 592 230 151 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+4 * 10
+3 * 10 0 10 10
cfi=(161)
cfn=(3222)
calls=10 0x40be57 -26 
* * 673 267 181
+5 * 10
+3 * 10 0 10
cfi=(186)
cfn=(3236) std::tuple_element<0ul, std::pair<float const, Protein*> >::type const& std::get<0ul, float const, Protein*>(std::pair<float const, Protein*> const&)
calls=10 -67 +55 
* * 1276 501 345 0 0 1 0 0 1
+5 * 10 10
+1 * 10 10

fn=(3312)
0x414f64 1980 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +2 10 10
+5 * 10
-5 * 10 10
+5 * 10
+2 +2 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3160)
calls=10 0x414f26 295 
* * 584 241 154
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfn=(3314)
calls=10 0x41751e -18 
* * 13146 4873 3460 12 20 14 3 2 5
+5 -4 10
+2 +6 10
+1 * 10 10
+1 * 10 10

fn=(1400)
0x40434c 871 1332 0 1332 300 0 0 2
+1 * 1332
+3 * 1332
+4 * 1332 0 1332
cob=(3)
cfi=(100)
cfn=(626)
calls=1332 0x10a310 32 
* * 63944 25310 15992 0 1 1 0 1 1
* * 1332 1332
+5 * 1332 0 1332
+4 * 1332 1332
+4 * 1332
+3 * 1332 0 1332
cfn=(1402)
calls=1332 -44 678 
* * 75928 29305 19984 1 2 309 0 0 2
+5 * 1332
+1 * 1332 1332
+1 * 1332 1332

fn=(2038)
0x404fda 976 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 15949 6259 4028
* * 298 298
+5 * 298 0 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(151)
cfn=(2040) std::equal_to<int>::equal_to()
calls=298 -56 352 
* * 34874 13412 9246 0 0 1 0 0 1
+5 * 298
+1 * 298 298
+1 * 298 298

fn=(2052)
0x405082 1800 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8784 3424 2236 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2276)
0x40b38c 1172 785 0 785
+1 * 785
+3 * 785
+4 * 785 0 785
cob=(3)
cfi=(100)
cfn=(626)
calls=785 0x10a310 32 
* * 37684 14916 9424 0 300 0 0 1
* * 785 785
+5 * 785 0 785
+4 * 785 0 785
+4 * 785 0 785
+4 * 785 0 785
+4 +1 785 785
+4 * 785
+3 * 785 0 785
cfn=(2278)
calls=785 0x40b79c +38 
* * 91068 36112 24343 149 150 150 1 1 1
+5 * 785
+3 * 785 785
+4 * 785 785
+4 * 785 0 0 150 0 0 1
+3 * 785
+3 * 785 0 785
cfn=(2282)
calls=785 0x40a786 444 
* * 48674 18841 13349
+5 * 785 785
+1 * 785 785

fn=(2446)
0x40b678 1183 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 +1 298
+1 * 298 298
+1 * 298 298

fn=(2876)
0x416d20 249 328 0 328 10 0 0 1
+1 * 328
+3 * 328
+4 * 328 0 328
cob=(3)
cfi=(100)
cfn=(626)
calls=328 0x10a310 32 
* * 15756 6235 3948 0 2 1 0 2 1
* * 328 328
+5 * 328 0 328
+4 +1 328 328
+4 * 328
+4 * 328
+3 * 328 0 328 10 0 0 1
cfi=(183)
cfn=(2878)
calls=328 0x4188a2 109 
* * 38056 15090 10176 1 11 0 1 2
+5 * 328 328
+1 * 328 328

fn=(2962)
0x414a52 361 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 +1 16 16
+4 * 16 16
+3 * 16
+3 * 16 0 16
cfn=(2876)
calls=16 0x416d20 249 
* * 2820 1105 756 0 1 0 0 1
+5 * 16 16
+1 * 16 16

fn=(2970)
0x417056 1205 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 32 
* * 1060 419 268 0 1 1 0 0 1
* * 22 22
+5 * 22 0 22
+4 * 22 22
+4 * 22
+3 * 22 0 22
cfn=(2260)
calls=22 0x40b785 984 
* * 1258 507 334 0 1
+5 * 22 22
+1 * 22 22

fn=(2974)
0x417076 1172 34 0 34
+1 * 34
+3 * 34
+4 * 34 0 34 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=34 0x10a310 32 
* * 1636 647 412 0 2 0 0 1
* * 34 34
+5 * 34 0 34
+4 * 34 0 34
+4 * 34 0 34
+4 * 34 0 34
+4 +1 34 34
+4 * 34
+3 * 34 0 34
cfn=(2976) std::__detail::_Hash_code_base<float, std::pair<float const, float>, std::__detail::_Select1st, std::hash<float>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
calls=34 0x4177a0 +38 
* * 3952 1566 1062 1 2 1 1 2 1
+5 * 34
+3 * 34 34
+4 * 34 34
+4 * 34
+3 * 34
+3 * 34 0 34
cfn=(2282)
calls=34 0x40a786 444 
* * 2112 817 582
+5 * 34 34
+1 * 34 34

fn=(2982)
0x414be0 1947 12 0 12 11 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 2 11 0 1 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12 10 0 0 1
+4 * 12 12
+9 * 12 0 12
+4 * 12
+2 +2 12 12
+4 * 12
+3 * 12 0 12
cfn=(2984)
calls=12 0x41718e -32 
* * 1400 554 380 11 3 0 1 2
+5 * 12
+5 * 12
+3 * 12 0 12
cfi=(160)
cfn=(2988) std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> > >::allocate(std::allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >&, unsigned long)
calls=12 0x4171ad 490 
* * 3866 1203 838 3 12 3 3 1 3
+5 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(161)
cfn=(2994) std::__detail::_Hash_node<std::pair<float const, float>, false>* std::__addressof<std::__detail::_Hash_node<std::pair<float const, float>, false> >(std::__detail::_Hash_node<std::pair<float const, float>, false>&)
calls=12 0x4171dc 47 
* * 688 277 184
+5 * 12 0 12
+4 +3 12 12 0 11 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(2984)
calls=12 0x41718e -36 
* * 1396 553 376
+5 * 12
+3 * 12
+4 * 12
+3 * 12
+3 * 12 0 12
cfi=(152)
cfn=(2996)
calls=12 0x4171f4 119 
* * 1424 542 392 1 1 2 1 1 1
+5 +1 12 12
+4 * 12
+3 * 12
+5 * 12 0 12
cfi=(162)
cfn=(1542)
calls=12 0x4040c7 130 
* * 700 277 196
+5 * 12
+3 * 12
+2 * 12
+3 * 12 0 12
cfn=(3000)
calls=12 0x414bc0 292 
* * 3620 1385 980 11 20 2 1 1 2
+5 +2 12 12
+4 * 12 0 0 11 0 0 1
+3 * 12 0 12
cfi=(161)
cfn=(2326)
calls=12 0x40b016 76 
* * 688 277 184 0 10 1 0 1 1
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(161)
cfn=(2328)
calls=12 0x40afff 76 
* * 688 277 184
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(161)
cfn=(2330)
calls=12 0x40afe8 76 
* * 688 277 184
+5 * 12
+3 -1 12 12
+4 * 12
+3 * 12 0 12
cfn=(3008)
calls=12 0x414f40 249 
* * 2124 831 576 4 2 2 3 2 2
+5 * 12
+3 * 12
+4 * 12
+3 * 12
+3 * 12 0 0 11 0 0 1
+3 * 12
+3 * 12 0 12
cfi=(160)
cfn=(3014) _ZNSt16allocator_traitsISaISt4pairIKffEEE9constructIS2_IRKSt21piecewise_construct_tSt5tupleIIRS1_EES9_IIEEEEEvRS3_PT_DpOT0_
calls=12 0x417238 529 
* * 16760 6434 4640 65 86 16 8 4 5
+5 +2 12 12
+4 -4 12
+4 * 12
+3 * 12 0 12
cfi=(152)
cfn=(3024)
calls=12 0x417218 121 
* * 1412 542 380 0 0 1 0 0 1
+5 +4 12
+3 +7 12 12
+4 * 12 12
+9 * 12
+96 * 12 0 0 11 0 0 1
+4 * 12 12
+1 * 12 12
+2 * 12 12
+2 * 12 12
+1 * 12 12

fn=(2984)
0x41718e 1917 66 0 66
+1 * 66
+3 * 66
+4 * 66 0 66
cob=(3)
cfi=(100)
cfn=(626)
calls=66 0x10a310 32 
* * 3192 1260 816 0 12 1 0 2 1
* * 66 66
+5 * 66 0 66
+4 +1 66 66
+4 * 66
+3 * 66 0 66
cfn=(2986)
calls=66 0x418bcc 988 
* * 3766 1519 994 11 2 0 1 1
+5 * 66 66
+1 * 66 66

fn=(3132)
0x41877e 1701 146 0 146
+1 * 146 0 0 10 0 0 1
+3 * 146 0 146
+1 * 146
+4 * 146 0 146
cob=(3)
cfi=(100)
cfn=(626)
calls=146 0x10a310 32 
* * 7012 2775 1756 0 2 1 0 1 1
* * 146 146
+5 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 * 146 0 146
+4 +2 146 146
+4 * 146
+3 * 146 0 146
cfn=(3082)
calls=146 0x4194c8 1199 
* * 16940 6717 4530 9 2 0 0 1
+5 * 146
+3 * 146 146
+4 * 146
+3 * 146 0 146
cfn=(3134)
calls=146 0x4194a8 +12 
* * 16944 6718 4534 2 0 1 2 0 1
+5 * 146
+3 +1 146 146
+4 * 146 146 0 9
+4 * 146 146
+4 * 146
+3 * 146
+3 * 146
+3 * 146
+3 * 146 0 146
cfn=(3138)
calls=146 0x419451 1331 
* * 91996 35628 25128 46 30 1 0 0 1
+5 +1 146
+4 * 146 146
+1 * 146 146
+1 * 146 146

fn=(3156)
0x410778 365 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1448 572 368
* * 30 30
+5 * 30 0 30
+4 +2 30 30
+4 * 30
+3 * 30 0 30
cfn=(3158)
calls=30 0x412146 -56 
* * 3668 1472 968 0 0 1 0 0 1
+5 +1 30 30
+4 +1 30 30
+1 * 30 30

fn=(3186)
0x41239e 1921 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3188)
calls=10 0x4150bf 984 
* * 574 231 154 2 1 0 2 1
+5 * 10 10
+1 * 10 10

fn=(3296)
0x4043b4 973 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3204)
calls=10 0x4054d6 121 
* * 1174 451 314 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3330)
0x40fb5c 1886 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3332)
calls=10 -88 973 
* * 1782 683 482 0 0 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1406)
0x404380 1800 1332 0 1332 300 0 0 2
+1 * 1332
+3 * 1332
+4 * 1332 0 1332
cob=(3)
cfi=(100)
cfn=(626)
calls=1332 0x10a310 32 
* * 78475 30594 19955 0 298 0 0 1
* * 1332 1332
+5 * 1332 0 1332
+4 * 1332
+1 * 1332 1332
+1 * 1332 1332

fn=(2068)
0x4051ae 1160 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8784 3424 2236 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(1378)
calls=149 0x4041c4 976 
* * 17437 6706 4623 0 148 1 0 0 1
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2032)
calls=149 0x404f4e 976 
* * 26377 10133 7007
+5 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(1388)
calls=149 0x40424c 976 
* * 17437 6706 4623 0 0 1 0 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2074)
0x405226 678 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2078)
0x40526e 1800 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 8793 3427 2236 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149 0 149 0 0 1
+1 * 149 149

fn=(2278)
0x40b79c 1211 795 0 795
+1 * 795
+3 * 795
+4 * 795 0 795
cob=(3)
cfi=(100)
cfn=(626)
calls=795 0x10a310 32 
* * 38168 15107 9548 0 9
* * 795 795
+5 * 795 0 795
+4 * 795 795
+4 * 795
+3 * 795 0 795
cfn=(2280)
calls=795 0x40bbcd 984 
* * 45319 18286 11929 149 150 150 1 1 1
+5 * 795 795
+1 * 795 795

fn=(2280)
0x40bbcd 984 1333 0 1333 149 0 0 1
+1 * 1333
+3 * 1333
+4 * 1333 0 1333
cob=(3)
cfi=(100)
cfn=(626)
calls=1333 0x10a310 32 
* * 64000 25331 16012 0 319 152 0 2 3
* * 1333 1333
+5 * 1333 0 1333
+4 +1 1333 1333
+4 * 1333 1333
+1 * 1333 1333

fn=(2282)
0x40a786 444 1333 0 1333
+1 * 1333
+3 * 1333
+4 * 1333 0 1333
cob=(3)
cfi=(100)
cfn=(626)
calls=1333 0x10a310 32 
* * 64008 25333 16020
* * 1333 1333
+5 * 1333 0 1333
+4 * 1333 0 1333
+4 * 1333 0 1333
+4 +2 1333 1333
+4 * 1333
+5 * 1333 1333
+4 * 1333
+3 * 1333 1333
+1 * 1333 1333

fn=(2288)
0x40a98c 317 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +3 149 149
+4 * 149 149
+3 * 149 149
+4 * 149 149
+3 * 149
+3 * 149
+3 * 149 149
+1 * 149 149

fn=(2528)
0x416492 1205 159 0 159 150 0 0 1
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 7636 3022 1912 0 1 159 0 0 1
* * 159 159
+5 * 159 0 159
+4 * 159 159
+4 * 159
+3 * 159 0 159
cfn=(2530)
calls=159 0x418111 984 
* * 9067 3658 2389 0 150 0 0 1
+5 * 159 159
+1 * 159 159

fn=(2538)
0x418128 1211 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14788 5853 3700 0 0 1 0 0 1
* * 308 308
+5 * 308 0 308
+4 * 308 308
+4 * 308
+3 * 308 0 308 150 0 0 1
cfn=(2280)
calls=308 0x40bbcd 984 
* * 17560 7085 4624 0 159
+5 * 308 308
+1 * 308 308

fn=(2568)
0x413ee6 292 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2570)
calls=149 -72 -50 
* * 35776 13712 9552 0 297 1 0 1 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2578)
0x415042 249 477 0 477 150 0 0 1
+1 * 477
+3 * 477
+4 * 477 0 477
cob=(3)
cfi=(100)
cfn=(626)
calls=477 0x10a310 32 
* * 22908 9066 5736 0 300 149 0 2 1
* * 477 477
+5 * 477 0 477
+4 +1 477 477
+4 * 477
+4 * 477
+3 * 477 0 477
cfi=(183)
cfn=(2580)
calls=477 0x417710 109 
* * 55340 21944 14795 299 300 0 2 2
+5 * 477 477
+1 * 477 477

fn=(2620)
0x419a58 1992 149 0 149
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 149 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +2 149 149 0 149 0 0 1
+4 * 149
+3 * 149 0 149
cfn=(2552)
calls=149 0x4165ca -77 
* * 17288 6855 4623 0 149 0 0 1
+5 * 149
+3 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2622)
calls=149 0x417ec4 119 
* * 17590 6707 4776 149 297 1 1 1 1
+5 +2 149 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(160)
cfn=(2406)
calls=149 0x40c04b 490 
* * 59157 15646 12371 0 19 77 0 0 77
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2412)
calls=149 0x409807 47 
* * 8497 3428 2239 0 0 1 0 0 1
+5 * 149 0 149 149 0 0 1
+4 +1 149 149
+4 * 149
+8 * 149 149
+4 * 149
+5 * 149
+3 * 149 0 149
cob=(3)
cfi=(76)
cfn=(298)
calls=149 0x8f240 53 
* * 2235 149 298
* * 149 149
+5 +1 149 149
+4 -5 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2420)
calls=149 0x408d86 121 
* * 17437 6706 4623 0 148
+5 +5 149
+3 +1 149 149
+4 * 149 149
+9 * 149 0 0 149 0 0 1
+35 * 149
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2634)
0x4167b4 1202 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2436)
calls=149 0x40bbb6 988 
* * 8497 3428 2239 0 297 0 0 1
+5 * 149 149
+1 * 149 149

fn=(2872)
0x41470a 242 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 16
+4 * 16
+3 * 16 0 16
cfn=(1416)
calls=16 0x4040fe -11 
* * 948 369 260 1 0 3 0 0 3
+5 * 16 16
+4 * 16
+4 * 16
+3 * 16 0 16
cfi=(183)
cfn=(2874)
calls=16 -72 91 
* * 1880 722 504 0 0 1 0 0 1
+5 * 16
+1 * 16 16
+1 * 16 16

fn=(2898)
0x40fa28 1160 26 0 26 1 0 0 1
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(1378)
calls=26 0x4041c4 976 
* * 3046 1171 810 0 20 2
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(1382)
calls=26 0x404218 976 
* * 4881 1869 1301 0 11 11 0 0 1
+5 * 26 26
+4 * 26
+3 * 26 0 26
cfn=(1388)
calls=26 0x40424c 976 
* * 3330 1274 885
+5 * 26
+1 * 26 26
+1 * 26 26

fn=(2900)
0x40fa8c 545 26 0 26
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 32 
* * 1252 495 316
* * 26 26
+5 * 26 0 26
+4 * 26
+1 * 26 26
+1 * 26 26

fn=(2930)
0x419cc4 1992 4 0 4
+1 * 4
+3 * 4 0 4
+1 * 4
+4 * 4 0 4
cob=(3)
cfi=(100)
cfn=(626)
calls=4 0x10a310 32 
* * 196 77 52 0 1 1 0 1 1
* * 4 4
+5 * 4 0 4
+4 * 4 0 4
+4 * 4 4
+9 * 4 0 4
+4 * 4
+2 +2 4 4
+4 * 4
+3 * 4 0 4
cfn=(2854)
calls=4 0x416c76 -77 
* * 468 185 128
+5 * 4
+3 * 4
+4 * 4
+3 * 4 0 0 1 0 0 1
+3 * 4 0 4
cfi=(152)
cfn=(2932)
calls=4 0x417e56 119 
* * 480 182 136 3 3 1 1 2 1
+5 +2 4 4
+4 * 4
+4 * 4
+3 * 4
+3 * 4 0 4
cfi=(160)
cfn=(2406)
calls=4 0x40c04b 490 
* * 1583 420 336 0 5 5 0 0 4
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+3 * 4 0 4
cfi=(161)
cfn=(2412)
calls=4 0x409807 47 
* * 232 93 64 0 0 1 0 0 1
+5 * 4 0 4
+4 +1 4 4
+4 * 4
+8 * 4 4
+4 * 4 0 0 2 0 0 1
+5 * 4
+3 * 4 0 4
cob=(3)
cfi=(76)
cfn=(298)
calls=4 0x8f240 53 
* * 98 4 34 3 0 3 1 0 3
* * 4 4 0 1
+5 +1 4 4
+4 -5 4
+4 * 4
+3 * 4 0 4
cfi=(152)
cfn=(2420)
calls=4 0x408d86 121 
* * 472 181 128 0 2
+5 +5 4
+3 +1 4 4
+4 * 4 4
+9 * 4
+35 * 4 0 0 1 0 0 1
+4 * 4 4
+1 * 4 4
+1 * 4 4

fn=(2942)
0x414a74 257 296 0 296 1 0 0 1
+1 * 296
+3 * 296
+4 * 296 0 296 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=296 0x10a310 32 
* * 14220 5627 3564 0 10 3 0 0 3
* * 296 296
+5 * 296 0 296
+4 +1 296 296
+4 * 296
+3 * 296 0 296
cfn=(2876)
calls=296 0x416d20 -9 
* * 52100 20425 13916 18 10 0 0 1
+5 * 296 296
+1 * 296 296

fn=(2954)
0x416f1c 1183 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +1 16
+1 * 16 16
+1 * 16 16

fn=(2960)
0x418b48 307 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16 16
+4 * 16 0 16
+3 * 16
+1 * 16 16
+1 * 16 16

fn=(2976)
0x4177a0 1211 34 0 34 1 0 0 1
+1 * 34
+3 * 34
+4 * 34 0 34
cob=(3)
cfi=(100)
cfn=(626)
calls=34 0x10a310 32 
* * 1636 647 412 0 1 0 0 1
* * 34 34
+5 * 34 0 34
+4 * 34 34
+4 * 34
+3 * 34 0 34
cfn=(2280)
calls=34 0x40bbcd 984 
* * 1942 783 514 0 1 1 0 1 1
+5 * 34 34
+1 * 34 34

fn=(3064)
0x414efa 353 372 0 372 2 0 0 1
+1 * 372
+3 * 372 0 0 2 0 0 1
+4 * 372 0 372
cob=(3)
cfi=(100)
cfn=(626)
calls=372 0x10a310 32 
* * 17868 7071 4476 0 3 1 0 2 1
* * 372 372
+5 * 372 0 372
+4 * 372 0 372
+4 +1 372 372
+4 * 372 372
+4 * 372
+3 * 372
+3 * 372 0 372
cfn=(3066) std::__detail::_Node_iterator_base<std::pair<float const, float>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<float const, float>, false>*)
calls=372 0x4175f6 -47 
* * 22696 8929 6328 1 0 0 1
+5 * 372
+1 * 372 372
+1 * 372 372

fn=(3066)
0x4175f6 307 372 0 372 1 0 0 1
+1 * 372
+3 * 372
+4 * 372 0 372
cob=(3)
cfi=(100)
cfn=(626)
calls=372 0x10a310 32 
* * 17860 7069 4468
* * 372 372
+5 * 372 0 372
+4 * 372 0 372
+4 +1 372 372
+4 * 372 372
+4 * 372 0 372
+3 * 372
+1 * 372 372
+1 * 372 372

fn=(3074)
0x419bcc 261 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1444 571 364 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30
+3 * 30 0 30
cfn=(3076)
calls=30 0x41a15a -9 
* * 5292 2073 1422 2 3 1 0 1 1
+5 * 30 30
+1 * 30 30

fn=(3086)
0x419c38 100 30 0 30 1 0 0 1
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 -68 
* * 1444 571 364 0 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 * 30 0 30
+4 +2 30 30
+4 * 30
+3 * 30 0 30
cfi=(161)
cfn=(3088) std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const& std::forward<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&>(std::remove_reference<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&>::type&)
calls=30 0x419beb -26 
* * 1714 691 454 0 1 0 0 1
+5 * 30
+3 * 30 0 30
cfi=(186)
cfn=(3090) std::tuple_element<0ul, std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > >::type const& std::get<0ul, int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&)
calls=30 -67 +55 
* * 3488 1382 938 0 0 1 0 0 1
+5 * 30 30
+1 * 30 30

fn=(3118)
0x41074d 324 200 0 200
+1 * 200
+3 * 200
+4 * 200 0 200
cob=(3)
cfi=(100)
cfn=(626)
calls=200 0x10a310 32 
* * 9608 3802 2408 0 0 1 0 0 1
* * 200 200
+5 * 200 0 200
+4 * 200 0 200
+4 +3 200 200
+4 * 200 200
+3 * 200 200
+4 * 200 200
+3 * 200
+3 * 200
+3 * 200 200
+1 * 200 200

fn=(3144)
0x40b7bc 1701 40 0 40
+1 * 40
+3 * 40 0 40 2 0 0 1
+1 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1924 761 484 0 11 0 0 1
* * 40 40
+5 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +2 40 40
+4 * 40
+3 * 40 0 40
cfn=(3146)
calls=40 0x40bc5c 1199 
* * 4648 1842 1248 1 1 1 1 1 1
+5 * 40
+3 * 40 40
+4 * 40
+3 * 40 0 40
cfn=(3148)
calls=40 0x40bc3c +12 
* * 4648 1842 1248 11 0 1 1 0 1
+5 * 40
+3 +1 40 40
+4 * 40 40
+4 * 40 40 0 1 0 0 1
+4 * 40
+3 * 40
+3 * 40
+3 * 40
+3 * 40 0 40
cfn=(3152)
calls=40 0x40bbe4 1331 
* * 24456 9444 6656 9 10 1 0 0 1
+5 +1 40
+4 * 40 40
+1 * 40 40
+1 * 40 40

fn=(3198)
0x4123d4 1912 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 1 0 1 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3200)
calls=10 -51 76 
* * 574 231 154
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10 0 0 1 0 0 1
+3 * 10 0 10
cfn=(3202)
calls=10 0x4150d6 979 
* * 2452 933 672 1 2 1 1 2 1
+5 +1 10
+1 * 10 10
+1 * 10 10

fn=(3244)
0x419246 1199 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+3 * 10 0 10
cfn=(3084)
calls=10 0x40be21 984 
* * 574 231 154 0 1 0 0 1
+5 * 10 10
+1 * 10 10

fl=(181)
fn=(2242)
0x40f6d0 18 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 +14 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+3 * 149 0 149
+5 * 149 0 149
+5 * 149 149
+4 * 149 0 149
+6 * 149 149
+4 * 149 149 0 149 0 0 1
+8 * 149 0 149
+5 * 149 149
+4 * 149 149
+8 * 149 0 149
+5 * 149 149
+4 * 149 149
+8 * 149 0 149
+5 +1 149 149
+4 * 149 149
+3 * 149 0 149
+2 +1 149 149
+4 * 149 149
+5 * 149 0 149 149
+5 +1 149 149
+4 * 149 149
+5 * 149 0 149
+5 +1 149 149
+4 * 149
+4 * 149 0 149
+5 +1 149
+1 * 149 149
+1 * 149 149

fl=(151)
fn=(2040)
0x404fba 352 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580
* * 298 298
+5 * 298 0 298
+4 * 298 298
+4 * 298
+3 * 298 0 298
cfn=(2042) std::binary_function<int, int, bool>::binary_function()
calls=298 -44 118 
* * 16990 6557 4474 0 0 1 0 0 1
+5 * 298
+1 * 298 298
+1 * 298 298

fn=(1394)
0x4042b8 352 1348 0 1348 1
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 32 
* * 64708 25613 16180 0 20
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348 1348
+4 * 1348
+3 * 1348 0 1348
cfn=(1396) std::binary_function<float, float, bool>::binary_function()
calls=1348 -44 118 
* * 76840 29657 20224 0 0 1 0 0 1
+5 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(3154)
0x40bdce 356 40 0 40 1
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 32 
* * 1924 761 484
* * 40 40
+5 * 40 0 40
+4 * 40 0 40
+4 * 40 0 40
+4 +1 40 40
+4 * 40 40
+4 * 40 40
+4 * 40 40
+4 * 40
+3 * 40
+3 * 40
+5 * 40
+3 * 40
+3 * 40 40
+1 * 40 40

fn=(1396)
0x4042a4 118 1348 0 1348
+1 * 1348
+3 * 1348
+4 * 1348 0 1348
cob=(3)
cfi=(100)
cfn=(626)
calls=1348 0x10a310 -86 
* * 64708 25613 16180 0 0 1 0 0 1
* * 1348 1348
+5 * 1348 0 1348
+4 * 1348
+1 * 1348 1348
+1 * 1348 1348

fn=(3140)
0x4198de 356 156 0 156 1
+1 * 156
+3 * 156
+4 * 156 0 156
cob=(3)
cfi=(100)
cfn=(626)
calls=156 0x10a310 32 
* * 7496 2966 1880
* * 156 156
+5 * 156 0 156
+4 * 156 0 156
+4 * 156 0 156
+4 +1 156 156
+4 * 156 156
+2 * 156 156
+4 * 156 156 0 0 11
+2 * 156
+2 * 156
+3 * 156 156
+1 * 156 156

fn=(2042)
0x404fa6 118 298 0 298
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -86 
* * 14308 5663 3580 0 0 1 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298
+1 * 298 298
+1 * 298 298

fl=(118)
fn=(1142)
0x41c8f5 377 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 85 29 16
* * 1 1
+5 * 1 0 0 1 0 0 1
+5 * 1
+5 * 1 0 1
cfn=(1144) __static_initialization_and_destruction_0(int, int)
calls=1 -86 * 
* * 164 49 44 1 1 2 1
+5 * 1 1
+1 * 1 1

fn=(1498) DNA::DNA(GridCell*)
0x41a62e 8 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 +24 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1 1 0 0 1
+7 * 1 0 1
+7 * 1 1
+9 * 1 0 1
+4 * 1
+2 * 1 1
+7 * 1
+3 * 1 0 1
cfi=(157)
cfn=(1500)
calls=1 0x405b9e 253 
* * 323 122 102 8 5 2 8 5 2
+5 +3 1 0 1
+10 * 1 1
+10 * 1 0 0 1 0 0 1
-10 * 500 500
+10 * 500
+6 +1 500
+4 * 500
+5 * 500
+5 * 500
+3 * 500 0 500
cfi=(135)
cfn=(1356) std::uniform_int_distribution<unsigned int>::uniform_int_distribution(unsigned int, unsigned int)
calls=500 0x405e64 +92 
* * 65004 25501 18504 0 3 2 0 2 2
+5 +2 500 500
+7 * 500
+7 * 500
+4 * 500
+3 * 500
+3 * 500 0 500
cfi=(135)
cfn=(1360) unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&)
calls=500 0x405e92 164 
* * 259396 103016 61292 0 108 0 0 86
+5 * 500 0 500
+6 +2 500 500 0 1 0 0 1
+7 * 500
+6 +1 45
+5 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1312)
calls=45 0x8de60 -17 
* * 9225 1466 1422 1 0 11 1 0 11
* * 45 45
+5 * 45
+3 * 45
+3 * 45 0 45
cfi=(168)
cfn=(1610)
calls=45 0x41c9aa +5 
* * 16359 6306 4434 50 39 16 8 5 2
+5 * 45 0 45
+4 +2 45
+4 * 45
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +85 
* * 5854 2296 1669
+5 +1 45
+4 * 45 0 0 1 0 0 1
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +84 
* * 5854 2296 1669 0 9 1 0 1 1
+5 +1 45
+4 * 45
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +83 
* * 5854 2296 1669
+5 +1 45
+4 * 45 45
+8 * 45
+4 * 45
+3 * 45 0 45
cfi=(133)
cfn=(1224)
calls=45 0x405ec0 1748 
* * 5944 2341 1714 0 1 1 0 0 1
+5 +2 45 45 0 1 0 0 1
+7 * 45
+7 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1360)
calls=45 0x405e92 164 
* * 19579 7696 5179 0 8
+5 * 45 0 45
+6 +6 45 0 45
+10 * 45 45
+6 * 45 45
+6 * 45
-12 * 1347 1347
+6 * 1347 1347
+6 * 1347
+6 +1 1347 1347 0 1 0 0 1
+7 * 1347
+7 * 1347
+4 * 1347
+3 * 1347
+3 * 1347 0 1347
cfi=(135)
cfn=(1360)
calls=1347 0x405e92 164 
* * 627870 247852 158693 0 78 0 0 1
+5 * 1347 0 1347
+6 +2 1347 1347
+7 * 1347
+2 +1 462 462
+7 * 462
+7 * 462
+4 * 462
+3 * 462 0 0 1 0 0 1
+3 * 462 0 462
cfi=(135)
cfn=(1360)
calls=462 0x405e92 164 
* * 200974 79003 53134 0 12 1 0 0 1
+5 * 462 0 462
+6 +1 462
+5 * 462 0 462
cob=(8)
cfi=(94)
cfn=(1312)
calls=462 0x8de60 -35 
* * 97027 15459 15093 2 0 159 2 0 159
* * 462 462
+5 * 462
+3 * 462 462
+6 * 462 462
+6 * 462
+2 * 462
+3 * 462 0 462
cfi=(169)
cfn=(1698)
calls=462 0x41c910 -12 
* * 32344 13399 9706 1 0 0 1
+5 * 462 0 462
+4 +1 462 462
+4 * 462
+4 * 462
+3 * 462
+3 * 462 0 462
cfi=(157)
cfn=(1624) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::push_back(BP_Protein* const&)
calls=462 0x41cc90 913 
* * 571386 216140 148902 8 14 181 3 3 180
+5 * 462
+2 +3 885 885 0 1 0 0 1
+7 * 885
+7 * 885
+4 * 885
+3 * 885
+3 * 885 0 885
cfi=(133)
cfn=(1244)
calls=885 0x405efe 1808 
* * 1086259 417535 274598 9 38 16 1 1 1
+5 * 885
+4 * 885 0 885
+6 +1 885
+5 * 885 0 885
cob=(8)
cfi=(94)
cfn=(1312)
calls=885 0x8de60 -40 
* * 182352 29258 28746 11 0 341 9 0 341
* * 885 885
+5 * 885
+3 * 885 885 0 1 0 0 1
+6 * 885 885
+6 * 885 0 885
+6 * 885 885
+8 * 885
+2 * 885
+3 * 885 0 885
cfi=(169)
cfn=(1622)
calls=885 0x41c95a -12 
* * 61954 25666 18589 1 0 0 1
+5 * 885 0 885
+4 +1 885 885
+4 * 885
+4 * 885
+3 * 885
+3 * 885 0 885
cfi=(157)
cfn=(1624)
calls=885 0x41cc90 913 
* * 976824 370493 255147 73 156 313 55 23 288
+5 -11 1347 0 1347
+7 * 1347 0 0 1 0 0 1
+5 +15 45
+5 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1312)
calls=45 0x8de60 -45 
* * 5465 1230 726 0 0 1 0 0 1
* * 45 45
+5 * 45
+3 * 45 45
+4 * 45
+3 * 45
+5 * 45
+3 * 45 0 45
cfi=(158)
cfn=(1700) BP::BP(int, BP_Protein_Block*)
calls=45 0x41cad2 -8 
* * 3199 1306 994 1 1 0 1 1
+5 * 45 0 45
+4 +1 45 45
+7 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1512) std::vector<BP*, std::allocator<BP*> >::push_back(BP* const&)
calls=45 0x41cd02 913 
* * 17554 6886 4684 0 0 6 0 0 6
+5 * 45
+5 +1 455 455 0 1 0 0 1
+7 * 455
+6 +1 45
+5 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1312)
calls=45 0x8de60 -48 
* * 9211 1475 1461 0 0 13 0 0 13
* * 45 45
+5 * 45
+3 * 45
+3 * 45 0 45
cfi=(172)
cfn=(1794)
calls=45 0x41ca20 -28 
* * 16359 6306 4434 10 35 2 10 5 2
+5 * 45 0 45
+4 +2 45
+4 * 45
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +54 
* * 5854 2296 1669
+5 +1 45 0 0 1 0 0 1
+4 * 45
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +53 
* * 5854 2296 1669 0 1 3 0 1 1
+5 +1 45
+4 * 45
+5 * 45
+5 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1356)
calls=45 0x405e64 +52 
* * 5854 2296 1669
+5 +1 45
+4 * 45 45
+8 * 45
+4 * 45
+3 * 45 0 45 1 0 0 1
cfi=(133)
cfn=(1224)
calls=45 0x405ec0 1748 
* * 5944 2341 1714
+5 +2 45 45
+7 * 45
+7 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(135)
cfn=(1360)
calls=45 0x405e92 164 
* * 19579 7696 5179 0 2 1 0 0 1
+5 * 45 0 45
+6 +6 45 0 45
+10 * 45 45
+6 * 45 45
+6 * 45 0 0 1 0 0 1
-12 * 1275 1275
+6 * 1275 1275
+6 * 1275
+6 +1 1275 1275
+7 * 1275
+7 * 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(135)
cfn=(1360)
calls=1275 0x405e92 164 
* * 575593 226783 148521 0 34 0 0 1
+5 * 1275
+2 * 1275
+3 * 1275 0 1275
+6 +1 1275 1275
+7 * 1275
+7 * 1275
+4 * 1275
+3 * 1275 0 0 1 0 0 1
+3 * 1275 0 1275
cfi=(133)
cfn=(1244)
calls=1275 0x405efe 1808 
* * 1546462 593815 393938 0 80 1 0 0 1
+5 * 1275
+4 * 1275 0 1275
+6 +1 1275 1275
+7 * 1275
+7 * 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(133)
cfn=(1244)
calls=1275 0x405efe 1808 
* * 1567397 602572 395830 0 82
+5 * 1275
+4 * 1275 0 1275
+6 +1 1275 1275
+7 * 1275 0 0 1 0 0 1
+7 * 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(135)
cfn=(1360)
calls=1275 0x405e92 +99 
* * 617522 244297 152305 1 105 0 1 1
+5 * 1275 0 1275
+6 +2 1275
+5 * 1275 0 1275
cob=(8)
cfi=(94)
cfn=(1312)
calls=1275 0x8de60 -67 
* * 265039 42413 41595 3 0 465 1 0 465
* * 1275 1275
+5 * 1275
+3 * 1275 1275
+7 * 1275 1275
+6 * 1275 1275
+8 * 1275 1275 0 1 0 0 1
+6 * 1275
+3 * 1275 0 1275
+6 * 1275 1275
+8 * 1275
+2 * 1275
+3 * 1275 0 1275
cfi=(173)
cfn=(1806) BP_Pump::BP_Pump(bool, float, float, int)
calls=1275 0x41c9ca -56 
* * 94354 38251 29329 0 0 3 0 0 1
+5 * 1275 0 1275
+4 +1 1275 1275
+4 * 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(157)
cfn=(1808) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::push_back(BP_Pump* const&)
calls=1275 0x41cd74 913 
* * 1490516 564476 388908 70 168 466 30 15 439
+5 -7 1275 0 1275
+7 * 1275 0 0 1 0 0 1
+5 +10 45
+5 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1312)
calls=45 0x8de60 -71 
* * 5766 1251 777 0 0 5 0 0 5
* * 45 45
+5 * 45
+3 * 45 45
+4 * 45
+3 * 45
+5 * 45
+3 * 45 0 45
cfi=(158)
cfn=(1882) BP::BP(int, BP_Pump_Block*)
calls=45 0x41cb26 -26 
* * 3199 1306 994 0 1
+5 * 45 0 45
+4 +1 45 45
+7 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1512)
calls=45 0x41cd02 913 
* * 17554 6886 4684 0 0 8 0 0 7
+5 * 45
+5 +1 410 410 0 1 0 0 1
+7 * 410
+6 +1 46
+5 * 46 0 46
cob=(8)
cfi=(94)
cfn=(1312)
calls=46 0x8de60 -74 
* * 9431 1504 1488 0 0 20 0 0 20
* * 46 46
+5 * 46
+3 * 46
+3 * 46 0 46
cfi=(170) /home/nathan/DEV/PC-optimisation/src/BP_Move_Block.h
cfn=(1702) BP_Move_Block::BP_Move_Block()
calls=46 0x41ca6e -53 
* * 16722 6446 4532 24 23 3 8 6 2
+5 * 46 0 46
+4 +2 46
+4 * 46
+5 * 46
+5 * 46
+3 * 46 0 46
cfi=(135)
cfn=(1356)
calls=46 0x405e64 +28 
* * 5984 2347 1706 0 0 1 0 0 1
+5 +1 46 0 0 1 0 0 1
+4 * 46
+5 * 46
+5 * 46
+3 * 46 0 46
cfi=(135)
cfn=(1356)
calls=46 0x405e64 +27 
* * 5984 2347 1706 0 12 0 0 1
+5 +1 46
+4 * 46
+5 * 46
+5 * 46
+3 * 46 0 46
cfi=(135)
cfn=(1356)
calls=46 0x405e64 +26 
* * 5984 2347 1706
+5 +2 46 46
+7 * 46
+7 * 46
+4 * 46
+3 * 46 0 0 1 0 0 1
+3 * 46 0 46
cfi=(135)
cfn=(1360)
calls=46 0x405e92 +84 
* * 20014 7867 5294 0 1 1 0 0 1
+5 * 46 0 46
+6 +4 46 0 46
+10 * 46 46
+6 * 46 46
+6 * 46
-12 * 1120 1120
+6 * 1120 1120
+6 * 1120
+6 +1 1120 1120
+7 * 1120
+7 * 1120
+4 * 1120
+3 * 1120
+3 * 1120 0 1120 1 0 0 1
cfi=(135)
cfn=(1360)
calls=1120 0x405e92 +79 
* * 529160 209035 132588 0 54 0 0 1
+5 * 1120 0 1120
+6 +1 1120 1120
+7 * 1120
+7 * 1120
+4 * 1120
+3 * 1120
+3 * 1120 0 1120
cfi=(135)
cfn=(1360)
calls=1120 0x405e92 +78 
* * 508166 200278 130696 0 34
+5 * 1120 0 1120
+6 +2 1120
+5 * 1120 0 1120
cob=(8)
cfi=(94)
cfn=(1312)
calls=1120 0x8de60 -88 
* * 230767 37058 36393 4 1 388 2 1 388
* * 1120 1120
+5 * 1120
+3 * 1120 1120 0 1 0 0 1
+6 * 1120 1120
+6 * 1120
+2 * 1120
+3 * 1120 0 1120
cfi=(171)
cfn=(1714)
calls=1120 0x41ca40 -77 
* * 72804 29121 21284 0 0 1 0 0 1
+5 * 1120 0 1120
+4 +1 1120 1120
+4 * 1120
+4 * 1120
+3 * 1120
+3 * 1120 0 1120
cfi=(157)
cfn=(1716) std::vector<BP_Move*, std::allocator<BP_Move*> >::push_back(BP_Move* const&)
calls=1120 0x41cde6 913 
* * 1406227 531997 366658 127 144 400 67 22 381
+5 -5 1120 0 1120
+7 * 1120
+5 +8 46
+5 * 46 0 46
cob=(8)
cfi=(94)
cfn=(1312)
calls=46 0x8de60 -92 
* * 5609 1260 741 0 0 3 0 0 3
* * 46 46
+5 * 46
+3 * 46 46
+4 * 46
+3 * 46
+5 * 46
+3 * 46 0 46
cfi=(158)
cfn=(1790) BP::BP(int, BP_Move_Block*)
calls=46 0x41cb7a -39 
* * 3270 1335 1016 3 1 0 3 1
+5 * 46 0 46
+4 +1 46 46
+7 * 46
+4 * 46
+3 * 46
+3 * 46 0 46
cfi=(157)
cfn=(1512)
calls=46 0x41cd02 913 
* * 17944 7039 4788 0 0 7 0 0 6
+5 * 46
+5 +1 364 364 0 1 0 0 1
+7 * 364 0 0 1 0 0 1
+6 +1 38
+4 * 38 38
+8 * 38
+4 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1224)
calls=38 0x405ec0 1748 
* * 5020 1977 1448 0 1 1 0 0 1
+5 +1 38
+4 * 38 38
+8 * 38
+4 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1224)
calls=38 0x405ec0 1748 
* * 5020 1977 1448
+5 +2 38 38
+7 * 38
+7 * 38 0 0 1 0 0 1
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1244)
calls=38 0x405efe 1808 
* * 44844 17177 11632 1 5 1 0 1 1
+5 * 38
+4 * 38 0 38
+6 +1 38 38
+7 * 38
+7 * 38
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1244)
calls=38 0x405efe 1808 
* * 44844 17177 11632 0 1
+5 * 38
+4 * 38 0 38
+6 +2 38 0 0 1 0 0 1
+5 * 38 0 38
cob=(8)
cfi=(94)
cfn=(1312)
calls=38 0x8de60 0 
* * 8401 1303 1294 2 2 28 2 0 28
* * 38 38
+5 * 38
+3 * 38 38
+8 * 38 38
+6 * 38
+3 * 38 0 38
+6 * 38 38
+8 * 38
+5 * 38
+3 * 38 0 38
cfi=(158)
cfn=(1792) BP::BP(int, float, float)
calls=38 0x41cbce -40 
* * 2854 1179 916
+5 * 38 0 38
+4 +1 38 38
+7 * 38
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(157)
cfn=(1512)
calls=38 0x41cd02 913 
* * 22950 8812 6084 1 63 50 0 1 44
+5 * 38
+5 +1 326 326 0 1 0 0 1
+7 * 326
+6 +1 38
+4 * 38 38 0 0 1 0 0 1
+8 * 38
+4 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1224)
calls=38 0x405ec0 1748 
* * 5020 1977 1448 0 13 0 0 2
+5 +2 38 38 0 1 0 0 1
+7 * 38
+7 * 38
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(133)
cfn=(1244)
calls=38 0x405efe 1808 
* * 44844 17177 11632 3 16 9 2 8 2
+5 * 38
+4 * 38 0 38
+6 +2 38
+5 * 38 0 38
cob=(8)
cfi=(94)
cfn=(1312)
calls=38 0x8de60 0 
* * 8039 1277 1268 0 1 28 0 0 28
* * 38 38
+5 * 38
+3 * 38 38
+6 * 38 0 38
+6 * 38 38
+8 * 38
+5 * 38
+3 * 38 0 38
cfi=(158)
cfn=(1608) BP::BP(int, float)
calls=38 0x41cc38 -38 
* * 2702 1103 840 3 3 0 3
+5 * 38 0 38
+4 +2 38 38
+7 * 38
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(157)
cfn=(1512)
calls=38 0x41cd02 913 
* * 19003 7334 5043 3 41 25 0 1 20
+5 * 38
+5 +1 288 288 0 8 0 0 1
+7 * 288
+2 +1 28
+5 * 28 0 28
cob=(8)
cfi=(94)
cfn=(1312)
calls=28 0x8de60 0 
* * 5845 912 919 0 0 19 0 0 19
* * 28 28
+5 * 28
+3 * 28
+5 * 28
+3 * 28 0 28
cfi=(158)
cfn=(1510) BP::BP(int)
calls=28 0x41ca8e -80 
* * 1880 757 564 0 4 1 0 1 1
+5 * 28 0 28
+4 +1 28 28
+7 * 28
+4 * 28
+3 * 28
+3 * 28 0 28
cfi=(157)
cfn=(1512)
calls=28 0x41cd02 913 
* * 22695 8597 5935 10 34 20 10 2 15
+5 * 28
+5 +1 260 260 0 1 0 0 1
+7 * 260
+2 +1 38
+5 * 38 0 38
cob=(8)
cfi=(94)
cfn=(1312)
calls=38 0x8de60 0 
* * 8116 1291 1278 0 0 23 0 0 23
* * 38 38
+5 * 38
+3 * 38
+5 * 38
+3 * 38 0 38
cfi=(158)
cfn=(1510)
calls=38 0x41ca8e -83 
* * 2550 1027 764 0 1 1 0 0 1
+5 * 38 0 38
+4 +1 38 38
+7 * 38
+4 * 38
+3 * 38
+3 * 38 0 38
cfi=(157)
cfn=(1512)
calls=38 0x41cd02 913 
* * 14824 5815 3956 0 0 6 0 0 6
+5 * 38
+5 +1 222 222 0 1 0 0 1
+7 * 222
+2 +1 45
+5 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1312)
calls=45 0x8de60 0 
* * 9276 1476 1464 0 1 24 0 0 24
* * 45 45
+5 * 45
+3 * 45
+5 * 45
+3 * 45 0 45
cfi=(158)
cfn=(1510)
calls=45 0x41ca8e -86 
* * 3019 1216 904 0 4 0 0 1
+5 * 45 0 45
+4 +1 45 45
+7 * 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfi=(157)
cfn=(1512)
calls=45 0x41cd02 913 
* * 24897 9299 6046 40 120 9 40 67 6
+5 * 45
+5 +1 177 177 0 1 0 0 1
+7 * 177
+2 +1 59 0 0 1 0 0 1
+5 * 59 0 59
cob=(8)
cfi=(94)
cfn=(1312)
calls=59 0x8de60 0 
* * 12634 1982 1980 0 0 31 0 0 30
* * 59 59
+5 * 59
+3 * 59
+5 * 59
+3 * 59 0 59
cfi=(158)
cfn=(1510)
calls=59 0x41ca8e -89 
* * 3957 1594 1184 2 1 1 2 1 1
+5 * 59 0 59
+4 +1 59 59
+7 * 59
+4 * 59
+3 * 59
+3 * 59 0 59
cfi=(157)
cfn=(1512)
calls=59 0x41cd02 913 
* * 30513 11795 8215 48 24 28 48 24 28
+5 * 59
+2 +1 118 118
+7 * 118
+2 +1 40
+5 * 40 0 40
cob=(8)
cfi=(94)
cfn=(1312)
calls=40 0x8de60 0 
* * 8732 1359 1344 0 1 28 0 0 27
* * 40 40
+5 * 40
+3 * 40
+5 * 40
+3 * 40 0 40
cfi=(158)
cfn=(1510)
calls=40 0x41ca8e -92 
* * 2684 1081 804 0 1
+5 * 40 0 40
+4 +1 40 40
+7 * 40
+4 * 40
+3 * 40
+3 * 40 0 40
cfi=(157)
cfn=(1512)
calls=40 0x41cd02 913 
* * 19428 7540 5151 0 0 7 0 0 7
+5 * 40
+2 +1 78 78 0 1 0 0 1
+7 * 78
+2 +1 39
+5 * 39 0 39
cob=(8)
cfi=(94)
cfn=(1312)
calls=39 0x8de60 0 
* * 8175 1290 1300 1 1 26 0 0 26
* * 39 39
+5 * 39
+3 * 39
+5 * 39
+3 * 39 0 39
cfi=(158)
cfn=(1510)
calls=39 0x41ca8e -95 
* * 2617 1054 784 0 4 1 0 1 1
+5 * 39 0 39
+4 +1 39 39
+7 * 39
+4 * 39
+3 * 39
+3 * 39 0 39
cfi=(157)
cfn=(1512)
calls=39 0x41cd02 913 
* * 15214 5968 4060 0 0 3 0 0 3
+5 11 500 0 500 1 0 0 1
+7 * 500
+34 131 1 0 0 1 0 0 1
+1 * 1 1
+4 * 1 1
+9 * 1
+7 * 1
+7 * 1 1
+1 * 1 1
+1 * 1 1

fn=(1144)
0x41c8b2 377 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+4 * 1
+2 * 1 1
+7 * 1
fi=(102)
+2 74 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(638)
calls=1 0x9d7e0 -74 
* * 24 9 7
* * 1 1
+5 * 1
+5 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 -17 
* * 66 13 15 0 0 1
* * 1 1
fe=(118)
+5 377 1
+1 * 1 1
+1 * 1 1

fl=(157)
fn=(1504) std::_Vector_base<BP*, std::allocator<BP*> >::_Vector_impl::_Vector_impl()
0x407658 86 5812 0 5812 155 0 0 1
+1 * 5812
+3 * 5812
+4 * 5812 0 5812
cob=(3)
cfi=(100)
cfn=(626)
calls=5812 0x10a310 -54 
* * 278980 110429 69748 0 186 0 0 1
* * 5812 5812
+5 * 5812 0 5812
+4 +1 5812 5812
+4 * 5812
+3 * 5812 0 5812
cfi=(152)
cfn=(1506)
calls=5812 0x408576 +26 
* * 680012 261542 180180 594 1928 1 3 2 1
+5 * 5812 5812
+4 * 5812 0 5812
+7 * 5812 5812 0 159 0 0 1
+4 * 5812 0 5812
+8 * 5812 5812
+4 * 5812 0 5812
+8 +1 5812
+1 * 5812 5812
+1 * 5812 5812

fn=(1720) std::vector<BP_Move*, std::allocator<BP_Move*> >::_M_check_len(unsigned long, char const*) const
0x408398 1422 59263 0 59263 298 0 0 1
+1 * 59263
+3 * 59263 0 59263
+1 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844632 1125999 711164 0 3431 1129 0 2 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 59263
+9 * 59263 0 59263
+4 * 59263 0 0 298 0 0 1
+2 +2 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1722) std::vector<BP_Move*, std::allocator<BP_Move*> >::max_size() const
calls=59263 0x4090a6 659 
* * 15171331 5867036 4089157 2258 4452 1 6 3 1
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1730) std::vector<BP_Move*, std::allocator<BP_Move*> >::size() const
calls=59263 0x4084c2 654 
* * 3792836 1540839 888949 298 1877 1 1 0 1
+5 * 59263
+3 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263
+2 * 59263
+14 +3 59263 59263
+4 * 59263 0 0 326 0 0 1
+3 * 59263 0 59263
cfn=(1730)
calls=59263 0x4084c2 654 
* * 3792836 1540839 888949 0 710 0 0 1
+5 * 59263
+3 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1730)
calls=59263 0x4084c2 654 
* * 3792836 1540839 888949 0 0 1 0 0 1
+5 * 59263 0 59263
+4 * 59263
+4 * 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfi=(136)
cfn=(1270)
calls=59263 0x408e3d 219 
* * 3803312 1600102 948212 0 1486
+5 * 59263 59263
+3 * 59263
+3 * 59263 0 59263
+4 +1 59263 59263
+4 * 59263
+3 * 59263 0 59263 298 0 0 1
cfn=(1730)
calls=59263 0x4084c2 654 
* * 3792836 1540839 888949
+5 * 59263 59263
+4 * 59263
+2 * 59263 59263
+4 * 59263
+3 * 59263 0 59263
cfn=(1722)
calls=59263 0x4090a6 659 
* * 15171332 5867038 4089151 0 0 1217 0 0 1
+5 * 59263 59263
+4 * 59263
+16 * 59263 59263
+4 0 59263 59263
+4 0 59263 59263
+9 0 59263
+7 0 59263 0 0 149 0 0 1
+4 0 59263 59263
+1 0 59263 59263
+1 0 59263 59263

fn=(1722)
0x4090a6 659 118526 0 118526 148 0 0 1
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689256 2251996 1422320 0 2022 1217 0 1 1
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526 118526
+4 * 118526
+3 * 118526 0 118526 149 0 0 1
cfn=(1724) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_M_get_Tp_allocator() const
calls=118526 0x409648 117 
* * 8059761 3200199 2133469 1514 2213 1 1 1 1
+5 * 118526
+3 * 118526 0 118526
cfi=(160)
cfn=(1726) std::allocator_traits<std::allocator<BP_Move*> >::max_size(std::allocator<BP_Move*> const&)
calls=118526 0x409629 550 
* * 15052808 5807775 4029889 447 217 0 3 1
+5 * 118526 118526
+1 * 118526 118526

fn=(1724)
0x409648 117 118526 0 118526 1514 0 0 1
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 -85 
* * 6993027 2726095 1777891 0 2213 1 0 1 1
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526 118526
+4 * 118526 118526
+1 * 118526 118526

fn=(1826) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_M_allocate(unsigned long)
0x4081e2 167 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209672 1270494 802424 0 0 1 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 +3 66868 66868
+5 * 66868
+2 * 66868 66868
+4 * 66868 66868
+4 * 66868
+3 * 66868
+3 * 66868 0 66868
cfi=(160)
cfn=(1828) std::allocator_traits<std::allocator<BP_Pump*> >::allocate(std::allocator<BP_Pump*>&, unsigned long)
calls=66868 0x408f9f 490 
* * 25595832 6949594 5420341 1077 5479 42926 4 2 41601
+5 * 66868
+7 +1 66868 66868
+1 * 66868 66868

fn=(1890)
0x405c56 565 115832 0 115832 1
+1 * 115832
+3 * 115832
+4 * 115832 0 115832
cob=(3)
cfi=(100)
cfn=(626)
calls=115832 0x10a310 32 
* * 5559960 2200814 1390008 0 230 152 0 1 1
* * 115832 115832
+5 * 115832 0 115832
+4 * 115832 115832
+9 * 115832 0 115832
+4 * 115832
+2 +1 115832 115832
+4 * 115832
+4 * 115832 0 0 2 0 0 1
+4 * 115832
+3 * 115832
+3 * 115832 0 115832
cfi=(164)
cfn=(1888)
calls=115832 0x406766 740 
* * 7181588 2895801 1969148 0 25 1 0 2 1
+5 * 115832 115832
+4 * 115832 115832
+4 * 115832 115832
+9 * 115832
+7 * 115832 115832
+1 * 115832 115832

fn=(2098)
0x405e24 253 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 +4 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfn=(2100) std::_Vector_base<Pump*, std::allocator<Pump*> >::_Vector_base()
calls=149 0x4068f4 124 
* * 36223 14010 9850 593 297 81 3 1 81
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2132) std::vector<RNA*, std::allocator<RNA*> >::max_size() const
0x4162ae 659 1490 0 1490 149 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71528 28312 17888 0 295 532 0 1 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490 0 149 0 0 1
+4 * 1490
+3 * 1490 0 1490
cfn=(2134) std::_Vector_base<RNA*, std::allocator<RNA*> >::_M_get_Tp_allocator() const
calls=1490 0x417f80 117 
* * 84934 34271 22354 447 535 0 1 1
+5 * 1490
+3 * 1490 0 1490
cfi=(160)
cfn=(2136) std::allocator_traits<std::allocator<RNA*> >::max_size(std::allocator<RNA*> const&)
calls=1490 0x417f60 550 
* * 172848 67052 46198 300 1009 1 3 1 1
+5 * 1490 1490
+1 * 1490 1490

fn=(2664) std::vector<Pump*, std::allocator<Pump*> >::_M_check_len(unsigned long, char const*) const
0x414282 1422 1192 0 1192 149 0 0 1
+1 * 1192
+3 * 1192 0 1192
+1 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 1192
+9 * 1192 0 1192
+4 * 1192
+2 +2 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2666) std::vector<Pump*, std::allocator<Pump*> >::max_size() const
calls=1192 0x41695a 659 
* * 305155 118007 82258 447 446 150 3 2 2
+5 * 1192
+3 * 1192 1192
+4 * 1192 0 0 149 0 0 1
+3 * 1192 0 1192
cfn=(2674) std::vector<Pump*, std::allocator<Pump*> >::size() const
calls=1192 0x405fac 654 
* * 76292 30993 17884 149 0 0 1
+5 * 1192
+3 * 1192
+3 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192
+2 * 1192
+14 +3 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2674)
calls=1192 0x405fac 654 
* * 76292 30993 17884 0 0 1 0 0 1
+5 * 1192
+3 * 1192 1192
+4 * 1192
+3 * 1192 0 1192 149 0 0 1
cfn=(2674)
calls=1192 0x405fac 654 
* * 76292 30993 17884 0 297 0 0 1
+5 * 1192 0 1192
+4 * 1192
+4 * 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(136)
cfn=(1270)
calls=1192 0x408e3d 219 
* * 76441 32185 19076
+5 * 1192 1192
+3 * 1192
+3 * 1192 0 1192
+4 +1 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2674)
calls=1192 0x405fac 654 
* * 76292 30993 17884 0 0 149 0 0 1
+5 * 1192 1192
+4 * 1192
+2 * 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfn=(2666)
calls=1192 0x41695a 659 
* * 305156 118009 82252
+5 * 1192 1192 0 149 0 0 1
+4 * 1192
+16 * 1192 1192
+4 0 1192 1192
+4 0 1192 1192
+9 0 1192
+7 0 1192
+4 0 1192 1192
+1 0 1192 1192
+1 0 1192 1192

fn=(2728) std::_Vector_base<Pump*, std::allocator<Pump*> >::_M_deallocate(Pump**, unsigned long)
0x4138e4 174 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 0 1 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +3 1192 1192
+5 * 1192
+2 +1 1043 1043
+4 * 1043 1043
+4 * 1043 1043
+4 * 1043
+3 * 1043
+3 * 1043 0 1043
cfi=(160)
cfn=(2732) std::allocator_traits<std::allocator<Pump*> >::deallocate(std::allocator<Pump*>&, Pump**, unsigned long)
calls=1043 0x416202 516 
* * 251103 80766 56330 1199 384 149 1 1 1
+5 +1 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(2756) std::vector<Move*, std::allocator<Move*> >::size() const
0x405fdc 654 6700 0 6700
+1 * 6700
+3 * 6700
+4 * 6700 0 6700
cob=(3)
cfi=(100)
cfn=(626)
calls=6700 0x10a310 32 
* * 321620 127305 80420 0 296 2 0 0 2
* * 6700 6700
+5 * 6700 0 6700
+4 +1 6700 6700
+4 * 6700 6700
+4 * 6700
+3 * 6700 6700
+4 * 6700 6700
+3 * 6700 0 0 149
+3 * 6700
+3 * 6700
+4 * 6700 6700
+1 * 6700 6700

fn=(3412) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_Vector_impl::~_Vector_impl()
0x406162 79 45 0 45 1 0 0 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -47 
* * 2164 856 544
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(152)
cfn=(3414)
calls=45 0x406db4 +42 
* * 5273 2027 1403 1 1 1 0 0 1
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(1516) std::vector<BP*, std::allocator<BP*> >::_M_check_len(unsigned long, char const*) const
0x408640 1422 19082 0 19082 1199 0 0 1
+1 * 19082
+3 * 19082 0 19082
+1 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915944 362560 228992 0 1779 1 0 2 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 19082
+9 * 19082 0 19082
+4 * 19082
+2 +2 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1518) std::vector<BP*, std::allocator<BP*> >::max_size() const
calls=19082 0x4091d4 659 
* * 4884995 1889117 1316668 450 3624 2 5 3 2
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082 332 0 0 1
cfn=(1526) std::vector<BP*, std::allocator<BP*> >::size() const
calls=19082 0x405f2c 654 
* * 1221252 496133 286234 152 876 1002 1 1 1
+5 * 19082
+3 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082
+2 * 19082
+14 +3 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1526)
calls=19082 0x405f2c 654 
* * 1221252 496133 286234
+5 * 19082
+3 * 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1526)
calls=19082 0x405f2c 654 
* * 1221248 496132 286230
+5 * 19082 0 19082 149 0 0 1
+4 * 19082
+4 * 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfi=(136)
cfn=(1270)
calls=19082 0x408e3d 219 
* * 1226468 515215 305316
+5 * 19082 19082
+3 * 19082
+3 * 19082 0 19082
+4 +1 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1526)
calls=19082 0x405f2c 654 
* * 1221252 496133 286234 0 797 1 0 0 1
+5 * 19082 19082
+4 * 19082
+2 * 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1518)
calls=19082 0x4091d4 659 
* * 4884996 1889119 1316662
+5 * 19082 19082 0 149 0 0 1
+4 * 19082
+16 * 19082 19082
+4 0 19082 19082
+4 0 19082 19082
+9 0 19082
+7 0 19082
+4 0 19082 19082
+1 0 19082 19082
+1 0 19082 19082

fn=(1526)
0x405f2c 654 95410 0 95410 150
+1 * 95410
+3 * 95410
+4 * 95410 0 95410
cob=(3)
cfi=(100)
cfn=(626)
calls=95410 0x10a310 32 
* * 4579700 1812795 1144940 0 1673 1003 0 1 2
* * 95410 95410
+5 * 95410 0 95410
+4 +1 95410 95410 0 2 0 0 1
+4 * 95410 95410
+4 * 95410
+3 * 95410 95410
+4 * 95410 95410
+3 * 95410
+3 * 95410
+3 * 95410
+4 * 95410 95410
+1 * 95410 95410

fn=(1628) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::_M_check_len(unsigned long, char const*) const
0x407e48 1422 64194 0 64194 156 0 0 1
+1 * 64194
+3 * 64194 0 64194
+1 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081320 1219688 770336 0 1487 0 0 2
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 * 64194 64194
+9 * 64194 0 64194
+4 * 64194
+2 +2 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1630) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::max_size() const
calls=64194 0x408e16 659 
* * 16433667 6355205 4429396 303 10213 1726 3 3 2
+5 * 64194
+3 * 64194 64194 0 149 0 0 1
+4 * 64194
+3 * 64194 0 64194
cfn=(1638) std::vector<BP_Protein*, std::allocator<BP_Protein*> >::size() const
calls=64194 0x407f72 654 
* * 4108420 1669045 962914 894 1467 0 2 1
+5 * 64194
+3 * 64194
+3 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194
+2 * 64194
+14 +3 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1638)
calls=64194 0x407f72 654 
* * 4108420 1669045 962914
+5 * 64194
+3 * 64194 64194
+4 * 64194 0 0 149 0 0 1
+3 * 64194 0 64194
cfn=(1638)
calls=64194 0x407f72 654 
* * 4108420 1669045 962914 0 2153 1 0 0 1
+5 * 64194 0 64194
+4 * 64194
+4 * 64194
+4 * 64194
+3 * 64194
+3 * 64194 0 64194
cfi=(136)
cfn=(1270)
calls=64194 0x408e3d 219 
* * 4118746 1733239 1027108
+5 * 64194 64194
+3 * 64194
+3 * 64194 0 64194
+4 +1 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1638)
calls=64194 0x407f72 654 
* * 4108420 1669045 962914 0 0 1 0 0 1
+5 * 64194 64194
+4 * 64194
+2 * 64194 64194
+4 * 64194 0 0 298 0 0 1
+3 * 64194 0 64194
cfn=(1630)
calls=64194 0x408e16 659 
* * 16433668 6355207 4429390 0 4111 0 0 1
+5 * 64194 64194
+4 * 64194
+16 * 64194 64194
+4 0 64194 64194
+4 0 64194 64194
+9 0 64194
+7 0 64194
+4 0 64194 64194
+1 0 64194 64194
+1 0 64194 64194

fn=(1630)
0x408e16 659 128388 0 128388
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162632 2439374 1540664 0 7108 1 0 2 1
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388
+3 * 128388 0 128388
cfn=(1632) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_M_get_Tp_allocator() const
calls=128388 0x409498 117 
* * 8730377 3466473 2310985 149 4111 0 1 1
+5 * 128388
+3 * 128388 0 128388
cfi=(160)
cfn=(1634) std::allocator_traits<std::allocator<BP_Protein*> >::max_size(std::allocator<BP_Protein*> const&)
calls=128388 0x409478 550 
* * 16305282 6291013 4365197 154 3105 1725 2 1 1
+5 * 128388 128388
+1 * 128388 128388

fn=(1632)
0x409498 117 128388 0 128388 149 0 0 1
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 -85 
* * 7574885 2952921 1925821 0 4111 0 0 1
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388 128388
+1 * 128388 128388

fn=(1706) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_Vector_base()
0x4064f2 124 10476 0 10476 148 0 0 1
+1 * 10476
+3 * 10476
+4 * 10476 0 10476
cob=(3)
cfi=(100)
cfn=(626)
calls=10476 0x10a310 -92 
* * 502852 199045 125716 0 1979 0 0 1
* * 10476 10476
+5 * 10476 0 10476 4943 0 0 1
+4 +1 10476 10476
+4 * 10476
+3 * 10476 0 10476
cfn=(1708) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_Vector_impl::_Vector_impl()
calls=10476 0x407360 -39 
* * 1917120 743799 523812 742 4928 1 4 3 1
+5 * 10476
+1 * 10476 10476
+1 * 10476 10476

fn=(1708)
0x407360 86 10476 0 10476 149 0 0 1
+1 * 10476
+3 * 10476
+4 * 10476 0 10476
cob=(3)
cfi=(100)
cfn=(626)
calls=10476 0x10a310 -54 
* * 502852 199045 125716 0 1107 0 0 1
* * 10476 10476
+5 * 10476 0 10476
+4 +1 10476 10476
+4 * 10476
+3 * 10476 0 10476
cfi=(152)
cfn=(1710)
calls=10476 0x4082ce +26 
* * 1225700 471422 324764 296 3821 1 2 2 1
+5 * 10476 10476 0 297 0 0 1
+4 * 10476 0 10476
+7 * 10476 10476
+4 * 10476 0 10476
+8 * 10476 10476
+4 * 10476 0 10476
+8 +1 10476
+1 * 10476 10476
+1 * 10476 10476

fn=(1746) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_M_get_Tp_allocator()
0x406568 113 118572 0 118572 149 0 0 1
+1 * 118572
+3 * 118572
+4 * 118572 0 118572
cob=(3)
cfi=(100)
cfn=(626)
calls=118572 0x10a310 -81 
* * 5691476 2252873 1422884 0 2393 1 0 1 1
* * 118572 118572
+5 * 118572 0 118572
+4 +1 118572 118572
+4 * 118572 118572
+1 * 118572 118572

fn=(1812) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::_M_check_len(unsigned long, char const*) const
0x4080f0 1422 66868 0 66868 149 0 0 1
+1 * 66868
+3 * 66868 0 66868
+1 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209672 1270494 802424 0 784 1 0 2 1
* * 66868 66868
+5 * 66868 0 66868 149 0 0 1
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 66868
+9 * 66868 0 66868
+4 * 66868
+2 +2 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1814) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::max_size() const
calls=66868 0x408f78 659 
* * 17118211 6619931 4613902 746 5801 1 2 2 1
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1822) std::vector<BP_Pump*, std::allocator<BP_Pump*> >::size() const
calls=66868 0x40821a 654 
* * 4279556 1738569 1003024 449 0 1974 2 0 1
+5 * 66868
+3 * 66868
+3 * 66868 66868
+4 * 66868 0 0 596 0 0 1
+3 * 66868
+3 * 66868
+2 * 66868
+14 +3 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1822)
calls=66868 0x40821a 654 
* * 4279556 1738569 1003024
+5 * 66868
+3 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1822)
calls=66868 0x40821a 654 
* * 4279552 1738568 1003020
+5 * 66868 0 66868
+4 * 66868
+4 * 66868
+4 * 66868
+3 * 66868 0 0 596 0 0 1
+3 * 66868 0 66868
cfi=(136)
cfn=(1270)
calls=66868 0x408e3d 219 
* * 4290925 1805437 1069892 0 1553 0 0 1
+5 * 66868 66868
+3 * 66868
+3 * 66868 0 66868
+4 +1 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1822)
calls=66868 0x40821a 654 
* * 4279556 1738569 1003024 0 3462 1 0 0 1
+5 * 66868 66868
+4 * 66868
+2 * 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1814)
calls=66868 0x408f78 659 
* * 17118212 6619933 4613896
+5 * 66868 66868
+4 * 66868
+16 * 66868 66868 0 298 0 0 1
+4 0 66868 66868
+4 0 66868 66868
+9 0 66868
+7 0 66868
+4 0 66868 66868
+1 0 66868 66868
+1 0 66868 66868

fn=(1814)
0x408f78 659 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736 596 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419336 2540986 1604840 0 2833 0 0 1
* * 133736 133736
+5 * 133736 0 133736
+4 +1 133736 133736
+4 * 133736
+3 * 133736 0 133736
cfn=(1816) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_M_get_Tp_allocator() const
calls=133736 0x409570 117 
* * 9094041 3610869 2407249 150 2949 1 1 1 1
+5 * 133736
+3 * 133736 0 133736
cfi=(160)
cfn=(1818) std::allocator_traits<std::allocator<BP_Pump*> >::max_size(std::allocator<BP_Pump*> const&)
calls=133736 0x409551 550 
* * 16984478 6553065 4547029 0 19
+5 * 133736 133736
+1 * 133736 133736

fn=(1816)
0x409570 117 133736 0 133736 1
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 -85 
* * 7890417 3075925 2006041 0 2949 1 0 1 1
* * 133736 133736
+5 * 133736 0 133736 149 0 0 1
+4 +1 133736 133736
+4 * 133736 133736
+1 * 133736 133736

fn=(1932)
0x4057b0 931 325863 0 325863
+1 * 325863
+3 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 32 
* * 15641428 6191398 3910360
* * 325863 325863
+5 * 325863 0 325863 148
+4 * 325863 0 325863
+4 +1 325863 325863
+4 * 325863
+3 * 325863 0 325863
cfi=(161)
cfn=(1934) std::remove_reference<BP_Protein*&>::type&& std::move<BP_Protein*&>(BP_Protein*&)
calls=325863 -52 101 
* * 18574195 7494850 4887949 0 2702 1 0 1 1
+5 * 325863
+3 * 325863 325863
+4 * 325863
+3 * 325863
+3 * 325863 0 325863
cfi=(159) /usr/include/c++/5/bits/vector.tcc
cfn=(1936) void std::vector<BP_Protein*, std::allocator<BP_Protein*> >::emplace_back<BP_Protein*>(BP_Protein*&&)
calls=325863 0x406292 91 
* * 386167838 146466257 100895240 14290 58250 123468 21 7 110824
+5 * 325863
+1 * 325863 325863
+1 * 325863 325863

fn=(2014)
0x405da4 253 149 0 149 148 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 +4 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfn=(2016) std::_Vector_base<RNA*, std::allocator<RNA*> >::_Vector_base()
calls=149 0x40688c 124 
* * 36223 14010 9850 595 744 70 4 4 70
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2668) std::_Vector_base<Pump*, std::allocator<Pump*> >::_M_get_Tp_allocator() const
0x4185cc 117 2384 0 2384 149 0 0 1
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 -85 
* * 140649 54829 35761 0 149 0 0 1
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384 2384
+1 * 2384 2384

fn=(2678) std::_Vector_base<Pump*, std::allocator<Pump*> >::_M_allocate(unsigned long)
0x414374 167 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 +3 1192 1192
+5 * 1192
+2 * 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(160)
cfn=(2680) std::allocator_traits<std::allocator<Pump*> >::allocate(std::allocator<Pump*>&, unsigned long)
calls=1192 0x416981 490 
* * 505815 132395 106755 1668 1325 1016 2 3 1015
+5 * 1192
+7 +1 1192 1192
+1 * 1192 1192

fn=(2746) std::vector<Move*, std::allocator<Move*> >::_M_check_len(unsigned long, char const*) const
0x41447a 1422 1340 0 1340 149 0 0 1
+1 * 1340
+3 * 1340 0 1340
+1 * 1340 0 0 149 0 0 1
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 152 1 0 1 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 1340
+9 * 1340 0 1340
+4 * 1340
+2 +2 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2748) std::vector<Move*, std::allocator<Move*> >::max_size() const
calls=1340 0x416a4c 659 
* * 313576 121944 84436 149 297 149 1 1 1
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2756)
calls=1340 0x405fdc 654 
* * 85764 34841 20104 149
+5 * 1340 0 0 149 0 0 1
+3 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340
+2 * 1340
+14 +3 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2756)
calls=1340 0x405fdc 654 
* * 85764 34841 20104 0 148 1 0 0 1
+5 * 1340
+3 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2756)
calls=1340 0x405fdc 654 
* * 85764 34841 20104
+5 * 1340 0 1340
+4 * 1340 0 0 149 0 0 1
+4 * 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(136)
cfn=(1270)
calls=1340 0x408e3d 219 
* * 85913 36181 21444 0 149 1 0 1 1
+5 * 1340 1340
+3 * 1340
+3 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2756)
calls=1340 0x405fdc 654 
* * 85764 34841 20104 0 148
+5 * 1340 1340
+4 * 1340
+2 * 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2748)
calls=1340 0x416a4c 659 
* * 313564 121941 84424
+5 * 1340 1340
+4 * 1340
+16 * 1340 1340 0 149 0 0 1
+4 0 1340 1340
+4 0 1340 1340
+9 0 1340
+7 0 1340
+4 0 1340 1340
+1 0 1340 1340
+1 0 1340 1340

fn=(2810) std::_Vector_base<Move*, std::allocator<Move*> >::_M_deallocate(Move**, unsigned long)
0x41396a 174 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 154 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +3 1340 1340
+5 * 1340
+2 +1 1191 1191
+4 * 1191 1191
+4 * 1191 1191
+4 * 1191
+3 * 1191
+3 * 1191 0 1191
cfi=(160)
cfn=(2814) std::allocator_traits<std::allocator<Move*> >::deallocate(std::allocator<Move*>&, Move**, unsigned long)
calls=1191 0x416262 516 
* * 289149 92904 65210 150 320 1 0 0 1
+5 +1 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(3436) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_Vector_impl::~_Vector_impl()
0x40631a 79 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -47 
* * 2657 1035 676 0 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 45
+4 * 45
+3 * 45 0 45
cfi=(152)
cfn=(3438)
calls=45 0x4070ac +42 
* * 5273 2027 1403 1 2 1 0 0 1
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(3446) std::vector<BP*, std::allocator<BP*> >::~vector()
0x405bbe 423 1 0 1 1
+1 * 1 0 0 1 0 0 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 61 23 16
* * 1 1
+5 * 1 0 1
+4 +2 1 1
+4 * 1
+3 * 1 0 1
cfn=(1544) std::_Vector_base<BP*, std::allocator<BP*> >::_M_get_Tp_allocator()
calls=1 0x406720 113 
* * 61 24 19 0 1 1 0 0 1
+5 * 1
+3 -1 1 1
+4 * 1 1
+4 * 1 1
+4 * 1 1
+3 * 1
+3 * 1
+3 * 1 0 1
cfi=(166)
cfn=(1576)
calls=1 0x406737 148 
* * 189 71 55
+5 +1 1 1
+4 * 1
+3 * 1 0 1
cfn=(3448) std::_Vector_base<BP*, std::allocator<BP*> >::~_Vector_base()
calls=1 0x4066ca 159 
* * 624 222 163 6 10 2 0 0 2
+5 * 1
+1 * 1 1
+1 * 1 1

fn=(1520) std::_Vector_base<BP*, std::allocator<BP*> >::_M_get_Tp_allocator() const
0x409720 117 38164 0 38164 149 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 -85 
* * 2251669 877769 572461 0 1666 1 0 1 1
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164 38164
+1 * 38164 38164

fn=(1730)
0x4084c2 654 296315 0 296315 298 0 0 1
+1 * 296315
+3 * 296315
+4 * 296315 0 296315
cob=(3)
cfi=(100)
cfn=(626)
calls=296315 0x10a310 32 
* * 14223144 5629991 3555804 0 3177 3 0 1 3
* * 296315 296315
+5 * 296315 0 296315
+4 +1 296315 296315
+4 * 296315 296315
+4 * 296315
+3 * 296315 296315
+4 * 296315 296315
+3 * 296315
+3 * 296315
+3 * 296315
+4 * 296315 296315
+1 * 296315 296315

fn=(1838) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_M_get_Tp_allocator()
0x4063b0 113 133781 0 133781 298 0 0 1
+1 * 133781
+3 * 133781
+4 * 133781 0 133781
cob=(3)
cfi=(100)
cfn=(626)
calls=133781 0x10a310 -81 
* * 6421508 2541844 1605392 0 1121 7 0 1 1
* * 133781 133781
+5 * 133781 0 133781 1 0 0 1
+4 +1 133781 133781
+4 * 133781 133781
+1 * 133781 133781

fn=(2018) std::_Vector_base<RNA*, std::allocator<RNA*> >::_Vector_impl::_Vector_impl()
0x407950 86 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -54 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2020)
calls=149 0x4087ee +26 
* * 17441 6707 4627 298 446 0 2 2
+5 * 149 149
+4 * 149 0 149 0 0 34 0 0 34
+7 * 149 149
+4 * 149 0 149 149 0 0 1
+8 * 149 149
+4 * 149 0 149 0 0 35 0 0 35
+8 +1 149
+1 * 149 149
+1 * 149 149

fn=(2088)
0x405e04 253 596 0 596
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 32 
* * 28624 11328 7168 0 149 149 0 1 1
* * 596 596
+5 * 596 0 596
+4 +4 596 596
+4 * 596
+3 * 596 0 596
cfn=(2090) std::_Vector_base<Protein*, std::allocator<Protein*> >::_Vector_base()
calls=596 0x4068d4 124 
* * 144844 56028 39352 149 445 227 1 1 227
+5 * 596
+1 * 596 596
+1 * 596 596

fn=(2194) std::_Vector_base<RNA*, std::allocator<RNA*> >::_M_deallocate(RNA**, unsigned long)
0x413670 174 745 0 745 596 0 0 1
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 436 1 0 1 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +3 745 745
+5 * 745
+2 +1 596 596
+4 * 596 596
+4 * 596 596
+4 * 596
+3 * 596
+3 * 596 0 596
cfi=(160)
cfn=(2196) std::allocator_traits<std::allocator<RNA*> >::deallocate(std::allocator<RNA*>&, RNA**, unsigned long)
calls=596 0x415db4 516 
* * 137088 44106 30404 452 911 0 3 1
+5 +1 745
+1 * 745 745
+1 * 745 745

fn=(2750) std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator() const
0x4186a4 117 2680 0 2680
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 -85 
* * 128644 50921 32164
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680 2680
+1 * 2680 2680

fn=(2760) std::_Vector_base<Move*, std::allocator<Move*> >::_M_allocate(unsigned long)
0x41456c 167 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340 149 0 0 1
+4 +3 1340 1340
+5 * 1340
+2 * 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(160)
cfn=(2762) std::allocator_traits<std::allocator<Move*> >::allocate(std::allocator<Move*>&, unsigned long)
calls=1340 0x416a73 490 
* * 570075 148120 119367 478 628 1166 3 2 1161
+5 * 1340
+7 +1 1340 1340
+1 * 1340 1340

fn=(3422) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::~_Vector_base()
0x406512 159 46 0 46 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 32 
* * 2212 875 556 0 0 1 0 0 1
* * 46 46
+5 * 46 0 46
+4 +2 46 46
+4 * 46 46
+4 -1 46
+3 +1 46 46
+4 * 46 46
+3 -1 46
+3 * 46
+3 * 46
+4 * 46
+3 * 46 46
+4 * 46 46
+3 * 46 46
+4 * 46
+3 * 46
+3 * 46 0 46
cfn=(1784) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_M_deallocate(BP_Move**, unsigned long)
calls=46 0x4073c4 +14 
* * 14776 4934 3437 2 31
+5 +1 46 46
+4 * 46
+3 * 46 0 46
cfn=(3424) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_Vector_impl::~_Vector_impl()
calls=46 0x4064d2 -82 
* * 8154 3131 2174 3 1 1 0 0 1
+5 * 46
+1 * 46 46
+1 * 46 46

fn=(1582) std::_Vector_base<BP*, std::allocator<BP*> >::_M_deallocate(BP**, unsigned long)
0x4076bc 174 19083 0 19083 21
+1 * 19083
+3 * 19083
+4 * 19083 0 19083
cob=(3)
cfi=(100)
cfn=(626)
calls=19083 0x10a310 32 
* * 915996 362580 229008 0 1132 2 0 1 2
* * 19083 19083
+5 * 19083 0 19083
+4 * 19083 0 19083
+4 * 19083 0 19083
+4 +3 19083 19083
+5 * 19083
+2 +1 13867 13867
+4 * 13867 13867
+4 * 13867 13867
+4 * 13867
+3 * 13867
+3 * 13867 0 13867
cfi=(160)
cfn=(1590) std::allocator_traits<std::allocator<BP*> >::deallocate(std::allocator<BP*>&, BP**, unsigned long)
calls=13867 0x4085aa 516 
* * 3218661 1035235 715422 24 3135 1 21 29 1
+5 +1 19083
+1 * 19083 19083
+1 * 19083 19083

fn=(1692) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_M_deallocate(BP_Protein**, unsigned long)
0x406dd4 174 64239 0 64239 301 0 0 1
+1 * 64239
+3 * 64239
+4 * 64239 0 64239
cob=(3)
cfi=(100)
cfn=(626)
calls=64239 0x10a310 32 
* * 3083484 1220544 770880 0 1749 0 0 2
* * 64239 64239
+5 * 64239 0 64239
+4 * 64239 0 64239
+4 * 64239 0 64239
+4 +3 64239 64239
+5 * 64239
+2 +1 53913 53913
+4 * 53913 53913
+4 * 53913 53913
+4 * 53913
+3 * 53913
+3 * 53913 0 53913
cfi=(160)
cfn=(1694) std::allocator_traits<std::allocator<BP_Protein*> >::deallocate(std::allocator<BP_Protein*>&, BP_Protein**, unsigned long)
calls=53913 0x407db2 516 
* * 12754463 4102769 2848299 23 1723 1 11 0 1
+5 +1 64239
+1 * 64239 64239
+1 * 64239 64239

fn=(1784)
0x4073c4 174 59309 0 59309
+1 * 59309
+3 * 59309
+4 * 59309 0 59309
cob=(3)
cfi=(100)
cfn=(626)
calls=59309 0x10a310 32 
* * 2846844 1126874 711720 0 1097 2 0 1 2
* * 59309 59309
+5 * 59309 0 59309
+4 * 59309 0 59309
+4 * 59309 0 59309
+4 +3 59309 59309
+5 * 59309
+2 +1 48833 48833
+4 * 48833 48833
+4 * 48833 48833
+4 * 48833
+3 * 48833
+3 * 48833 0 48833
cfi=(160)
cfn=(1786) std::allocator_traits<std::allocator<BP_Move*> >::deallocate(std::allocator<BP_Move*>&, BP_Move**, unsigned long)
calls=48833 0x408302 516 
* * 11492118 3696837 2563032 302 2503 1 0 2 1
+5 +1 59309
+1 * 59309 59309
+1 * 59309 59309

fn=(1822)
0x40821a 654 334340 0 334340 298 0 0 1
+1 * 334340
+3 * 334340
+4 * 334340 0 334340
cob=(3)
cfi=(100)
cfn=(626)
calls=334340 0x10a310 32 
* * 16048340 6352465 4012100 0 3462 1975 0 0 2
* * 334340 334340
+5 * 334340 0 334340
+4 +1 334340 334340
+4 * 334340 334340
+4 * 334340
+3 * 334340 334340
+4 * 334340 334340
+3 * 334340
+3 * 334340 0 0 151 0 0 1
+3 * 334340
+4 * 334340 334340
+1 * 334340 334340

fn=(1886)
0x405c08 547 7438 0 7438 2 0 0 1
+1 * 7438
+3 * 7438
+4 * 7438 0 7438
cob=(3)
cfi=(100)
cfn=(626)
calls=7438 0x10a310 32 
* * 409492 160398 103578 0 299 152 0 3 3
* * 7438 7438
+5 * 7438 0 7438
+4 * 7438 7438
+9 * 7438 0 7438
+4 * 7438
+2 +1 7438 7438
+4 * 7438
+4 * 7438
+3 * 7438
+3 * 7438 0 7438
cfi=(164)
cfn=(1888)
calls=7438 0x406766 740 
* * 461160 185951 126450 3 5137 0 1 1
+5 * 7438 7438
+4 * 7438 7438 0 2 0 0 1
+4 * 7438 7438
+9 * 7438
+7 * 7438 7438
+1 * 7438 7438

fn=(1918)
0x405674 547 10475 0 10475 2252 0 0 1
+1 * 10475
+3 * 10475
+4 * 10475 0 10475 613 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=10475 0x10a310 32 
* * 502812 199028 125712 0 1539 150 0 2 2
* * 10475 10475
+5 * 10475 0 10475
+4 * 10475 10475
+9 * 10475 0 10475
+4 * 10475
+2 +1 10475 10475
+4 * 10475
+4 * 10475
+3 * 10475
+3 * 10475 0 10475
cfi=(164)
cfn=(1920)
calls=10475 0x40623e 740 
* * 649454 261876 178079 448 6519 0 1 1
+5 * 10475 10475
+4 * 10475 10475
+4 * 10475 10475
+9 * 10475
+7 * 10475 10475
+1 * 10475 10475 0 149 0 0 1

fn=(1922)
0x4056c2 565 16733 0 16733
+1 * 16733
+3 * 16733
+4 * 16733 0 16733
cob=(3)
cfi=(100)
cfn=(626)
calls=16733 0x10a310 32 
* * 803196 317930 200808 0 1210 1 0 1 1
* * 16733 16733
+5 * 16733 0 16733
+4 * 16733 16733
+9 * 16733 0 16733
+4 * 16733
+2 +1 16733 16733
+4 * 16733
+4 * 16733
+4 * 16733
+3 * 16733
+3 * 16733 0 16733
cfi=(164)
cfn=(1920)
calls=16733 0x40623e 740 
* * 1037450 418326 284465 0 3
+5 * 16733 16733
+4 * 16733 16733 0 150 0 0 1
+4 * 16733 16733
+9 * 16733
+7 * 16733 16733
+1 * 16733 16733

fn=(1982)
0x405850 547 11816 0 11816 151 0 0 1
+1 * 11816
+3 * 11816
+4 * 11816 0 11816
cob=(3)
cfi=(100)
cfn=(626)
calls=11816 0x10a310 32 
* * 567180 224507 141804 0 1597 1 0 1 1
* * 11816 11816
+5 * 11816 0 11816
+4 * 11816 11816
+9 * 11816 0 11816
+4 * 11816
+2 +1 11816 11816
+4 * 11816
+4 * 11816
+3 * 11816
+3 * 11816 0 11816 151 0 0 1
cfi=(164)
cfn=(1984)
calls=11816 0x4063f6 740 
* * 732596 295401 200876 766 8010 0 1 1
+5 * 11816 11816
+4 * 11816 11816
+4 * 11816 11816
+9 * 11816
+7 * 11816 11816
+1 * 11816 11816

fn=(2126)
0x40ff42 913 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114436 45297 28612 0 0 1 0 0 1
* * 2384 2384
+5 * 2384 0 2384
+4 * 2384 0 2384
+4 +2 2384 2384
+4 * 2384 2384 0 0 216
+4 * 2384 2384
+4 * 2384 2384 0 0 229
+4 * 2384
+3 * 2384
+2 +2 1639 1639
+4 * 1639 1639
+4 * 1639 1639
+4 * 1639 1639
+4 * 1639
+3 * 1639
+3 * 1639 0 1639
cfi=(160)
cfn=(2152) _ZNSt16allocator_traitsISaIP3RNAEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=1639 0x41139d 529 
* * 513011 196681 140958 0 5344 1735 0 0 1
+5 +2 1639 1639
+4 * 1639 1639
+4 * 1639
+4 * 1639 1639
+4 * 1639 0 1639
+4 +8 1639
+2 -4 745 745 0 2 0 0 1
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfi=(159)
cfn=(2128) void std::vector<RNA*, std::allocator<RNA*> >::_M_emplace_back_aux<RNA* const&>(RNA* const&)
calls=745 0x4113dc 407 
* * 2991649 1114576 771289 10230 16599 3133 49 25 609
+5 +4 2384
+1 * 2384 2384
+1 * 2384 2384

fn=(2140) std::vector<RNA*, std::allocator<RNA*> >::size() const
0x40600c 654 3725 0 3725 2 0 0 1
+1 * 3725
+3 * 3725
+4 * 3725 0 3725
cob=(3)
cfi=(100)
cfn=(626)
calls=3725 0x10a310 32 
* * 178820 70780 44720 0 903 474 0 1 2
* * 3725 3725
+5 * 3725 0 3725
+4 +1 3725 3725
+4 * 3725 3725
+4 * 3725
+3 * 3725 3725
+4 * 3725 3725
+3 * 3725
+3 * 3725
+3 * 3725
+4 * 3725 3725
+1 * 3725 3725

fn=(2202)
0x40ffb4 547 458 0 458
+1 * 458
+3 * 458
+4 * 458 0 458 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=458 0x10a310 32 
* * 22004 8707 5516 0 300 1 0 4 1
* * 458 458
+5 * 458 0 458
+4 * 458 458
+9 * 458 0 458
+4 * 458
+2 +1 458 458
+4 * 458
+4 * 458
+3 * 458
+3 * 458 0 458
cfi=(164)
cfn=(2204)
calls=458 0x4115cc 740 
* * 28400 11451 7790 15 292 1 0 0 1
+5 * 458 458
+4 * 458 458
+4 * 458 458
+9 * 458
+7 * 458 458
+1 * 458 458 0 149 0 0 1

fn=(2470) std::_Vector_base<Protein*, std::allocator<Protein*> >::_M_allocate(unsigned long)
0x413d04 167 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +3 149 149
+5 * 149
+2 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(160)
cfn=(2472) std::allocator_traits<std::allocator<Protein*> >::allocate(std::allocator<Protein*>&, unsigned long)
calls=149 0x4163c7 490 
* * 59165 15648 12379 149 446 73 1 2 73
+5 * 149
+7 +1 149 149
+1 * 149 149

fn=(2820)
0x40a9e2 547 37 0 37
+1 * 37
+3 * 37
+4 * 37 0 37
cob=(3)
cfi=(100)
cfn=(626)
calls=37 0x10a310 32 
* * 1804 710 472 0 5 0 0 5
* * 37 37
+5 * 37 0 37
+4 * 37 37
+9 * 37 0 37
+4 * 37 0 0 2 0 0 1
+2 +1 37 37
+4 * 37
+4 * 37
+3 * 37
+3 * 37 0 37
cfi=(164)
cfn=(2822)
calls=37 0x40ae32 740 
* * 2298 926 633 0 4 1 0 1 1
+5 * 37 37
+4 * 37 37
+4 * 37 37
+9 * 37
+7 * 37 37
+1 * 37 37

fn=(2824)
0x40aa30 565 53 0 53
+1 * 53
+3 * 53
+4 * 53 0 53
cob=(3)
cfi=(100)
cfn=(626)
calls=53 0x10a310 32 
* * 2572 1014 664 0 0 2 0 0 2
* * 53 53
+5 * 53 0 53 2 0 0 1
+4 * 53 53
+9 * 53 0 53
+4 * 53
+2 +1 53 53
+4 * 53
+4 * 53
+4 * 53
+3 * 53
+3 * 53 0 53
cfi=(164)
cfn=(2822)
calls=53 0x40ae32 740 
* * 3290 1326 905
+5 * 53 53
+4 * 53 53
+4 * 53 53
+9 * 53
+7 * 53 53
+1 * 53 53 0 2 0 0 1

fn=(3432)
0x405806 423 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 32 
* * 2164 856 544
* * 45 45
+5 * 45 0 45
+4 +2 45 45
+4 * 45
+3 * 45 0 45
cfn=(1838)
calls=45 0x4063b0 113 
* * 2569 1036 679 1 1
+5 * 45
+3 -1 45 45
+4 * 45 45
+4 * 45 45
+4 * 45 45
+3 * 45
+3 * 45
+3 * 45 0 45
cfi=(166)
cfn=(1870)
calls=45 0x4063c7 148 
* * 8813 3327 2431 2 3 1 0 0 1
+5 +1 45 45
+4 * 45
+3 * 45 0 45
cfn=(3434) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::~_Vector_base()
calls=45 0x40635a 159 
* * 27335 9791 6667 6 32 2 0 0 2
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(3450) std::_Vector_base<BP*, std::allocator<BP*> >::_Vector_impl::~_Vector_impl()
0x40668a 79 1 0 1 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -47 
* * 61 23 16
* * 1 1
+5 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(152)
cfn=(3452)
calls=1 0x40769c +42 
* * 125 47 39 0 1 1 0 0 1
+5 * 1
+1 * 1 1
+1 * 1 1

fn=(1502) std::_Vector_base<BP*, std::allocator<BP*> >::_Vector_base()
0x4066aa 124 5812 0 5812 154 0 0 1
+1 * 5812
+3 * 5812
+4 * 5812 0 5812
cob=(3)
cfi=(100)
cfn=(626)
calls=5812 0x10a310 -92 
* * 278980 110429 69748 0 1227 0 0 1
* * 5812 5812
+5 * 5812 0 5812
+4 +1 5812 5812
+4 * 5812 0 0 148 0 0 1
+3 * 5812 0 5812
cfn=(1504)
calls=5812 0x407658 -39 
* * 1063608 412655 290612 908 2114 1 5 3 1
+5 * 5812
+1 * 5812 5812
+1 * 5812 5812

fn=(1654) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_M_get_Tp_allocator()
0x4061f8 113 128433 0 128433 298 0 0 1
+1 * 128433
+3 * 128433
+4 * 128433 0 128433 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=128433 0x10a310 -81 
* * 6164804 2440232 1541216 0 6 1050 0 0 2
* * 128433 128433
+5 * 128433 0 128433
+4 +1 128433 128433
+4 * 128433 128433
+1 * 128433 128433

fn=(1716)
0x41cde6 913 1120 0 1120 1 0 0 1
+1 * 1120
+3 * 1120
+4 * 1120 0 1120
cob=(3)
cfi=(100)
cfn=(626)
calls=1120 0x10a310 32 
* * 53764 21281 13444
* * 1120 1120
+5 * 1120 0 1120
+4 * 1120 0 1120
+4 +2 1120 1120
+4 * 1120 1120 0 1 0 0 1
+4 * 1120 1120
+4 * 1120 1120
+4 * 1120
+3 * 1120
+2 +2 861 861
+4 * 861 861
+4 * 861 861
+4 * 861 861
+4 * 861
+3 * 861
+3 * 861 0 861
cfi=(160)
cfn=(1742) _ZNSt16allocator_traitsISaIP7BP_MoveEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=861 0x41d704 529 
* * 269497 103321 74050 0 3 39 0 0 39
+5 +2 861 861
+4 * 861 861
+4 * 861
+4 * 861 861
+4 * 861 0 861
+4 +8 861
+2 -4 259 259 0 2 0 0 1
+4 * 259 259
+4 * 259
+3 * 259
+3 * 259 0 259
cfi=(159)
cfn=(1718) void std::vector<BP_Move*, std::allocator<BP_Move*> >::_M_emplace_back_aux<BP_Move* const&>(BP_Move* const&)
calls=259 0x41d742 407 
* * 1052558 393010 272703 123 141 361 64 22 342
+5 +4 1120
+1 * 1120 1120
+1 * 1120 1120

fn=(1798) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_Vector_base()
0x40633a 124 11369 0 11369 1 0 0 1
+1 * 11369
+3 * 11369 0 0 150 0 0 1
+4 * 11369 0 11369
cob=(3)
cfi=(100)
cfn=(626)
calls=11369 0x10a310 -92 
* * 545716 216012 136432 0 3712 1 0 1 1
* * 11369 11369
+5 * 11369 0 11369
+4 +1 11369 11369
+4 * 11369
+3 * 11369 0 11369
cfn=(1800) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_Vector_impl::_Vector_impl()
calls=11369 0x407068 -39 
* * 2080539 807202 568462 595 4238 1 5 3 1
+5 * 11369
+1 * 11369 11369
+1 * 11369 11369

fn=(1800)
0x407068 86 11369 0 11369 1 0 0 1
+1 * 11369
+3 * 11369
+4 * 11369 0 11369
cob=(3)
cfi=(100)
cfn=(626)
calls=11369 0x10a310 -54 
* * 545716 216012 136432 0 7 0 0 1
* * 11369 11369
+5 * 11369 0 11369
+4 +1 11369 11369
+4 * 11369
+3 * 11369 0 11369 148 0 0 1
cfi=(152)
cfn=(1802)
calls=11369 0x408026 +26 
* * 1330181 511607 352447 446 4231 1 3 2 1
+5 * 11369 11369
+4 * 11369 0 11369
+7 * 11369 11369
+4 * 11369 0 11369
+8 * 11369 11369
+4 * 11369 0 11369
+8 +1 11369
+1 * 11369 11369
+1 * 11369 11369

fn=(1876) std::_Vector_base<BP_Pump*, std::allocator<BP_Pump*> >::_M_deallocate(BP_Pump**, unsigned long)
0x4070cc 174 66913 0 66913 149 0 0 1
+1 * 66913
+3 * 66913
+4 * 66913 0 66913
cob=(3)
cfi=(100)
cfn=(626)
calls=66913 0x10a310 32 
* * 3212320 1271526 803100 0 4145 3 0 2 1
* * 66913 66913
+5 * 66913 0 66913
+4 * 66913 0 66913
+4 * 66913 0 66913
+4 +3 66913 66913
+5 * 66913
+2 +1 55544 55544
+4 * 55544 55544
+4 * 55544 55544
+4 * 55544
+3 * 55544
+3 * 55544 0 55544
cfi=(160)
cfn=(1878) std::allocator_traits<std::allocator<BP_Pump*> >::deallocate(std::allocator<BP_Pump*>&, BP_Pump**, unsigned long)
calls=55544 0x40805a 516 
* * 13121968 4221029 2929359 7 1950 0 0 1
+5 +1 66913
+1 * 66913 66913
+1 * 66913 66913

fn=(1954)
0x405a7a 565 46678 0 46678
+1 * 46678
+3 * 46678 0 0 3 0 0 1
+4 * 46678 0 46678
cob=(3)
cfi=(100)
cfn=(626)
calls=46678 0x10a310 32 
* * 2240556 886885 560148 0 1 0 0 1
* * 46678 46678
+5 * 46678 0 46678
+4 * 46678 46678
+9 * 46678 0 46678
+4 * 46678
+2 +1 46678 46678
+4 * 46678
+4 * 46678
+4 * 46678
+3 * 46678
+3 * 46678 0 46678
cfi=(164)
cfn=(1952)
calls=46678 0x4065ae 740 
* * 2894040 1166951 793530 0 939 1 0 1 1
+5 * 46678 46678
+4 * 46678 46678
+4 * 46678 46678 0 3 0 0 1
+9 * 46678
+7 * 46678 46678
+1 * 46678 46678

fn=(2110) std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_base()
0x406914 124 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -92 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2112) std::_Vector_base<Move*, std::allocator<Move*> >::_Vector_impl::_Vector_impl()
calls=149 0x407a1c -39 
* * 27279 10582 7462 148 297 35 1 1 35
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2112)
0x407a1c 86 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -54 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2114)
calls=149 0x40884e +26 
* * 17441 6707 4627 0 297 1 0 1 1
+5 * 149 149
+4 * 149 0 149 148 0 0 1
+7 * 149 149
+4 * 149 0 149 0 0 34 0 0 34
+8 * 149 149
+4 * 149 0 149
+8 +1 149
+1 * 149 149
+1 * 149 149

fn=(2130) std::vector<RNA*, std::allocator<RNA*> >::_M_check_len(unsigned long, char const*) const
0x413a1a 1422 745 0 745 149 0 0 1
+1 * 745
+3 * 745 0 745
+1 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 446 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 * 745 745
+9 * 745 0 745 149 0 0 1
+4 * 745
+2 +2 745 745
+4 * 745
+3 * 745 0 745
cfn=(2132)
calls=745 0x4162ae 659 
* * 174346 67799 46951 1045 1839 533 6 3 2
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2140)
calls=745 0x40600c 654 
* * 47684 19371 11179 2 0 0 1
+5 * 745
+3 * 745
+3 * 745 745
+4 * 745
+3 * 745
+3 * 745
+2 * 745
+14 +3 745 745 0 149 0 0 1
+4 * 745
+3 * 745 0 745
cfn=(2140)
calls=745 0x40600c 654 
* * 47684 19371 11179 0 434 1 0 1 1
+5 * 745
+3 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2140)
calls=745 0x40600c 654 
* * 47684 19371 11179 0 469
+5 * 745 0 745
+4 * 745
+4 * 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfi=(136)
cfn=(1270)
calls=745 0x408e3d 219 
* * 47833 20116 11924
+5 * 745 745
+3 * 745
+3 * 745 0 745
+4 +1 745 745
+4 * 745 0 0 149 0 0 1
+3 * 745 0 745
cfn=(2140)
calls=745 0x40600c 654 
* * 47684 19371 11179 0 0 473 0 0 1
+5 * 745 745
+4 * 745
+2 * 745 745
+4 * 745
+3 * 745 0 745
cfn=(2132)
calls=745 0x4162ae 659 
* * 174334 67796 46939
+5 * 745 745
+4 * 745
+16 * 745 745
+4 0 745 745
+4 0 745 745
+9 0 745
+7 0 745 0 0 149 0 0 1
+4 0 745 745
+1 0 745 745
+1 0 745 745

fn=(2456) std::vector<Protein*, std::allocator<Protein*> >::_M_check_len(unsigned long, char const*) const
0x413c12 1422 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 +2 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfn=(2458) std::vector<Protein*, std::allocator<Protein*> >::max_size() const
calls=149 0x4163a0 659 
* * 34882 13563 9403 745 447 149 3 1 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2466) std::vector<Protein*, std::allocator<Protein*> >::size() const
calls=149 0x405f7c 654 
* * 9540 3875 2239 149 183 1 1 0 1
+5 * 149
+3 * 149
+3 * 149 149
+4 * 149
+3 * 149
+3 * 149
+2 * 149
+14 +3 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfn=(2466)
calls=149 0x405f7c 654 
* * 9540 3875 2239 0 149 0 0 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2466)
calls=149 0x405f7c 654 
* * 9540 3875 2239 0 0 1 0 0 1
+5 * 149 0 149
+4 * 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(136)
cfn=(1270)
calls=149 0x408e3d 219 
* * 9689 4024 2388 0 148
+5 * 149 149
+3 * 149
+3 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2466)
calls=149 0x405f7c 654 
* * 9540 3875 2239
+5 * 149 149 0 149 0 0 1
+4 * 149
+2 * 149 149
+4 * 149
+3 * 149 0 149
cfn=(2458)
calls=149 0x4163a0 659 
* * 34870 13560 9391 0 0 149 0 0 1
+5 * 149 149
+4 * 149
+16 * 149 149
+4 0 149 149
+4 0 149 149
+9 0 149
+7 0 149
+4 0 149 149 0 149 0 0 1
+1 0 149 149
+1 0 149 149

fn=(2458)
0x4163a0 659 298 0 298 149
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14312 5664 3584 0 149 149 0 1 1
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298
cfn=(2460) std::_Vector_base<Protein*, std::allocator<Protein*> >::_M_get_Tp_allocator() const
calls=298 0x418058 117 
* * 16990 6855 4474 149 149 149 1 0 1
+5 * 298
+3 * 298 0 298 149 0 0 1
cfi=(160)
cfn=(2462) std::allocator_traits<std::allocator<Protein*> >::max_size(std::allocator<Protein*> const&)
calls=298 0x418039 550 
* * 34576 13412 9246 298 149 0 1
+5 * 298 298
+1 * 298 298

fn=(2460)
0x418058 117 298 0 298 149 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -85 
* * 14308 5663 3580 0 149 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298 298
+1 * 298 298

fn=(2660)
0x410340 913 12367 0 12367 149 0 0 1
+1 * 12367
+3 * 12367
+4 * 12367 0 12367
cob=(3)
cfi=(100)
cfn=(626)
calls=12367 0x10a310 32 
* * 593620 234974 148408 0 0 1 0 0 1
* * 12367 12367
+5 * 12367 0 12367
+4 * 12367 0 12367
+4 +2 12367 12367
+4 * 12367 12367 0 0 54
+4 * 12367 12367
+4 * 12367 12367 0 0 39
+4 * 12367
+3 * 12367
+2 +2 11175 11175
+4 * 11175 11175
+4 * 11175 11175
+4 * 11175 11175
+4 * 11175
+3 * 11175
+3 * 11175 0 11175
cfi=(160)
cfn=(2686) _ZNSt16allocator_traitsISaIP4PumpEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=11175 0x4119e6 529 
* * 3497779 1341001 961054 0 0 933 0 0 933
+5 +2 11175 11175
+4 * 11175 11175
+4 * 11175
+4 * 11175 11175
+4 * 11175 0 11175
+4 +8 11175
+2 -4 1192 1192 0 149 0 0 1
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(159)
cfn=(2662) void std::vector<Pump*, std::allocator<Pump*> >::_M_emplace_back_aux<Pump* const&>(Pump* const&)
calls=1192 0x411a24 407 
* * 4931767 1830000 1275395 9873 6304 4485 41 19 3448
+5 +4 12367
+1 * 12367 12367
+1 * 12367 12367

fn=(2690) std::_Vector_base<Pump*, std::allocator<Pump*> >::_M_get_Tp_allocator()
0x411284 113 2384 0 2384 149 0 0 1
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 -81 
* * 114440 45298 28616 0 0 1 0 0 1
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384 2384
+1 * 2384 2384

fn=(3130)
0x410584 779 490 0 490
+1 * 490
+3 * 490
+4 * 490 0 490
cob=(3)
cfi=(100)
cfn=(626)
calls=490 0x10a310 32 
* * 23536 9314 5896 0 2 2 0 2 2
* * 490 490
+5 * 490 0 490
+4 * 490 0 490
+4 +1 490 490
+4 * 490 490
+3 * 490 490
+4 * 490
+4 * 490
+3 * 490 490
+1 * 490 490

fn=(3424)
0x4064d2 79 46 0 46 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 -47 
* * 2212 875 556 0 0 1 0 0 1
* * 46 46
+5 * 46 0 46
+4 * 46 46
+4 * 46
+3 * 46 0 46
cfi=(152)
cfn=(3426)
calls=46 0x4073a4 +42 
* * 5390 2072 1434 2 1
+5 * 46
+1 * 46 46
+1 * 46 46

fn=(1530) std::_Vector_base<BP*, std::allocator<BP*> >::_M_allocate(unsigned long)
0x408732 167 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915944 362560 228992 0 0 1 0 0 1
* * 19082 19082
+5 * 19082 0 19082 149 0 0 1
+4 * 19082 0 19082
+4 +3 19082 19082
+5 * 19082
+2 * 19082 19082
+4 * 19082 19082
+4 * 19082
+3 * 19082
+3 * 19082 0 19082
cfi=(160)
cfn=(1532) std::allocator_traits<std::allocator<BP*> >::allocate(std::allocator<BP*>&, unsigned long)
calls=19082 0x4091fb 490 
* * 7362481 2037452 1560941 1487 6851 8889 32 17 7982
+5 * 19082
+7 +1 19082 19082
+1 * 19082 19082

fn=(1544)
0x406720 113 38166 0 38166 149 0 0 1
+1 * 38166
+3 * 38166
+4 * 38166 0 38166
cob=(3)
cfi=(100)
cfn=(626)
calls=38166 0x10a310 -81 
* * 1831992 725160 458016 0 991 7 0 2 3
* * 38166 38166
+5 * 38166 0 38166
+4 +1 38166 38166
+4 * 38166 38166
+1 * 38166 38166

fn=(1612)
0x40560a 253 10326 0 10326 147
+1 * 10326
+3 * 10326
+4 * 10326 0 10326
cob=(3)
cfi=(100)
cfn=(626)
calls=10326 0x10a310 32 
* * 495656 196196 123920 0 2437 1555 0 2 2
* * 10326 10326
+5 * 10326 0 10326
+4 +4 10326 10326
+4 * 10326
+3 * 10326 0 10326
cfn=(1614) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_Vector_base()
calls=10326 0x406182 124 
* * 2509234 970648 681532 1830 8212 3472 6 4 1
+5 * 10326
+1 * 10326 10326
+1 * 10326 10326

fn=(1614)
0x406182 124 10326 0 10326 595 0 0 1
+1 * 10326
+3 * 10326
+4 * 10326 0 10326
cob=(3)
cfi=(100)
cfn=(626)
calls=10326 0x10a310 -92 
* * 495652 196195 123916 0 3291 0 0 1
* * 10326 10326
+5 * 10326 0 10326
+4 +1 10326 10326
+4 * 10326
+3 * 10326 0 10326
cfn=(1616) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_Vector_impl::_Vector_impl()
calls=10326 0x406d70 -39 
* * 1889670 733149 516312 1235 4921 3472 5 3 1
+5 * 10326
+1 * 10326 10326
+1 * 10326 10326

fn=(1616)
0x406d70 86 10326 0 10326 150 0 0 1
+1 * 10326
+3 * 10326
+4 * 10326 0 10326
cob=(3)
cfi=(100)
cfn=(626)
calls=10326 0x10a310 -54 
* * 495652 196195 123916 0 2027 0 0 1
* * 10326 10326
+5 * 10326 0 10326 319 0 0 1
+4 +1 10326 10326
+4 * 10326
+3 * 10326 0 10326
cfi=(152)
cfn=(1618)
calls=10326 0x407d7e +26 
* * 1208150 464672 320114 766 2894 3472 3 2 1
+5 * 10326 10326
+4 * 10326 0 10326
+7 * 10326 10326
+4 * 10326 0 10326
+8 * 10326 10326
+4 * 10326 0 10326
+8 +1 10326
+1 * 10326 10326
+1 * 10326 10326

fn=(1704) std::vector<BP_Move*, std::allocator<BP_Move*> >::vector()
0x4059c2 253 10476 0 10476 148 0 0 1
+1 * 10476
+3 * 10476
+4 * 10476 0 10476
cob=(3)
cfi=(100)
cfn=(626)
calls=10476 0x10a310 32 
* * 502856 199046 125720 0 1546 2 0 2 1
* * 10476 10476
+5 * 10476 0 10476
+4 +4 10476 10476
+4 * 10476
+3 * 10476 0 10476
cfn=(1706)
calls=10476 0x4064f2 124 
* * 2545684 984748 691432 5833 6907 1 6 4 1
+5 * 10476
+1 * 10476 10476
+1 * 10476 10476

fn=(1808)
0x41cd74 913 1275 0 1275
+1 * 1275
+3 * 1275
+4 * 1275 0 1275 16 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1275 0x10a310 32 
* * 61204 24226 15304
* * 1275 1275
+5 * 1275 0 1275
+4 * 1275 0 1275
+4 +2 1275 1275
+4 * 1275 1275
+4 * 1275 1275
+4 * 1275 1275
+4 * 1275
+3 * 1275
+2 +2 1010 1010
+4 * 1010 1010
+4 * 1010 1010
+4 * 1010 1010
+4 * 1010
+3 * 1010
+3 * 1010 0 1010
cfi=(160)
cfn=(1834) _ZNSt16allocator_traitsISaIP7BP_PumpEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=1010 0x41d4c0 529 
* * 316134 121201 86864 0 1 50 0 0 50
+5 +2 1010 1010
+4 * 1010 1010
+4 * 1010
+4 * 1010 1010
+4 * 1010 0 1010
+4 +8 1010
+2 -4 265 265
+4 * 265 265
+4 * 265
+3 * 265
+3 * 265 0 265
cfi=(159)
cfn=(1810) void std::vector<BP_Pump*, std::allocator<BP_Pump*> >::_M_emplace_back_aux<BP_Pump* const&>(BP_Pump* const&)
calls=265 0x41d4fe 407 
* * 1078323 402524 279355 54 167 416 29 15 389
+5 +4 1275
+1 * 1275 1275
+1 * 1275 1275

fn=(1900)
0x405d44 931 103108 0 103108 148 0 0 1
+1 * 103108
+3 * 103108
+4 * 103108 0 103108
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 32 
* * 4949192 1959054 1237304
* * 103108 103108
+5 * 103108 0 103108
+4 * 103108 0 103108
+4 +1 103108 103108
+4 * 103108
+3 * 103108 0 103108
cfi=(161)
cfn=(1902) std::remove_reference<BP*&>::type&& std::move<BP*&>(BP*&)
calls=103108 -52 101 
* * 5877160 2371485 1546624 0 155 0 0 1
+5 * 103108
+3 * 103108 103108
+4 * 103108
+3 * 103108
+3 * 103108 0 103108
cfi=(159)
cfn=(1904) void std::vector<BP*, std::allocator<BP*> >::emplace_back<BP*>(BP*&&)
calls=103108 0x4067ba 91 
* * 117267588 44576431 30681069 8890 39686 33953 42 19 28328
+5 * 103108
+1 * 103108 103108 0 0 1 0 0 1
+1 * 103108 103108

fn=(1996)
0x40598c 931 320350 0 320350 149 0 0 1
+1 * 320350
+3 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 32 
* * 15376804 6086651 3844204
* * 320350 320350
+5 * 320350 0 320350
+4 * 320350 0 320350
+4 +1 320350 320350
+4 * 320350
+3 * 320350 0 320350
cfi=(161)
cfn=(1998) std::remove_reference<BP_Pump*&>::type&& std::move<BP_Pump*&>(BP_Pump*&)
calls=320350 -52 101 
* * 18259954 7368051 4805254 0 6 1 0 0 1
+5 * 320350
+3 * 320350 320350
+4 * 320350
+3 * 320350
+3 * 320350 0 320350
cfi=(159)
cfn=(2000) void std::vector<BP_Pump*, std::allocator<BP_Pump*> >::emplace_back<BP_Pump*>(BP_Pump*&&)
calls=320350 0x40644a 91 
* * 393528497 149167008 102784182 9279 50907 119095 10 4 107074
+5 * 320350
+1 * 320350 320350
+1 * 320350 320350

fn=(2100)
0x4068f4 124 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149 148 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -92 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2102) std::_Vector_base<Pump*, std::allocator<Pump*> >::_Vector_impl::_Vector_impl()
calls=149 0x4079d8 -39 
* * 27279 10582 7462 445 297 81 2 1 81
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2102)
0x4079d8 86 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -54 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(152)
cfn=(2104)
calls=149 0x40882e +26 
* * 17441 6707 4627 296 148 0 1
+5 * 149 149
+4 * 149 0 149 0 0 41 0 0 41
+7 * 149 149 0 149 0 0 1
+4 * 149 0 149
+8 * 149 149
+4 * 149 0 149 0 0 39 0 0 39
+8 +1 149
+1 * 149 149
+1 * 149 149

fn=(2134)
0x417f80 117 1490 0 1490 447 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 -85 
* * 71524 28311 17884 0 535 0 0 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490 1490
+1 * 1490 1490

fn=(2144) std::_Vector_base<RNA*, std::allocator<RNA*> >::_M_allocate(unsigned long)
0x413b0c 167 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 +3 745 745
+5 * 745
+2 * 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfi=(160)
cfn=(2146) std::allocator_traits<std::allocator<RNA*> >::allocate(std::allocator<RNA*>&, unsigned long)
calls=745 0x4162d5 490 
* * 294859 77489 59626 596 1846 410 2 3 409
+5 * 745
+7 +1 745 745 0 149 0 0 1
+1 * 745 745

fn=(2482) std::_Vector_base<Protein*, std::allocator<Protein*> >::_M_get_Tp_allocator()
0x4111c8 113 298 0 298 149 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -81 
* * 14312 5664 3584 0 0 149 0 0 1
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298 298
+1 * 298 298

fn=(2666)
0x41695a 659 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114440 45298 28616 0 149 149 0 1 1
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384
+3 * 2384 0 2384
cfn=(2668)
calls=2384 0x4185cc 117 
* * 162105 64365 42913 149 149 0 1 1
+5 * 2384
+3 * 2384 0 2384
cfi=(160)
cfn=(2670) std::allocator_traits<std::allocator<Pump*> >::max_size(std::allocator<Pump*> const&)
calls=2384 0x4185ac 550 
* * 302774 116817 81061 149 148 1 1 0 1
+5 * 2384 2384
+1 * 2384 2384 0 149 0 0 1

fn=(2742)
0x410458 913 35015 0 35015 149 0 0 1
+1 * 35015
+3 * 35015
+4 * 35015 0 35015
cob=(3)
cfi=(100)
cfn=(626)
calls=35015 0x10a310 32 
* * 1680724 665286 420184 0 148 1 0 0 1
* * 35015 35015
+5 * 35015 0 35015
+4 * 35015 0 35015
+4 +2 35015 35015
+4 * 35015 35015 0 0 34
+4 * 35015 35015
+4 * 35015 35015
+4 * 35015
+3 * 35015 0 0 149 0 0 1
+2 +2 33675 33675
+4 * 33675 33675
+4 * 33675 33675
+4 * 33675 33675
+4 * 33675
+3 * 33675
+3 * 33675 0 33675
cfi=(160)
cfn=(2768) _ZNSt16allocator_traitsISaIP4MoveEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=33675 0x411c2a 529 
* * 10540279 4041001 2896054 0 0 3594 0 0 3594
+5 +2 33675 33675
+4 * 33675 33675
+4 * 33675
+4 * 33675 33675
+4 * 33675 0 33675
+4 +8 33675
+2 -4 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340 0 0 149 0 0 1
+3 * 1340 0 1340
cfi=(159)
cfn=(2744) void std::vector<Move*, std::allocator<Move*> >::_M_emplace_back_aux<Move* const&>(Move* const&)
calls=1340 0x411c68 407 
* * 5517098 2045847 1427329 5695 4931 6921 32 16 6003
+5 +4 35015
+1 * 35015 35015
+1 * 35015 35015

fn=(2772) std::_Vector_base<Move*, std::allocator<Move*> >::_M_get_Tp_allocator()
0x411340 113 2680 0 2680 149 0 0 1
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 -81 
* * 128648 50922 32168 0 482 1 0 1 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680 2680
+1 * 2680 2680

fn=(1518)
0x4091d4 659 38164 0 38164 297 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831880 725118 457976 0 952 0 0 1
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164
+3 * 38164 0 38164
cfn=(1520)
calls=38164 0x409720 117 
* * 2595145 1030425 686953 149 1666 1 1 1 1
+5 * 38164
+3 * 38164 0 38164
cfi=(160)
cfn=(1522) std::allocator_traits<std::allocator<BP*> >::max_size(std::allocator<BP*> const&)
calls=38164 0x409701 550 
* * 4846834 1870037 1297581 4 1006 1 3 1 1
+5 * 38164 38164
+1 * 38164 38164

fn=(1624)
0x41cc90 913 1347 0 1347
+1 * 1347
+3 * 1347
+4 * 1347 0 1347
cob=(3)
cfi=(100)
cfn=(626)
calls=1347 0x10a310 32 
* * 64664 25595 16172
* * 1347 1347
+5 * 1347 0 1347
+4 * 1347 0 1347
+4 +2 1347 1347
+4 * 1347 1347
+4 * 1347 1347
+4 * 1347 1347
+4 * 1347
+3 * 1347
+2 +2 1074 1074
+4 * 1074 1074
+4 * 1074 1074
+4 * 1074 1074
+4 * 1074
+3 * 1074
+3 * 1074 0 1074
cfi=(160)
cfn=(1650) _ZNSt16allocator_traitsISaIP10BP_ProteinEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=1074 0x41d037 529 
* * 336166 128881 92368 0 0 61 0 0 59
+5 +2 1074 1074
+4 * 1074 1074
+4 * 1074
+4 * 1074 1074
+4 * 1074 0 1074
+4 +8 1074
+2 -4 273 273 0 1 0 0 1
+4 * 273 273
+4 * 273
+3 * 273
+3 * 273 0 273
cfi=(159)
cfn=(1626) void std::vector<BP_Protein*, std::allocator<BP_Protein*> >::_M_emplace_back_aux<BP_Protein* const&>(BP_Protein* const&)
calls=273 0x41d076 407 
* * 1110501 414664 287700 80 170 433 57 26 409
+5 +4 1347
+1 * 1347 1347
+1 * 1347 1347

fn=(1638)
0x407f72 654 320970 0 320970 298 0 0 1
+1 * 320970
+3 * 320970
+4 * 320970 0 320970
cob=(3)
cfi=(100)
cfn=(626)
calls=320970 0x10a310 32 
* * 15406584 6098436 3851664 0 3620 2 0 1 2
* * 320970 320970
+5 * 320970 0 320970 596 0 0 1
+4 +1 320970 320970
+4 * 320970 320970
+4 * 320970
+3 * 320970 320970
+4 * 320970 320970
+3 * 320970
+3 * 320970
+3 * 320970
+4 * 320970 320970
+1 * 320970 320970

fn=(2016)
0x40688c 124 149 0 149 148 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -92 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfn=(2018)
calls=149 0x407950 -39 
* * 27279 10582 7462 447 595 70 3 3 70
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2466)
0x405f7c 654 745 0 745
+1 * 745
+3 * 745 0 0 149 0 0 1
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35780 14160 8960 0 445 2 0 1 2
* * 745 745
+5 * 745 0 745
+4 +1 745 745
+4 * 745 745
+4 * 745
+3 * 745 745
+4 * 745 745 0 0 35
+3 * 745
+3 * 745
+3 * 745
+4 * 745 745
+1 * 745 745

fn=(2748)
0x416a4c 659 2680 0 2680 149 0 0 1
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128648 50922 32168 0 297 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680
+3 * 2680 0 2680
cfn=(2750)
calls=2680 0x4186a4 117 
* * 152764 61641 40204
+5 * 2680
+3 * 2680 0 2680
cfi=(160)
cfn=(2752) std::allocator_traits<std::allocator<Move*> >::max_size(std::allocator<Move*> const&)
calls=2680 0x418685 550 
* * 310888 120602 83088 0 0 149 0 0 1
+5 * 2680 2680
+1 * 2680 2680

fn=(3420) std::vector<BP_Move*, std::allocator<BP_Move*> >::~vector()
0x4059e2 423 46 0 46 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 32 
* * 2212 875 556 0 0 1 0 0 1
* * 46 46
+5 * 46 0 46
+4 +2 46 46
+4 * 46
+3 * 46 0 46
cfn=(1746)
calls=46 0x406568 113 
* * 2626 1059 694 1 1
+5 * 46
+3 -1 46 46
+4 * 46 46
+4 * 46 46
+4 * 46 46
+3 * 46
+3 * 46
+3 * 46 0 46
cfi=(166)
cfn=(1778)
calls=46 0x40657f 148 
* * 8514 3221 2350 4 3
+5 +1 46 46
+4 * 46
+3 * 46 0 46
cfn=(3422)
calls=46 0x406512 159 
* * 26384 9446 6397 6 32 2 0 0 2
+5 * 46
+1 * 46 46
+1 * 46 46

fn=(3444) std::vector<BP*, std::allocator<BP*> >::_M_erase_at_end(BP**)
0x406842 1436 1 0 1 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+4 +2 1 1
+4 * 1
+3 * 1 0 1
cfn=(1544)
calls=1 0x406720 113 
* * 61 24 19 1 1 1 0 0 1
+5 * 1
+3 * 1 1
+4 * 1 1
+4 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(166)
cfn=(1576)
calls=1 0x406737 148 
* * 189 71 55 3 3
+5 +1 1 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 +1 1
+1 * 1 1
+1 * 1 1

fn=(3448)
0x4066ca 159 1 0 1 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 +2 1 1
+4 * 1 1
+4 -1 1
+3 +1 1 1
+4 * 1 1
+3 -1 1
+3 * 1
+3 * 1
+4 * 1
+3 * 1 1
+4 * 1 1
+3 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfn=(1582)
calls=1 0x4076bc +14 
* * 347 117 83 4 8
+5 +1 1 1
+4 * 1
+3 * 1 0 1
cfn=(3450)
calls=1 0x40668a -82 
* * 198 74 59 1 1 1 0 0 1
+5 * 1
+1 * 1 1
+1 * 1 1

fn=(1642) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::_M_allocate(unsigned long)
0x407f3a 167 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081320 1219688 770336 0 0 1967 0 0 1
* * 64194 64194
+5 * 64194 0 64194
+4 * 64194 0 64194
+4 +3 64194 64194
+5 * 64194
+2 * 64194 64194
+4 * 64194 64194
+4 * 64194
+3 * 64194
+3 * 64194 0 64194
cfi=(160)
cfn=(1644) std::allocator_traits<std::allocator<BP_Protein*> >::allocate(std::allocator<BP_Protein*>&, unsigned long)
calls=64194 0x408e71 490 
* * 24543987 6664515 5190983 725 2504 43756 7 3 41520
+5 * 64194
+7 +1 64194 64194
+1 * 64194 64194

fn=(1964) std::vector<BP_Move*, std::allocator<BP_Move*> >::push_back(BP_Move*&&)
0x405b68 931 259111 0 259111
+1 * 259111
+3 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 32 
* * 12437332 4923110 3109336 0 779 1 0 0 1
* * 259111 259111
+5 * 259111 0 259111
+4 * 259111 0 259111
+4 +1 259111 259111
+4 * 259111
+3 * 259111 0 259111
cfi=(161)
cfn=(1966) std::remove_reference<BP_Move*&>::type&& std::move<BP_Move*&>(BP_Move*&)
calls=259111 -52 101 
* * 14769331 5959554 3886669 0 681
+5 * 259111
+3 * 259111 259111
+4 * 259111
+3 * 259111
+3 * 259111 0 259111
cfi=(159)
cfn=(1968) void std::vector<BP_Move*, std::allocator<BP_Move*> >::emplace_back<BP_Move*>(BP_Move*&&)
calls=259111 0x406602 91 
* * 337197976 127717883 88021225 18244 42999 91570 9 4 85089
+5 * 259111
+1 * 259111 259111
+1 * 259111 259111

fn=(2090)
0x4068d4 124 596 0 596
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 -92 
* * 28612 11325 7156 0 148 1 0 0 1
* * 596 596
+5 * 596 0 596
+4 +1 596 596
+4 * 596
+3 * 596 0 596
cfn=(2092) std::_Vector_base<Protein*, std::allocator<Protein*> >::_Vector_impl::_Vector_impl()
calls=596 0x407994 -39 
* * 109080 42319 29812 149 297 226 1 1 226
+5 * 596
+1 * 596 596
+1 * 596 596

fn=(2092)
0x407994 86 596 0 596
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 -54 
* * 28612 11325 7156
* * 596 596
+5 * 596 0 596
+4 +1 596 596
+4 * 596
+3 * 596 0 596
cfi=(152)
cfn=(2094)
calls=596 0x40880e +26 
* * 69740 26822 18484 0 297 1 0 1 1
+5 * 596 596
+4 * 596 0 596 0 0 76 0 0 76
+7 * 596 596
+4 * 596 0 596 149 0 69 1 0 69
+8 * 596 596
+4 * 596 0 596 0 0 80 0 0 80
+8 +1 596
+1 * 596 596
+1 * 596 596

fn=(2520) std::_Vector_base<Protein*, std::allocator<Protein*> >::_M_deallocate(Protein**, unsigned long)
0x41385e 174 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +3 149 149
+5 * 149
+25 +2 149
+1 * 149 149
+1 * 149 149

fn=(3408)
0x40562a 423 45 0 45 1 0 0 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 32 
* * 2164 856 544
* * 45 45
+5 * 45 0 45
+4 +2 45 45
+4 * 45
+3 * 45 0 45
cfn=(1654)
calls=45 0x4061f8 113 
* * 2569 1036 679 1 2 1 0 0 1
+5 * 45
+3 -1 45 45
+4 * 45 45
+4 * 45 45
+4 * 45 45
+3 * 45
+3 * 45
+3 * 45 0 45
cfi=(166)
cfn=(1686)
calls=45 0x40620f 148 
* * 8329 3151 2299 2 3 1
+5 +1 45 45
+4 * 45
+3 * 45 0 45
cfn=(3410) std::_Vector_base<BP_Protein*, std::allocator<BP_Protein*> >::~_Vector_base()
calls=45 0x4061a2 159 
* * 25955 9284 6292 16 32 2 1 0 2
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(3410)
0x4061a2 159 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 32 
* * 2164 856 544 0 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 +2 45 45
+4 * 45 45
+4 -1 45
+3 +1 45 45
+4 * 45 45
+3 -1 45
+3 * 45
+3 * 45
+4 * 45
+3 * 45 45
+4 * 45 45
+3 * 45 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfn=(1692)
calls=45 0x406dd4 +14 
* * 14599 4870 3396 13 31
+5 +1 45 45
+4 * 45
+3 * 45 0 45
cfn=(3412)
calls=45 0x406162 -82 
* * 7977 3063 2127 2 1 1 1 0 1
+5 * 45
+1 * 45 45
+1 * 45 45

fn=(3442) std::vector<BP*, std::allocator<BP*> >::clear()
0x405d7a 1211 1 0 1 1
+1 * 1
+3 * 1 0 0 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+4 +1 1 1
+4 * 1 1 0 0 1
+3 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfn=(3444)
calls=1 0x406842 1436 
* * 325 124 97 6 5 1 0 0 1
+5 * 1
+1 * 1 1
+1 * 1 1

fn=(1500)
0x405b9e 253 5812 0 5812 149 0 0 1
+1 * 5812
+3 * 5812
+4 * 5812 0 5812
cob=(3)
cfi=(100)
cfn=(626)
calls=5812 0x10a310 32 
* * 278988 110431 69756 0 1440 1 0 3 1
* * 5812 5812
+5 * 5812 0 5812
+4 +4 5812 5812
+4 * 5812
+3 * 5812 0 5812
cfn=(1502)
calls=5812 0x4066aa 124 
* * 1412332 546332 383608 1210 3341 1 7 4 1
+5 * 5812
+1 * 5812 5812
+1 * 5812 5812

fn=(1512)
0x41cd02 913 461 0 461 1 0 0 1
+1 * 461
+3 * 461
+4 * 461 0 461
cob=(3)
cfi=(100)
cfn=(626)
calls=461 0x10a310 32 
* * 22172 8770 5576 0 2 4 0 0 3
* * 461 461
+5 * 461 0 461
+4 * 461 0 461
+4 +2 461 461
+4 * 461 461
+4 * 461 461
+4 * 461 461
+4 * 461
+3 * 461
+2 +2 451 451
+4 * 451 451
+4 * 451 451
+4 * 451 451
+4 * 451
+3 * 451
+3 * 451 0 451
cfi=(160)
cfn=(1538) _ZNSt16allocator_traitsISaIP2BPEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
calls=451 0x41d27c 529 
* * 141167 54121 38790 0 0 55 0 0 53
+5 +2 451 451
+4 * 451 451
+4 * 451
+4 * 451 451
+4 * 451 0 451
+4 +8 451
+2 -4 10 10 0 1 0 0 1
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(159)
cfn=(1514) void std::vector<BP*, std::allocator<BP*> >::_M_emplace_back_aux<BP* const&>(BP* const&)
calls=10 0x41d2ba 407 
* * 45948 16676 11524 100 280 110 96 95 92
+5 +4 461
+1 * 461 461
+1 * 461 461

fn=(1734) std::_Vector_base<BP_Move*, std::allocator<BP_Move*> >::_M_allocate(unsigned long)
0x40848a 167 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844632 1125999 711164 0 4 0 0 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 +3 59263 59263
+5 * 59263
+2 * 59263 59263
+4 * 59263 59263
+4 * 59263
+3 * 59263
+3 * 59263 0 59263
cfi=(160)
cfn=(1736) std::allocator_traits<std::allocator<BP_Move*> >::allocate(std::allocator<BP_Move*>&, unsigned long)
calls=59263 0x4090cd 490 
* * 22563025 6141274 4783077 700 4242 34997 22 4 34798
+5 * 59263
+7 +1 59263 59263
+1 * 59263 59263

fn=(1796)
0x4057e6 253 11369 0 11369 1 0 0 1
+1 * 11369
+3 * 11369
+4 * 11369 0 11369
cob=(3)
cfi=(100)
cfn=(626)
calls=11369 0x10a310 32 
* * 545720 216013 136436 0 1245 0 0 2
* * 11369 11369
+5 * 11369 0 11369
+4 +4 11369 11369
+4 * 11369
+3 * 11369 0 11369 1 0 0 1
cfn=(1798)
calls=11369 0x40633a 124 
* * 2762683 1068690 750370 746 7950 2 7 4 2
+5 * 11369
+1 * 11369 11369
+1 * 11369 11369

fn=(1950)
0x405a2c 547 11663 0 11663 151 0 0 1
+1 * 11663
+3 * 11663
+4 * 11663 0 11663
cob=(3)
cfi=(100)
cfn=(626)
calls=11663 0x10a310 32 
* * 559836 221600 139968 0 987 1 0 2 1
* * 11663 11663
+5 * 11663 0 11663
+4 * 11663 11663 0 3 0 0 1
+9 * 11663 0 11663
+4 * 11663
+2 +1 11663 11663
+4 * 11663
+4 * 11663
+3 * 11663
+3 * 11663 0 11663
cfi=(164)
cfn=(1952)
calls=11663 0x4065ae 740 
* * 723110 291576 198275 300 7500 1 1 1 1
+5 * 11663 11663
+4 * 11663 11663
+4 * 11663 11663
+9 * 11663
+7 * 11663 11663
+1 * 11663 11663

fn=(1986)
0x40589e 565 24183 0 24183
+1 * 24183
+3 * 24183
+4 * 24183 0 24183
cob=(3)
cfi=(100)
cfn=(626)
calls=24183 0x10a310 32 
* * 1160796 459480 290208 0 149 1 0 1 1
* * 24183 24183
+5 * 24183 0 24183
+4 * 24183 24183
+9 * 24183 0 24183
+4 * 24183
+2 +1 24183 24183 0 151 0 0 1
+4 * 24183
+4 * 24183
+4 * 24183
+3 * 24183
+3 * 24183 0 24183
cfi=(164)
cfn=(1984)
calls=24183 0x4063f6 740 
* * 1499350 604576 411115 0 672
+5 * 24183 24183
+4 * 24183 24183
+4 * 24183 24183
+9 * 24183
+7 * 24183 24183
+1 * 24183 24183

fn=(2108)
0x405e44 253 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 +4 149 149
+4 * 149
+3 * 149 0 149
cfn=(2110)
calls=149 0x406914 124 
* * 36223 14010 9850 148 297 35 1 1 35
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2156) std::_Vector_base<RNA*, std::allocator<RNA*> >::_M_get_Tp_allocator()
0x410fa4 113 1490 0 1490 149 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 -81 
* * 71528 28312 17888 0 0 1 0 0 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490 1490
+1 * 1490 1490

fn=(2206)
0x410002 565 7772 0 7772 1
+1 * 7772
+3 * 7772
+4 * 7772 0 7772
cob=(3)
cfi=(100)
cfn=(626)
calls=7772 0x10a310 32 
* * 373076 147673 93284 0 1 2 0 0 2
* * 7772 7772
+5 * 7772 0 7772
+4 * 7772 7772
+9 * 7772 0 7772
+4 * 7772
+2 +1 7772 7772
+4 * 7772
+4 * 7772
+4 * 7772
+3 * 7772
+3 * 7772 0 7772
cfi=(164)
cfn=(2204)
calls=7772 0x4115cc 740 
* * 481868 194301 132128 0 332 1 0 1 1
+5 * 7772 7772
+4 * 7772 7772 0 149 0 0 1
+4 * 7772 7772
+9 * 7772
+7 * 7772 7772
+1 * 7772 7772

fn=(2452)
0x4101fc 913 149 0 149
+1 * 149
+3 * 149 0 0 149 0 0 1
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149 149 0 0 149
+4 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+51 +8 149 149 0 149 0 0 1
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(159)
cfn=(2454) void std::vector<Protein*, std::allocator<Protein*> >::_M_emplace_back_aux<Protein* const&>(Protein* const&)
calls=149 0x41165e 407 
* * 567882 212969 148298 6556 5089 978 38 17 90
+5 +4 149
+1 * 149 149
+1 * 149 149

fn=(2674)
0x405fac 654 5960 0 5960
+1 * 5960
+3 * 5960
+4 * 5960 0 5960
cob=(3)
cfi=(100)
cfn=(626)
calls=5960 0x10a310 32 
* * 286100 113245 71540 0 446 150 0 2 2
* * 5960 5960
+5 * 5960 0 5960
+4 +1 5960 5960 0 149 0 0 1
+4 * 5960 5960
+4 * 5960
+3 * 5960 5960
+4 * 5960 5960
+3 * 5960
+3 * 5960
+3 * 5960
+4 * 5960 5960
+1 * 5960 5960

fn=(3434)
0x40635a 159 45 0 45 1
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 32 
* * 2657 1035 676
* * 45 45
+5 * 45 0 45
+4 +2 45 45
+4 * 45 45
+4 -1 45
+3 +1 45 45
+4 * 45 45
+3 -1 45
+3 * 45
+3 * 45
+4 * 45
+3 * 45 45
+4 * 45 45
+3 * 45 45
+4 * 45
+3 * 45
+3 * 45 0 45
cfn=(1876)
calls=45 0x4070cc +14 
* * 14993 5019 3507 3 30
+5 +1 45 45
+4 * 45
+3 * 45 0 45
cfn=(3436)
calls=45 0x40631a -82 
* * 8470 3242 2259 2 2 2 0 0 2
+5 * 45
+1 * 45 45
+1 * 45 45

fl=(173)
fn=(1806)
0x41c9ca 11 1275 0 1275
+1 * 1275
+3 * 1275
+4 * 1275 0 1275
cob=(3)
cfi=(100)
cfn=(626)
calls=1275 0x10a310 +21 
* * 61204 24226 15304 0 0 3 0 0 1
* * 1275 1275
+5 * 1275 0 1275
+4 * 1275
+2 * 1275 0 1275
+5 * 1275 0 1275
+5 * 1275 0 1275
+3 * 1275 0 1275
+3 +1 1275 1275
+4 * 1275 1275
+4 * 1275 0 1275
+2 +1 1275 1275
+4 * 1275 1275
+5 * 1275 0 1275
+5 +1 1275 1275
+4 * 1275 1275
+5 * 1275 0 1275
+5 +1 1275 1275
+4 * 1275 1275
+3 * 1275 0 1275
+3 +1 1275
+1 * 1275 1275
+1 * 1275 1275

fn=(1994)
0x40478e 18 320350 0 320350 161 0 0 1
+1 * 320350
+3 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 +14 
* * 15376804 6086651 3844204 0 2107 1 0 1 1
* * 320350 320350
+5 * 320350 0 320350
+4 * 320350 0 320350
+4 +1 320350 320350
+4 * 320350 320350 0 0 168689
+3 * 320350 320350
+4 * 320350 0 320350
+2 +1 320350 320350
+4 * 320350 320350
+5 * 320350 320350
+4 * 320350 0 320350
+5 +1 320350 320350
+4 * 320350 320350
+5 * 320350 320350
+4 * 320350 0 320350
+5 +1 320350 320350
+4 * 320350 320350
+3 * 320350 320350
+4 * 320350 0 320350
+3 +1 320350
+1 * 320350 320350
+1 * 320350 320350

fl=(135)
fn=(1228)
0x41df1a 104 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -72 
* * 52 20 16 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+3 +2 1 1
+4 * 1 1
+3 * 1 1
+3 * 1
+2 * 1
+3 * 1 0 1 1 0 0 1
cfn=(1230) std::uniform_int_distribution<int>::param_type::param_type(int, int)
calls=1 +54 -31 
* * 69 27 23 1 1 1 1
+5 +1 1
+1 * 1 1
+1 * 1 1

fn=(1230)
0x41df76 75 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -43 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+3 +2 1 1
+4 * 1 1
+3 * 1 0 1
+2 * 1 1
+4 * 1 1
+3 * 1 0 1
+3 +3 1
+1 * 1 1
+1 * 1 1

fn=(1236) std::uniform_int_distribution<int>::param_type::b() const
0x41e14c 87 1000000 0 1000000 1 0 0 1
+1 * 1000000
+3 * 1000000
+4 * 1000000 0 1000000
cob=(3)
cfi=(100)
cfn=(626)
calls=1000000 0x10a310 -55 
* * 48000004 19000001 12000004 0 1 1
* * 1000000 1000000
+5 * 1000000 0 1000000
+4 +1 1000000 1000000
+4 * 1000000 1000000
+3 * 1000000 1000000
+1 * 1000000 1000000

fn=(1234) int std::uniform_int_distribution<int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<int>::param_type const&)
0x41dfa4 217 1000000 0 1000000
+1 * 1000000
+3 * 1000000 0 1000000
+1 * 1000000
+7 * 1000000 0 1000000
cob=(3)
cfi=(100)
cfn=(626)
calls=1000000 0x10a310 32 
* * 48000004 19000001 12000004 0 0 1
* * 1000000 1000000
+5 * 1000000 0 1000000
+4 * 1000000 0 1000000
+4 * 1000000 0 1000000 1 0 0 1
+7 * 1000000 1000000
+9 * 1000000 0 1000000
+4 * 1000000
+2 +10 1000000 0 1000000
+8 +1 1000000
+5 * 1000000 0 1000000
+4 +1 1000000
+5 * 1000000 0 1000000
+4 +2 1000000 1000000
+7 * 1000000
+3 * 1000000 0 1000000
cfn=(1236)
calls=1000000 0x41e14c 87 
* * 58000004 24000001 15000004 1 1 1 1
+5 * 1000000
+3 * 1000000 1000000 0 1 0 0 1
+7 * 1000000
+3 * 1000000 0 1000000
cfn=(1238) std::uniform_int_distribution<int>::param_type::a() const
calls=1000000 0x41e166 83 
* * 58000004 24000001 15000004 0 1
+5 * 1000000
+2 * 1000000
+3 * 1000000
+3 * 1000000 0 1000000
+4 +4 1000000
+5 * 1000000 1000000
+4 * 1000000
+2 +3 1000000 1000000
+4 * 1000000
+4 * 1000000 0 1000000
+4 +1 1000000
+5 * 1000000
+5 * 1000000 1000000
+4 * 1000000 0 1000000 1 0 0 1
+4 +1 1000000 1000000
+4 * 1000000 1000000
+5 * 1000000 0 1000000
+4 +2 1000000 1000000
+4 * 1000000
+3 * 1000000 0 1000000
cfi=(134)
cfn=(1240) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
calls=1000000 0x407a94 453 
* * 117855565 48142557 24055588 11 1 3 11
+5 * 1000000 0 1000000
+4 -1 1000000 1000000
+4 * 1000000 1000000
+4 * 1000000
+4 +3 1000000 1000000
+4 * 1000000
+5 * 1000000 1000000
+4 * 1000000 0 1000000
+4 * 1000000 0 0 1 0 0 1
0x41e117 +32 1000000 1000000 0 1 0 0 1
+7 * 1000000
+3 * 1000000 0 1000000
cfn=(1238)
calls=1000000 +69 83 
* * 58000004 24000001 15000004 0 1
+5 * 1000000
+2 * 1000000 1000000
+4 * 1000000
+2 +1 1000000 1000000
+4 * 1000000 1000000
+9 * 1000000
+7 * 1000000
+7 * 1000000 1000000
+1 * 1000000 1000000
+1 * 1000000 1000000

fn=(1360)
0x405e92 164 8259 0 8259
+1 * 8259
+3 * 8259
+4 * 8259 0 8259
cob=(3)
cfi=(100)
cfn=(626)
calls=8259 0x10a310 32 
* * 396476 156932 99152 0 23 3 0 5 3
* * 8259 8259
+5 * 8259 0 8259
+4 * 8259 0 8259
+4 +1 8259 8259
+4 * 8259 8259
+4 * 8259 8259
+4 * 8259
+3 * 8259
+3 * 8259 0 8259
cfn=(1362) unsigned int std::uniform_int_distribution<unsigned int>::operator()<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, std::uniform_int_distribution<unsigned int>::param_type const&)
calls=8259 0x406982 +52 
* * 3329534 1312493 829906 6 624 3 6 125 2
+5 * 8259 8259
+1 * 8259 8259

fn=(1362)
0x406982 217 8259 0 8259
+1 * 8259
+3 * 8259 0 8259
+1 * 8259
+7 * 8259 0 8259
cob=(3)
cfi=(100)
cfn=(626)
calls=8259 0x10a310 32 
* * 396436 156922 99112
* * 8259 8259
+5 * 8259 0 8259
+4 * 8259 0 8259
+4 * 8259 0 8259
+7 * 8259 8259
+9 * 8259 0 8259
+4 * 8259
+2 +10 8259 0 8259
+8 +1 8259
+5 * 8259 0 8259 1 0 0 1
+4 +1 8259
+5 * 8259 0 8259
+4 +2 8259 8259
+7 * 8259
+3 * 8259 0 8259
cfn=(1364) std::uniform_int_distribution<unsigned int>::param_type::b() const
calls=8259 0x407a60 87 
* * 479026 198217 123889 1 3 1 1 3 1
+5 * 8259
+2 * 8259 8259
+7 * 8259
+3 * 8259 0 8259
cfn=(1366) std::uniform_int_distribution<unsigned int>::param_type::a() const
calls=8259 0x407a7a 83 
* * 479026 198217 123889
+5 * 8259
+2 * 8259
+3 * 8259
+3 * 8259 0 8259
+4 +4 8259
+5 * 8259 8259
+4 * 8259 0 0 1 0 0 1
+2 +3 7235 7235
+4 * 7235
+4 * 7235 0 7235
+4 +1 7235
+5 * 7235
+5 * 7235 7235
+4 * 7235 0 7235
+4 +1 7235 7235
+4 * 7235 7235
+5 * 7235 0 7235
+4 +2 7235 7235
+4 * 7235
+3 * 7235 0 7235
cfi=(134)
cfn=(1240)
calls=7235 0x407a94 453 
* * 838328 342318 172751 1 410 0 1 82
+5 * 7235 0 7235
+4 -1 7235 7235
+4 * 7235 7235
+4 * 7235
+4 +3 7235 7235
+4 * 7235
+5 * 7235 7235
+4 * 7235 0 7235
+4 * 7235
+5 +2 1024 0 0 1 0 0 1
+5 * 1024 1024
+4 * 1024
0x406ae4 +28 1024 1024 0 1 0 0 1
+4 * 1024
+3 * 1024 0 1024
cfi=(134)
cfn=(1240)
calls=1024 0x407a94 453 
* * 127958 52331 25292 0 208 2 0 37 1
+5 * 1024 0 1024
+4 +2 1024 1024
+7 * 1024
+3 * 1024 0 1024
cfn=(1366)
calls=1024 0x407a7a 83 
* * 59396 24577 15364 0 1 0 0 1
-10 * 7235 7235
+7 * 7235
+3 * 7235 0 7235
cfn=(1366)
calls=7235 0x407a7a 83 
* * 419630 173640 108525 0 2 0 0 2
+5 * 8259
+2 * 8259 8259
+4 * 8259
+2 +1 8259 8259
+4 * 8259 8259
+9 * 8259
+7 * 8259
+7 * 8259 8259
+1 * 8259 8259
+1 * 8259 8259

fn=(1356)
0x405e64 104 909 0 909 1 0 0 1
+1 * 909
+3 * 909
+4 * 909 0 909
cob=(3)
cfi=(100)
cfn=(626)
calls=909 0x10a310 -72 
* * 43676 17282 10952 0 23 6 0 4 4
* * 909 909
+5 * 909 0 909
+4 * 909 0 909
+3 * 909 0 909
+3 +2 909 909
+4 * 909 909 0 1 0 0 1
+3 * 909 909
+3 * 909
+2 * 909
+3 * 909 0 909
cfn=(1358) std::uniform_int_distribution<unsigned int>::param_type::param_type(unsigned int, unsigned int)
calls=909 0x406934 -31 
* * 59089 23635 17275 1 3 2 1 2 2
+5 +1 909
+1 * 909 909
+1 * 909 909

fn=(1358)
0x406934 75 909 0 909 1 0 0 1
+1 * 909
+3 * 909
+4 * 909 0 909
cob=(3)
cfi=(100)
cfn=(626)
calls=909 0x10a310 -43 
* * 43636 17272 10912 0 3 2 0 2 2
* * 909 909
+5 * 909 0 909
+4 * 909 0 909
+3 * 909 0 909
+3 +2 909 909
+4 * 909 909
+3 * 909 0 909
+2 * 909 909
+4 * 909 909
+3 * 909 0 909
+3 +3 909
+1 * 909 909
+1 * 909 909

fn=(1238)
0x41e166 83 2000000 0 2000000
+1 * 2000000
+3 * 2000000
+4 * 2000000 0 2000000
cob=(3)
cfi=(100)
cfn=(626)
calls=2000000 0x10a310 -51 
* * 96000008 38000002 24000008 0 2
* * 2000000 2000000
+5 * 2000000 0 2000000
+4 +1 2000000 2000000
+4 * 2000000 2000000
+2 * 2000000 2000000
+1 * 2000000 2000000

fn=(1366)
0x407a7a 83 16518 0 16518
+1 * 16518
+3 * 16518
+4 * 16518 0 16518
cob=(3)
cfi=(100)
cfn=(626)
calls=16518 0x10a310 -51 
* * 792872 313844 198224 0 3 0 0 3
* * 16518 16518
+5 * 16518 0 16518
+4 +1 16518 16518
+4 * 16518 16518
+2 * 16518 16518
+1 * 16518 16518

fn=(1232)
0x41df48 164 1000000 0 1000000
+1 * 1000000
+3 * 1000000
+4 * 1000000 0 1000000
cob=(3)
cfi=(100)
cfn=(626)
calls=1000000 0x10a310 32 
* * 48000004 19000001 12000004
* * 1000000 1000000
+5 * 1000000 0 1000000
+4 * 1000000 0 1000000
+4 +1 1000000 1000000
+4 * 1000000 1000000
+4 * 1000000 1000000
+4 * 1000000
+3 * 1000000
+3 * 1000000 0 1000000
cfn=(1234)
calls=1000000 +53 +52 
* * 405855581 160142561 101055604 17 4 5 17
+5 * 1000000 1000000
+1 * 1000000 1000000

fn=(1364)
0x407a60 87 8259 0 8259 1 0 0 1
+1 * 8259
+3 * 8259
+4 * 8259 0 8259
cob=(3)
cfi=(100)
cfn=(626)
calls=8259 0x10a310 -55 
* * 396436 156922 99112 0 3 1 0 3 1
* * 8259 8259
+5 * 8259 0 8259
+4 +1 8259 8259
+4 * 8259 8259
+3 * 8259 8259
+1 * 8259 8259

fl=(158)
fn=(1792)
0x41cbce 61 38 0 38
+1 * 38
+3 * 38
+4 * 38 0 38
cob=(3)
cfi=(100)
cfn=(626)
calls=38 0x10a310 -29 
* * 1828 723 460
* * 38 38
+5 * 38 0 38
+4 * 38 0 38
+3 * 38 0 38
+5 * 38 0 38
+5 * 38 38
+4 * 38 0 38
+8 * 38 38
+4 * 38 0 38
+8 * 38 38
+4 * 38 0 38
+8 +1 38 38
+4 * 38 38
+3 * 38 0 38
+2 +1 38 38
+4 * 38 38
+5 * 38 0 38
+5 +1 38 38
+4 * 38 38
+5 * 38 0 38
+5 +1 38
+1 * 38 38
+1 * 38 38

fn=(1882)
0x41cb26 45 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -13 
* * 2164 856 544 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 0 45
+3 * 45 0 45
+4 * 45 45
+4 * 45 0 45
+8 * 45 45
+4 * 45 0 45
+8 * 45 45
+4 * 45 0 45
+8 +1 45 45
+4 * 45 45
+3 * 45 0 45
+2 +1 45 45
+4 * 45 45
+4 * 45 0 45
+4 +1 45
+1 * 45 45
+1 * 45 45

fn=(1700)
0x41cad2 37 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -5 
* * 2164 856 544 0 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45 0 45
+3 * 45 0 45
+4 * 45 45
+4 * 45 0 45
+8 * 45 45
+4 * 45 0 45 1 0 0 1
+8 * 45 45
+4 * 45 0 45
+8 +1 45 45
+4 * 45 45
+3 * 45 0 45
+2 +1 45 45
+4 * 45 45
+4 * 45 0 45
+4 +1 45
+1 * 45 45
+1 * 45 45

fn=(1510)
0x41ca8e 32 249 0 249 1 0 0 1
+1 * 249
+3 * 249
+4 * 249 0 249
cob=(3)
cfi=(100)
cfn=(626)
calls=249 0x10a310 * 
* * 11976 4737 3012 0 15 4 0 4 4
* * 249 249
+5 * 249 0 249
+4 * 249 0 249
+3 * 249 249
+4 * 249 0 249
+8 * 249 249
+4 * 249 0 249
+8 * 249 249
+4 * 249 0 249 1 0 0 1
+8 * 249 249
+4 * 249 249
+3 * 249 0 249
+2 * 249
+1 * 249 249
+1 * 249 249

fn=(1608)
0x41cc38 70 38 0 38 1 0 0 1
+1 * 38
+3 * 38
+4 * 38 0 38 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=38 0x10a310 -38 
* * 1828 723 460 0 3
* * 38 38
+5 * 38 0 38
+4 * 38 0 38
+3 * 38 0 38
+5 * 38 38
+4 * 38 0 38
+8 * 38 38
+4 * 38 0 38
+8 * 38 38
+4 * 38 0 38
+8 +1 38 38
+4 * 38 38
+3 * 38 0 38
+2 +1 38 38 0 1 0 0 1
+4 * 38 38
+5 * 38 0 38
+5 +1 38
+1 * 38 38
+1 * 38 38

fn=(1898)
0x404b6c 75 103108 0 103108 148 0 0 1
+1 * 103108
+3 * 103108 0 103108
+2 * 103108 0 103108
+1 * 103108
+4 * 103108 0 103108
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 -43 
* * 4949192 1959054 1237304 0 148 151 0 0 2
* * 103108 103108
+5 * 103108 0 103108
+4 * 103108 0 103108 149 0 0 1
+4 * 103108 103108
+4 * 103108 0 103108 0 0 1
+8 * 103108 103108
+4 * 103108 0 103108
+8 * 103108 103108
+4 * 103108 0 103108 0 0 2
+8 +1 103108 103108
+4 * 103108 103108 0 0 23332
+2 * 103108 103108
+4 * 103108 0 103108
+2 +1 103108 103108
+4 * 103108 103108
+5 * 103108 103108 0 149 0 0 1
+4 * 103108 0 103108
+5 +1 103108 103108
+4 * 103108 103108
+5 * 103108 103108
+4 * 103108 0 103108
+5 +2 103108 103108
+4 * 103108 103108 0 0 17512
+4 * 103108
+3 * 103108
+2 +1 10281
+5 * 10281 0 10281
cob=(8)
cfi=(94)
cfn=(1312)
calls=10281 0x8de60 -81 
* * 1960128 327294 297390 0 6 3187 0 0 3177
* * 10281 10281
+5 * 10281
+3 * 10281 10281
+4 * 10281 10281
+4 * 10281
+3 * 10281
+3 * 10281 0 10281
cfi=(168)
cfn=(1916)
calls=10281 0x4045c4 -65 
* * 635736218 228394565 160094251 24307 306474 247111 34 16 227475
+5 * 10281 10281
+4 * 10281 0 10281
+4 +6 10281
+5 -5 92827 92827 0 149 0 0 1
+4 * 92827 92827
+4 * 92827
+3 * 92827
+2 +1 11324
+5 * 11324 0 11324
cob=(8)
cfi=(94)
cfn=(1312)
calls=11324 0x8de60 -83 
* * 2128049 356118 331173 0 2 3482 0 0 3471
* * 11324 11324
+5 * 11324
+3 * 11324 11324
+4 * 11324 11324
+4 * 11324
+3 * 11324
+3 * 11324 0 11324
cfi=(172)
cfn=(1980)
calls=11324 0x4047e6 -69 
* * 639580373 230109015 160922146 11736 289659 236693 25 10 222664
+5 * 11324 11324
+4 * 11324 0 11324
+4 +4 11324
+2 -3 81503 81503 0 149 0 0 1
+4 * 81503 81503 0 0 14148
+4 * 81503
+3 * 81503
+2 +1 10430
+5 * 10430 0 10430
cob=(8)
cfi=(94)
cfn=(1312)
calls=10430 0x8de60 -85 
* * 2027215 332660 315177 0 3 3349 0 0 3339
* * 10430 10430
+5 * 10430
+3 * 10430 10430
+4 * 10430 10430
+4 * 10430
+3 * 10430
+3 * 10430 0 10430
cfi=(170)
cfn=(1948) BP_Move_Block::BP_Move_Block(BP_Move_Block*)
calls=10430 0x4049c2 -69 
* * 534764508 192005686 134758727 25030 239881 184241 21 10 175723
+5 * 10430 10430
+4 * 10430 0 10430
+4 +2 10430
+68 * 103108 0 0 148 0 0 1
+1 * 103108
+4 * 103108 103108
+1 * 103108 103108
+2 * 103108 103108
+1 * 103108 103108

fn=(3404) BP::~BP()
0x404ccc 89 461 0 461 1
+1 * 461
+3 * 461 0 461
+1 * 461
+4 * 461 0 461
cob=(3)
cfi=(100)
cfn=(626)
calls=461 0x10a310 -57 
* * 22132 8760 5536
* * 461 461
+5 * 461 0 461
+4 +1 461 461
+4 * 461 461 0 0 273
+4 * 461
+3 * 461
+2 * 45
+3 * 45 0 45
cfi=(168)
cfn=(3406)
calls=45 0x4046be -64 
* * 640352 228752 151108 33 941 6 5 2 5
+5 * 45
+3 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1598)
calls=45 0x8bf10 -90 
* * 4590 1125 675
* * 45 45
+5 +1 461 461
+4 * 461 461 0 1
+4 * 461
+3 * 461
+2 * 45
+3 * 45 0 45
cfi=(172)
cfn=(3430)
calls=45 0x4048e0 -68 
* * 608850 217216 144415 21 882 7 2 1 6
+5 * 45
+3 * 45 0 45
cob=(8)
cfi=(94)
cfn=(1598)
calls=45 0x8bf10 -91 
* * 4590 1125 675 0 1
* * 45 45
+5 +1 461 461
+4 * 461 461 0 0 89
+4 * 461
+3 * 461
+2 * 46
+3 * 46 0 46
cfi=(170)
cfn=(3418) BP_Move_Block::~BP_Move_Block()
calls=46 0x404abc -69 
* * 542226 193617 128737 23 779 6 2 1 5
+5 * 46
+3 * 46 0 46
cob=(8)
cfi=(94)
cfn=(1598)
calls=46 0x8bf10 -92 
* * 4692 1150 690
* * 46 46
+5 +1 461
+1 * 461
+4 * 461 461
+1 * 461 461
+1 * 461 461

fn=(1790)
0x41cb7a 53 46 0 46 1 0 0 1
+1 * 46
+3 * 46 0 0 1 0 0 1
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 -21 
* * 2212 875 556 0 1 0 0 1
* * 46 46
+5 * 46 0 46
+4 * 46 0 46
+3 * 46 0 46
+4 * 46 46
+4 * 46 0 46
+8 * 46 46
+4 * 46 0 46
+8 * 46 46
+4 * 46 0 46
+8 +1 46 46
+4 * 46 46
+3 * 46 0 46
+2 +1 46 46 0 1 0 0 1
+4 * 46 46
+4 * 46 0 46
+4 +1 46
+1 * 46 46
+1 * 46 46

fl=(188)
fn=(2740)
0x40f604 11 35015 0 35015
+1 * 35015
+3 * 35015
+4 * 35015 0 35015
cob=(3)
cfi=(100)
cfn=(626)
calls=35015 0x10a310 +21 
* * 1680724 665286 420184
* * 35015 35015
+5 * 35015 0 35015
+4 * 35015 0 35015
+3 * 35015 0 35015
+3 * 35015 35015
+4 * 35015 0 35015
+6 * 35015 35015
+4 * 35015 0 35015
+7 +1 35015 35015
+4 * 35015 35015
+3 * 35015 0 35015
+2 +1 35015 35015
+4 * 35015 35015
+3 * 35015 0 35015
+3 +1 35015
+1 * 35015 35015
+1 * 35015 35015

fl=(189)
fn=(3316)
0x418eda 168 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3318) std::__detail::_Hash_node<std::pair<float const, float>, false>* std::addressof<std::__detail::_Hash_node<std::pair<float const, float>, false> >(std::__detail::_Hash_node<std::pair<float const, float>, false>&)
calls=10 0x41978c -34 
* * 1168 462 318 0 0 1 0 0 1
+5 * 10 10
+1 * 10 10

fn=(3096)
0x408d43 168 23 0 23 2
+1 * 23
+3 * 23
+4 * 23 0 23
cob=(3)
cfi=(100)
cfn=(626)
calls=23 0x10a310 32 
* * 1116 440 288 0 2 0 0 2
* * 23 23
+5 * 23 0 23
+4 +1 23 23
+4 * 23
+3 * 23 0 23
cfi=(161)
cfn=(3098) std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
calls=23 0x409408 -34 
* * 2676 1060 721 0 11 11 0 2 1
+5 * 23 23
+1 * 23 23

fn=(3280)
0x408c3f 168 10 0 10 10 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3282) std::__detail::_Hash_node<std::pair<float const, Protein*>, false>* std::addressof<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>&)
calls=10 0x40934a -34 
* * 1168 462 318 0 10 1 0 1 1
+5 * 10 10
+1 * 10 10

fl=(160)
fn=(2670)
0x4185ac 550 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 140658 54832 35761
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(153)
cfn=(2672) __gnu_cxx::new_allocator<Pump*>::max_size() const
calls=2384 0x4193b2 113 
* * 135892 52449 35764 149 148 1 1 0 1
+5 * 2384 2384
+1 * 2384 2384

fn=(2882)
0x416d43 529 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2326)
calls=16 0x40b016 76 
* * 916 369 244
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16 1 0 0 1
cfi=(161)
cfn=(2576)
calls=16 0x413f06 76 
* * 916 369 244 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16
+3 * 16 0 16
cfi=(161)
cfn=(2330)
calls=16 0x40afe8 76 
* * 916 369 244 0 0 1 0 0 1
+5 * 16
+3 * 16 16
+4 * 16 16
+4 * 16
+3 * 16
+3 * 16
+3 * 16 0 16
cfi=(153)
cfn=(2884) _ZN9__gnu_cxx13new_allocatorISt4pairIKiSt13unordered_mapIffSt4hashIfESt8equal_toIfESaIS1_IKffEEEEE9constructISC_IRKSt21piecewise_construct_tSt5tupleIIRS2_EESI_IIEEEEEvPT_DpOT0_
calls=16 0x4188c2 119 
* * 43498 16627 11912 27 23 15 20 9 11
+5 * 16
+1 * 16
+4 * 16 16
+1 * 16 16
+2 * 16 16
+1 * 16 16

fn=(3014)
0x417238 529 12 0 12
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+1 * 12 0 0 1 0 0 1
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 10
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfi=(161)
cfn=(2326)
calls=12 0x40b016 76 
* * 688 277 184
+5 * 12
+3 * 12 12
+4 * 12
+3 * 12 0 12
cfi=(161)
cfn=(2328)
calls=12 0x40afff 76 
* * 688 277 184 0 0 11 0 0 1
+5 * 12
+3 * 12 12
+4 * 12 0 0 1 0 0 1
+3 * 12 0 12
cfi=(161)
cfn=(2330)
calls=12 0x40afe8 76 
* * 688 277 184 0 1 0 0 1
+5 * 12
+3 * 12 12
+4 * 12 12
+4 * 12
+3 * 12
+3 * 12
+3 * 12 0 12
cfi=(153)
cfn=(3016) _ZN9__gnu_cxx13new_allocatorISt4pairIKffEE9constructIS3_IRKSt21piecewise_construct_tSt5tupleIIRS2_EES9_IIEEEEEvPT_DpOT0_
calls=12 0x418c54 119 
* * 13684 5254 3784 63 75 5 6 3 4
+5 * 12
+1 * 12
+4 * 12 12
+1 * 12 12
+2 * 12 12
+1 * 12 12

fn=(1650)
0x41d037 529 1347 0 1347
+1 * 1347
+3 * 1347
+4 * 1347 0 1347
cob=(3)
cfi=(100)
cfn=(626)
calls=1347 0x10a310 32 
* * 64664 25595 16172 0 2 4 0 1 2
* * 1347 1347
+5 * 1347 0 1347
+4 * 1347 0 1347
+4 * 1347 0 1347
+4 +1 1347 1347
+4 * 1347
+3 * 1347 0 1347
cfi=(161)
cfn=(1648) BP_Protein* const& std::forward<BP_Protein* const&>(std::remove_reference<BP_Protein* const&>::type&)
calls=1347 -55 76 
* * 76783 30982 20209 0 6 0 0 1
+5 * 1347
+3 * 1347 1347
+4 * 1347 1347
+4 * 1347
+3 * 1347
+3 * 1347 0 1347
cfi=(153)
cfn=(1652) _ZN9__gnu_cxx13new_allocatorIP10BP_ProteinE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=1347 0x41dc60 119 
* * 253248 96987 70056 1 0 161 1 0 158
+5 * 1347
+1 * 1347 1347
+1 * 1347 1347

fn=(1694)
0x407db2 516 53913 0 53913 1
+1 * 53913
+3 * 53913
+4 * 53913 0 53913
cob=(3)
cfi=(100)
cfn=(626)
calls=53913 0x10a310 32 
* * 2587828 1024348 646960 0 1637 1 0 0 1
* * 53913 53913
+5 * 53913 0 53913
+4 * 53913 0 53913
+4 * 53913 0 53913
+4 +1 53913 53913
+4 * 53913 53913
+4 * 53913 53913
+4 * 53913
+3 * 53913
+3 * 53913 0 53913
cfi=(153)
cfn=(1696) __gnu_cxx::new_allocator<BP_Protein*>::deallocate(BP_Protein**, unsigned long)
calls=53913 0x408dee 109 
* * 9250114 2754943 1877861 22 86 0 11
+5 * 53913
+1 * 53913 53913
+1 * 53913 53913

fn=(2196)
0x415db4 516 596 0 596 149 0 0 1
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 32 
* * 28612 11325 7156 0 287
* * 596 596
+5 * 596 0 596
+4 * 596 0 596
+4 * 596 0 596
+4 +1 596 596
+4 * 596 596
+4 * 596 596
+4 * 596
+3 * 596
+3 * 596 0 596
cfi=(153)
cfn=(2198) __gnu_cxx::new_allocator<RNA*>::deallocate(RNA**, unsigned long)
calls=596 0x417de4 109 
* * 98344 29205 19672 303 624 0 2 1
+5 * 596
+1 * 596 596
+1 * 596 596

fn=(2584)
0x416674 529 149 0 149
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 297 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2326)
calls=149 0x40b016 76 
* * 8497 3428 2239 0 149 0 0 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2576)
calls=149 0x413f06 76 
* * 8497 3428 2239 0 0 1 0 0 1
+5 * 149
+3 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfi=(161)
cfn=(2330)
calls=149 0x40afe8 76 
* * 8497 3428 2239 0 148
+5 * 149
+3 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2586) _ZN9__gnu_cxx13new_allocatorISt4pairIKiSt13unordered_mapIfP7ProteinSt4hashIfESt8equal_toIfESaIS1_IKfS5_EEEEE9constructISE_IRKSt21piecewise_construct_tSt5tupleIIRS2_EESK_IIEEEEEvPT_DpOT0_
calls=149 0x418326 119 
* * 404309 154680 110034 4470 3870 1018 12 6 7
+5 * 149
+1 * 149
+4 * 149 149
+1 * 149 149
+2 * 149 149
+1 * 149 149

fn=(2686)
0x4119e6 529 12367 0 12367
+1 * 12367
+3 * 12367
+4 * 12367 0 12367
cob=(3)
cfi=(100)
cfn=(626)
calls=12367 0x10a310 32 
* * 593624 234975 148412 0 0 149 0 0 1
* * 12367 12367
+5 * 12367 0 12367
+4 * 12367 0 12367
+4 * 12367 0 12367
+4 +1 12367 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(161)
cfn=(2684) Pump* const& std::forward<Pump* const&>(std::remove_reference<Pump* const&>::type&)
calls=12367 -55 76 
* * 704923 284442 185509
+5 * 12367
+3 * 12367 12367
+4 * 12367 12367
+4 * 12367
+3 * 12367
+3 * 12367 0 12367
cfi=(153)
cfn=(2688) _ZN9__gnu_cxx13new_allocatorIP4PumpE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=12367 0x414238 119 
* * 2325008 890427 643096 149 148 1563 1 0 1563
+5 * 12367
+1 * 12367 12367
+1 * 12367 12367

fn=(2752)
0x418685 550 2680 0 2680
+1 * 2680
+3 * 2680
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128644 50921 32164 0 0 149 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680 2680
+4 * 2680
+3 * 2680 0 2680
cfi=(153)
cfn=(2754) __gnu_cxx::new_allocator<Move*>::max_size() const
calls=2680 0x419402 113 
* * 152764 58961 40204
+5 * 2680 2680
+1 * 2680 2680

fn=(1538)
0x41d27c 529 461 0 461
+1 * 461
+3 * 461
+4 * 461 0 461
cob=(3)
cfi=(100)
cfn=(626)
calls=461 0x10a310 32 
* * 22136 8761 5540 0 0 2 0 0 2
* * 461 461
+5 * 461 0 461
+4 * 461 0 461
+4 * 461 0 461
+4 +1 461 461
+4 * 461
+3 * 461 0 461
cfi=(161)
cfn=(1536) BP* const& std::forward<BP* const&>(std::remove_reference<BP* const&>::type&)
calls=461 -55 76 
* * 26281 10604 6919
+5 * 461
+3 * 461 461
+4 * 461 461
+4 * 461
+3 * 461
+3 * 461 0 461
cfi=(153)
cfn=(1540) _ZN9__gnu_cxx13new_allocatorIP2BPE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=461 0x41dcaa 119 
* * 86680 33195 23984 2 1 62 2 1 60
+5 * 461
+1 * 461 461
+1 * 461 461

fn=(2406)
0x40c04b 490 473 0 473 149 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
cob=(3)
cfi=(100)
cfn=(626)
calls=473 0x10a310 32 
* * 22720 8991 5692
* * 473 473
+5 * 473 0 473
+4 * 473 0 473
+4 +1 473 473
+4 * 473 473
+4 * 473
+5 * 473
+3 * 473
+3 * 473 0 473
cfi=(153)
cfn=(2408) __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
calls=473 +39 99 
* * 156343 38206 30920 483 472 387 5 2 238
+5 * 473 473
+1 * 473 473

fn=(2478) _ZNSt16allocator_traitsISaIP7ProteinEE9constructIS1_IRKS1_EEEvRS2_PT_DpOT0_
0x411620 529 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2476) Protein* const& std::forward<Protein* const&>(std::remove_reference<Protein* const&>::type&)
calls=149 -55 76 
* * 8497 3428 2239 0 149 149 0 1 1
+5 * 149
+3 * 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2480) _ZN9__gnu_cxx13new_allocatorIP7ProteinE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=149 0x413bc8 119 
* * 28024 10731 7760 149 297 1 1 0 1
+5 * 149
+1 * 149 149
+1 * 149 149

fn=(2680)
0x416981 490 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 297 1 0 1 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 +1 1192 1192
+4 * 1192 1192
+4 * 1192
+5 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(153)
cfn=(2682) __gnu_cxx::new_allocator<Pump*>::allocate(unsigned long, void const*)
calls=1192 0x4185e4 99 
* * 430715 103786 86487 1668 1028 1015 2 2 1014
+5 * 1192 1192
+1 * 1192 1192

fn=(2732)
0x416202 516 1043 0 1043
+1 * 1043
+3 * 1043
+4 * 1043 0 1043
cob=(3)
cfi=(100)
cfn=(626)
calls=1043 0x10a310 32 
* * 50068 19818 12520 0 0 149 0 0 1
* * 1043 1043
+5 * 1043 0 1043
+4 * 1043 0 1043
+4 * 1043 0 1043
+4 +1 1043 1043
+4 * 1043 1043
+4 * 1043 1043
+4 * 1043
+3 * 1043
+3 * 1043 0 1043
cfi=(153)
cfn=(2734) __gnu_cxx::new_allocator<Pump*>::deallocate(Pump**, unsigned long)
calls=1043 0x417f10 109 
* * 183304 54690 37552 1199 384 0 1 1
+5 * 1043
+1 * 1043 1043
+1 * 1043 1043

fn=(2768)
0x411c2a 529 35015 0 35015
+1 * 35015
+3 * 35015
+4 * 35015 0 35015
cob=(3)
cfi=(100)
cfn=(626)
calls=35015 0x10a310 32 
* * 1680728 665287 420188 0 148
* * 35015 35015
+5 * 35015 0 35015
+4 * 35015 0 35015
+4 * 35015 0 35015
+4 +1 35015 35015
+4 * 35015
+3 * 35015 0 35015
cfi=(161)
cfn=(2766) Move* const& std::forward<Move* const&>(std::remove_reference<Move* const&>::type&)
calls=35015 -55 76 
* * 1995859 805346 525229 0 149 0 0 1
+5 * 35015
+3 * 35015 35015
+4 * 35015 35015
+4 * 35015
+3 * 35015
+3 * 35015 0 35015
cfi=(153)
cfn=(2770) _ZN9__gnu_cxx13new_allocatorIP4MoveE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=35015 0x414430 119 
* * 6582832 2521083 1820792 0 149 4521 0 1 4373
+5 * 35015
+1 * 35015 35015
+1 * 35015 35015

fn=(1634)
0x409478 550 128388 0 128388 152 0 0 1
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 7574894 2952924 1925821
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388 128388
+4 * 128388
+3 * 128388 0 128388
cfi=(153)
cfn=(1636) __gnu_cxx::new_allocator<BP_Protein*>::max_size() const
calls=128388 0x40981e 113 
* * 7318120 2824537 1925824 2 3105 1725 1 1 1
+5 * 128388 128388
+1 * 128388 128388

fn=(1644)
0x408e71 490 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 32 
* * 3081316 1219687 770332 0 0 1997 0 0 1
* * 64194 64194
+5 * 64194 0 64194 149 0 0 1
+4 * 64194 0 64194
+4 +1 64194 64194
+4 * 64194 64194
+4 * 64194
+5 * 64194
+3 * 64194
+3 * 64194 0 64194
cfi=(153)
cfn=(1646) __gnu_cxx::new_allocator<BP_Protein*>::allocate(unsigned long, void const*)
calls=64194 0x4094b0 99 
* * 20499761 5123858 4099681 576 2504 41759 6 3 41519
+5 * 64194 64194
+1 * 64194 64194

fn=(1726)
0x409629 550 118526 0 118526 149 0 0 1
+1 * 118526
+3 * 118526
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 6993036 2726098 1777891
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526 118526
+4 * 118526
+3 * 118526 0 118526
cfi=(153)
cfn=(1728) __gnu_cxx::new_allocator<BP_Move*>::max_size() const
calls=118526 0x4098be 113 
* * 6755986 2607573 1777894 298 217 0 2 1
+5 * 118526 118526
+1 * 118526 118526

fn=(2762)
0x416a73 490 1340 0 1340
+1 * 1340
+3 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340 149 0 0 1
+4 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340 1340
+4 * 1340
+5 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(153)
cfn=(2764) __gnu_cxx::new_allocator<Move*>::allocate(unsigned long, void const*)
calls=1340 0x4186bc 99 
* * 485651 115959 96583 329 479 1166 2 1 1161
+5 * 1340 1340
+1 * 1340 1340

fn=(2814)
0x416262 516 1191 0 1191
+1 * 1191
+3 * 1191
+4 * 1191 0 1191
cob=(3)
cfi=(100)
cfn=(626)
calls=1191 0x10a310 32 
* * 57172 22630 14296 0 0 1 0 0 1
* * 1191 1191
+5 * 1191 0 1191
+4 * 1191 0 1191
+4 * 1191 0 1191
+4 +1 1191 1191
+4 * 1191 1191
+4 * 1191 1191
+4 * 1191
+3 * 1191
+3 * 1191 0 1191
cfi=(153)
cfn=(2816) __gnu_cxx::new_allocator<Move*>::deallocate(Move**, unsigned long)
calls=1191 0x417f38 109 
* * 211730 63128 43768 150 320
+5 * 1191
+1 * 1191 1191
+1 * 1191 1191

fn=(3288)
0x408d10 516 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(153)
cfn=(3290) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::deallocate(std::__detail::_Hash_node<std::pair<float const, Protein*>, false>*, unsigned long)
calls=10 0x4093e0 109 
* * 1654 491 334 88 19 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1736)
0x4090cd 490 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 32 
* * 2844628 1125998 711160 0 1075 0 0 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 +1 59263 59263
+4 * 59263 59263
+4 * 59263
+5 * 59263
+3 * 59263
+3 * 59263 0 59263
cfi=(153)
cfn=(1738) __gnu_cxx::new_allocator<BP_Move*>::allocate(unsigned long, void const*)
calls=59263 0x409660 99 
* * 18829452 4718961 3775602 700 3167 34997 22 3 34798
+5 * 59263 59263
+1 * 59263 59263

fn=(1818)
0x409551 550 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 7890426 3075928 2006041
* * 133736 133736
+5 * 133736 0 133736
+4 +1 133736 133736
+4 * 133736
+3 * 133736 0 133736
cfi=(153)
cfn=(1820) __gnu_cxx::new_allocator<BP_Pump*>::max_size() const
calls=133736 0x40986e 113 
* * 7622956 2942193 2006044 0 19
+5 * 133736 133736
+1 * 133736 133736

fn=(2136)
0x417f60 550 1490 0 1490 2 0 0 1
+1 * 1490
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71524 28311 17884
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490 1490
+4 * 1490
+3 * 1490 0 1490
cfi=(153)
cfn=(2138) __gnu_cxx::new_allocator<RNA*>::max_size() const
calls=1490 0x419130 113 
* * 84934 32781 22354 298 1009 1 2 1 1
+5 * 1490 1490
+1 * 1490 1490

fn=(3224)
0x41510c 529 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3222)
calls=10 0x40be57 76 
* * 574 231 154
+5 * 10
+3 * 10 10
+4 * 10 10
+4 * 10
+3 * 10 0 0 1
+3 * 10 0 10
cfi=(153)
cfn=(3226) _ZN9__gnu_cxx13new_allocatorISt4pairIKfP7ProteinEE9constructIS5_IRKS5_EEEvPT_DpOT0_
calls=10 0x417748 119 
* * 1932 733 542 1 11 10 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3320)
0x418ef9 541 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(153)
cfn=(3322) void __gnu_cxx::new_allocator<std::pair<float const, float> >::destroy<std::pair<float const, float> >(std::pair<float const, float>*)
calls=10 0x4197ac 124 
* * 584 221 164 10 0 10 1 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1828)
0x408f9f 490 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 32 
* * 3209668 1270493 802420 0 3070 0 0 1
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 +1 66868 66868
+4 * 66868 66868
+4 * 66868 0 0 596 0 0 1
+5 * 66868
+3 * 66868
+3 * 66868 0 66868
cfi=(153)
cfn=(1830) __gnu_cxx::new_allocator<BP_Pump*>::allocate(unsigned long, void const*)
calls=66868 0x409588 99 
* * 21383144 5344761 4283581 481 2409 42926 3 1 41601
+5 * 66868 66868
+1 * 66868 66868

fn=(2006) _ZNSt16allocator_traitsISaIP7BP_PumpEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_
0x407131 529 320350 0 320350 147
+1 * 320350
+3 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 32 
* * 15376808 6086652 3844208 0 0 1 0 0 1
* * 320350 320350
+5 * 320350 0 320350
+4 * 320350 0 320350
+4 * 320350 0 320350
+4 +1 320350 320350
+4 * 320350
+3 * 320350 0 320350
cfi=(161)
cfn=(2002) BP_Pump*&& std::forward<BP_Pump*>(std::remove_reference<BP_Pump*>::type&)
calls=320350 0x406433 76 
* * 18259954 7368051 4805254 0 2415
+5 * 320350
+3 * 320350 320350
+4 * 320350 320350
+4 * 320350
+3 * 320350
+3 * 320350 0 320350
cfi=(153)
cfn=(2008) _ZN9__gnu_cxx13new_allocatorIP7BP_PumpE9constructIS2_IS2_EEEvPT_DpOT0_
calls=320350 0x4080a6 119 
* * 60225812 23065203 16658212 147 1039 37603 0 0 35815
+5 * 320350
+1 * 320350 320350
+1 * 320350 320350

fn=(2152)
0x41139d 529 2384 0 2384
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114440 45298 28616 0 1557 1117 0 0 2
* * 2384 2384
+5 * 2384 0 2384
+4 * 2384 0 2384
+4 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(161)
cfn=(2150) RNA* const& std::forward<RNA* const&>(std::remove_reference<RNA* const&>::type&)
calls=2384 -55 76 
* * 135892 54833 35764 0 1788 0 0 1
+5 * 2384
+3 * 2384 2384
+4 * 2384 2384
+4 * 2384
+3 * 2384
+3 * 2384 0 2384
cfi=(153)
cfn=(2154) _ZN9__gnu_cxx13new_allocatorIP3RNAE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=2384 0x4139d0 119 
* * 448204 171651 123980 2 2860 985 1 1 150
+5 * 2384
+1 * 2384 2384
+1 * 2384 2384

fn=(2306)
0x40b4a4 490 308 0 308
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 32 
* * 14792 5854 3704 0 0 1 0 0 1
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 +1 308 308
+4 * 308 308 0 159 0 0 1
+4 * 308
+5 * 308
+3 * 308
+3 * 308 0 308
cfi=(153)
cfn=(2308) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::allocate(unsigned long, void const*)
calls=308 0x40b84e 99 
* * 102985 24896 20183 609 453 156 4 5 147
+5 * 308 308
+1 * 308 308

fn=(2338)
0x40b4d3 529 298 0 298
+1 * 298
+3 * 298 0 298
+2 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298 149 0 0 1
cfi=(161)
cfn=(2326)
calls=298 0x40b016 76 
* * 16990 6855 4474 0 149 1 0 1 1
+5 * 298
+3 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2328)
calls=298 0x40afff 76 
* * 16990 6855 4474 0 173
+5 * 298
+3 * 298 298
+4 * 298
+3 * 298 0 298
cfi=(161)
cfn=(2330)
calls=298 0x40afe8 76 
* * 16990 6855 4474
+5 * 298
+3 * 298 298
+4 * 298 298
+4 * 298
+3 * 298
+3 * 298
+3 * 298 0 298
cfi=(153)
cfn=(2340) _ZN9__gnu_cxx13new_allocatorISt4pairIKfP7ProteinEE9constructIS5_IRKSt21piecewise_construct_tSt5tupleIIRS2_EESB_IIEEEEEvPT_DpOT0_
calls=298 0x40b958 119 
* * 345139 132622 94826 1391 1639 603 10 6 7
+5 * 298
+1 * 298
+4 * 298 298
+1 * 298 298 0 149 0 0 1
+2 * 298 298
+1 * 298 298

fn=(2556)
0x4165e9 490 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +1 149 149 0 149 0 0 1
+4 * 149 149
+4 * 149
+5 * 149
+3 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2558) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >::allocate(unsigned long, void const*)
calls=149 0x4181f2 99 
* * 36662 11177 7309 596 416 0 4 2
+5 * 149 149
+1 * 149 149

fn=(3192)
0x415065 559 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(152)
cfn=(3194)
calls=10 +12 115 
* * 1218 462 338 1 1 0 1 1
+5 * 10 10
+4 * 10 10
+1 * 10 10

fn=(3324)
0x4172a9 516 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 583 227 151 0 9
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(153)
cfn=(3326) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::deallocate(std::__detail::_Hash_node<std::pair<float const, float>, false>*, unsigned long)
calls=10 0x418d38 109 
* * 1654 491 334 0 0 1 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1522)
0x409701 550 38164 0 38164
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 2251678 877772 572461
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 38164
+4 * 38164
+3 * 38164 0 38164
cfi=(153)
cfn=(1524) __gnu_cxx::new_allocator<BP*>::max_size() const
calls=38164 0x40990e 113 
* * 2175352 839609 572464 4 1006 1 3 1 1
+5 * 38164 38164
+1 * 38164 38164

fn=(1532)
0x4091fb 490 19082 0 19082
+1 * 19082
+3 * 19082 0 0 298 0 0 1
+4 * 19082 0 19082
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 32 
* * 915940 362559 228988 0 1860 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 +1 19082 19082
+4 * 19082 19082
+4 * 19082
+5 * 19082
+3 * 19082
+3 * 19082 0 19082
cfi=(153)
cfn=(1534) __gnu_cxx::new_allocator<BP*>::allocate(unsigned long, void const*)
calls=19082 0x409738 99 
* * 6160311 1579483 1236543 1189 4990 8889 31 15 7982
+5 * 19082 19082 0 0 1 0 0 1
+1 * 19082 19082

fn=(1786)
0x408302 516 48833 0 48833
+1 * 48833
+3 * 48833
+4 * 48833 0 48833
cob=(3)
cfi=(100)
cfn=(626)
calls=48833 0x10a310 32 
* * 2343988 927828 586000 0 2465 0 0 1
* * 48833 48833
+5 * 48833 0 48833
+4 * 48833 0 48833
+4 * 48833 0 48833
+4 +1 48833 48833
+4 * 48833 48833
+4 * 48833 48833
+4 * 48833
+3 * 48833
+3 * 48833 0 48833
cfi=(153)
cfn=(1788) __gnu_cxx::new_allocator<BP_Move*>::deallocate(BP_Move**, unsigned long)
calls=48833 0x40907e 109 
* * 8317969 2476011 1684034 302 38 1 0 1 1
+5 * 48833
+1 * 48833 48833
+1 * 48833 48833

fn=(2146)
0x4162d5 490 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 872 1 0 1 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 +1 745 745
+4 * 745 745
+4 * 745
+5 * 745
+3 * 745
+3 * 745 0 745 149 0 0 1
cfi=(153)
cfn=(2148) __gnu_cxx::new_allocator<RNA*>::allocate(unsigned long, void const*)
calls=745 0x417f98 99 
* * 247920 59608 46957 447 974 409 1 2 408
+5 * 745 745
+1 * 745 745

fn=(2858)
0x416c95 490 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 32 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 +1 16 16
+4 * 16 16
+4 * 16
+5 * 16
+3 * 16
+3 * 16 0 16 1 0 0 1
cfi=(153)
cfn=(2860) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >::allocate(unsigned long, void const*)
calls=16 0x418828 99 
* * 5400 1298 1064 3 1 17 3 1 16
+5 * 16 16
+1 * 16 16

fn=(1742)
0x41d704 529 1120 0 1120
+1 * 1120
+3 * 1120
+4 * 1120 0 1120
cob=(3)
cfi=(100)
cfn=(626)
calls=1120 0x10a310 32 
* * 53768 21282 13448 0 3
* * 1120 1120
+5 * 1120 0 1120
+4 * 1120 0 1120
+4 * 1120 0 1120
+4 +1 1120 1120
+4 * 1120
+3 * 1120 0 1120
cfi=(161)
cfn=(1740) BP_Move* const& std::forward<BP_Move* const&>(std::remove_reference<BP_Move* const&>::type&)
calls=1120 -55 76 
* * 63844 25761 16804 0 0 2 0 0 1
+5 * 1120
+3 * 1120 1120
+4 * 1120 1120
+4 * 1120
+3 * 1120
+3 * 1120 0 1120
cfi=(153)
cfn=(1744) _ZN9__gnu_cxx13new_allocatorIP7BP_MoveE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=1120 0x41dd3e 119 
* * 210572 80643 58252 20 3 119 3 1 119
+5 * 1120
+1 * 1120 1120
+1 * 1120 1120

fn=(1878)
0x40805a 516 55544 0 55544 1
+1 * 55544
+3 * 55544
+4 * 55544 0 55544
cob=(3)
cfi=(100)
cfn=(626)
calls=55544 0x10a310 32 
* * 2666116 1055337 666532 0 1798
* * 55544 55544
+5 * 55544 0 55544
+4 * 55544 0 55544
+4 * 55544 0 55544
+4 +1 55544 55544
+4 * 55544 55544
+4 * 55544 55544
+4 * 55544
+3 * 55544
+3 * 55544 0 55544
cfi=(153)
cfn=(1880) __gnu_cxx::new_allocator<BP_Pump*>::deallocate(BP_Pump**, unsigned long)
calls=55544 0x408f50 109 
* * 9511604 2832428 1929563 6 152 0 0 1
+5 * 55544
+1 * 55544 55544
+1 * 55544 55544

fn=(1974) _ZNSt16allocator_traitsISaIP7BP_MoveEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_
0x407429 529 259111 0 259111 322
+1 * 259111
+3 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 32 
* * 12437336 4923111 3109340 0 0 221 0 0 1
* * 259111 259111
+5 * 259111 0 259111
+4 * 259111 0 259111
+4 * 259111 0 259111
+4 +1 259111 259111
+4 * 259111
+3 * 259111 0 259111
cfi=(161)
cfn=(1970) BP_Move*&& std::forward<BP_Move*>(std::remove_reference<BP_Move*>::type&)
calls=259111 0x4065eb 76 
* * 14769331 5959554 3886669 0 1351 1 0 0 1
+5 * 259111
+3 * 259111 259111
+4 * 259111 259111
+4 * 259111
+3 * 259111
+3 * 259111 0 259111
cfi=(153)
cfn=(1976) _ZN9__gnu_cxx13new_allocatorIP7BP_MoveE9constructIS2_IS2_EEEvPT_DpOT0_
calls=259111 0x40834e 119 
* * 48712880 18655995 13473784 147 1827 28734 0 0 27795
+5 * 259111
+1 * 259111 259111
+1 * 259111 259111

fn=(2462)
0x418039 550 298 0 298 149
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580
* * 298 298
+5 * 298 0 298
+4 +1 298 298
+4 * 298
+3 * 298 0 298
cfi=(153)
cfn=(2464) __gnu_cxx::new_allocator<Protein*>::max_size() const
calls=298 0x419180 113 
* * 16990 6557 4474 149 149 0 1
+5 * 298 298
+1 * 298 298

fn=(2988)
0x4171ad 490 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 580 229 148 0 1 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 * 12 0 12 1 0 0 1
+4 +1 12 12
+4 * 12 12
+4 * 12
+5 * 12
+3 * 12
+3 * 12 0 12
cfi=(153)
cfn=(2990) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::allocate(unsigned long, void const*)
calls=12 0x418be4 99 
* * 3106 914 630 2 11 2 2 1 2
+5 * 12 12
+1 * 12 12

fn=(3284)
0x408ce5 541 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 10 0 10 0 0 1
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(153)
cfn=(3286) void __gnu_cxx::new_allocator<std::pair<float const, Protein*> >::destroy<std::pair<float const, Protein*> >(std::pair<float const, Protein*>*)
calls=10 0x4093c8 124 
* * 584 221 164 0 0 10 0 0 1
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1590)
0x4085aa 516 13867 0 13867 1
+1 * 13867
+3 * 13867
+4 * 13867 0 13867
cob=(3)
cfi=(100)
cfn=(626)
calls=13867 0x10a310 32 
* * 665620 263474 166408 0 1719 1 0 1 1
* * 13867 13867
+5 * 13867 0 13867
+4 * 13867 0 13867
+4 * 13867 0 13867
+4 +1 13867 13867
+4 * 13867 13867
+4 * 13867 13867
+4 * 13867
+3 * 13867
+3 * 13867 0 13867
cfi=(153)
cfn=(1592) __gnu_cxx::new_allocator<BP*>::deallocate(BP**, unsigned long)
calls=13867 0x4091ac 109 
* * 2317302 688559 465812 23 1416 0 21 28
+5 * 13867
+1 * 13867 13867
+1 * 13867 13867

fn=(1834)
0x41d4c0 529 1275 0 1275
+1 * 1275
+3 * 1275
+4 * 1275 0 1275
cob=(3)
cfi=(100)
cfn=(626)
calls=1275 0x10a310 32 
* * 61208 24227 15308 0 15 2 0 1 2
* * 1275 1275
+5 * 1275 0 1275
+4 * 1275 0 1275
+4 * 1275 0 1275
+4 +1 1275 1275
+4 * 1275
+3 * 1275 0 1275
cfi=(161)
cfn=(1832) BP_Pump* const& std::forward<BP_Pump* const&>(std::remove_reference<BP_Pump* const&>::type&)
calls=1275 -55 76 
* * 72679 29326 19129 0 8 0 0 1
+5 * 1275
+3 * 1275 1275
+4 * 1275 1275
+4 * 1275
+3 * 1275
+3 * 1275 0 1275
cfi=(153)
cfn=(1836) _ZN9__gnu_cxx13new_allocatorIP7BP_PumpE9constructIS2_IRKS2_EEEvPT_DpOT0_
calls=1275 0x41dcf4 119 
* * 239712 91803 66312 0 2 143 0 0 142
+5 * 1275
+1 * 1275 1275
+1 * 1275 1275

fn=(1910) _ZNSt16allocator_traitsISaIP2BPEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_
0x407721 529 103108 0 103108 147
+1 * 103108
+3 * 103108
+4 * 103108 0 103108
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 32 
* * 4949192 1959054 1237304 0 669
* * 103108 103108
+5 * 103108 0 103108
+4 * 103108 0 103108
+4 * 103108 0 103108
+4 +1 103108 103108
+4 * 103108
+3 * 103108 0 103108
cfi=(161)
cfn=(1906) BP*&& std::forward<BP*>(std::remove_reference<BP*>::type&)
calls=103108 0x4067a3 76 
* * 5877160 2371485 1546624 0 307 1 0 0 1
+5 * 103108
+3 * 103108 103108
+4 * 103108 103108
+4 * 103108
+3 * 103108
+3 * 103108 0 103108
cfi=(153)
cfn=(1912) _ZN9__gnu_cxx13new_allocatorIP2BPE9constructIS2_IS2_EEEvPT_DpOT0_
calls=103108 0x4085f6 119 
* * 19384316 7423779 5361628 296 162 11276 1 0 10861
+5 * 103108
+1 * 103108 103108
+1 * 103108 103108

fn=(1942) _ZNSt16allocator_traitsISaIP10BP_ProteinEE9constructIS1_IS1_EEEvRS2_PT_DpOT0_
0x406e39 529 325863 0 325863 296
+1 * 325863
+3 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 32 
* * 15641432 6191399 3910364 0 2500 1 0 1 1
* * 325863 325863
+5 * 325863 0 325863
+4 * 325863 0 325863
+4 * 325863 0 325863
+4 +1 325863 325863
+4 * 325863
+3 * 325863 0 325863
cfi=(161)
cfn=(1938) BP_Protein*&& std::forward<BP_Protein*>(std::remove_reference<BP_Protein*>::type&)
calls=325863 0x40627b 76 
* * 18574195 7494850 4887949 0 1629
+5 * 325863
+3 * 325863 325863
+4 * 325863 325863
+4 * 325863
+3 * 325863
+3 * 325863 0 325863
cfi=(153)
cfn=(1944) _ZN9__gnu_cxx13new_allocatorIP10BP_ProteinE9constructIS2_IS2_EEEvPT_DpOT0_
calls=325863 0x407dfe 119 
* * 61262256 23462139 16944888 594 1337 38069 1 0 37790
+5 * 325863
+1 * 325863 325863
+1 * 325863 325863

fn=(2472)
0x4163c7 490 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149
+5 * 149
+3 * 149
+3 * 149 0 149
cfi=(153)
cfn=(2474) __gnu_cxx::new_allocator<Protein*>::allocate(unsigned long, void const*)
calls=149 0x418070 99 
* * 49774 12071 9842 149 297 73 1 1 73
+5 * 149 149
+1 * 149 149

fn=(3100)
0x408da6 516 23 0 23
+1 * 23
+3 * 23
+4 * 23 0 23
cob=(3)
cfi=(100)
cfn=(626)
calls=23 0x10a310 32 
* * 1138 448 294 0 1 1 0 1 1
* * 23 23
+5 * 23 0 23
+4 * 23 0 23
+4 * 23 0 23
+4 +1 23 23 0 10
+4 * 23 23
+4 * 23 23
+4 * 23
+3 * 23
+3 * 23 0 23
cfi=(153)
cfn=(3102) __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
calls=23 0x409450 109 
* * 3799 1128 763 16 2
+5 * 23
+1 * 23 23
+1 * 23 23

fl=(134)
fn=(3386) int std::binomial_distribution<int>::_M_waiting<std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul> >(std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>&, int, double)
0x415870 1498 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1 1 0 0 1
+4 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+5 * 1 1
+9 * 1 0 1
+4 * 1
+2 +4 1 0 1
+7 +1 1
+4 * 1 0 1
+5 +2 1 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(133)
cfn=(3384)
calls=1 0x4157e0 164 
* * 65 25 21 0 1 0 0 1
+5 +4 1 1 0 1 0 0 1
+3 * 1 1
+3 * 1
+7 +2 1
+4 * 1
+3 * 1 0 1
cfi=(133)
cfn=(3388)
calls=1 0x415804 181 
* * 1030 383 288 23 9 4 16 6 4
+5 * 1
+4 * 1 1
+8 * 1
+4 * 1 0 1
cob=(4)
cfi=(198)
cfn=(3366)
calls=1 0x21d80 28 
* * 143 29 8 8 6 2 8 5 2
* * 1 1
+5 * 1
+4 * 1 1
+8 * 1
+4 * 1 0 1 1 0 0 1
+5 +1 1 1
+3 * 1 1
+3 * 1
+4 * 1
+4 * 1 1
+5 * 1
+4 * 1
+4 * 1 1
+5 * 1
+4 * 1 0 1
+5 +1 1 0 1
+4 -6 1 1
+5 * 1 1
+5 * 1
+4 +10 1 1
+3 * 1 0 0 1 0 0 1
+3 0 1 1
+4 0 1 1
+9 0 1
+7 0 1 1
+1 0 1 1

fn=(1214)
0x40555a 327 2052 0 2052
+1 * 2052
+3 * 2052
+4 * 2052 0 2052
cob=(3)
cfi=(100)
cfn=(626)
calls=2052 0x10a310 32 
* * 98512 38992 24640 0 5 1 0 4
* * 2052 2052
+5 * 2052 0 2052
+4 * 2052 0 2052
+4 +5 2052 2052
+4 * 2052
+3 * 2052 0 2052
cfi=(133)
cfn=(1216)
calls=2052 0x406124 150 
* * 246248 96446 67724 4 2 3 4 1 1
+5 * 2052
+3 -1 2052 2052 0 1 0 0 1
+4 * 2052 0 2052 0 0 1026 0 0 1025
+3 +3 2052 0 2052
+8 * 2052 2052
+8 * 2052
-8 * 1278396 1278396
+8 * 1278396
+2 +2 1278396 1278396
+4 * 1278396
+4 * 1278396 1278396
+4 * 1278396 1278396
+4 * 1278396 0 1278396
+4 +1 1278396 1278396
+4 * 1278396
+4 * 1278396 0 1278396
+4 +1 1278396 1278396
+4 * 1278396 0 0 1 0 0 1
+7 * 1278396 0 1278396
+4 +1 1278396 1278396
+4 * 1278396
+3 * 1278396 0 1278396
cfi=(133)
cfn=(1220)
calls=1278396 0x406143 150 
* * 164913092 61363010 42187076 1 2 0 1 1
+5 * 1278396 0 1278396
+4 +2 1278396 1278396
+4 * 1278396
+3 * 1278396 0 1278396
cfi=(133)
cfn=(1216)
calls=1278396 0x406124 150 
* * 153407524 60084613 42187072 0 1 1 0 1
+5 * 1278396
+3 -1 1278396 1278396
+4 * 1278396 1278396
+4 * 1278396 0 1278396 0 0 78982 0 0 78951
+4 -6 1278396 0 1278396
+5 * 1278396
+2 +9 2052 2052
+4 * 2052 0 2052 1 0 1 1 0 1
+11 +1 2052
+1 * 2052 2052
+1 * 2052 2052

fn=(1252)
0x408a33 3312 251195 0 251195
+1 * 251195
+3 * 251195 0 251195
+1 * 251195
+7 * 251195 0 251195 1 0 1 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=251195 0x10a310 32 
* * 12057364 4772706 3014344 0 3 1 0 2 1
* * 251195 251195
+5 * 251195 0 251195
+4 * 251195 251195
+9 * 251195 0 251195
+4 * 251195
+2 +7 251195 0 251195
+8 * 251195 0 251195
+8 * 251195
+4 * 251195
+4 * 251195
+3 * 251195
+3 * 251195 0 251195
cfi=(136)
cfn=(1254)
calls=251195 0x409316 195 
* * 16076484 6782266 4019124 3 4 2 3 1 1
+5 * 251195 251195
+3 * 251195 0 251195 1 0 0 1
+4 +2 251195 0 251195
cfi=(133)
cfn=(1256)
calls=251195 0x406971 529 
* * 13815729 5526291 3516734 2 6 0 2 3
+5 * 251195 0 251195
+4 * 251195 251195
+3 * 251195 0 251195
+3 * 251195
+3 * 251195
+16 * 251195 0 251195
cfi=(133)
cfn=(1258)
calls=251195 0x406961 522 
* * 13815729 5526291 3516734
+5 * 251195 0 251195
+7 * 251195 251195
+6 * 251195
+3 * 251195
+10 * 251195 251195 0 2 0 0 2
+3 * 251195
+2 * 251195
+2 * 251195
+2 * 251195 0 251195
+3 +1 251195 251195 251195
+3 * 251195 251195 251195
+3 * 251195 0 251195
cfi=(137)
cfn=(1260) std::log(long double)
calls=251195 0x404095 362 
* * 24115730 8540918 5275215 19 22 20 8 12 6
+5 * 251195
+4 * 251195 0 251195
+3 * 251195 251195 0 0 2 0 0 2
+6 * 251195
+5 * 251195 0 251195
+3 * 251195 0 251195
cfi=(137)
cfn=(1260)
calls=251195 0x404095 362 
* * 24114724 8540631 5275099
+5 * 251195
+4 * 251195 251195
+3 * 251195
+2 * 251195 251195 0 2 0 0 2
+6 * 251195
+2 * 251195
+2 * 251195
+2 * 251195
+2 * 251195 0 251195
+3 * 251195 251195
+4 * 251195
+3 * 251195 0 251195
+4 * 251195 251195
+3 * 251195 0 251195
+3 * 251195 251195
+3 * 251195
+47 * 251195 251195 0 2 0 0 2
+4 * 251195 0 251195
+4 +1 251195 251195
+4 * 251195 251195
+4 * 251195
+3 * 251195
+4 * 251195
+5 * 251195 251195
+4 * 251195 0 251195
+4 * 251195 0 251195
+8 * 251195
+4 * 251195 0 0 3 0 0 3
+4 * 251195
+3 * 251195
+3 * 251195 0 251195
cfi=(136)
cfn=(1270)
calls=251195 0x408e3d 219 
* * 16076484 6782266 4019124 4 3 0 4 1
+5 * 251195 251195
+3 * 251195 0 251195
+4 +1 251195
+4 * 251195 0 251195
+5 +1 251195 251195
+8 * 251195 0 251195
+5 +1 251195 251195
+5 * 251195
-5 * 251195 251195
+5 * 251195
+2 +2 251195 251195
+4 * 251195
+3 * 251195 0 251195
cfn=(1240)
calls=251195 0x407a94 453 
* * 29317384 11973375 6016763 0 278 149 0 2 1
+5 * 251195 0 0 2 0 0 2
+3 * 251195 0 251195
cfi=(133)
cfn=(1258)
calls=251195 0x406961 522 
* * 13815729 5526291 3516734
+5 * 251195
+3 * 251195
+3 * 251195
+3 * 251195
+2 * 251195
+4 * 251195
+5 * 251195
+27 * 251195 251195
+5 * 251195 251195
+5 * 251195 0 0 1 0 0 1
+4 * 251195 0 251195
+5 +1 251195 251195
+3 * 251195 251195
+3 * 251195
+2 * 251195 0 251195
+3 -3 251195 0 251195
+5 * 251195
+2 +5 251195 251195
+5 * 251195 251195
+5 +1 251195 251195
+4 * 251195 251195
+9 * 251195
+7 * 251195 251195
+4 * 251195 251195
+1 * 251195 251195

fn=(3360)
0x415220 1445 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 1
+9 * 1 0 1 1 0 0 1
+4 * 1
+2 +3 1 1
+4 * 1 1
+5 * 1 1
+8 * 1
+4 * 1
+2 * 1 1
+4 * 1 1
+5 * 1
+23 * 1 0 1
+5 +2 1 1 0 1 0 0 1
+4 * 1 0 1
+4 +3 1 1
+4 * 1 1
+2 * 1
+4 * 1
+4 * 1 1
+5 * 1 1 0 0 1 0 0 1
+8 * 1
0x41572e +39 1 1 0 1 0 0 1
+8 * 1 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1092 308 121 13 17 7 12 9
* * 5 3 2 1 1 0 1
+5 * 1 0 0 1 0 0 1
+4 * 1 1
+8 * 1
+4 * 1 1
+4 * 1 0 1
+5 +1 1
+1 * 1 1
+4 * 1 1
+9 * 1
+7 * 1 1
+1 * 1 1

fn=(3390)
0x4178ae 3312 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1 1 0 0 1
+4 * 1 1
+9 * 1 0 1
+4 * 1
+2 +7 1 0 1
+8 * 1 0 1
+8 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(136)
cfn=(1254)
calls=1 0x409316 195 
* * 68 28 20 1 1 1 0 1 1
+5 * 1 1
+3 * 1 0 1
+4 +2 1 0 1 1 0 0 1
cfi=(133)
cfn=(1256)
calls=1 0x406971 529 
* * 59 23 18 2 1 0 2 1
+5 * 1 0 1
+7 * 1 1
+6 * 1 0 1
+6 * 1
+3 * 1
+22 * 1 0 1
cfi=(133)
cfn=(1258)
calls=1 0x406961 522 
* * 59 23 18
+5 * 1 0 1
+7 * 1 1
+6 * 1 0 0 1 0 0 1
+3 * 1
+10 * 1 1
+6 * 1
+2 * 1
+2 * 1
+2 * 1 0 1
+3 +1 1 1 1
+3 * 1 1 1
+3 * 1 0 1
cfi=(137)
cfn=(1260)
calls=1 0x404095 362 
* * 100 35 25 5 1 1 2 0 1
+5 * 1
+4 * 1 0 1
+6 * 1 1 0 0 1 0 0 1
+6 * 1
+5 * 1 0 1
+3 * 1 0 1 1 0 0 1
cfi=(137)
cfn=(1260)
calls=1 0x404095 362 
* * 100 35 25 0 1 0 0 1
+5 * 1
+4 * 1 1
+6 * 1
+2 * 1 1
+6 * 1
+2 * 1
+2 * 1
+2 * 1
+2 * 1 0 1
+6 * 1 1
+7 * 1
+3 * 1 0 1
+7 * 1 1
+6 * 1 0 1
+3 * 1 1 0 1 0 0 1
+6 * 1
+62 * 1 1 0 1 0 0 1
+4 * 1 0 1
+4 +1 1 1
+4 * 1 1
+4 * 1
+3 * 1
+4 * 1
+5 * 1 1
+4 * 1 0 1
+4 * 1 0 1
+8 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(136)
cfn=(1270)
calls=1 0x408e3d 219 
* * 69 28 20 2 1 0 0 1
+5 * 1 1 0 1 0 0 1
+3 * 1 0 1
+4 +1 1
+4 * 1 0 1
+5 +1 1 1
+8 * 1 0 1
+5 +1 1 1
+5 * 1
-5 * 2 2
+5 * 2
+2 +2 2 2
+4 * 2
+3 * 2 0 2
cfn=(1240)
calls=2 0x407a94 453 
* * 183 73 49 3 2 1 2 0 1
+5 * 2
+3 * 2 0 2
cfi=(133)
cfn=(1258)
calls=2 0x406961 522 
* * 134 52 35
+5 * 2
+3 * 2
+3 * 2 0 0 1 0 0 1
+3 * 2
+2 * 2
+4 * 2
+5 * 2
+27 * 2 2
+5 * 2 2
+5 * 2
+4 * 2 0 2
+5 +1 2 2
+3 * 2 2
+3 * 2 0 0 1 0 0 1
+2 * 2 0 2
+3 -3 2 0 2
+5 * 2
+2 +5 1 1
+5 * 1 1
+5 +1 1 1
+4 * 1 1
+9 * 1
+7 * 1 1
+4 * 1 1
+1 * 1 1

fn=(1240)
0x407a94 453 1259456 0 1259456 2 0 0 2
+1 * 1259456
+3 * 1259456
+4 * 1259456 0 1259456
cob=(3)
cfi=(100)
cfn=(626)
calls=1259456 0x10a310 32 
* * 60453919 23929673 15113495 0 4 5 0 4 2
* * 1259456 1259456
+5 * 1259456 0 1259456
+4 +5 1259456 1259456
+4 * 1259456 1259456 0 0 2 0 0 1
+7 * 1259456
+6 * 1259456
+2 +1 2020 2020
+4 * 2020
+3 * 2020 0 2020 1 0 0 1
cfn=(1242) std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
calls=2020 0x40886e -62 
* * 42339023 17687121 3819824 9 490 150 9 94 1
+5 +3 1259456 1259456 0 1 0 0 1
+4 * 1259456 1259456
+7 * 1259456
+4 * 1259456 1259456
+4 * 1259456 0 1259456
+7 * 1259456 1259456
+4 * 1259456 1259456 0 0 403 0 0 22
+4 * 1259456 0 1259456
+4 +1 1259456 1259456
+4 * 1259456
+4 * 1259456
+2 * 1259456 0 1259456
+4 +1 1259456 1259456
+4 * 1259456
+4 * 1259456 0 0 2 0 0 1
+5 * 1259456 0 1259456
+4 +1 1259456 1259456
+4 * 1259456
+4 * 1259456
+5 * 1259456 0 1259456
+4 +1 1259456 1259456
+4 * 1259456
+4 * 1259456 0 1259456
+4 +2 1259456 1259456
+4 +1 1259456 1259456
+1 * 1259456 1259456

fn=(1242)
0x40886e 397 2020 0 2020 1 0 0 1
+1 * 2020
+3 * 2020
+4 * 2020 0 2020
cob=(3)
cfi=(100)
cfn=(626)
calls=2020 0x10a310 32 
* * 96964 38381 24244 0 36 150 0 4 1
* * 2020 2020
+5 * 2020 0 2020
+4 +4 2020 0 2020 1 0 0 1
+8 +1 2020 0 2020
+8 +2 2020 0 2020
+8 * 2020 2020
+8 * 2020
-8 * 458540 458540
+8 * 458540
+6 +2 458540 458540
+4 * 458540 458540
+4 * 458540 458540 0 0 5 0 0 2
+4 +1 458540
+6 * 458540
+3 * 458540 458540
+4 * 458540 0 0 1 0 0 1
+4 * 458540 458540
+4 * 458540 458540 0 0 325 0 0 39
+4 * 458540
+5 * 458540
+3 * 458540 0 458540
+4 +1 458540 458540
+4 * 458540
+7 * 458540 458540
+4 * 458540 458540 0 0 59 0 0 28
+4 * 458540 458540
+4 * 458540
+3 * 458540
+3 * 458540 458540
+4 * 458540
+3 * 458540
+3 * 458540
+2 * 229438
+5 * 229438
+2 * 229102 0 0 1 0 0 1
+5 * 229102
+3 * 229102
+3 * 229102 229102
+4 * 229102 229102
+4 * 229102 0 229102
+4 -4 229102 0 229102
+5 * 229102
-23 +4 229438
+3 * 229438
+3 * 229438 229438
+4 * 229438 229438
+4 * 229438 0 229438
+4 -4 229438 0 229438
+5 * 229438
+5 +8 2020 0 2020
+8 * 2020 2020
+8 * 2020
-8 * 799920 799920
+8 * 799920
+6 +2 799920 799920 0 1 0 0 1
+4 * 799920 799920
+4 * 799920 799920
+4 +1 799920
+6 * 799920
+3 * 799920 799920
+4 * 799920
+4 * 799920 799920
+4 * 799920 799920 0 0 65 0 0 21
+4 * 799920
+5 * 799920
+3 * 799920 0 799920
+4 +1 799920 799920
+4 * 799920
+7 * 799920 799920
+4 * 799920 799920 0 1 0 0 1
+4 * 799920 799920
+4 * 799920
+3 * 799920
+3 * 799920 799920
+4 * 799920
+3 * 799920
+3 * 799920
+2 * 399605
+5 * 399605
+2 * 400315
+5 * 400315
+3 * 400315
+3 * 400315 400315
+4 * 400315 400315
+4 * 400315 0 400315
+4 -4 400315 0 400315
+5 * 400315
-23 +4 399605
+3 * 399605
+3 * 399605 399605
+4 * 399605 399605
+4 * 399605 0 399605
+4 -4 399605 0 399605
+5 * 399605
+5 +8 2020 2020 0 2 0 0 2
+4 * 2020 2020
+7 +1 2020
+6 * 2020
+3 * 2020 2020
+4 * 2020 2020
+3 * 2020
+5 * 2020
+3 * 2020 0 2020
+4 +1 2020 2020
+4 * 2020 2020
+7 * 2020 2020
+4 * 2020
+3 * 2020
+3 * 2020 2020
+4 * 2020 0 0 1 0 0 1
+3 * 2020
+3 * 2020
+2 * 1016
+5 * 1016
+2 * 1004
+5 * 1004
+3 * 1004 1004
+4 * 1004 0 1004
+7 +2 1004 1004
+4 * 1004 0 1004
+11 +1 1004
+1 * 1004 1004
+1 * 1004 1004
-31 -3 1016
+3 * 1016 1016
+4 * 1016 0 1016
+7 +2 1016 1016
+4 * 1016 0 1016
+11 +1 1016
+1 * 1016 1016
+1 * 1016 1016

fn=(3378)
0x4128c4 1533 1 0 1
+1 * 1
+3 * 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+7 * 1 0 1
+7 * 1 0 1
+7 * 1 1
+9 * 1 0 1
+4 * 1
+2 +5 1 1
+7 * 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(133)
cfn=(3380)
calls=1 0x4157aa 3637 
* * 62 25 19 1 1 0 1 1
+5 * 1 0 1
+6 +1 1 1
+7 * 1
+3 * 1 0 1
cfi=(133)
cfn=(3382)
calls=1 0x4157c4 3641 
* * 62 25 19
+5 * 1
+5 * 1 0 1
+7 +1 1 1
+8 * 1 1
+8 * 1
+2 * 1 1 0 1 0 0 1
+8 * 1
+18 * 1 0 1
+8 +2 1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(133)
cfn=(3384)
calls=1 0x4157e0 164 
* * 65 25 21 1 0 1 1 0 1
+5 +3 1 1
+7 * 1 1
+4 * 1 0 0 1 0 0 1
+3 * 1
+2 * 1
0x413188 +97 1 1 0 1 0 0 1
+7 * 1 1
+4 * 1 1
+6 * 1 1
+7 * 1 1
+7 * 1 0 1
+7 * 1 1
+8 * 1
+3 * 1
+3 * 1 0 1 1 0 0 1
cfn=(3386)
calls=1 0x415870 1498 
* * 1346 476 348 36 17 6 29 13 6
+5 * 1 0 1
+6 +2 1 1
+8 * 1 1
+8 * 1
+2 * 1 1
+8 * 1 1
+8 * 1
+20 +2 1 1 0 1 0 0 1
+6 +1 1 1
+4 * 1 1
+9 * 1
+7 * 1 1
+1 * 1 1

fl=(161)
fn=(1934)
0x405798 101 325863 0 325863
+1 * 325863
+3 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 -69 
* * 15641428 6191398 3910360 0 2702 1 0 1 1
* * 325863 325863
+5 * 325863 0 325863
+4 +1 325863 325863
+4 * 325863 325863
+1 * 325863 325863

fn=(1998)
0x405974 101 320350 0 320350
+1 * 320350
+3 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 -69 
* * 15376804 6086651 3844204 0 6 1 0 0 1
* * 320350 320350
+5 * 320350 0 320350
+4 +1 320350 320350
+4 * 320350 320350
+1 * 320350 320350

fn=(2002)
0x406433 76 1027653 0 1027653
+1 * 1027653
+3 * 1027653
+4 * 1027653 0 1027653
cob=(3)
cfi=(100)
cfn=(626)
calls=1027653 0x10a310 -44 
* * 49327364 19525412 12331856 0 5600 2891 0 1 3
* * 1027653 1027653
+5 * 1027653 0 1027653
+4 +1 1027653 1027653
+4 * 1027653 1027653
+1 * 1027653 1027653

fn=(2562)
0x416618 47 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -15 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149
+4 +3 149 149
+4 +1 149 149
+1 * 149 149

fn=(2150)
0x411386 76 5513 0 5513 31 0 0 1
+1 * 5513
+3 * 5513
+4 * 5513 0 5513
cob=(3)
cfi=(100)
cfn=(626)
calls=5513 0x10a310 -44 
* * 264636 104750 66168 0 4299 1 0 2 1
* * 5513 5513
+5 * 5513 0 5513
+4 +1 5513 5513
+4 * 5513 5513
+1 * 5513 5513

fn=(2638)
0x4167d3 76 159 0 159 10
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 -44 
* * 9374 3654 2386 0 309 1 0 1 1
* * 159 159
+5 * 159 0 159
+4 +1 159 159
+4 * 159 159
+1 * 159 159

fn=(2994)
0x4171dc 47 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -15 
* * 1064 420 272 0 0 1 0 0 1
* * 22 22
+5 * 22 0 22
+4 +3 22 22
+4 +1 22 22
+1 * 22 22

fn=(3222)
0x40be57 76 40 0 40
+1 * 40
+3 * 40
+4 * 40 0 40
cob=(3)
cfi=(100)
cfn=(626)
calls=40 0x10a310 -44 
* * 2035 800 523 0 0 11 0 0 2
* * 40 40
+5 * 40 0 40
+4 +1 40 40
+4 * 40 40
+1 * 40 40

fn=(1536)
0x41d265 76 932 0 932 1 0 0 1
+1 * 932
+3 * 932
+4 * 932 0 932
cob=(3)
cfi=(100)
cfn=(626)
calls=932 0x10a310 -44 
* * 44748 17711 11196 0 5 0 0 2
* * 932 932
+5 * 932 0 932
+4 +1 932 932
+4 * 932 932
+1 * 932 932

fn=(1648)
0x41d020 76 2967 0 2967 1 0 0 1
+1 * 2967
+3 * 2967
+4 * 2967 0 2967
cob=(3)
cfi=(100)
cfn=(626)
calls=2967 0x10a310 -44 
* * 142428 56376 35616 0 12 5 0 1 2
* * 2967 2967
+5 * 2967 0 2967
+4 +1 2967 2967
+4 * 2967 2967
+1 * 2967 2967

fn=(1966)
0x405b50 101 259111 0 259111
+1 * 259111
+3 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 -69 
* * 12437332 4923110 3109336 0 681
* * 259111 259111
+5 * 259111 0 259111
+4 +1 259111 259111
+4 * 259111 259111
+1 * 259111 259111

fn=(1970)
0x4065eb 76 836337 0 836337
+1 * 836337
+3 * 836337
+4 * 836337 0 836337
cob=(3)
cfi=(100)
cfn=(626)
calls=836337 0x10a310 -44 
* * 40144196 15890408 10036064 0 4018 1 0 1 1
* * 836337 836337
+5 * 836337 0 836337
+4 +1 836337 836337
+4 * 836337 836337
+1 * 836337 836337

fn=(2440)
0x40b5ff 76 338 0 338 1
+1 * 338 0 0 151 0 0 1
+3 * 338
+4 * 338 0 338
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 -44 
* * 16228 6423 4060 0 300 1 0 1 1
* * 338 338
+5 * 338 0 338
+4 +1 338 338
+4 * 338 338
+1 * 338 338

fn=(2864)
0x416cc4 47 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -15 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 +3 16 16
+4 +1 16 16
+1 * 16 16

fn=(1740)
0x41d6ed 76 2499 0 2499 1 0 0 1
+1 * 2499
+3 * 2499
+4 * 2499 0 2499
cob=(3)
cfi=(100)
cfn=(626)
calls=2499 0x10a310 -44 
* * 119964 47484 30000 0 1 3 0 1 2
* * 2499 2499
+5 * 2499 0 2499
+4 +1 2499 2499 0 1 0 0 1
+4 * 2499 2499
+1 * 2499 2499

fn=(3282)
0x40934a 135 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2312)
calls=10 0x4097d9 -89 
* * 574 231 154 0 10 1 0 1 1
+5 * 10 10
+1 * 10 10

fn=(1832)
0x41d4a9 76 2815 0 2815
+1 * 2815
+3 * 2815
+4 * 2815 0 2815
cob=(3)
cfi=(100)
cfn=(626)
calls=2815 0x10a310 -44 
* * 135132 53488 33792 0 10 0 0 1
* * 2815 2815
+5 * 2815 0 2815
+4 +1 2815 2815
+4 * 2815 2815
+1 * 2815 2815

fn=(2330)
0x40afe8 76 1425 0 1425
+1 * 1425
+3 * 1425
+4 * 1425 0 1425
cob=(3)
cfi=(100)
cfn=(626)
calls=1425 0x10a310 -44 
* * 68448 27087 17148 0 470 301 0 5 5
* * 1425 1425
+5 * 1425 0 1425
+4 +1 1425 1425
+4 * 1425 1425
+1 * 1425 1425

fn=(2576)
0x413f06 76 495 0 495 2
+1 * 495
+3 * 495
+4 * 495 0 495
cob=(3)
cfi=(100)
cfn=(626)
calls=495 0x10a310 -44 
* * 23958 9474 6009 0 149 2 0 1 2
* * 495 495
+5 * 495 0 495
+4 +1 495 495
+4 * 495 495
+1 * 495 495

fn=(3098)
0x409408 135 23 0 23
+1 * 23
+3 * 23
+4 * 23 0 23
cob=(3)
cfi=(100)
cfn=(626)
calls=23 0x10a310 32 
* * 1108 438 280 0 10 0 0 1
* * 23 23
+5 * 23 0 23
+4 +1 23 23
+4 * 23
+3 * 23 0 23
cfn=(2412)
calls=23 0x409807 -89 
* * 1315 530 349 0 1 11 0 1 1
+5 * 23 23
+1 * 23 23

fn=(3200)
0x4123bd 76 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -44 
* * 968 382 248
* * 20 20
+5 * 20 0 20
+4 +1 20 20
+4 * 20 20
+1 * 20 20

fn=(1902)
0x405d2c 101 103108 0 103108
+1 * 103108
+3 * 103108
+4 * 103108 0 103108
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 -69 
* * 4949188 1959053 1237300 0 155 0 0 1
* * 103108 103108
+5 * 103108 0 103108
+4 +1 103108 103108
+4 * 103108 103108
+1 * 103108 103108

fn=(2352)
0x40b8d7 76 620 0 620
+1 * 620
+3 * 620
+4 * 620 0 620
cob=(3)
cfi=(100)
cfn=(626)
calls=620 0x10a310 -44 
* * 33048 12974 8343 0 10 2 0 0 2
* * 620 620
+5 * 620 0 620
+4 +1 620 620
+4 * 620 620
+1 * 620 620

fn=(2412)
0x409807 47 496 0 496
+1 * 496
+3 * 496
+4 * 496 0 496
cob=(3)
cfi=(100)
cfn=(626)
calls=496 0x10a310 -15 
* * 23828 9429 5972 0 1 14 0 1 4
* * 496 496
+5 * 496 0 496
+4 +3 496 496
+4 +1 496 496
+1 * 496 496

fn=(2948)
0x416ea3 76 150 0 150 9
+1 * 150
+3 * 150
+4 * 150 0 150
cob=(3)
cfi=(100)
cfn=(626)
calls=150 0x10a310 -44 
* * 8843 3447 2251 0 1 1 0 1 1
* * 150 150
+5 * 150 0 150
+4 +1 150 150
+4 * 150 150
+1 * 150 150

fn=(3054)
0x417397 76 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -44 
* * 701 273 181 0 21 1 0 1 1
* * 12 12
+5 * 12 0 12
+4 +1 12 12
+4 * 12 12
+1 * 12 12

fn=(1906)
0x4067a3 76 328396 0 328396
+1 * 328396
+3 * 328396
+4 * 328396 0 328396
cob=(3)
cfi=(100)
cfn=(626)
calls=328396 0x10a310 -44 
* * 15763028 6239529 3940772 0 722 752 0 2 4
* * 328396 328396 0 0 1
+5 * 328396 0 328396
+4 +1 328396 328396
+4 * 328396 328396
+1 * 328396 328396

fn=(2312)
0x4097d9 47 318 0 318
+1 * 318
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -15 
* * 15276 6045 3828 0 168 1 0 2 1
* * 318 318
+5 * 318 0 318
+4 +3 318 318
+4 +1 318 318
+1 * 318 318

fn=(2328)
0x40afff 76 930 0 930
+1 * 930
+3 * 930
+4 * 930 0 930
cob=(3)
cfi=(100)
cfn=(626)
calls=930 0x10a310 -44 
* * 44664 17676 11184 0 173 11 0 0 1
* * 930 930
+5 * 930 0 930
+4 +1 930 930
+4 * 930 930
+1 * 930 930

fn=(2598)
0x4182a5 76 330 0 330
+1 * 330
+3 * 330
+4 * 330 0 330
cob=(3)
cfi=(100)
cfn=(626)
calls=330 0x10a310 -44 
* * 15852 6273 3972 0 149 1 0 0 1
* * 330 330
+5 * 330 0 330
+4 +1 330 330
+4 * 330 330
+1 * 330 330

fn=(2684)
0x4119cf 76 25926 0 25926
+1 * 25926
+3 * 25926
+4 * 25926 0 25926
cob=(3)
cfi=(100)
cfn=(626)
calls=25926 0x10a310 -44 
* * 1244460 492597 311124 0 296 1 0 0 1
* * 25926 25926
+5 * 25926 0 25926
+4 +1 25926 25926
+4 * 25926 25926
+1 * 25926 25926

fn=(3088)
0x419beb 76 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 -44 
* * 1444 571 364 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30
+1 * 30 30

fn=(2326)
0x40b016 76 1425 0 1425
+1 * 1425
+3 * 1425
+4 * 1425 0 1425
cob=(3)
cfi=(100)
cfn=(626)
calls=1425 0x10a310 -44 
* * 68613 27147 17193 0 468 153 0 4 5
* * 1425 1425
+5 * 1425 0 1425
+4 +1 1425 1425
+4 * 1425 1425
+1 * 1425 1425

fn=(2476)
0x411609 76 447 0 447
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 -44 
* * 21468 8496 5376 0 298 150 0 1 2
* * 447 447
+5 * 447 0 447
+4 +1 447 447
+4 * 447 447
+1 * 447 447

fn=(2766)
0x411c13 76 71370 0 71370
+1 * 71370
+3 * 71370
+4 * 71370 0 71370
cob=(3)
cfi=(100)
cfn=(626)
calls=71370 0x10a310 -44 
* * 3425772 1356033 856452 0 298 0 0 2
* * 71370 71370
+5 * 71370 0 71370
+4 +1 71370 71370
+4 * 71370 71370
+1 * 71370 71370

fn=(3318)
0x41978c 135 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(2994)
calls=10 0x4171dc -89 
* * 574 231 154 0 0 1 0 0 1
+5 * 10 10
+1 * 10 10

fn=(1938)
0x40627b 76 1041510 0 1041510
+1 * 1041510
+3 * 1041510
+4 * 1041510 0 1041510
cob=(3)
cfi=(100)
cfn=(626)
calls=1041510 0x10a310 -44 
* * 49992500 19788695 12498140 0 5366 1 0 1 1
* * 1041510 1041510
+5 * 1041510 0 1041510
+4 +1 1041510 1041510
+4 * 1041510 1041510
+1 * 1041510 1041510

fl=(154) /usr/include/c++/5/bits/ios_base.h
fn=(1420) std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
0x4040e2 130 2 0 2
+1 * 2
+3 * 2
+4 * 2 0 2
cob=(3)
cfi=(100)
cfn=(626)
calls=2 0x10a310 -98 
* * 104 40 32 0 2 1 0 2 1
* * 2 2
+5 * 2 0 2
+3 * 2 0 2
+3 * 2 2
+3 * 2 2
+3 * 2 2
+1 * 2 2

fl=(194)
fn=(3180)
0x40fca0 127 10 0 10 1 0 0 1
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -95 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 10
+4 * 10 10 0 0 1
+2 * 10 10
+4 * 10 0 10 1 0 0 1
+2 * 10 10
+4 * 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(147)
cfn=(3182)
calls=10 -99 +45 
* * 59690 22308 15716 180 143 52 31 13 22
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3268)
0x40fce0 96 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -64 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 10
+4 * 10
+4 * 10
+3 * 10 0 10 1 0 0 1
cfi=(147)
cfn=(3270)
calls=10 0x4044ec +2 
* * 29923 11154 7840 212 113 30 7 8 11
+5 * 10
+1 * 10 10
+1 * 10 10

fl=(115)
fn=(1494) World::init_environment()
0x40229a 99 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+7 * 1 0 1 0 0 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -67 
* * 52 20 16 0 0 2 0 0 2
* * 1 1
+5 * 1 0 1 0 0 1 0 0 1
+7 * 1 1
+9 * 1 0 1
+4 * 1
+2 +2 1 0 0 1 0 0 1
+7 * 1 1
+8 * 1
+4 * 1
+3 * 1 0 1
cfi=(133)
cfn=(1224)
calls=1 0x405ec0 1748 
* * 136 53 42 2 3 1 2 3 1
+5 +1 1 0 1
+10 * 1 1
+10 * 1
-10 * 500 500
+10 * 500
+2 +1 500 500
+7 * 500
+4 * 500 0 0 1 0 0 1
+7 * 500
+3 * 500
+3 * 500 0 500
cfi=(133)
cfn=(1244)
calls=500 0x405efe 1808 
* * 610948 234758 154896 15 94 6 15 15 6
+5 * 500
+4 * 500 500
+6 * 500
+2 * 500 0 500 0 0 3 0 0 3
+7 -1 500 0 500
+7 * 500
+2 +3 1 0 1
+10 * 1 1
+7 * 1 1 0 0 1 0 0 1
+2 * 1 1 0 1 0 0 1
+6 * 1
-15 * 32 32
+7 * 32 32
+2 * 32 32
+6 * 32
+6 +1 32 0 32
+10 * 32 32
+7 * 32 32
+3 * 32 32
+6 * 32
-16 * 1024 1024
+7 * 1024 1024
+3 * 1024 1024
+6 * 1024
+6 +1 1024 0 1024
+10 * 1024 1024
+10 * 1024
-10 * 512000 512000
+10 * 512000
+2 +1 512000 512000 0 1 0 0 1
+7 * 512000 512000
+7 * 512000 512000
+7 * 512000 512000
+2 * 512000 512000
+7 * 512000
+2 * 512000 512000
+6 * 512000
+2 * 512000
+2 * 512000
+4 * 512000
+3 * 512000 512000 0 0 128 0 0 60
+3 * 512000 512000
+6 * 512000
+3 * 512000 512000 0 1 0 0 1
+9 * 512000 512000
+6 * 512000
+3 * 512000
+4 * 512000 0 512000 0 0 33024 0 0 32000
+6 -1 512000 0 512000
+7 * 512000
+2 -1 1024 0 1024
+7 * 1024
+5 -1 32 0 32
+7 * 32
+5 +8 1
+1 * 1 1 0 0 1
+4 * 1 1 0 1 1 0 1 1
+9 * 1
+7 * 1 1
+1 * 1 1

fn=(1130)
0x40407b 416 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 61 23 16 2 3 2 2
* * 1 1
+5 * 1
+5 * 1
+5 * 1 0 1
cfn=(1132) __static_initialization_and_destruction_0(int, int)
calls=1 -86 * 
* * 164 49 44 2 2 1 1
+5 * 1 1
+1 * 1 1

fn=(1314) World::World(int, int, unsigned int)
0x401d00 35 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+2 * 1 0 1
+1 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -3 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 0 1
+3 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+9 * 1 0 1
+4 * 1
+2 * 1 1
+4 * 1
+4 * 1
+5 * 1
+3 * 1 0 1 1 0 0 1
cfi=(133)
cfn=(1212)
calls=1 0x40552e 495 
* * 171581 65513 46176 0 6 81 0 6 81
+5 * 1 1
+4 * 1
+6 * 1
+3 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +29 
* * 7437 2082 1067 39 104 12 39 104 12
* * 5 3 2 1 0 0 1
+5 * 1 1
+4 * 1
+6 * 1
+3 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1320)
calls=1 0xefe40 -35 
* * 2301 813 578 0 0 7 0 0 7
* * 1 1
+5 +1 1 1
+4 * 1 1
+3 * 1 0 1
+2 +1 1 1
+4 * 1 1
+3 * 1 0 1
+3 +1 1 1
+4 * 1 0 1 1 0 0 1
+10 +2 1 1
+3 * 1 1
+4 * 1
+2 * 1
+10 * 1
+3 * 1
+2 * 1
+4 * 1
+3 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +24 
* * 1683 475 234 1 11 1 1 10 1
* * 5 3 2
+5 * 1
+7 * 1
+3 * 1 1
+4 * 1 0 1
+7 +2 1 1 0 1 0 0 1
+4 * 1 1
+3 * 1 0 1
+3 +1 1 1
+3 * 1 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(134)
cfn=(1214)
calls=1 0x40555a 327 
* * 171518 65489 46159 0 1 4 0 1
+5 +2 1
+4 * 1
+5 * 1
+5 * 1
+3 * 1 0 1
cfi=(135)
cfn=(1356)
calls=1 0x405e64 +59 
* * 138 53 45 3 1 1 3 1 1
+5 +2 1 0 1
+7 * 1 1
+3 * 1 1 0 1 0 0 1
+3 * 1
-6 * 32 32
+3 * 32 32
+3 * 32
+6 +1 32 0 32
+7 * 32 32
+3 * 32 32
+3 * 32
-6 * 1024 1024
+3 * 1024 1024
+3 * 1024
+2 +1 1024 1024
+4 * 1024
+4 * 1024
+4 * 1024
+3 * 1024
+3 * 1024 0 1024
cfi=(135)
cfn=(1360)
calls=1024 0x405e92 164 
* * 472042 185456 117472 5 211 3 5 40 2
+5 * 1024
+3 * 1024
+5 * 1024 0 1024
cob=(8)
cfi=(94)
cfn=(1312)
calls=1024 0x8de60 -49 
* * 205406 33758 34146 20 478 1130 20 6 1026
* * 1024 1024
+5 * 1024
+3 * 1024 1024 0 1 0 0 1
+3 * 1024 1024
+3 * 1024 1024
+4 * 1024
+3 * 1024
+3 * 1024
+3 * 1024 0 1024
cfi=(146) /home/nathan/DEV/PC-optimisation/src/GridCell.h
cfn=(1368) GridCell::GridCell(World*, int, int, unsigned int)
calls=1024 0x40450c -32 
* * 353016918 134793234 94999652 23 11 81418 23 11 81418
+5 * 1024 1024
+4 * 1024 1024
+7 * 1024 1024
+3 * 1024 1024
+4 * 1024
+2 * 1024 1024
+3 * 1024
+2 * 1024
+2 * 1024
+4 * 1024
+3 * 1024 0 1024 0 0 128 0 0 128
+3 -1 1024 0 1024
+4 * 1024 0 0 1 0 0 1
+2 -1 32 0 32
+4 * 32
+5 +6 1
+5 * 1
+5 * 1 0 1
cfi=(154)
cfn=(1420)
calls=1 0x4040e2 +77 
* * 63 25 20 0 2 1 0 2 1
+5 * 1
+2 * 1 1
+4 * 1
+6 * 1
+5 * 1
+3 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +11 
* * 8581 2107 915 61 159 27 61 146 25
* * 5 3 2 0 1 0 0 1
+5 +1 1
+5 * 1
+5 * 1 0 1 1 0 0 1
cfi=(154)
cfn=(1420)
calls=1 0x4040e2 +76 
* * 63 25 20
+5 * 1
+2 * 1 1
+4 * 1
+6 * 1
+5 * 1
+3 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1426)
calls=1 0xf08b0 -54 
* * 836 171 196 0 4 10 0 4 10
* * 1 1
+5 +1 1
+73 * 1 1 0 1 0 0 1
+4 * 1 1
+9 * 1
+7 * 1
+4 * 1 1 0 0 1 0 0 1
+1 * 1 1
+2 * 1 1
+1 * 1 1

fn=(1496) World::random_population()
0x401f40 57 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+2 * 1 0 1
+1 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -25 
* * 52 20 16
* * 1 1
+5 * 1 0 1
+4 +1 1
+4 * 1 0 1
+5 +1 1 0 1
+8 +1 1 0 1
+8 +1 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(141)
cfn=(1298)
calls=1 0x55800 -33 
* * 401 85 45 6 1 0 6 1
* * 1 1
+5 +2 1 0 1 1 0 0 1
+8 +1 1
+4 * 1 1
+4 * 1
-8 * 1 0 0 1
+4 * 1 1
+4 * 1
+6 +1 1 1
+4 * 1
+3 * 1
+18 +1 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1312)
calls=1 0x8de60 -66 
* * 207 33 32 0 11 1 0 9 1
* * 1 1 0 0 1 0 0 1
+5 * 1
+3 * 1 1
+4 * 1 1 0 1 0 0 1
+7 * 1 1 0 0 1
+3 * 1
+3 * 1
+3 * 1 0 1
cfi=(118)
cfn=(1498)
calls=1 0x41a62e -58 
* * 13947568 5151703 3499813 566 1594 3212 357 295 3076
+5 * 1 0 1 0 0 1 0 0 1
+4 +1 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1312)
calls=1 0x8de60 -67 
* * 304 35 34
* * 1 1
+5 * 1
+3 * 1 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(174) /home/nathan/DEV/PC-optimisation/src/DNA.h
cfn=(1884) DNA::DNA(DNA*)
calls=1 0x404d3e -53 
* * 8152628 2923632 2048614 237 3859 3164 96 39 3011
+5 * 1
+3 * 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1312)
calls=1 0x8de60 -67 
* * 524 97 99 2 4 1 0 1 1
* * 1 1
+5 * 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+3 * 1 0 1
cfi=(175)
cfn=(2012)
calls=1 0x40539a -44 
* * 7135 2706 2107 50 37 33 50 36 33
+5 * 1 0 1 0 0 1
+4 +1 1 1
+4 * 1 1 0 0 1 0 0 1
+7 * 1 1 0 0 1
+3 * 1 1
+4 * 1 0 1 0 0 1 0 0 1
+7 +1 1 1
+4 * 1
+3 * 1 0 1
cfi=(117)
cfn=(2118)
calls=1 0x40d720 238 
* * 6429421 2324266 1621834 905 3917 2413 542 299 2236
+5 +1 1 1 0 1 1
+4 * 1
+3 * 1 0 1 1 0 0 1
cfi=(117)
cfn=(2818)
calls=1 0x40ce84 170 
* * 69623 26288 18948 227 158 99 182 104 93
+5 +1 1 0 1
+7 * 1 1
+4 * 1
-4 * 10 10
+4 * 10
+2 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(117)
cfn=(3106)
calls=10 0x40de38 296 
* * 1078883 406402 279109 1518 1295 263 144 90 104
+5 -1 10 0 10
+4 * 10
+2 +2 1 1
+4 * 1
+3 * 1 0 1
cfi=(117)
cfn=(3338)
calls=1 0x40e29c 339 
* * 48390 19863 10422 74 100 37 20 29 33
+5 +1 1 1
+4 * 1 1
+8 * 1 0 1
+5 +1 1 1 0 1 0 0 1
+4 * 1
+3 * 1 0 1
cfi=(117)
cfn=(3354)
calls=1 0x40ded0 302 
* * 5528 1982 1362 83 48 23 75 35 16
+5 * 1
+2 * 1
+11 +3 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -14 
* * 1329 393 145 11 37 1 9 8 1
* * 5 3 2
+5 +1 1 1
+4 * 1
+3 * 1
+2 * 1
+3 * 1 0 1
cfi=(174)
cfn=(3402) DNA::~DNA()
calls=1 0x404e4c -59 
* * 2039314 726815 481055 106 3050 27 12 5 23
+5 * 1
+3 * 1 0 1
cob=(8)
cfi=(94)
cfn=(1598)
calls=1 0x8bf10 -79 
* * 102 25 15 0 1
* * 1 1
+5 +2 1 0 1 0 0 1
+5 -17 1 0 0 1 0 0 1
+5 +20 1 1
+4 * 1 1 0 0 1
+8 * 1 1
+4 * 1 0 1 0 0 1
+8 +1 1 1
+4 * 1 1
+8 * 1 1
+4 * 1 0 1
+8 +2 1
+5 * 1 0 1
cob=(3)
cfi=(124)
cfn=(1172)
calls=1 0x6f690 -54 
* * 1344 361 167 38 10 2 32 1
* * 1 1 0 1 1 0 1
+5 +1 1 0 1 1 0 0 1
+7 * 1 1
+4 * 1 1 0 0 1
+2 * 1 1
+3 * 1
-9 * 4 4
+4 * 4 4
+2 * 4 4
+3 * 4
+6 +1 5 0 5
+7 * 5 5
+4 * 5 5
+3 * 5 5
+3 * 5
-10 * 147 147 0 147
+4 * 147 147
+3 * 147 147
+3 * 147
+6 +1 148
+5 * 148 0 148
cob=(8)
cfi=(94)
cfn=(1312)
calls=148 0x8de60 -90 
* * 30545 4878 4719 6 3 73 3 0 73
* * 148 148
+5 * 148
+3 * 148 148
+4 * 148 148 0 0 148
+4 * 148 0 0 148 0 0 1
+3 * 148
+3 * 148 0 148
cfi=(174)
cfn=(1884)
calls=148 0x404d3e -76 
* * 1206420415 432680350 303147252 46568 587623 464906 29 24 435475
+5 * 148
+3 * 148
+5 * 148 0 148
cob=(8)
cfi=(94)
cfn=(1312)
calls=148 0x8de60 -90 
* * 77197 14296 14577 169 503 148 0 0 148
* * 148 148
+5 * 148
+3 * 148
+3 * 148
+3 * 148 0 148
cfi=(175)
cfn=(2012)
calls=148 0x40539a -67 
* * 1024016 393533 275728 7990 8153 2179 3 0 847
+5 * 148 148 0 0 148
+4 * 148 148 0 0 148
+7 * 148 148
+4 * 148 148 0 0 148
+2 * 148 148
+4 * 148
+2 * 148 148
+3 * 148 0 0 148 0 0 1
+2 * 148
+2 * 148
+4 * 148
+3 * 148 148 0 0 148 0 0 18
+3 * 148 0 148 0 0 148 0 0 141
+4 +1 148 148
+4 * 148 148
+7 * 148 148
+4 * 148 148
+2 * 148 148
+4 * 148
+2 * 148 148
+3 * 148
+2 * 148
+2 * 148
+4 * 148
+3 * 148 148
+3 * 148 148
+4 * 148
+3 * 148 0 148 148 0 0 1
cfi=(117)
cfn=(2118)
calls=148 0x40d720 238 
* * 949482359 343430654 239502219 113108 552422 335263 15 18 302687
+5 +1 147 147 0 147 147
+4 * 147 147 0 0 147
+7 * 147 147
+4 * 147 147 0 0 147
+2 * 147 147
+4 * 147
+2 * 147 147
+3 * 147
+2 * 147
+2 * 147
+4 * 147
+3 * 147 147 0 0 147
+3 * 147 147 0 0 147
+4 * 147 147
+4 * 147 147
+7 * 147 147
+4 * 147 147 0 147 0 0 1
+2 * 147
+2 * 147 147
+4 * 147 147
+3 * 147
+2 * 147
+3 * 147
+4 * 147
+3 * 147 147
+3 * 147 0 147 0 0 143 0 0 38
+7 -3 147 0 147
+4 * 147
+5 -1 4 0 4
+4 * 4

fn=(1132)
0x404038 416 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+4 * 1
+2 * 1 1
+7 * 1
fi=(102)
+2 74 1
+5 * 1 0 1
cob=(8)
cfi=(94)
cfn=(638)
calls=1 0x9d7e0 -74 
* * 24 9 7 1
* * 1 1 0 0 1
+5 * 1
+5 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 -17 
* * 66 13 15
* * 1 1
fe=(115)
+5 416 1
+1 * 1 1
+1 * 1 1

fl=(174)
fn=(3402)
0x404e4c 20 1 0 1 1
+1 * 1
+3 * 1 0 1
+1 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 +12 
* * 52 20 16 0 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+4 * 1 1
+9 * 1 0 1
+4 * 1
+2 +1 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1 1 0 0 1
cfi=(157)
cfn=(1886)
calls=1 0x405c08 547 
* * 134 53 38 4 4 0 0 1
+5 * 1 0 1
+4 * 1 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(1890)
calls=1 0x405c56 565 
* * 135 53 38 1 2
+5 * 1 0 1
+4 * 1
+4 * 1
+4 * 1
+3 * 1
+3 * 1 0 1
cfi=(164)
cfn=(1892)
calls=1 0x405ca7 841 
* * 188 74 53 1 1 1 0 0 1
-14 * 461
+4 * 461
+4 * 461
+3 * 461
+3 * 461 0 461
cfi=(164)
cfn=(1892)
calls=461 0x405ca7 841 
* * 84824 33653 22589
+5 * 462
+2 * 462
+2 * 461
+4 * 461
+3 * 461 0 461
cfi=(164)
cfn=(1896)
calls=461 0x405d12 753 
* * 26742 11065 6919 1
+5 * 461 461 0 0 59
+3 * 461 0 461
+4 +1 461 461 0 1 0 0 1
+4 * 461
+3 * 461
+2 * 461
+3 * 461 0 461
cfi=(158)
cfn=(3404)
calls=461 0x404ccc +67 
* * 1839176 656491 433952 79 2965 19 9 4 16
+5 * 461
+3 * 461 0 461
cob=(8)
cfi=(94)
cfn=(1598)
calls=461 0x8bf10 -22 
* * 47022 11525 6915 0 1
* * 461 461
+5 -1 461
+4 * 461
+3 * 461 0 461
cfi=(164)
cfn=(1914)
calls=461 0x405ce8 761 
* * 28586 11987 7380 0 0 1 0 0 1
+5 * 461
+2 +2 1 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(3442)
calls=1 0x405d7a 1211 
* * 392 150 117 8 7 2 0 0 1
+5 -3 1 1
+4 * 1
+3 * 1 0 1
cfi=(157)
cfn=(3446)
calls=1 0x405bbe 423 
* * 958 349 259 8 11 3 1 0 3
+5 +4 1
+1 * 1 1 0 1
+4 * 1 1
+9 * 1
+7 * 1
+4 * 1 1
+1 * 1 1
+1 * 1 1

fn=(1884)
0x404d3e 14 149 0 149 148 0 0 1
+1 * 149 0 0 149 0 0 1
+3 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 +18 
* * 7160 2833 1796 0 297 1 0 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(1500)
calls=149 0x405b9e 253 
* * 45151 17434 12222 1181 1186 0 0 1
+5 +1 149 149
+4 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cfi=(157)
cfn=(1886)
calls=149 0x405c08 547 
* * 19378 7750 5074 3 297 2 3 2 1
+5 * 149 0 149
+4 * 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(1890)
calls=149 0x405c56 565 
* * 19527 7750 5074 1 1 1 1 1 1
+5 * 149 0 149
+4 * 149
+4 * 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(164)
cfn=(1892)
calls=149 0x405ca7 841 
* * 27428 10880 7313 148 147 1 1 0 1
-14 * 68689
+4 * 68689
+4 * 68689
+3 * 68689
+3 * 68689 0 68689
cfi=(164)
cfn=(1892)
calls=68689 0x405ca7 841 
* * 12638776 5014297 3365761 0 5
+5 * 68838
+2 * 68838
+2 * 68689
+4 * 68689
+3 * 68689 0 68689
cfi=(164)
cfn=(1896)
calls=68689 0x405d12 753 
* * 3983966 1648537 1030339 1 0 0 1
+5 * 68689 68689 0 0 8792
+3 * 68689 0 68689 149 0 0 1
+4 +1 68689
+5 * 68689 0 68689
cob=(8)
cfi=(94)
cfn=(1312)
calls=68689 0x8de60 -16 
* * 12870470 2188546 1959126 374 811 31093 0 1 30341
* * 68689 68689
+5 * 68689
+3 * 68689 68689
+4 * 68689
+3 * 68689
+3 * 68689 0 68689
cfi=(158)
cfn=(1898)
calls=68689 0x404b6c +59 
* * 1133303155 407134460 285114803 36807 548403 414102 86 36 389621
+5 * 68689 0 68689
+4 * 68689 68689
+4 * 68689
+4 * 68689
+3 * 68689
+3 * 68689 0 68689
cfi=(157)
cfn=(1900)
calls=68689 0x405d44 931 
* * 45332531 17509036 12043732 7398 31393 22870 27 20 18521
+5 -1 68689
+4 * 68689
+3 * 68689 0 68689 149 0 0 1
cfi=(164)
cfn=(1914)
calls=68689 0x405ce8 761 
* * 4258722 1785915 1099028 0 150 0 0 1
+5 * 68689
+44 +3 149
+1 * 149 149
+4 * 149 149
+9 * 149
+7 * 149 0 0 148 0 0 1
+4 * 149 149
+1 * 149 149
+2 * 149 149
+1 * 149 149

fl=(137)
fn=(3342)
0x40f89b 88 500 0 500 1 0 0 1
+1 * 500
+3 * 500
+4 * 500 0 500
cob=(3)
cfi=(100)
cfn=(626)
calls=500 0x10a310 -56 
* * 24004 9501 6004
* * 500 500
+5 * 500 0 500
+5 * 500 500
+5 * 500 500
+8 * 500
+3 * 500 500
+1 * 500 500

fn=(3344)
0x40f8bf 242 1 0 1
+1 * 1 0 0 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 32 
* * 52 20 16 0 1 0 0 1
* * 1 1
+5 * 1 0 1
+5 * 1 1
+3 * 1 0 1
+3 * 1 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1039 302 116 55 59 2 6 10
* * 5 3 2 1
+5 * 1 1
+1 * 1 1

fn=(1260)
0x404095 362 502392 0 502392 2 0 0 1
+1 * 502392
+3 * 502392
+4 * 502392 0 502392
cob=(3)
cfi=(100)
cfn=(626)
calls=502392 0x10a310 32 
* * 24114832 9545452 6028720 0 1 4 0 1 3
* * 502392 502392
+5 * 502392 502392 502392
+3 * 502392 502392 502392
+3 * 502392 0 502392
cob=(4)
cfi=(138)
cfn=(1266)
calls=502391 0x44d80 27 
* * 15071730 3014346 502391 14 5 0 3 3
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1032 291 115 5 15 17 3 8 4
* * 502396 502394 2 2 3 0 2 1
+5 * 502392
+4 * 502392 0 502392
+3 * 502392 502392
+4 * 502392 502392
+3 * 502392 0 502392
+4 * 502392 0 502392 1 0 0 1
+3 * 502392 502392
+3 * 502392 502392
+1 * 502392 502392

fn=(2222)
0x40f8e3 299 298 0 298 149 0 0 1
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 0 1 0 0 1
* * 298 298
+5 * 298 0 298
+5 * 298 0 298
+5 * 298 298
+5 * 298 298 0 149 0 0 1
+3 * 298
+3 * 298 0 298
+3 * 298 298
+5 * 298 0 298
cob=(4)
cfi=(177)
cfn=(2228)
calls=297 0x375a0 26 
* * 16902 891 0 1332 296
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1076 290 114 61 59 8 49 16
* * 302 300 2 150 150 0 2 1
+5 * 298 298
+1 * 298 298

fn=(2232)
0x40f914 408 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+5 * 149 0 149
+5 * 149 149
+5 * 149 149
+3 * 149
+3 * 149 0 149
+3 * 149 149
+5 * 149 0 149 149 0 0 1
cob=(4)
cfi=(179)
cfn=(2238)
calls=148 0x37bf0 26 
* * 42032 5032 444 3848 1332
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 64 
* * 1377 339 122 33 24 0 26 20
* * 153 151 2 0 2 0 0 1
+5 * 149 149
+1 * 149 149

fl=(170)
fn=(1948)
0x4049c2 16 10430 0 10430 149 0 0 1
+1 * 10430
+3 * 10430 0 10430
+1 * 10430
+4 * 10430 0 10430
cob=(3)
cfi=(100)
cfn=(626)
calls=10430 0x10a310 +16 
* * 500644 198171 125164 0 30 1170 0 0 1
* * 10430 10430
+5 * 10430 0 10430
+4 * 10430 0 10430
+4 * 10430 10430
+9 * 10430 0 10430
+4 * 10430
+2 * 10430 10430
+4 * 10430
+3 * 10430 0 10430
cfi=(157)
cfn=(1704)
calls=10430 0x4059c2 253 
* * 3160294 1220311 855264 5958 8432 0 0 1
+5 +1 10430 10430
+4 * 10430 0 10430
+4 * 10430 10430
+4 * 10430 0 0 149 0 0 1
+3 * 10430 0 10430
cfi=(157)
cfn=(1950)
calls=10430 0x405a2c 547 
* * 1355908 542362 354628 3 7427 1 3 2 1
+5 * 10430 0 10430
+4 * 10430 10430
+4 * 10430
+3 * 10430 0 10430
cfi=(157)
cfn=(1954)
calls=10430 0x405a7a 565 
* * 1366338 542362 354628 2 789 1 2 1 1
+5 * 10430 0 10430
+4 * 10430
+4 * 10430
+4 * 10430
+3 * 10430
+3 * 10430 0 10430
cfi=(164)
cfn=(1956)
calls=10430 0x405acb 841 
* * 1919132 761393 511082 1 836 593 1 0 1
-14 * 259111
+4 * 259111
+4 * 259111
+3 * 259111
+3 * 259111 0 259111
cfi=(164)
cfn=(1956)
calls=259111 0x405acb 841 
* * 47676424 18915103 12696439
+5 * 269541
+2 * 269541
+2 * 259111
+4 * 259111
+3 * 259111 0 259111
cfi=(164)
cfn=(1960)
calls=259111 0x405b36 753 
* * 15028442 6218665 3886669 1 0 0 1
+5 * 259111 259111 0 149 39718 0 1
+3 * 259111 0 259111
+4 +1 259111
+5 * 259111 0 259111
cob=(8)
cfi=(94)
cfn=(1312)
calls=259111 0x8de60 -18 
* * 53342373 8568047 8384697 78 312 90905 0 1 90629
* * 259111 259111
+5 * 259111
+3 * 259111 259111
+4 * 259111
+3 * 259111
+3 * 259111 0 259111
cfi=(171)
cfn=(1962)
calls=259111 0x404990 -2 
* * 17101330 7255109 4664002 148 136056 0 1
+5 * 259111 0 259111
+4 * 259111 259111
+4 * 259111
+4 * 259111
+3 * 259111
+3 * 259111 0 259111
cfi=(157)
cfn=(1964)
calls=259111 0x405b68 931 
* * 369068637 139896102 96571896 18244 44459 91571 9 4 85090
+5 -1 259111
+4 * 259111
+3 * 259111 0 259111 148 0 0 1
cfi=(164)
cfn=(1978)
calls=259111 0x405b0c 761 
* * 16064886 6736887 4145780 0 1822 0 0 1
+5 * 259111
+28 +3 10430
+1 * 10430 10430
+4 * 10430 10430
+9 * 10430
+7 * 10430
+4 * 10430 10430
+1 * 10430 10430
+1 * 10430 10430

fn=(1702)
0x41ca6e 21 46 0 46 1 0 0 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 +11 
* * 2212 875 556 0 2 0 0 1
* * 46 46
+5 * 46 0 46
+4 * 46 46
+4 * 46
+3 * 46 0 46
cfi=(157)
cfn=(1704)
calls=46 0x4059c2 253 
* * 13958 5387 3792 23 21 3 7 5 2
+5 +1 46
+1 * 46 46
+1 * 46 46

fn=(3418)
0x404abc 23 46 0 46 1
+1 * 46
+3 * 46 0 0 1 0 0 1
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 +9 
* * 2212 875 556 0 1
* * 46 46
+5 * 46 0 46
+4 * 46 46
+9 * 46 0 46
+4 * 46
+2 +1 46 46
+4 * 46 0 46
+4 * 46 46
+4 * 46
+3 * 46 0 46
cfi=(157)
cfn=(1950)
calls=46 0x405a2c 547 
* * 5984 2393 1568 3 14 1 0 0 1
+5 * 46 0 46
+4 * 46 46
+4 * 46
+3 * 46 0 46
cfi=(157)
cfn=(1954)
calls=46 0x405a7a 565 
* * 6030 2393 1568 2 2 0 0 1
+5 * 46 0 46 1 0 0 1
+4 * 46
+4 * 46
+4 * 46
+3 * 46
+3 * 46 0 46
cfi=(164)
cfn=(1956)
calls=46 0x405acb 841 
* * 8468 3359 2258 1 1 2 0 0 1
-14 * 1120
+4 * 1120
+4 * 1120
+3 * 1120
+3 * 1120 0 1120
cfi=(164)
cfn=(1956)
calls=1120 0x405acb 841 
* * 206080 81760 54880
+5 * 1166
+2 * 1166
+2 * 1120
+4 * 1120
+3 * 1120 0 1120
cfi=(164)
cfn=(1960)
calls=1120 0x405b36 753 
* * 64964 26881 16804 1
+5 * 1120 1120 0 0 166
+3 * 1120 0 1120
+4 +1 1120 1120
+4 * 1120
+3 * 1120 0 1120
cob=(8)
cfi=(94)
cfn=(1598)
calls=1120 0x8bf10 -25 
* * 114240 28000 16800 0 559
* * 1120 1120
+5 -1 1120
+4 * 1120 0 0 1
+3 * 1120 0 1120
cfi=(164)
cfn=(1978)
calls=1120 0x405b0c 761 
* * 69444 29121 17924
+5 * 1120
+2 -1 46 46
+4 * 46
+3 * 46 0 46
cfi=(157)
cfn=(3420)
calls=46 0x4059e2 423 
* * 40794 15015 10273 12 36 3 0 0 3
+5 +4 46
+1 * 46 46
+4 * 46 46
+9 * 46
+7 * 46 46
+1 * 46 46

fl=(186)
fn=(2642) int const& std::__pair_get<0ul>::__get<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >(std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >&)
0x4167ea 112 159 0 159
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 -80 
* * 7636 3022 1912
* * 159 159
+5 * 159 0 159
+4 +1 159 159
+4 * 159 159
+1 * 159 159

fn=(3090)
0x419c19 157 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 32 
* * 1444 571 364
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30
+3 * 30 0 30
cfn=(3092) int const& std::__pair_get<0ul>::__const_get<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > > const&)
calls=30 -47 -36 
* * 1714 691 454 0 0 1 0 0 1
+5 * 30 30
+1 * 30 30

fn=(3236)
0x40be85 157 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 592 230 151
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfn=(3238) float const& std::__pair_get<0ul>::__const_get<float const, Protein*>(std::pair<float const, Protein*> const&)
calls=10 -47 -36 
* * 574 231 154 0 0 1 0 0 1
+5 * 10 10
+1 * 10 10

fn=(3238)
0x40be6e 122 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -90 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+1 * 10 10

fn=(2640)
0x416801 147 159 0 159
+1 * 159
+3 * 159
+4 * 159 0 159
cob=(3)
cfi=(100)
cfn=(626)
calls=159 0x10a310 32 
* * 9383 3657 2386
* * 159 159
+5 * 159 0 159
+4 +1 159 159
+4 * 159
+3 * 159 0 159
cfn=(2642)
calls=159 -47 -36 
* * 9067 3658 2389
+5 * 159 159
+1 * 159 159

fn=(2950)
0x416ed1 147 150 0 150
+1 * 150
+3 * 150
+4 * 150 0 150
cob=(3)
cfi=(100)
cfn=(626)
calls=150 0x10a310 32 
* * 8852 3450 2251
* * 150 150
+5 * 150 0 150
+4 +1 150 150
+4 * 150
+3 * 150 0 150
cfn=(2952) int const& std::__pair_get<0ul>::__get<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >(std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >&)
calls=150 -47 -36 
* * 8554 3451 2254
+5 * 150 150
+1 * 150 150

fn=(3058) float const& std::__pair_get<0ul>::__get<float const, float>(std::pair<float const, float>&)
0x4173ae 112 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -80 
* * 580 229 148 0 0 1 0 0 1
* * 12 12
+5 * 12 0 12
+4 +1 12 12
+4 * 12 12
+1 * 12 12

fn=(2952)
0x416eba 112 150 0 150
+1 * 150
+3 * 150
+4 * 150 0 150
cob=(3)
cfi=(100)
cfn=(626)
calls=150 0x10a310 -80 
* * 7204 2851 1804
* * 150 150
+5 * 150 0 150
+4 +1 150 150
+4 * 150 150
+1 * 150 150

fn=(3092)
0x419c02 122 30 0 30
+1 * 30
+3 * 30
+4 * 30 0 30
cob=(3)
cfi=(100)
cfn=(626)
calls=30 0x10a310 -90 
* * 1444 571 364 0 0 1 0 0 1
* * 30 30
+5 * 30 0 30
+4 +1 30 30
+4 * 30 30
+1 * 30 30

fn=(2444) float const& std::__pair_get<0ul>::__get<float const, Protein*>(std::pair<float const, Protein*>&)
0x40b616 112 338 0 338
+1 * 338
+3 * 338
+4 * 338 0 338
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 -80 
* * 16228 6423 4060 0 0 1 0 0 1
* * 338 338
+5 * 338 0 338
+4 +1 338 338
+4 * 338 338
+1 * 338 338

fn=(3056)
0x4173c5 147 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 32 
* * 710 276 181
* * 12 12
+5 * 12 0 12
+4 +1 12 12
+4 * 12
+3 * 12 0 12
cfn=(3058)
calls=12 -47 -36 
* * 688 277 184 0 0 1 0 0 1
+5 * 12 12
+1 * 12 12

fn=(2442)
0x40b62d 147 338 0 338
+1 * 338
+3 * 338
+4 * 338 0 338
cob=(3)
cfi=(100)
cfn=(626)
calls=338 0x10a310 32 
* * 16228 6423 4060
* * 338 338
+5 * 338 0 338
+4 +1 338 338
+4 * 338
+3 * 338 0 338
cfn=(2444)
calls=338 -47 -36 
* * 19270 7775 5074 0 0 1 0 0 1
+5 * 338 338
+1 * 338 338

fl=(140) /usr/include/c++/5/chrono
fn=(1290) std::chrono::duration<long, std::ratio<1l, 1000l> >::duration<long, void>(long const&)
0x401c20 263 3 0 3
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 148 58 40
* * 3 3
+5 * 3 0 3
+4 * 3 0 3
+4 +1 3 3
+4 * 3 3
+3 * 3 3
+4 * 3 0 3
+3 * 3
+1 * 3 3
+1 * 3 3

fn=(1292) std::chrono::duration<long, std::ratio<1l, 1000l> >::count() const
0x401ce6 278 3 0 3
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 156 60 48 0 0 2 0 0 2
* * 3 3
+5 * 3 0 3
+4 +1 3 3
+4 * 3 3
+3 * 3 3
+1 * 3 3

fn=(1286) std::enable_if<std::chrono::__is_duration<std::chrono::duration<long, std::ratio<1l, 1000l> > >::value, std::chrono::duration<long, std::ratio<1l, 1000l> > >::type std::chrono::duration_cast<std::chrono::duration<long, std::ratio<1l, 1000l> >, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
0x401cc7 194 3 0 3 1 0 0 1
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 156 60 48 0 2 0 0 2
* * 3 3
+5 * 3 0 3
+4 +9 3 3
+4 * 3
+3 * 3 0 3
cfn=(1288) std::chrono::duration<long, std::ratio<1l, 1000l> > std::chrono::__duration_cast_impl<std::chrono::duration<long, std::ratio<1l, 1000l> >, std::ratio<1l, 1000000l>, long, true, false>::__cast<long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=3 0x401c46 -44 
* * 615 231 165 3 3 3 3 2 2
+5 +1 3 3
+1 * 3 3

fn=(1284) std::chrono::duration<long, std::ratio<1l, 1000000000l> >::duration<long, void>(long const&)
0x401ac6 263 3 0 3
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 148 58 40 0 2 0 0 1
* * 3 3
+5 * 3 0 3
+4 * 3 0 3
+4 +1 3 3
+4 * 3 3
+3 * 3 3
+4 * 3 0 3
+3 * 3
+1 * 3 3
+1 * 3 3

fn=(1276) std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&, std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > const&)
0x401bb2 650 3 0 3 2 0 0 1
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 156 60 48 0 6 4 0 5 4
* * 3 3 0 0 1 0 0 1
+5 * 3 0 3 1 0 0 1
+4 * 3 0 3
+4 * 3 3
+9 * 3 0 3
+4 * 3
+2 +2 3 3
+4 * 3
+3 * 3 0 3
cfn=(1278) std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::time_since_epoch() const
calls=3 0x401b06 -84 
* * 178 73 49 1 6 0 1 3
+5 * 3 0 3
+4 * 3 3
+4 * 3
+3 * 3 0 3
cfn=(1278)
calls=3 0x401b06 -84 
* * 178 73 49
+5 * 3 0 3
+4 * 3
+4 * 3
+4 * 3 0 0 1 0 0 1
+3 * 3
+3 * 3 0 3
cfn=(1280) std::common_type<std::chrono::duration<long, std::ratio<1l, 1000000000l> >, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >::type std::chrono::operator-<long, std::ratio<1l, 1000000000l>, long, std::ratio<1l, 1000000000l> >(std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&, std::chrono::duration<long, std::ratio<1l, 1000000000l> > const&)
calls=3 0x401b20 393 
* * 814 316 229 2 10 2 2 6 2
+5 * 3 3
+4 * 3 3
+9 * 3
+7 * 3 3
+1 * 3 3

fn=(1280)
0x401b20 393 3 0 3
+1 * 3
+3 * 3 0 3
+1 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 148 58 40 0 5 1 0 3 1
* * 3 3
+5 * 3 0 3
+4 * 3 0 3
+4 * 3 3
+9 * 3 0 3 1 0 0 1
+4 * 3
+2 +6 3 3
+4 * 3 3
+3 * 3 0 3
+4 * 3
+4 * 3
+3 * 3 0 3
cfn=(1282) std::chrono::duration<long, std::ratio<1l, 1000000000l> >::count() const
calls=3 0x401aec 278 
* * 178 73 49 1 3 0 1 2
+5 * 3
+3 * 3 3
+4 * 3 3
+3 * 3 0 3
+4 * 3
+4 * 3
+3 * 3 0 3
cfn=(1282)
calls=3 0x401aec 278 
* * 178 73 49 0 0 1 0 0 1
+5 * 3
+3 * 3
+3 * 3 0 3
+4 * 3
+4 * 3
+4 * 3
+3 * 3
+3 * 3 0 3
cfn=(1284)
calls=3 0x401ac6 263 
* * 190 76 55 0 2 0 0 1
+5 * 3 3
+4 +1 3 3
+4 * 3 3
+9 * 3
+7 * 3
+4 * 3 3
+1 * 3 3
+1 * 3 3

fn=(1288)
0x401c46 159 3 0 3 1 0 0 1
+1 * 3
+3 * 3
+4 * 3 0 3
cob=(3)
cfi=(100)
cfn=(626)
calls=3 0x10a310 32 
* * 148 58 40 0 3 3 0 2 2
* * 3 3
+5 * 3 0 3
+4 * 3 3
+9 * 3 0 3
+4 * 3
+2 +4 3 3
+4 * 3
+3 * 3 0 3
cfn=(1282)
calls=3 0x401aec 278 
* * 178 73 49
+5 * 3
+3 * 3
+10 * 3 0 0 2 0 0 2
+3 * 3
+3 * 3
+4 * 3
+3 * 3
+4 * 3
+3 * 3
+3 * 3 0 3
+4 * 3
+4 * 3
+4 * 3
+3 * 3
+3 * 3 0 3
cfn=(1290)
calls=3 0x401c20 263 
* * 190 76 55
+5 * 3 3
+4 +1 3 3
+4 * 3 3
+9 * 3
+7 * 3 3
+1 * 3 3

fn=(1278)
0x401b06 568 6 0 6 1 0 0 1
+1 * 6
+3 * 6
+4 * 6 0 6
cob=(3)
cfi=(100)
cfn=(626)
calls=6 0x10a310 32 
* * 296 116 80 0 5 0 0 3
* * 6 6
+5 * 6 0 6
+4 +1 6 6
+4 * 6 6 0 0 1
+3 * 6 6
+1 * 6 6

fn=(1282)
0x401aec 278 9 0 9 1 0 0 1
+1 * 9
+3 * 9
+4 * 9 0 9
cob=(3)
cfi=(100)
cfn=(626)
calls=9 0x10a310 32 
* * 444 174 120 0 3 1 0 2 1
* * 9 9
+5 * 9 0 9
+4 +1 9 9
+4 * 9 9
+3 * 9 9
+1 * 9 9

fl=(165)
fn=(1764)
0x409d79 223 118526 0 118526 149 0 0 1
+1 * 118526
+3 * 118526 0 0 172 0 0 1
+4 * 118526 0 118526
cob=(3)
cfi=(100)
cfn=(626)
calls=118526 0x10a310 32 
* * 5689252 2251995 1422316 0 1419 2 0 1
* * 118526 118526
+5 * 118526 0 118526
+4 +1 118526
+4 * 118526
+3 * 118526 0 118526
cfi=(164)
cfn=(1766)
calls=118526 0x409f9a 992 
* * 6874512 2844625 1777894 149 1498 0 1 1
+5 * 118526 118526
+1 * 118526 118526

fn=(2716)
0x41a4f8 215 3576 0 3576
+1 * 3576
+3 * 3576
+4 * 3576 0 3576 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=3576 0x10a310 32 
* * 171652 67945 42916
* * 3576 3576
+5 * 3576 0 3576
+4 +1 3576 3576
+4 * 3576 3576
+1 * 3576 3576

fn=(1570)
0x40a050 215 57246 0 57246
+1 * 57246
+3 * 57246
+4 * 57246 0 57246
cob=(3)
cfi=(100)
cfn=(626)
calls=57246 0x10a310 32 
* * 2747812 1087675 686956
* * 57246 57246
+5 * 57246 0 57246
+4 +1 57246 57246
+4 * 57246 57246
+1 * 57246 57246

fn=(1856)
0x409d05 223 133736 0 133736
+1 * 133736
+3 * 133736
+4 * 133736 0 133736
cob=(3)
cfi=(100)
cfn=(626)
calls=133736 0x10a310 32 
* * 6419332 2540985 1604836 0 1 1
* * 133736 133736
+5 * 133736 0 133736
+4 +1 133736
+4 * 133736
+3 * 133736 0 133736
cfi=(164)
cfn=(1858)
calls=133736 0x409efe 992 
* * 7756692 3209665 2006044 298 2247 1 1 0 1
+5 * 133736 133736
+1 * 133736 133736

fn=(2508)
0x41a444 215 447 0 447
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 32 
* * 21460 8494 5368 0 148 1 0 0 1
* * 447 447
+5 * 447 0 447
+4 +1 447 447
+4 * 447 447
+1 * 447 447

fn=(2798)
0x41a594 215 4020 0 4020
+1 * 4020
+3 * 4020
+4 * 4020 0 4020
cob=(3)
cfi=(100)
cfn=(626)
calls=4020 0x10a310 32 
* * 192964 76381 48244 0 0 3 0 0 2
* * 4020 4020
+5 * 4020 0 4020
+4 +1 4020 4020
+4 * 4020 4020
+1 * 4020 4020

fn=(2182)
0x41a3a8 215 2235 0 2235
+1 * 2235
+3 * 2235
+4 * 2235 0 2235
cob=(3)
cfi=(100)
cfn=(626)
calls=2235 0x10a310 32 
* * 107284 42466 26824
* * 2235 2235
+5 * 2235 0 2235
+4 +1 2235 2235
+4 * 2235 2235
+1 * 2235 2235

fn=(2708)
0x41a285 223 2384 0 2384 149 0 0 1
+1 * 2384
+3 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 32 
* * 114436 45297 28612 0 109
* * 2384 2384
+5 * 2384 0 2384
+4 +1 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(164)
cfn=(2710)
calls=2384 0x41a4de 992 
* * 138276 57217 35764 0 149 149 0 1 1
+5 * 2384 2384
+1 * 2384 2384

fn=(1672)
0x409c91 223 128388 0 128388
+1 * 128388
+3 * 128388
+4 * 128388 0 128388
cob=(3)
cfi=(100)
cfn=(626)
calls=128388 0x10a310 32 
* * 6162628 2439373 1540660 0 432 22
* * 128388 128388
+5 * 128388 0 128388
+4 +1 128388
+4 * 128388
+3 * 128388 0 128388
cfi=(164)
cfn=(1674)
calls=128388 0x409e62 992 
* * 7446508 3081313 1925824 4 507 1 0 0 1
+5 * 128388 128388
+1 * 128388 128388

fn=(2790)
0x41a2f9 223 2680 0 2680
+1 * 2680
+3 * 2680 0 0 149 0 0 1
+4 * 2680 0 2680
cob=(3)
cfi=(100)
cfn=(626)
calls=2680 0x10a310 32 
* * 128644 50921 32164 0 16 2 0 0 1
* * 2680 2680
+5 * 2680 0 2680
+4 +1 2680
+4 * 2680
+3 * 2680 0 2680
cfi=(164)
cfn=(2792)
calls=2680 0x41a57a 992 
* * 155444 64321 40204 149 299 0 1 1
+5 * 2680 2680
+1 * 2680 2680

fn=(2174)
0x41a17d 223 1490 0 1490 447 0 0 1
+1 * 1490 0 0 447 0 0 1
+3 * 1490
+4 * 1490 0 1490
cob=(3)
cfi=(100)
cfn=(626)
calls=1490 0x10a310 32 
* * 71524 28311 17884 0 539 0 0 1
* * 1490 1490
+5 * 1490 0 1490
+4 +1 1490
+4 * 1490
+3 * 1490 0 1490
cfi=(164)
cfn=(2176)
calls=1490 0x41a38e 992 
* * 86424 35761 22354 149 449 363 1 1 1
+5 * 1490 1490
+1 * 1490 1490

fn=(2500)
0x41a1f1 223 298 0 298 149
+1 * 298
+3 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 32 
* * 14308 5663 3580 0 297
* * 298 298
+5 * 298 0 298 149 0 0 1
+4 +1 298
+4 * 298
+3 * 298 0 298
cfi=(164)
cfn=(2502)
calls=298 0x41a42a 992 
* * 17288 7153 4474 298 149 0 1 1
+5 * 298 298
+1 * 298 298

fn=(1772)
0x409fb4 215 177789 0 177789
+1 * 177789
+3 * 177789
+4 * 177789 0 177789 150 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=177789 0x10a310 32 
* * 8533876 3377992 2133472 0 742 7 0 0 1
* * 177789 177789
+5 * 177789 0 177789
+4 +1 177789 177789
+4 * 177789 177789
+1 * 177789 177789

fn=(1562)
0x409ded 223 38164 0 38164 149 0 0 1
+1 * 38164
+3 * 38164
+4 * 38164 0 38164
cob=(3)
cfi=(100)
cfn=(626)
calls=38164 0x10a310 32 
* * 1831876 725117 457972 0 151 0 0 1
* * 38164 38164
+5 * 38164 0 38164
+4 +1 38164 0 0 13 0 0 6
+4 * 38164
+3 * 38164 0 38164
cfi=(164)
cfn=(1564)
calls=38164 0x40a036 992 
* * 2213516 915937 572464 447 1613 90 2 1 1
+5 * 38164 38164
+1 * 38164 38164

fn=(1864)
0x409f18 215 200604 0 200604
+1 * 200604
+3 * 200604
+4 * 200604 0 200604
cob=(3)
cfi=(100)
cfn=(626)
calls=200604 0x10a310 32 
* * 9628996 3811477 2407252 0 0 1
* * 200604 200604
+5 * 200604 0 200604
+4 +1 200604 200604
+4 * 200604 200604
+1 * 200604 200604

fn=(1680)
0x409e7c 215 192582 0 192582
+1 * 192582
+3 * 192582 0 0 149 0 0 1
+4 * 192582 0 192582
cob=(3)
cfi=(100)
cfn=(626)
calls=192582 0x10a310 32 
* * 9243940 3659059 2310988 0 0 148
* * 192582 192582
+5 * 192582 0 192582
+4 +1 192582 192582
+4 * 192582 192582
+1 * 192582 192582

fl=(159)
fn=(1626)
0x41d076 407 273 0 273 1 0 0 1
+1 * 273
+3 * 273 0 273
+1 * 273
+4 * 273 0 273 1 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=273 0x10a310 32 
* * 13108 5188 3280 0 6 1 0 1 1
* * 273 273
+5 * 273 0 273
+4 * 273 0 273
+4 +4 273 273
+4 * 273
+5 * 273
+5 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1628)
calls=273 0x407e48 1422 
* * 256696 99924 66104 13 67 7 9 6 4
+5 * 273 0 273
+4 +1 273 273
+4 * 273 273
+4 * 273
+3 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1642)
calls=273 0x407f3a 167 
* * 122033 35169 26702 2 5 175 2 3 165
+5 * 273 0 273
+4 +1 273 273 0 1 0 0 1
+4 * 273 0 273
+4 +4 273 273
+4 * 273
+3 * 273 0 273
cfi=(161)
cfn=(1648)
calls=273 0x41d020 76 
* * 15565 6280 4099 1 6 1 1 0 1
+5 * 273
+3 -1 273 273
+4 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1638)
calls=273 0x407f72 654 
* * 17476 7099 4099
+5 * 273
+8 * 273 273
+4 * 273
+4 * 273 273
+4 * 273
+3 * 273
+3 * 273
+3 * 273 0 273 1 0 0 1
cfi=(160)
cfn=(1650)
calls=273 0x41d037 529 
* * 85469 32765 23498 1 8 104 1 2 101
+5 +2 273 0 273
+8 +5 273 273
+4 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1654)
calls=273 0x4061f8 113 
* * 15565 6280 4099 2 0 0 2
+5 * 273
+3 -1 273 273
+4 * 273 273
+4 * 273 273
+4 * 273 273
+3 -2 273 273
+4 * 273
+3 * 273 0 273
cfi=(163)
cfn=(1656)
calls=273 0x407fa1 297 
* * 420662 162114 114325 38 66 139 21 11 135
+5 * 273 0 273
+4 +5 273 0 273
+5 +12 273 273 0 1 0 0 1
+4 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1654)
calls=273 0x4061f8 113 
* * 15565 6280 4099 0 4
+5 * 273
+3 -1 273 273
+4 * 273 273
+4 * 273 273
+4 * 273 273
+3 * 273
+3 * 273
+3 * 273 0 273
cfi=(166)
cfn=(1686)
calls=273 0x40620f 148 
* * 50517 19113 13935 2 7 5 2 2 1
+5 +4 273 273
+4 * 273 273
+4 -2 273
+3 +2 273 273
+4 * 273 273
+3 -2 273
+3 * 273
+3 * 273 0 0 1 0 0 1
+4 * 273
+3 * 273 273
+4 * 273 273
+3 * 273 273
+4 * 273
+3 * 273
+3 * 273 0 273
cfi=(157)
cfn=(1692)
calls=273 0x406dd4 174 
* * 72183 24351 16908 14 1 1 12 1 1
+5 +3 273 273
+4 * 273 273
+4 * 273 0 273
+3 +1 273 273
+4 * 273 273
+4 * 273 0 273
+4 +1 273 273
+4 * 273
+8 * 273 273 0 1 0 0 1
+4 * 273
+3 * 273 273
+4 * 273 0 273
+4 +1 273
0x41d25e * 273
+4 * 273 273
+1 * 273 273
+1 * 273 273

fn=(1908) void std::vector<BP*, std::allocator<BP*> >::_M_emplace_back_aux<BP*>(BP*&&)
0x407760 407 19072 0 19072 149 0 0 1
+1 * 19072
+3 * 19072 0 19072
+1 * 19072
+4 * 19072 0 19072
cob=(3)
cfi=(100)
cfn=(626)
calls=19072 0x10a310 32 
* * 915460 362369 228868 0 0 1 0 0 1
* * 19072 19072
+5 * 19072 0 19072
+4 * 19072 0 19072
+4 +4 19072 19072
+4 * 19072
+5 * 19072 0 0 160 0 0 1
+5 * 19072
+3 * 19072 0 19072
cfi=(157)
cfn=(1516)
calls=19072 0x408640 1422 
* * 17932899 6980353 4615428 2423 7051 999 2 1 1
+5 * 19072 0 19072
+4 +1 19072 19072
+4 * 19072 19072
+4 * 19072
+3 * 19072
+3 * 19072 0 19072
cfi=(157)
cfn=(1530)
calls=19072 0x408732 167 
* * 8597660 2513081 1884210 1622 6832 8877 21 11 7973
+5 * 19072 0 19072 0 0 1 0 0 1
+4 +1 19072 19072
+4 * 19072 0 19072
+4 +4 19072 19072
+4 * 19072
+3 * 19072 0 19072
cfi=(161)
cfn=(1906)
calls=19072 0x4067a3 76 
* * 1087108 438657 286084 0 4 749 0 0 1
+5 * 19072
+3 -1 19072 19072 0 149 0 0 1
+4 * 19072
+3 * 19072 0 19072
cfi=(157)
cfn=(1526)
calls=19072 0x405f2c 654 
* * 1220612 495873 286084
+5 * 19072
+8 * 19072 19072
+4 * 19072
+4 * 19072 19072
+4 * 19072
+3 * 19072
+3 * 19072
+3 * 19072 0 19072
cfi=(160)
cfn=(1910)
calls=19072 0x407721 529 
* * 5969556 2288645 1640212 443 469 3101 1 0 3086
+5 +2 19072 0 19072
+8 +5 19072 19072
+4 * 19072
+3 * 19072 0 19072
cfi=(157)
cfn=(1544)
calls=19072 0x406720 113 
* * 1087108 438657 286084 147 985 0 0 1
+5 * 19072 0 0 2 0 0 1
+3 -1 19072 19072
+4 * 19072 19072
+4 * 19072 19072
+4 * 19072 19072
+3 -2 19072 19072
+4 * 19072
+3 * 19072 0 19072
cfi=(163)
cfn=(1546)
calls=19072 0x40876a 297 
* * 29312021 11302395 7971205 3027 17252 12046 6 2 9486
+5 * 19072 0 19072
+4 +5 19072 0 19072
+5 +12 19072 19072
+4 * 19072
+3 * 19072 0 19072
cfi=(157)
cfn=(1544)
calls=19072 0x406720 113 
* * 1087108 438657 286084
+5 * 19072
+3 -1 19072 19072
+4 * 19072 19072
+4 * 19072 19072 0 149 0 0 1
+4 * 19072 19072
+3 * 19072
+3 * 19072
+3 * 19072 0 19072
cfi=(166)
cfn=(1576)
calls=19072 0x406737 148 
* * 3528324 1335041 972676 147 1598
+5 +4 19072 19072
+4 * 19072 19072
+4 -2 19072
+3 +2 19072 19072
+4 * 19072 19072
+3 -2 19072
+3 * 19072
+3 * 19072
+4 * 19072
+3 * 19072 19072
+4 * 19072 19072
+3 * 19072 19072
+4 * 19072
+3 * 19072
+3 * 19072 0 19072 149 0 0 1
cfi=(157)
cfn=(1582)
calls=19072 0x4076bc 174 
* * 4460460 1514027 1052694 22 4208 1 2 1 1
+5 +3 19072 19072
+4 * 19072 19072
+4 * 19072 0 19072
+3 +1 19072 19072
+4 * 19072 19072
+4 * 19072 0 19072
+4 +1 19072 19072
+4 * 19072
+8 * 19072 19072
+4 * 19072
+3 * 19072 19072
+4 * 19072 0 19072
+4 +1 19072
0x407948 * 19072 0 0 149 0 0 1
+4 * 19072 19072
+1 * 19072 19072 0 0 1 0 0 1
+1 * 19072 19072

fn=(1972) void std::vector<BP_Move*, std::allocator<BP_Move*> >::_M_emplace_back_aux<BP_Move*>(BP_Move*&&)
0x407468 407 59004 0 59004 149 0 0 1
+1 * 59004
+3 * 59004 0 59004
+1 * 59004
+4 * 59004 0 59004
cob=(3)
cfi=(100)
cfn=(626)
calls=59004 0x10a310 32 
* * 2832196 1121077 708052 0 575
* * 59004 59004
+5 * 59004 0 59004
+4 * 59004 0 59004
+4 +4 59004 59004 0 149 0 0 1
+4 * 59004
+5 * 59004
+5 * 59004
+3 * 59004 0 59004
cfi=(157)
cfn=(1720)
calls=59004 0x408398 1422 
* * 55474194 21595465 14278972 3913 11934 2345 0 1 1
+5 * 59004 0 59004
+4 +1 59004 59004
+4 * 59004 59004
+4 * 59004
+3 * 59004
+3 * 59004 0 59004
cfi=(157)
cfn=(1734)
calls=59004 0x40848a 167 
* * 26298843 7589392 5765111 677 4223 34844 0 0 34646
+5 * 59004 0 59004
+4 +1 59004 59004
+4 * 59004 0 59004
+4 +4 59004 59004
+4 * 59004
+3 * 59004 0 59004 298 0 0 1
cfi=(161)
cfn=(1970)
calls=59004 0x4065eb 76 
* * 3363232 1357093 885064
+5 * 59004
+3 -1 59004 59004
+4 * 59004
+3 * 59004 0 59004
cfi=(157)
cfn=(1730)
calls=59004 0x4084c2 654 
* * 3776260 1534105 885064 0 589 1 0 0 1
+5 * 59004
+8 * 59004 59004
+4 * 59004
+4 * 59004 59004
+4 * 59004
+3 * 59004
+3 * 59004
+3 * 59004 0 59004
cfi=(160)
cfn=(1974)
calls=59004 0x407429 529 
* * 18468272 7080485 5074364 469 3178 19304 0 0 18405
+5 +2 59004 0 59004
+8 +5 59004 59004
+4 * 59004 0 0 622 0 0 1
+3 * 59004 0 59004
cfi=(157)
cfn=(1746)
calls=59004 0x406568 113 
* * 3363232 1357093 885064 147 1159 0 0 1
+5 * 59004
+3 -1 59004 59004
+4 * 59004 59004
+4 * 59004 59004
+4 * 59004 59004
+3 -2 59004 59004
+4 * 59004
+3 * 59004 0 59004
cfi=(163)
cfn=(1748)
calls=59004 0x4084f1 297 
* * 90815941 35004865 24668291 8951 12328 25421 0 0 22641
+5 * 59004 0 59004
+4 +5 59004 0 59004
+5 +12 59004 59004
+4 * 59004
+3 * 59004 0 59004
cfi=(157)
cfn=(1746)
calls=59004 0x406568 113 
* * 3363232 1357093 885064 0 1233 1 0 0 1
+5 * 59004
+3 -1 59004 59004 0 152 0 0 1
+4 * 59004 59004
+4 * 59004 59004
+4 * 59004 59004
+3 * 59004
+3 * 59004
+3 * 59004 0 59004
cfi=(166)
cfn=(1778)
calls=59004 0x40657f 148 
* * 10915744 4130281 3009208 592 2546
+5 +4 59004 59004
+4 * 59004 59004
+4 -2 59004
+3 +2 59004 59004
+4 * 59004 59004
+3 -2 59004
+3 * 59004
+3 * 59004
+4 * 59004
+3 * 59004 59004
+4 * 59004 59004
+3 * 59004 59004 0 149 0 0 1
+4 * 59004
+3 * 59004
+3 * 59004 0 59004
cfi=(157)
cfn=(1784)
calls=59004 0x4073c4 174 
* * 15320772 5179746 3600887 300 3555 1 0 1 1
+5 +3 59004 59004
+4 * 59004 59004
+4 * 59004 0 59004
+3 +1 59004 59004
+4 * 59004 59004
+4 * 59004 0 59004
+4 +1 59004 59004
+4 * 59004
+8 * 59004 59004
+4 * 59004
+3 * 59004 59004
+4 * 59004 0 59004
+4 +1 59004 0 0 149 0 0 1
0x407650 * 59004 0 0 916
+4 * 59004 59004
+1 * 59004 59004
+1 * 59004 59004

fn=(1940) void std::vector<BP_Protein*, std::allocator<BP_Protein*> >::_M_emplace_back_aux<BP_Protein*>(BP_Protein*&&)
0x406e78 407 63921 0 63921 149 0 0 1
+1 * 63921
+3 * 63921 0 63921
+1 * 63921 0 0 4 0 0 1
+4 * 63921 0 63921
cob=(3)
cfi=(100)
cfn=(626)
calls=63921 0x10a310 32 
* * 3068212 1214500 767056 0 2164
* * 63921 63921
+5 * 63921 0 63921
+4 * 63921 0 63921
+4 +4 63921 63921
+4 * 63921
+5 * 63921
+5 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1628)
calls=63921 0x407e48 1422 
* * 60096025 23395087 15468886 1936 19364 1721 0 1
+5 * 63921 0 63921
+4 +1 63921 63921
+4 * 63921 63921
+4 * 63921
+3 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1642)
calls=63921 0x407f3a 167 
* * 28594572 8234198 6255587 723 2499 45548 5 0 41356
+5 * 63921 0 63921
+4 +1 63921 63921 0 149 0 0 1
+4 * 63921 0 63921
+4 +4 63921 63921
+4 * 63921
+3 * 63921 0 63921
cfi=(161)
cfn=(1938)
calls=63921 0x40627b 76 
* * 3643501 1470184 958819
+5 * 63921
+3 -1 63921 63921
+4 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1638)
calls=63921 0x407f72 654 
* * 4090948 1661947 958819
+5 * 63921
+8 * 63921 63921
+4 * 63921
+4 * 63921 63921
+4 * 63921
+3 * 63921
+3 * 63921
+3 * 63921 0 63921 298 0 0 1
cfi=(160)
cfn=(1942)
calls=63921 0x406e39 529 
* * 20007293 7670525 5497226 890 5466 23922 1 1 23749
+5 +2 63921 0 63921
+8 +5 63921 63921
+4 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1654)
calls=63921 0x4061f8 113 
* * 3643501 1470184 958819 296 0 1049 0 0 1
+5 * 63921
+3 -1 63921 63921
+4 * 63921 63921
+4 * 63921 63921
+4 * 63921 63921
+3 -2 63921 63921
+4 * 63921
+3 * 63921 0 63921
cfi=(163)
cfn=(1656)
calls=63921 0x407fa1 297 
* * 98516847 37965346 26760698 7018 18075 35178 6 3 31674
+5 * 63921 0 63921
+4 +5 63921 0 63921
+5 +12 63921 63921 0 298 0 0 1
+4 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1654)
calls=63921 0x4061f8 113 
* * 3643501 1470184 958819
+5 * 63921
+3 -1 63921 63921
+4 * 63921 63921
+4 * 63921 63921
+4 * 63921 63921
+3 * 63921
+3 * 63921
+3 * 63921 0 63921
cfi=(166)
cfn=(1686)
calls=63921 0x40620f 148 
* * 11825389 4474471 3259975 0 4842 1901 0 0 1
+5 +4 63921 63921
+4 * 63921 63921
+4 -2 63921
+3 +2 63921 63921
+4 * 63921 63921
+3 -2 63921
+3 * 63921
+3 * 63921 0 0 596 0 0 1
+4 * 63921
+3 * 63921 63921
+4 * 63921 63921
+3 * 63921 63921
+4 * 63921
+3 * 63921
+3 * 63921 0 63921
cfi=(157)
cfn=(1692)
calls=63921 0x406dd4 174 
* * 16909750 5712787 3973983 297 3440 0 0 1
+5 +3 63921 63921
+4 * 63921 63921
+4 * 63921 0 63921
+3 +1 63921 63921
+4 * 63921 63921
+4 * 63921 0 63921
+4 +1 63921 63921
+4 * 63921
+8 * 63921 63921 0 596 0 0 1
+4 * 63921
+3 * 63921 63921
+4 * 63921 0 63921
+4 +1 63921
0x407060 * 63921 0 0 148
+4 * 63921 63921
+1 * 63921 63921
+1 * 63921 63921

fn=(2128)
0x4113dc 407 745 0 745 149 0 0 1
+1 * 745
+3 * 745 0 745
+1 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 32 
* * 35764 14156 8944 0 735 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 +4 745 745
+4 * 745
+5 * 745
+5 * 745 0 0 154 0 0 1
+3 * 745 0 745
cfi=(157)
cfn=(2130)
calls=745 0x413a1a 1422 
* * 667713 260761 171394 1792 3188 1007 12 5 4
+5 * 745 0 745
+4 +1 745 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745
cfi=(157)
cfn=(2144)
calls=745 0x413b0c 167 
* * 343288 96115 72295 745 1846 410 3 3 409
+5 * 745 0 745
+4 +1 745 745
+4 * 745 0 745
+4 +4 745 745
+4 * 745
+3 * 745 0 745
cfi=(161)
cfn=(2150)
calls=745 0x411386 76 
* * 42469 17136 11179 31 435 0 1
+5 * 745
+3 -1 745 745
+4 * 745 0 0 154 0 0 1
+3 * 745 0 745
cfi=(157)
cfn=(2140)
calls=745 0x40600c 654 
* * 47684 19371 11179
+5 * 745
+8 * 745 745
+4 * 745
+4 * 745 745
+4 * 745
+3 * 745
+3 * 745
+3 * 745 0 745
cfi=(160)
cfn=(2152)
calls=745 0x41139d 529 
* * 233205 89405 64090 2 861 367 1 2 151
+5 +2 745 0 745
+8 +5 745 745
+4 * 745
+3 * 745 0 745
cfi=(157)
cfn=(2156)
calls=745 0x410fa4 113 
* * 42469 17136 11179 149 0 1 1 0 1
+5 * 745
+3 -1 745 745 0 149 0 0 1
+4 * 745 745
+4 * 745 745
+4 * 745 745
+3 -2 745 745
+4 * 745
+3 * 745 0 745
cfi=(163)
cfn=(2158)
calls=745 0x413b44 297 
* * 1142608 440612 310294 3730 6898 1346 16 10 42
+5 * 745 0 745
+4 +5 745 0 745
+5 +12 745 745
+4 * 745
+3 * 745 0 745
cfi=(157)
cfn=(2156)
calls=745 0x410fa4 113 
* * 42469 17136 11179
+5 * 745
+3 -1 745 745
+4 * 745 745
+4 * 745 745
+4 * 745 745 0 154 0 0 1
+3 * 745
+3 * 745
+3 * 745 0 745
cfi=(166)
cfn=(2188)
calls=745 0x410fbb 148 
* * 137837 52153 38007 1341 1289 1 4 2 1
+5 +4 745 745
+4 * 745 745
+4 -2 745
+3 +2 745 745
+4 * 745 745
+3 -2 745
+3 * 745
+3 * 745
+4 * 745
+3 * 745 745
+4 * 745 745
+3 * 745 745
+4 * 745
+3 * 745
+3 * 745 0 745 596 0 0 1
cfi=(157)
cfn=(2194)
calls=745 0x413670 174 
* * 186113 63030 43669 1048 1347 1 4 2 1
+5 +3 745 745
+4 * 745 745
+4 * 745 0 745
+3 +1 745 745
+4 * 745 745
+4 * 745 0 745
+4 +1 745 745
+4 * 745
+8 * 745 745
+4 * 745
+3 * 745 745
+4 * 745 0 745
+4 +1 745
0x4115c4 * 745 0 0 36 0 0 1
+4 * 745 745
+1 * 745 745
+1 * 745 745

fn=(1718)
0x41d742 407 259 0 259 1 0 0 1
+1 * 259
+3 * 259 0 259
+1 * 259
+4 * 259 0 259
cob=(3)
cfi=(100)
cfn=(626)
calls=259 0x10a310 32 
* * 12436 4922 3112 0 4 1 0 1 1
* * 259 259
+5 * 259 0 259
+4 * 259 0 259
+4 +4 259 259
+4 * 259
+5 * 259
+5 * 259
+3 * 259 0 259
cfi=(157)
cfn=(1720)
calls=259 0x408398 1422 
* * 243537 94800 62716 12 22 4 12 5 4
+5 * 259 0 259
+4 +1 259 259
+4 * 259 259
+4 * 259
+3 * 259
+3 * 259 0 259 1 0 0 1
cfi=(157)
cfn=(1734)
calls=259 0x40848a 167 
* * 116285 33459 25445 23 23 153 22 5 152
+5 * 259 0 259
+4 +1 259 259
+4 * 259 0 259
+4 +4 259 259
+4 * 259
+3 * 259 0 259
cfi=(161)
cfn=(1740)
calls=259 0x41d6ed 76 
* * 14767 5958 3889 2 0 1 2 0 1
+5 * 259
+3 -1 259 259
+4 * 259
+3 * 259 0 259
cfi=(157)
cfn=(1730)
calls=259 0x4084c2 654 
* * 16580 6735 3889 0 1
+5 * 259
+8 * 259 259
+4 * 259
+4 * 259 259
+4 * 259 0 0 1 0 0 1
+3 * 259
+3 * 259
+3 * 259 0 259
cfi=(160)
cfn=(1742)
calls=259 0x41d704 529 
* * 81087 31085 22294 20 3 82 3 1 81
+5 +2 259 0 259
+8 +5 259 259
+4 * 259
+3 * 259 0 259
cfi=(157)
cfn=(1746)
calls=259 0x406568 113 
* * 14767 5958 3889 1 0 0 1
+5 * 259
+3 -1 259 259
+4 * 259 259
+4 * 259 259
+4 * 259 259
+3 -2 259 259
+4 * 259
+3 * 259 0 259
cfi=(163)
cfn=(1748)
calls=259 0x4084f1 297 
* * 398630 153653 108337 53 68 115 12 6 100
+5 * 259 0 259 1 0 0 1
+4 +5 259 0 259
+5 +12 259 259
+4 * 259
+3 * 259 0 259
cfi=(157)
cfn=(1746)
calls=259 0x406568 113 
* * 14767 5958 3889
+5 * 259
+3 -1 259 259
+4 * 259 259
+4 * 259 259
+4 * 259 259
+3 * 259
+3 * 259
+3 * 259 0 259
cfi=(166)
cfn=(1778)
calls=259 0x40657f 148 
* * 47927 18133 13221 5 6 3 5 2 1
+5 +4 259 259
+4 * 259 259
+4 -2 259
+3 +2 259 259 0 1 0 0 1
+4 * 259 259
+3 -2 259
+3 * 259
+3 * 259
+4 * 259
+3 * 259 259
+4 * 259 259
+3 * 259 259
+4 * 259
+3 * 259
+3 * 259 0 259
cfi=(157)
cfn=(1784)
calls=259 0x4073c4 174 
* * 67429 22766 15806 0 14 2 0 2 2
+5 +3 259 259
+4 * 259 259
+4 * 259 0 259
+3 +1 259 259
+4 * 259 259
+4 * 259 0 259
+4 +1 259 259 0 1 0 0 1
+4 * 259
+8 * 259 259
+4 * 259
+3 * 259 259
+4 * 259 0 259
+4 +1 259
0x41d92a * 259 0 0 1 0 0 1
+4 * 259 259
+1 * 259 259
+1 * 259 259

fn=(2000)
0x40644a 91 320350 0 320350 301 0 0 1
+1 * 320350
+3 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 -59 
* * 15376804 6086651 3844204 0 385
* * 320350 320350
+5 * 320350 0 320350
+4 * 320350 0 320350
+4 +3 320350 320350
+4 * 320350 320350
+4 * 320350 320350
+4 * 320350 320350
+4 * 320350
+3 * 320350
+2 +3 253747 253747
+4 * 253747
+3 * 253747 0 253747
cfi=(161)
cfn=(2002)
calls=253747 -72 -21 
* * 14463583 5836182 3806209 0 0 1553 0 0 1
+5 * 253747
+3 -1 253747 253747
+4 * 253747 253747
+4 * 253747 253747
+4 * 253747
+3 * 253747
+3 * 253747 0 253747
cfi=(160)
cfn=(2006)
calls=253747 0x407131 529 
* * 79422815 30449641 21822246 0 0 12471 0 0 12310
+5 +2 253747 253747
+4 * 253747 253747
+4 * 253747
+4 * 253747 253747
+4 * 253747 0 253747
+4 +4 253747
+2 -1 66603 66603 0 149 0 0 1
+4 * 66603
+3 * 66603 0 66603
cfi=(161)
cfn=(2002)
calls=66603 0x406433 -25 
* * 3796375 1531870 999049 0 1317 0 0 1
+5 * 66603
+3 * 66603 66603
+4 * 66603
+3 * 66603
+3 * 66603 0 66603
cfn=(2004) void std::vector<BP_Pump*, std::allocator<BP_Pump*> >::_M_emplace_back_aux<BP_Pump*>(BP_Pump*&&)
calls=66603 0x407170 407 
* * 270750544 101110779 70136627 8829 49205 105071 8 3 94763
+5 +1 320350
+1 * 320350 320350
+1 * 320350 320350

fn=(2662)
0x411a24 407 1192 0 1192 149 0 0 1
+1 * 1192
+3 * 1192 0 1192
+1 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 32 
* * 57220 22649 14308 0 297 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 +4 1192 1192
+4 * 1192 0 0 149 0 0 1
+5 * 1192
+5 * 1192
+3 * 1192 0 1192
cfi=(157)
cfn=(2664)
calls=1192 0x414282 1422 
* * 1120660 436278 288502 1192 892 300 8 4 4
+5 * 1192 0 1192
+4 +1 1192 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(157)
cfn=(2678)
calls=1192 0x414374 167 
* * 583299 162196 127023 1817 1325 1016 3 3 1015
+5 * 1192 0 1192
+4 +1 1192 1192
+4 * 1192 0 1192
+4 +4 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(161)
cfn=(2684)
calls=1192 0x4119cf 76 
* * 67948 27417 17884 0 148
+5 * 1192 0 0 149 0 0 1
+3 -1 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(157)
cfn=(2674)
calls=1192 0x405fac 654 
* * 76292 30993 17884 0 149 0 0 1
+5 * 1192
+8 * 1192 1192
+4 * 1192
+4 * 1192 1192
+4 * 1192
+3 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(160)
cfn=(2686)
calls=1192 0x4119e6 529 
* * 373116 143045 102532 149 148 779 1 0 631
+5 +2 1192 0 1192
+8 +5 1192 1192
+4 * 1192
+3 * 1192 0 1192 149 0 0 1
cfi=(157)
cfn=(2690)
calls=1192 0x411284 113 
* * 67948 27417 17884 149 0 1 1 0 1
+5 * 1192
+3 -1 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+4 * 1192 1192
+3 -2 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(163)
cfn=(2692)
calls=1192 0x4143ac 297 
* * 1854679 713729 504441 3579 2366 2238 15 6 1794
+5 * 1192 0 1192
+4 +5 1192 0 1192
+5 +12 1192 1192
+4 * 1192
+3 * 1192 0 1192
cfi=(157)
cfn=(2690)
calls=1192 0x411284 113 
* * 67948 27417 17884
+5 * 1192
+3 -1 1192 1192
+4 * 1192 1192 0 149 0 0 1
+4 * 1192 1192
+4 * 1192 1192
+3 * 1192
+3 * 1192
+3 * 1192 0 1192
cfi=(166)
cfn=(2722)
calls=1192 0x41129b 148 
* * 220532 83443 60804 745 595 1 5 3 1
+5 +4 1192 1192
+4 * 1192 1192
+4 -2 1192
+3 +2 1192 1192
+4 * 1192 1192
+3 -2 1192
+3 * 1192
+3 * 1192
+4 * 1192
+3 * 1192 1192
+4 * 1192 1192
+3 * 1192 1192
+4 * 1192 0 0 149 0 0 1
+3 * 1192
+3 * 1192 0 1192
cfi=(157)
cfn=(2728)
calls=1192 0x4138e4 174 
* * 330077 111312 77641 1199 384 150 1 1 2
+5 +3 1192 1192
+4 * 1192 1192
+4 * 1192 0 1192
+3 +1 1192 1192
+4 * 1192 1192
+4 * 1192 0 1192
+4 +1 1192 1192
+4 * 1192
+8 * 1192 1192
+4 * 1192
+3 * 1192 1192
+4 * 1192 0 1192
+4 +1 1192
0x411c0c * 1192 0 0 149 0 0 1
+4 * 1192 1192
+1 * 1192 1192
+1 * 1192 1192

fn=(1810)
0x41d4fe 407 265 0 265 1 0 0 1
+1 * 265 0 0 15 0 0 1
+3 * 265 0 265
+1 * 265
+4 * 265 0 265
cob=(3)
cfi=(100)
cfn=(626)
calls=265 0x10a310 32 
* * 12724 5036 3184 0 3 0 0 1
* * 265 265
+5 * 265 0 265
+4 * 265 0 265
+4 +4 265 265
+4 * 265
+5 * 265
+5 * 265
+3 * 265 0 265
cfi=(157)
cfn=(1812)
calls=265 0x4080f0 1422 
* * 249172 96995 64164 9 26 5 9 4 4
+5 * 265 0 265
+4 +1 265 265
+4 * 265 265
+4 * 265
+3 * 265
+3 * 265 0 265 1 0 0 1
cfi=(157)
cfn=(1826)
calls=265 0x4081e2 167 
* * 119244 34284 26097 9 25 166 3 2 159
+5 * 265 0 265
+4 +1 265 265
+4 * 265 0 265
+4 +4 265 265
+4 * 265
+3 * 265 0 265
cfi=(161)
cfn=(1832)
calls=265 0x41d4a9 76 
* * 15109 6096 3979
+5 * 265
+3 -1 265 265
+4 * 265
+3 * 265 0 265
cfi=(157)
cfn=(1822)
calls=265 0x40821a 654 
* * 16964 6891 3979
+5 * 265
+8 * 265 265
+4 * 265
+4 * 265 265
+4 * 265
+3 * 265 0 0 1 0 0 1
+3 * 265
+3 * 265 0 265
cfi=(160)
cfn=(1834)
calls=265 0x41d4c0 529 
* * 82965 31805 22810 0 24 95 0 2 94
+5 +2 265 0 265
+8 +5 265 265
+4 * 265
+3 * 265 0 265
cfi=(157)
cfn=(1838)
calls=265 0x4063b0 113 
* * 15109 6096 3979 2 0 7 2 0 1
+5 * 265
+3 -1 265 265
+4 * 265 265
+4 * 265 265
+4 * 265 265
+3 -2 265 265
+4 * 265
+3 * 265 0 265
cfi=(163)
cfn=(1840)
calls=265 0x408249 297 
* * 408233 157334 110955 10 62 139 5 2 129
+5 * 265 0 265
+4 +5 265 0 265 1 0 0 1
+5 +12 265 265
+4 * 265
+3 * 265 0 265
cfi=(157)
cfn=(1838)
calls=265 0x4063b0 113 
* * 15109 6096 3979
+5 * 265
+3 -1 265 265
+4 * 265 265
+4 * 265 265
+4 * 265 265
+3 * 265
+3 * 265
+3 * 265 0 265
cfi=(166)
cfn=(1870)
calls=265 0x4063c7 148 
* * 49037 18553 13527 2 7 1 2 2 1
+5 +4 265 265
+4 * 265 265
+4 -2 265
+3 +2 265 265
+4 * 265 265
+3 -2 265 0 0 1 0 0 1
+3 * 265
+3 * 265
+4 * 265
+3 * 265 265
+4 * 265 265
+3 * 265 265
+4 * 265
+3 * 265
+3 * 265 0 265
cfi=(157)
cfn=(1876)
calls=265 0x4070cc 174 
* * 69747 23533 16342 1 20 3 1 2 1
+5 +3 265 265
+4 * 265 265
+4 * 265 0 265
+3 +1 265 265
+4 * 265 265
+4 * 265 0 265
+4 +1 265 265
+4 * 265 0 0 1 0 0 1
+8 * 265 265
+4 * 265
+3 * 265 265
+4 * 265 0 265
+4 +1 265
0x41d6e6 * 265
+4 * 265 265
+1 * 265 265
+1 * 265 265

fn=(1904)
0x4067ba 91 103108 0 103108
+1 * 103108
+3 * 103108 0 0 2 0 0 1
+4 * 103108 0 103108
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 -59 
* * 4949188 1959053 1237300 0 205 1 0 0 1
* * 103108 103108
+5 * 103108 0 103108
+4 * 103108 0 103108
+4 +3 103108 103108
+4 * 103108 103108 0 0 1
+4 * 103108 103108
+4 * 103108 103108
+4 * 103108
+3 * 103108
+2 +3 84036 84036
+4 * 84036
+3 * 84036 0 84036
cfi=(161)
cfn=(1906)
calls=84036 -72 -21 
* * 4790056 1932829 1260544 0 263 1 0 1 1
+5 * 84036
+3 -1 84036 84036
+4 * 84036 84036
+4 * 84036 84036
+4 * 84036
+3 * 84036
+3 * 84036 0 84036
cfi=(160)
cfn=(1910)
calls=84036 0x407721 529 
* * 26303272 10084321 7227100 0 669 8176 0 0 7776
+5 +2 84036 84036
+4 * 84036 84036
+4 * 84036
+4 * 84036 84036
+4 * 84036 0 84036
+4 +4 84036
+2 -1 19072 19072 0 2 0 0 1
+4 * 19072
+3 * 19072 0 19072
cfi=(161)
cfn=(1906)
calls=19072 0x4067a3 -25 
* * 1087108 438657 286084 0 148 0 0 1
+5 * 19072
+3 * 19072 19072
+4 * 19072
+3 * 19072
+3 * 19072 0 19072
cfn=(1908)
calls=19072 0x407760 407 
* * 76991084 28813419 19967357 8738 38400 25775 39 17 20550
+5 +1 103108
+1 * 103108 103108
+1 * 103108 103108 0 148 0 0 1

fn=(2744)
0x411c68 407 1340 0 1340 149 0 0 1
+1 * 1340
+3 * 1340 0 1340
+1 * 1340
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 32 
* * 64324 25461 16084 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 +4 1340 1340 0 149 0 0 1
+4 * 1340
+5 * 1340
+5 * 1340
+3 * 1340 0 1340
cfi=(157)
cfn=(2746)
calls=1340 0x41447a 1422 
* * 1200833 469011 308244 1043 894 152 6 3 4
+5 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(157)
cfn=(2760)
calls=1340 0x41456c 167 
* * 657179 181621 142151 627 628 1315 4 2 1162
+5 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340 0 1340
+4 +4 1340 1340
+4 * 1340
+3 * 1340 0 1340 149 0 0 1
cfi=(161)
cfn=(2766)
calls=1340 0x411c13 76 
* * 76384 30821 20104
+5 * 1340
+3 -1 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(157)
cfn=(2756)
calls=1340 0x405fdc 654 
* * 85764 34841 20104 0 0 1 0 0 1
+5 * 1340
+8 * 1340 1340
+4 * 1340
+4 * 1340 1340
+4 * 1340
+3 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(160)
cfn=(2768)
calls=1340 0x411c2a 529 
* * 419440 160805 115260 0 446 927 0 2 779
+5 +2 1340 0 1340
+8 +5 1340 1340
+4 * 1340 0 0 149 0 0 1
+3 * 1340 0 1340
cfi=(157)
cfn=(2772)
calls=1340 0x411340 113 
* * 76384 30821 20104 149 318 1 1 1 1
+5 * 1340
+3 -1 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+3 -2 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(163)
cfn=(2774)
calls=1340 0x4145a4 297 
* * 2108495 810964 575477 2086 1560 4352 12 6 4054
+5 * 1340 0 1340
+4 +5 1340 0 1340
+5 +12 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfi=(157)
cfn=(2772)
calls=1340 0x411340 113 
* * 76384 30821 20104 0 164
+5 * 1340
+3 -1 1340 1340 0 149 0 0 1
+4 * 1340 1340
+4 * 1340 1340
+4 * 1340 1340
+3 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(166)
cfn=(2804)
calls=1340 0x411357 148 
* * 247912 93803 68352 448 298 172 1 0 1
+5 +4 1340 1340
+4 * 1340 1340
+4 -2 1340
+3 +2 1340 1340
+4 * 1340 1340
+3 -2 1340
+3 * 1340
+3 * 1340
+4 * 1340
+3 * 1340 1340
+4 * 1340 1340
+3 * 1340 1340 0 149 0 0 1
+4 * 1340
+3 * 1340
+3 * 1340 0 1340
cfi=(157)
cfn=(2810)
calls=1340 0x41396a 174 
* * 378039 127298 89185 150 474 1 0 1 1
+5 +3 1340 1340
+4 * 1340 1340
+4 * 1340 0 1340
+3 +1 1340 1340
+4 * 1340 1340
+4 * 1340 0 1340
+4 +1 1340 1340
+4 * 1340
+8 * 1340 1340
+4 * 1340
+3 * 1340 1340
+4 * 1340 0 1340
+4 +1 1340 0 0 149 0 0 1
0x411e50 * 1340 0 0 149 0 0 1
+4 * 1340 1340
+1 * 1340 1340
+1 * 1340 1340

fn=(1968)
0x406602 91 259111 0 259111 149 0 0 1
+1 * 259111
+3 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 -59 
* * 12437332 4923110 3109336 0 0 1 0 0 1
* * 259111 259111
+5 * 259111 0 259111
+4 * 259111 0 259111
+4 +3 259111 259111
+4 * 259111 259111
+4 * 259111 259111
+4 * 259111 259111
+4 * 259111
+3 * 259111
+2 +3 200107 200107
+4 * 200107
+3 * 200107 0 200107
cfi=(161)
cfn=(1970)
calls=200107 -72 -21 
* * 11406103 4602462 3001609
+5 * 200107
+3 -1 200107 200107
+4 * 200107 200107
+4 * 200107 200107
+4 * 200107
+3 * 200107
+3 * 200107 0 200107
cfi=(160)
cfn=(1974)
calls=200107 0x407429 529 
* * 62633495 24012841 17209206 0 0 9652 0 0 9392
+5 +2 200107 200107
+4 * 200107 200107
+4 * 200107
+4 * 200107 200107
+4 * 200107 0 200107
+4 +4 200107
+2 -1 59004 59004 0 457 0 0 1
+4 * 59004
+3 * 59004 0 59004
cfi=(161)
cfn=(1970)
calls=59004 0x4065eb -25 
* * 3363232 1357093 885064 0 1679 0 0 1
+5 * 59004
+3 * 59004 59004
+4 * 59004
+3 * 59004 0 0 5
+3 * 59004 0 59004
cfn=(1972)
calls=59004 0x407468 407 
* * 239538294 89489843 62061237 17633 41320 81917 7 3 75696
+5 +1 259111
+1 * 259111 259111
+1 * 259111 259111

fn=(1936)
0x406292 91 325863 0 325863 298 0 0 1
+1 * 325863
+3 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 -59 
* * 15641428 6191398 3910360
* * 325863 325863
+5 * 325863 0 325863
+4 * 325863 0 325863
+4 +3 325863 325863
+4 * 325863 325863
+4 * 325863 325863
+4 * 325863 325863
+4 * 325863
+3 * 325863
+2 +3 261942 261942
+4 * 261942
+3 * 261942 0 261942
cfi=(161)
cfn=(1938)
calls=261942 -72 -21 
* * 14930698 6024667 3929134 0 1968 0 0 1
+5 * 261942
+3 -1 261942 261942
+4 * 261942 261942
+4 * 261942 261942
+4 * 261942
+3 * 261942
+3 * 261942 0 261942
cfi=(160)
cfn=(1942)
calls=261942 0x406e39 529 
* * 81987850 31433041 22527016 0 0 14148 0 0 14042
+5 +2 261942 261942
+4 * 261942 261942
+4 * 261942
+4 * 261942 261942
+4 * 261942 0 261942
+4 +4 261942
+2 -1 63921 63921 0 298 0 0 1
+4 * 63921
+3 * 63921 0 63921 296
cfi=(161)
cfn=(1938)
calls=63921 0x40627b -25 
* * 3643501 1470184 958819 0 432 1 0 0 1
+5 * 63921
+3 * 63921 63921
+4 * 63921
+3 * 63921
+3 * 63921 0 63921
cfn=(1940)
calls=63921 0x406e78 407 
* * 260048113 97104490 67352791 13398 55850 109319 19 6 96781
+5 +1 325863
+1 * 325863 325863
+1 * 325863 325863

fn=(2004)
0x407170 407 66603 0 66603 298 0 0 1
+1 * 66603
+3 * 66603 0 66603
+1 * 66603
+4 * 66603 0 66603
cob=(3)
cfi=(100)
cfn=(626)
calls=66603 0x10a310 32 
* * 3196948 1265458 799240 0 0 1143 0 0 1
* * 66603 66603
+5 * 66603 0 66603 298 0 0 1
+4 * 66603 0 66603
+4 +4 66603 66603
+4 * 66603
+5 * 66603
+5 * 66603
+3 * 66603 0 66603
cfi=(157)
cfn=(1812)
calls=66603 0x4080f0 1422 
* * 62618148 24376699 16117930 2974 11574 1972 0 1
+5 * 66603 0 66603
+4 +1 66603 66603
+4 * 66603 66603
+4 * 66603
+3 * 66603
+3 * 66603 0 66603
cfi=(157)
cfn=(1826)
calls=66603 0x4081e2 167 
* * 29823016 8587012 6531008 1068 5454 42761 1 0 41443
+5 * 66603 0 66603
+4 +1 66603 66603
+4 * 66603 0 66603
+4 +4 66603 66603 0 298 0 0 1
+4 * 66603
+3 * 66603 0 66603
cfi=(161)
cfn=(2002)
calls=66603 0x406433 76 
* * 3796375 1531870 999049 0 829 1 0 0 1
+5 * 66603
+3 -1 66603 66603
+4 * 66603
+3 * 66603 0 66603
cfi=(157)
cfn=(1822)
calls=66603 0x40821a 654 
* * 4262596 1731679 999049
+5 * 66603
+8 * 66603 66603
+4 * 66603
+4 * 66603 66603
+4 * 66603
+3 * 66603
+3 * 66603
+3 * 66603 0 66603
cfi=(160)
cfn=(2006)
calls=66603 0x407131 529 
* * 20846759 7992365 5727878 294 3454 25133 0 0 23506
+5 +2 66603 0 66603 298 0 0 1
+8 +5 66603 66603
+4 * 66603
+3 * 66603 0 66603
cfi=(157)
cfn=(1838)
calls=66603 0x4063b0 113 
* * 3796375 1531870 999049 296 1120 0 0 1
+5 * 66603
+3 -1 66603 66603
+4 * 66603 66603
+4 * 66603 66603
+4 * 66603 66603
+3 -2 66603 66603
+4 * 66603
+3 * 66603 0 66603
cfi=(163)
cfn=(1840)
calls=66603 0x408249 297 
* * 102579030 39537147 27866427 2106 18456 34060 0 0 29811
+5 * 66603 0 66603
+4 +5 66603 0 66603
+5 +12 66603 66603
+4 * 66603
+3 * 66603 0 66603 151 0 0 1
cfi=(157)
cfn=(1838)
calls=66603 0x4063b0 113 
* * 3796375 1531870 999049
+5 * 66603
+3 -1 66603 66603
+4 * 66603 66603
+4 * 66603 66603
+4 * 66603 66603
+3 * 66603
+3 * 66603
+3 * 66603 0 66603
cfi=(166)
cfn=(1870)
calls=66603 0x4063c7 148 
* * 12321559 4662211 3396757 0 2273 1 0 0 1
+5 +4 66603 66603
+4 * 66603 66603
+4 -2 66603
+3 +2 66603 66603
+4 * 66603 66603
+3 -2 66603
+3 * 66603
+3 * 66603
+4 * 66603
+3 * 66603 66603 0 298 0 0 1
+4 * 66603 66603
+3 * 66603 66603
+4 * 66603
+3 * 66603
+3 * 66603 0 66603
cfi=(157)
cfn=(1876)
calls=66603 0x4070cc 174 
* * 17452681 5898287 4102719 152 6045 0 0 1
+5 +3 66603 66603
+4 * 66603 66603
+4 * 66603 0 66603
+3 +1 66603 66603
+4 * 66603 66603
+4 * 66603 0 66603
+4 +1 66603 66603
+4 * 66603
+8 * 66603 66603
+4 * 66603
+3 * 66603 66603 0 298 0 0 1
+4 * 66603 0 66603
+4 +1 66603
0x407358 * 66603
+4 * 66603 66603
+1 * 66603 66603
+1 * 66603 66603

fn=(2454)
0x41165e 407 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 32 
* * 7156 2832 1792 0 149 1 0 1 1
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 +4 149 149
+4 * 149
+5 * 149 0 0 149 0 0 1
+5 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2456)
calls=149 0x413c12 1422 
* * 133697 52161 34314 1639 1224 300 9 3 4
+5 * 149 0 149
+4 +1 149 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2470)
calls=149 0x413d04 167 
* * 68854 19374 14916 149 446 73 1 2 73
+5 * 149 0 149
+4 +1 149 149
+4 * 149 0 149
+4 +4 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2476)
calls=149 0x411609 76 
* * 8497 3428 2239 0 0 1 0 0 1
+5 * 149
+3 -1 149 149
+4 * 149 0 0 149 0 0 1
+3 * 149 0 149
cfi=(157)
cfn=(2466)
calls=149 0x405f7c 654 
* * 9540 3875 2239 0 148
+5 * 149
+8 * 149 149
+4 * 149
+4 * 149 149
+4 * 149
+3 * 149
+3 * 149
+3 * 149 0 149
cfi=(160)
cfn=(2478)
calls=149 0x411620 529 
* * 46657 17885 12834 149 446 150 1 1 2
+5 +2 149 0 149
+8 +5 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2482)
calls=149 0x4111c8 113 
* * 8497 3428 2239 149 0 0 1
+5 * 149 0 0 149 0 0 1
+3 -1 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149
+3 -2 149 149
+4 * 149
+3 * 149 0 149
cfi=(163)
cfn=(2484)
calls=149 0x413d3c 297 
* * 225811 87184 61762 2682 2081 303 14 7 7
+5 * 149 0 149
+4 +5 149 0 149
+5 +12 149 149
+4 * 149
+3 * 149 0 149
cfi=(157)
cfn=(2482)
calls=149 0x4111c8 113 
* * 8497 3428 2239 0 0 149 0 0 1
+5 * 149
+3 -1 149 149
+4 * 149 149
+4 * 149 149
+4 * 149 149 0 149 0 0 1
+3 * 149
+3 * 149
+3 * 149 0 149
cfi=(166)
cfn=(2514)
calls=149 0x4111df 148 
* * 27577 10433 7611 596 446 1 4 2 1
+5 +4 149 149
+4 * 149 149
+4 -2 149
+3 +2 149 149
+4 * 149 149
+3 -2 149
+3 * 149
+3 * 149
+4 * 149
+3 * 149 149
+4 * 149 149
+3 * 149 149
+4 * 149
+3 * 149
+3 * 149 0 149 149 0 0 1
cfi=(157)
cfn=(2520)
calls=149 0x41385e 174 
* * 9093 3428 2537 149 149 0 1 1
+5 +3 149 149
+4 * 149 149
+4 * 149 0 149
+3 +1 149 149
+4 * 149 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149
+8 * 149 149
+4 * 149
+3 * 149 149
+4 * 149 0 149
+4 +1 149
0x411846 * 149 0 0 149 0 0 1
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(1514)
0x41d2ba 407 10 0 10 1 0 0 1
+1 * 10
+3 * 10 0 10
+1 * 10 0 0 1 0 0 1
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 32 
* * 484 191 124 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+5 * 10
+5 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1516)
calls=10 0x408640 1422 
* * 9428 3665 2454 8 25 7 8 5 4
+5 * 10 0 10
+4 +1 10 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1530)
calls=10 0x408732 167 
* * 5159 1423 1133 14 19 13 12 6 10
+5 * 10 0 10 1 0 0 1
+4 +1 10 10
+4 * 10 0 10
+4 +4 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(1536)
calls=10 0x41d265 76 
* * 574 231 154 1 4 0 1 1
+5 * 10
+3 -1 10 10
+4 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1526)
calls=10 0x405f2c 654 
* * 644 261 154
+5 * 10
+8 * 10 10
+4 * 10
+4 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 0 2 0 0 1
+3 * 10 0 10
cfi=(160)
cfn=(1538)
calls=10 0x41d27c 529 
* * 3150 1205 880 2 1 9 2 1 9
+5 +2 10 0 10
+8 +5 10 10
+4 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1544)
calls=10 0x406720 113 
* * 574 231 154 1 0 5 1 0 1
+5 * 10
+3 -1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+3 -2 10 10
+4 * 10
+3 * 10 0 10
cfi=(163)
cfn=(1546)
calls=10 0x40876a 297 
* * 17428 6561 4620 41 164 73 41 49 65
+5 * 10 0 10
+4 +5 10 0 10 1 0 0 1
+5 +12 10 10
+4 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1544)
calls=10 0x406720 113 
* * 574 231 154 0 4 0 0 1
+5 * 10
+3 -1 10 10
+4 * 10 10
+4 * 10 10
+4 * 10 10
+3 * 10
+3 * 10
+3 * 10 0 10
cfi=(166)
cfn=(1576)
calls=10 0x406737 148 
* * 1862 703 522 4 11 1 4 2 1
+5 +4 10 10
+4 * 10 10
+4 -2 10
+3 +2 10 10
+4 * 10 10
+3 -2 10
+3 * 10 0 0 1 0 0 1
+3 * 10
+4 * 10
+3 * 10 10
+4 * 10 10
+3 * 10 10
+4 * 10
+3 * 10
+3 * 10 0 10
cfi=(157)
cfn=(1582)
calls=10 0x4076bc 174 
* * 5131 1604 935 19 51 2 19 29 2
+5 +3 10 10
+4 * 10 10
+4 * 10 0 10
+3 +1 10 10
+4 * 10 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10 0 0 2 0 0 1
+8 * 10 10
+4 * 10
+3 * 10 10
+4 * 10 0 10
+4 +1 10
0x41d4a2 * 10 0 0 1 0 0 1
+4 * 10 10
+1 * 10 10
+1 * 10 10

fl=(99)
fn=(620)
0x401aab 56 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +8 
* * 1293 386 148 4 8 3 4
* * 5 3 2
+5 * 1
+5 * 1
+5 * 1 0 1 1 0 0 1
cfn=(630) __static_initialization_and_destruction_0(int, int)
calls=1 -86 * 
* * 102423 27841 11659 425 637 161 411 108 141
+5 * 1 1 0 1 1
+1 * 1 1

fn=(1152) main
0x4016f6 8 1 0 1 1
+1 * 1
+3 * 1 0 1
+2 * 1 0 1
+1 * 1 0 0 1 0 0 1
+7 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 +24 
* * 32 14 11
* * 1 1
+5 * 1 1
+9 * 1 0 1
+4 * 1
+2 +1 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +55 
* * 2571 670 244 13 45 1 5 6
* * 5 3 2 2 1 0 1
+5 * 1 0 1
+7 +2 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +53 
* * 2845 782 354 66 34 1 48 2 1
* * 5 3 2 1 1 0 1
+5 +1 1
+5 * 1 0 1
cfi=(132)
cfn=(1210)
calls=1 0x41dd88 -1 
* * 790371554 303348691 197750614 66 38 62739 64 11 62530
+5 +2 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -14 
* * 35 13 5 0 2 0 0 2
* * 1 1 0 0 1 0 0 1
+5 * 1 0 1 1 0 1 1 0 1
+7 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1276)
calls=1 0x401bb2 650 
* * 486 186 151 5 5 3 5 5 3
+5 * 1 0 1 0 0 1 0 0 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1286)
calls=1 0x401cc7 194 
* * 276 103 83 3 1 1 3 1 1
+5 * 1 0 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1292)
calls=1 0x401ce6 278 
* * 62 25 19 0 0 1 0 0 1
+5 * 1 0 1 1 0 0 1
+4 +1 1 1
+4 * 1
+3 * 1
+5 * 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +48 
* * 2173 562 274 59 94 2 59 94 2
* * 5 3 2
+5 +2 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -18 
* * 35 13 5
* * 1 1
+5 * 1 0 1
+7 +1 1
+5 * 1 0 1
cob=(3)
cfi=(124)
cfn=(1172)
calls=1 0x6f690 +14 
* * 351 87 45
* * 1 1 0 0 1 0 0 1
+5 +1 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 +44 
* * 1117 276 137 7 27 1 7 27 1
* * 5 3 2 1 1 0 1 1
+5 * 1
+3 * 1
+5 * 1 0 0 1 0 0 1
+5 * 1
+5 * 1
+3 * 1 0 1
cfi=(115)
cfn=(1314)
calls=1 0x401d00 +15 
* * 354093833 135161675 95251911 162 991 82823 162 334 82712
+5 * 1 0 1 0 0 1 0 0 1
+4 +1 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -21 
* * 35 13 5 1 1 0 1 1
* * 1 1
+5 * 1 0 1 0 0 1 0 0 1
+7 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1276)
calls=1 0x401bb2 650 
* * 462 180 127 2 7 1 1 4 1
+5 * 1 0 1
+4 * 1 0 0 1 0 0 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1286)
calls=1 0x401cc7 194 
* * 264 100 71 1 2 1 1 2
+5 * 1 0 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1292)
calls=1 0x401ce6 278 
* * 62 25 19
+5 * 1 0 1 0 0 1 0 0 1
+4 +1 1 1
+4 * 1
+3 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(141)
cfn=(1298)
calls=1 0x55800 +5 
* * 873 194 142 17 16 6 16 12 6
* * 1 1
+5 +2 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -25 
* * 35 13 5
* * 1 1
+5 * 1 0 1
+7 +1 1 0 0 1 0 0 1
+5 * 1 0 1
cob=(3)
cfi=(124)
cfn=(1172)
calls=1 0x6f690 +7 
* * 426 102 47 1 1 0 1 1
* * 1 1 0 0 1 0 0 1
+5 +1 1 1
+4 * 1
+3 * 1 0 1
cfi=(115)
cfn=(1494)
calls=1 0x40229a +72 
* * 12403732 5872630 1182573 24 228 33038 24 80 32014
+5 +1 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -28 
* * 35 13 5 0 2 0 0 1
* * 1 1 0 0 1
+5 * 1 0 1 0 0 1 0 0 1
+7 +1 1
+7 * 1
+7 * 1
+3 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1276)
calls=1 0x401bb2 650 
* * 462 180 127 0 11 2 0 6 2
+5 * 1 0 1 0 0 1 0 0 1
+4 * 1 0 0 1 0 0 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1286)
calls=1 0x401cc7 194 
* * 264 100 71 0 2 1 0 1 1
+5 * 1 0 1
+4 * 1
+4 * 1
+3 * 1 0 1
cfi=(140)
cfn=(1292)
calls=1 0x401ce6 278 
* * 62 25 19 0 0 1 0 0 1
+5 * 1 0 1 0 0 1 0 0 1
+4 +1 1 1
+4 * 1
+3 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(141)
cfn=(1298)
calls=1 0x55800 -2 
* * 840 190 140 0 19 1 0 7
* * 1 1
+5 +2 1 0 1
+7 +1 1 1 0 1 0 0 1
+7 * 1
+19 +3 1
+5 * 1 0 1
cob=(3)
cfi=(124)
cfn=(1172)
calls=1 0x6f690 -3 
* * 457 108 47 0 1
* * 1 1 0 0 1
+5 +1 1 0 1
cob=(8)
cfi=(94)
cfn=(1158)
calls=1 0xb1430 -37 
* * 35 13 5
* * 1 1
+5 * 1 0 1
+7 +1 1 1
+4 * 1
+3 * 1 0 1
cfi=(115)
cfn=(1496)
calls=1 0x401f40 +19 
* * 2188828880 788113960 550909558 172560 1164309 812141 1588 1014 748039

fn=(630)
0x401a68 56 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -24 
* * 52 20 16 0 1 1
* * 1 1
+5 * 1 0 1
+3 * 1 0 1
+3 * 1 1
+4 * 1
+2 * 1 1
+7 * 1
fi=(102)
+2 +18 1
+5 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -10 
* * 102279 27799 11620 419 630 157 409 108 141
* * 5 3 2 1 1 0 1
+5 * 1 0 0 1
+5 * 1
+5 * 1
+5 * 1 0 1
cob=(3)
cfi=(82)
cfn=(318)
calls=1 0x3a280 -17 
* * 66 13 15 2 4 3
* * 1 1 0 1 1
fe=(99)
+5 -18 1
+1 * 1 1
+1 * 1 1

fl=(146)
fn=(1368)
0x40450c 17 1024 0 1024 1 0 0 1
+1 * 1024
+3 * 1024 0 1024
+1 * 1024
+4 * 1024 0 1024
cob=(3)
cfi=(100)
cfn=(626)
calls=1024 0x10a310 +15 
* * 49156 19457 12292
* * 1024 1024
+5 * 1024 0 1024
+4 * 1024 0 1024
+4 * 1024 0 1024
+3 * 1024 0 1024
+3 * 1024 0 1024
+4 * 1024 1024
+4 * 1024
+4 * 1024
+3 * 1024 0 1024
cfi=(147)
cfn=(1370)
calls=1024 0x4044cc 132 
* * 1599562 614415 429144 19 10 1034 19 10 1034
+5 * 1024 1024
+4 * 1024 0 1024 1 0 256 1 0 256
+8 * 1024 1024
+4 * 1024
+6 * 1024
+5 * 1024
+3 * 1024 0 1024
cfi=(133)
cfn=(1212)
calls=1024 0x40552e 495 
* * 175694852 67084289 47280132 0 0 79872 0 0 79872
+5 +1 1024 1024
+4 * 1024 1024
+4 * 1024 0 1024
+3 +1 1024 1024
+4 * 1024 1024
+3 * 1024 0 1024 0 0 256 0 0 256
+6 * 1024 1024
+4 * 1024 1024
+3 * 1024 0 1024 1 0 0 1
+6 +1 1024 1024
+3 * 1024 1024
+4 * 1024
+7 * 1024
+3 * 1024
+3 * 1024 0 1024
cfi=(134)
cfn=(1214)
calls=1024 0x40555a 327 
* * 175630340 67059713 47262724 0 1 0 0 1
+5 +2 1024
+32 * 1024 0 0 1 0 0 1
+4 * 1024 1024
+1 * 1024 1024
+1 * 1024 1024

fl=(153)
fn=(1414)
0x40605c 79 1322 0 1322 299 0 0 2
+1 * 1322
+3 * 1322
+4 * 1322 0 1322
cob=(3)
cfi=(100)
cfn=(626)
calls=1322 0x10a310 -47 
* * 63460 25119 15868 0 597 0 0 3
* * 1322 1322
+5 * 1322 0 1322
+4 * 1322
+1 * 1322 1322
+1 * 1322 1322

fn=(2422)
0x40943c 86 496 0 496
+1 * 496
+3 * 496
+4 * 496 0 496
cob=(3)
cfi=(100)
cfn=(626)
calls=496 0x10a310 -54 
* * 23812 9425 5956 0 2
* * 496 496
+5 * 496 0 496
+4 * 496
+1 * 496 496
+1 * 496 496

fn=(2610)
0x418258 86 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -54 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2884)
0x4188c2 119 16 0 16
+1 * 16
+3 * 16 0 16
+2 * 16 0 16
+2 * 16 0 16
+1 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -87 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16
+4 * 16 16
+9 * 16 0 16
+4 * 16
+2 0 16 16
+4 0 16
+3 0 16 0 16 1 0 0 1
fi=(66)
cfi=(161)
cfn=(2330)
calls=16 0x40afe8 76 
* 0 916 369 244 0 1 1 0 1 1
+5 0 16 0 16
+4 0 16 16
+4 0 16
+3 0 16 0 16
fi=(66)
cfi=(161)
cfn=(2576)
calls=16 0x413f06 76 
* 0 916 369 244
+5 0 16
+3 0 16
+4 0 16
+3 0 16
+3 0 16 0 16
fi=(66)
cfi=(182)
cfn=(2590)
calls=16 0x4182fa 484 
* 0 5860 2273 1588 3 4
+5 0 16
+4 0 16 16
+4 0 16
+3 0 16 0 16
fi=(66)
cfi=(161)
cfn=(2326)
calls=16 0x40b016 76 
* 0 916 369 244 0 0 1 0 0 1
+5 0 16 0 16
+3 0 16 16
+4 0 16
+3 0 16 0 0 1 0 0 1
+5 0 16 0 16
fi=(66)
cfi=(162)
cfn=(1542)
calls=16 0x4040c7 130 
* 0 932 369 260
+5 0 16
+3 0 16
+3 0 16
+2 0 16 16
+4 0 16 0 16
+1 0 16 16
+4 0 16 0 16
+1 0 16
+3 0 16
+3 0 16 0 16
fi=(66)
cfi=(182)
cfn=(2888)
calls=16 0x4195a2 1156 
* 0 32242 12333 8800 21 18 13 17 8 9
+5 0 16
+4 0 16
+27 0 16 0 0 1 0 0 1
+1 0 16 16
+4 0 16 16
+9 0 16
+7 0 16
+4 0 16 16
+1 0 16 16
+2 0 16 16
+2 0 16 16
+1 0 16 16

fn=(3196)
0x417730 81 20 0 20
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -49 
* * 964 381 244
* * 20 20
+5 * 20 0 20 1 0 0 1
+4 * 20 0 20
+4 * 20
+1 * 20 20
+1 * 20 20

fn=(3206)
0x406070 86 20 0 20 1
+1 * 20
+3 * 20
+4 * 20 0 20
cob=(3)
cfi=(100)
cfn=(626)
calls=20 0x10a310 -54 
* * 964 381 244 0 1
* * 20 20
+5 * 20 0 20 1 0 0 1
+4 * 20
+1 * 20 20
+1 * 20 20

fn=(3290)
0x4093e0 109 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -77 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cob=(8)
cfi=(94)
cfn=(1598)
calls=10 0x8bf10 0 
* * 1020 250 150 88 19
* * 10 10
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(1534)
0x409738 99 19082 0 19082
+1 * 19082
+3 * 19082
+4 * 19082 0 19082 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=19082 0x10a310 -67 
* * 915940 362559 228988 0 761 0 0 1
* * 19082 19082
+5 * 19082 0 19082
+4 * 19082 0 19082
+4 * 19082 0 19082
+4 +2 19082 19082
+4 * 19082
+3 * 19082 0 19082
cfn=(1524)
calls=19082 0x40990e +12 
* * 1087678 419805 286234 0 0 752 0 0 1
+5 * 19082 19082
+4 * 19082
+3 * 19082
+2 * 19082
+7 +3 19082 19082
+4 * 19082
+4 * 19082
+3 * 19082 0 19082
cob=(8)
cfi=(94)
cfn=(1312)
calls=19082 0x8de60 0 
* * 3736889 663545 587747 1040 4229 8137 30 14 7981
* * 19082 19082
+5 +1 19082 19082
+1 * 19082 19082

fn=(1728)
0x4098be 113 177789 0 177789 149 0 0 1
+1 * 177789 0 0 149 0 0 1
+3 * 177789
+4 * 177789 0 177789
cob=(3)
cfi=(100)
cfn=(626)
calls=177789 0x10a310 -81 
* * 8533880 3377993 2133476 0 1607 0 0 2
* * 177789 177789
+5 * 177789 0 177789
+4 +1 177789
+10 * 177789 177789
+1 * 177789 177789

fn=(1804)
0x408f3c 79 11369 0 11369
+1 * 11369
+3 * 11369 0 0 148 0 0 1
+4 * 11369 0 11369
cob=(3)
cfi=(100)
cfn=(626)
calls=11369 0x10a310 -47 
* * 545716 216012 136432 0 2514 0 0 1
* * 11369 11369
+5 * 11369 0 11369
+4 * 11369
+1 * 11369 11369
+1 * 11369 11369

fn=(2008)
0x4080a6 119 320350 0 320350 147
+1 * 320350
+3 * 320350 0 320350
+1 * 320350
+4 * 320350 0 320350
cob=(3)
cfi=(100)
cfn=(626)
calls=320350 0x10a310 -87 
* * 15376804 6086651 3844204
* * 320350 320350
+5 * 320350 0 320350
+4 * 320350 0 320350
+4 * 320350 0 320350
+4 +1 320350 320350
+4 * 320350
+3 * 320350 0 320350
cfi=(161)
cfn=(2002)
calls=320350 0x406433 -44 
* * 18259954 7368051 4805254 0 1039 1337 0 0 1
+5 * 320350 320350
+3 * 320350 320350
+4 * 320350
+3 * 320350
+5 * 320350 0 320350
cfi=(162)
cfn=(1542)
calls=320350 0x4040c7 +10 
* * 18580304 7368051 5125604
+5 * 320350
+3 * 320350
+2 * 320350 0 320350 0 0 36266 0 0 35814
+3 * 320350
+1 * 320350
+4 * 320350 320350
+1 * 320350 320350
+1 * 320350 320350

fn=(2148)
0x417f98 99 745 0 745
+1 * 745
+3 * 745
+4 * 745 0 745
cob=(3)
cfi=(100)
cfn=(626)
calls=745 0x10a310 -67 
* * 35764 14156 8944 0 440 0 0 1
* * 745 745
+5 * 745 0 745
+4 * 745 0 745
+4 * 745 0 745
+4 +2 745 745
+4 * 745
+3 * 745 0 745
cfn=(2138)
calls=745 0x419130 +12 
* * 42469 16391 11179 0 534 1 0 1 1
+5 * 745 745 0 447 0 0 1
+4 * 745
+3 * 745
+2 * 745
+7 +3 745 745
+4 * 745
+4 * 745
+3 * 745 0 745
cob=(8)
cfi=(94)
cfn=(1312)
calls=745 0x8de60 0 
* * 153297 23846 21619 0 0 408 0 0 407
* * 745 745
+5 +1 745 745
+1 * 745 745

fn=(2154)
0x4139d0 119 2384 0 2384 2 0 0 1
+1 * 2384
+3 * 2384 0 2384
+1 * 2384
+4 * 2384 0 2384
cob=(3)
cfi=(100)
cfn=(626)
calls=2384 0x10a310 -87 
* * 114436 45297 28612
* * 2384 2384
+5 * 2384 0 2384
+4 * 2384 0 2384
+4 * 2384 0 2384
+4 +1 2384 2384
+4 * 2384
+3 * 2384 0 2384
cfi=(161)
cfn=(2150)
calls=2384 0x411386 -44 
* * 135892 54833 35764 0 2076 1 0 1 1
+5 * 2384 2384
+3 * 2384 2384
+4 * 2384
+3 * 2384
+5 * 2384 0 2384
cfi=(162)
cfn=(1542)
calls=2384 0x4040c7 +10 
* * 138276 54833 38148 0 784
+5 * 2384
+3 * 2384
+2 * 2384 0 2384 0 0 984 0 0 149
+3 * 2384
+1 * 2384
+4 * 2384 2384
+1 * 2384 2384
+1 * 2384 2384

fn=(2404)
0x409428 79 496 0 496 150 0 0 1
+1 * 496
+3 * 496
+4 * 496 0 496
cob=(3)
cfi=(100)
cfn=(626)
calls=496 0x10a310 -47 
* * 23824 9428 5968 0 598 3 0 4 3
* * 496 496
+5 * 496 0 496
+4 * 496
+1 * 496 496
+1 * 496 496

fn=(2586)
0x418326 119 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+2 * 149 0 149
+2 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -87 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 * 149 0 149
+4 * 149 149
+9 * 149 0 149
+4 * 149
+2 0 149 149
+4 0 149
+3 0 149 0 149
fi=(66)
cfi=(161)
cfn=(2330)
calls=149 0x40afe8 76 
* 0 8497 3428 2239 0 149 149 0 1 1
+5 0 149 0 149
+4 0 149 149
+4 0 149
+3 0 149 0 149
fi=(66)
cfi=(161)
cfn=(2576)
calls=149 0x413f06 76 
* 0 8497 3428 2239
+5 0 149
+3 0 149
+4 0 149 0 0 149 0 0 1
+3 0 149
+3 0 149 0 149
fi=(66)
cfi=(182)
cfn=(2590)
calls=149 0x4182fa 484 
* 0 54558 21164 14775 298 594 2 2 2 2
+5 0 149
+4 0 149 149
+4 0 149
+3 0 149 0 149
fi=(66)
cfi=(161)
cfn=(2326)
calls=149 0x40b016 76 
* 0 8497 3428 2239 0 0 149 0 0 1
+5 0 149 0 149
+3 0 149 149
+4 0 149
+3 0 149
+5 0 149 0 149
fi=(66)
cfi=(162)
cfn=(1542)
calls=149 0x4040c7 130 
* 0 8646 3428 2388
+5 0 149
+3 0 149
+3 0 149
+2 0 149 149
+4 0 149 0 149
+1 0 149 149
+4 0 149 0 149
+1 0 149 0 0 149 0 0 1
+3 0 149
+3 0 149 0 149
fi=(66)
cfi=(182)
cfn=(2600)
calls=149 0x419308 1156 
* 0 299667 114737 81233 3427 3127 718 5 3 3
+5 0 149
+4 0 149
+27 0 149
+1 0 149 149
+4 0 149 149
+9 0 149
+7 0 149 0 0 149 0 0 1
+4 0 149 149
+1 0 149 149
+2 0 149 149
+2 0 149 149
+1 0 149 149

fn=(2862) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, float, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, float> > > >, false> >::max_size() const
0x41956c 113 16 0 16 1 0 0 1
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -81 
* * 772 305 196 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 +1 16 0 0 1 0 0 1
+10 * 16 16
+1 * 16 16

fn=(3428)
0x4082ee 86 46 0 46 1
+1 * 46
+3 * 46
+4 * 46 0 46
cob=(3)
cfi=(100)
cfn=(626)
calls=46 0x10a310 -54 
* * 2212 875 556
* * 46 46
+5 * 46 0 46
+4 * 46
+1 * 46 46
+1 * 46 46

fn=(3322)
0x4197ac 124 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -92 
* * 484 191 124 0 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10 10 0 0 1
+4 * 10
+1 * 10 10
+1 * 10 10

fn=(1508)
0x409198 79 5812 0 5812 297 0 0 1
+1 * 5812
+3 * 5812
+4 * 5812 0 5812
cob=(3)
cfi=(100)
cfn=(626)
calls=5812 0x10a310 -47 
* * 278980 110429 69748 0 380 0 0 1
* * 5812 5812
+5 * 5812 0 5812
+4 * 5812
+1 * 5812 5812
+1 * 5812 5812

fn=(1592)
0x4091ac 109 13867 0 13867 1
+1 * 13867
+3 * 13867
+4 * 13867 0 13867
cob=(3)
cfi=(100)
cfn=(626)
calls=13867 0x10a310 -77 
* * 665620 263474 166408 0 684
* * 13867 13867
+5 * 13867 0 13867
+4 * 13867 0 13867 1
+4 * 13867 0 13867
+4 +1 13867 13867
+4 * 13867
+3 * 13867 0 13867
cob=(8)
cfi=(94)
cfn=(1598)
calls=13866 0x8bf10 0 
* * 1441344 355092 215941 2 689 0 2
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -46 
* * 2329 656 259 19 42 0 19 28
* * 13871 13869 2 0 1
+5 * 13867
+1 * 13867 13867
+1 * 13867 13867

fn=(1620)
0x408dda 79 10326 0 10326 297 0 0 1
+1 * 10326
+3 * 10326
+4 * 10326 0 10326
cob=(3)
cfi=(100)
cfn=(626)
calls=10326 0x10a310 -47 
* * 495652 196195 123916 0 1486 0 0 1
* * 10326 10326
+5 * 10326 0 10326
+4 * 10326
+1 * 10326 10326
+1 * 10326 10326

fn=(1646)
0x4094b0 99 64194 0 64194
+1 * 64194
+3 * 64194
+4 * 64194 0 64194
cob=(3)
cfi=(100)
cfn=(626)
calls=64194 0x10a310 -67 
* * 3081316 1219687 770332 0 1484 0 0 1
* * 64194 64194
+5 * 64194 0 64194 298 0 0 1
+4 * 64194 0 64194
+4 * 64194 0 64194
+4 +2 64194 64194
+4 * 64194
+3 * 64194 0 64194
cfn=(1636)
calls=64194 0x40981e +12 
* * 3659062 1412269 962914
+5 * 64194 64194
+4 * 64194
+3 * 64194
+2 * 64194
+7 +3 64194 64194
+4 * 64194
+4 * 64194
+3 * 64194 0 64194
cob=(8)
cfi=(94)
cfn=(1312)
calls=64194 0x8de60 0 
* * 12347115 2042544 1917077 278 1020 41759 5 2 41519
* * 64194 64194
+5 +1 64194 64194
+1 * 64194 64194

fn=(1820)
0x40986e 113 200604 0 200604
+1 * 200604
+3 * 200604
+4 * 200604 0 200604
cob=(3)
cfi=(100)
cfn=(626)
calls=200604 0x10a310 -81 
* * 9629000 3811478 2407256 0 1140 1121 0 1 1
* * 200604 200604
+5 * 200604 0 200604
+4 +1 200604
+10 * 200604 200604
+1 * 200604 200604

fn=(2138)
0x419130 113 2235 0 2235 149 0 0 1
+1 * 2235
+3 * 2235
+4 * 2235 0 2235
cob=(3)
cfi=(100)
cfn=(626)
calls=2235 0x10a310 -81 
* * 107288 42467 26828 0 1543 2 0 2 2
* * 2235 2235
+5 * 2235 0 2235 149 0 0 1
+4 +1 2235
+10 * 2235 2235
+1 * 2235 2235

fn=(2316)
0x409380 79 318 0 318 149 0 0 1
+1 * 318
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -47 
* * 15268 6043 3820 0 150 0 0 1
* * 318 318
+5 * 318 0 318
+4 * 318
+1 * 318 318
+1 * 318 318

fn=(2340)
0x40b958 119 298 0 298 149 0 0 1
+1 * 298
+3 * 298 0 298
+2 * 298 0 298
+2 * 298 0 298
+1 * 298
+4 * 298 0 298
cob=(3)
cfi=(100)
cfn=(626)
calls=298 0x10a310 -87 
* * 14308 5663 3580 0 0 298 0 0 1
* * 298 298
+5 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 0 298
+4 * 298 298 0 149 0 0 1
+9 * 298 0 298
+4 * 298
+2 0 298 298
+4 0 298
+3 0 298 0 298
fi=(66)
cfi=(161)
cfn=(2330)
calls=298 0x40afe8 76 
* 0 16990 6855 4474 0 150 0 0 1
+5 0 298 0 298
+4 0 298 298
+4 0 298
+3 0 298 0 298
fi=(66)
cfi=(161)
cfn=(2328)
calls=298 0x40afff 76 
* 0 16990 6855 4474
+5 0 298
+3 0 298
+4 0 298
+3 0 298
+3 0 298 0 298
fi=(66)
cfi=(182)
cfn=(2344)
calls=298 0x40b92c 484 
* 0 109092 42322 29526 199 596 215 2 2 3
+5 0 298
+4 0 298 298 0 149 0 0 1
+4 0 298
+3 0 298 0 298
fi=(66)
cfi=(161)
cfn=(2326)
calls=298 0x40b016 76 
* 0 16990 6855 4474
+5 0 298 0 298
+3 0 298 298
+4 0 298
+3 0 298
+5 0 298 0 298
fi=(66)
cfi=(162)
cfn=(1542)
calls=298 0x4040c7 130 
* 0 17288 6855 4772
+5 0 298
+3 0 298
+3 0 298
+2 0 298 298
+4 0 298 0 298
+1 0 298 298
+4 0 298 0 298
+1 0 298
+3 0 298
+3 0 298 0 298
fi=(66)
cfi=(182)
cfn=(2354)
calls=298 0x40bd24 1156 
* 0 135899 52747 37268 596 893 90 4 3 3
+5 0 298
+4 0 298 0 0 149 0 0 1
+27 0 298
+1 0 298 298
+4 0 298 298
+9 0 298
+7 0 298
+4 0 298 298
+1 0 298 298
+2 0 298 298
+2 0 298 298
+1 0 298 298

fn=(2410) __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const
0x40c0fa 113 473 0 473 149 0 0 1
+1 * 473
+3 * 473 0 0 149
+4 * 473 0 473
cob=(3)
cfi=(100)
cfn=(626)
calls=473 0x10a310 -81 
* * 22708 8988 5680 0 319 0 0 1
* * 473 473
+5 * 473 0 473
+4 +1 473
+10 * 473 473
+1 * 473 473

fn=(2558)
0x4181f2 99 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -67 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149
+3 * 149 0 149
cfn=(2560) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<int const, std::unordered_map<float, Protein*, std::hash<float>, std::equal_to<float>, std::allocator<std::pair<float const, Protein*> > > >, false> >::max_size() const
calls=149 0x4192ea +12 
* * 8497 3279 2239 298 149 0 2 1
+5 * 149 149
+4 * 149
+3 * 149
+2 * 149
+7 +3 149 149
+4 * 149
+3 * 149
+4 * 149
+3 * 149
+4 * 149
+3 * 149 0 149 149 0 0 1
cob=(8)
cfi=(94)
cfn=(1312)
calls=149 0x8de60 0 
* * 17284 4023 2235 0 118
* * 149 149
+5 +1 149 149
+1 * 149 149

fn=(3016)
0x418c54 119 12 0 12 2 0 0 1
+1 * 12
+3 * 12 0 12
+2 * 12 0 12
+2 * 12 0 12
+1 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -87 
* * 580 229 148
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 * 12 12 0 11 0 0 1
+9 * 12 0 12
+4 * 12
+2 0 12 12
+4 0 12
+3 0 12 0 12
fi=(66)
cfi=(161)
cfn=(2330)
calls=12 0x40afe8 76 
* 0 688 277 184 0 21 1 0 1 1
+5 0 12 0 12
+4 0 12 12
+4 0 12
+3 0 12 0 12
fi=(66)
cfi=(161)
cfn=(2328)
calls=12 0x40afff 76 
* 0 688 277 184
+5 0 12
+3 0 12
+4 0 12
+3 0 12
+3 0 12 0 12
fi=(66)
cfi=(182)
cfn=(2344)
calls=12 0x40b92c 484 
* 0 4396 1705 1192 3 26 2 0 0 1
+5 0 12
+4 0 12 12
+4 0 12 0 0 11 0 0 1
+3 0 12 0 12
fi=(66)
cfi=(161)
cfn=(2326)
calls=12 0x40b016 76 
* 0 688 277 184 0 10
+5 0 12 0 12
+3 0 12 12
+4 0 12
+3 0 12
+5 0 12 0 12
fi=(66)
cfi=(162)
cfn=(1542)
calls=12 0x4040c7 130 
* 0 700 277 196
+5 0 12
+3 0 12
+3 0 12
+2 0 12 12
+4 0 12 0 12
+1 0 12 12
+4 0 12 0 12
+1 0 12
+3 0 12
+3 0 12 0 12
fi=(66)
cfi=(182)
cfn=(3020)
calls=12 0x4196e2 1156 
* 0 5236 2032 1444 34 18 2 2 2 2
+5 0 12
+4 0 12
+27 0 12 0 0 2 0 0 1
+1 0 12 12
+4 0 12 12
+9 0 12
+7 0 12
+4 0 12 12
+1 0 12 12
+2 0 12 12
+2 0 12 12
+1 0 12 12

fn=(1738)
0x409660 99 59263 0 59263
+1 * 59263
+3 * 59263
+4 * 59263 0 59263
cob=(3)
cfi=(100)
cfn=(626)
calls=59263 0x10a310 -67 
* * 2844628 1125998 711160 0 1044 1 0 0 1
* * 59263 59263
+5 * 59263 0 59263
+4 * 59263 0 59263
+4 * 59263 0 59263
+4 +2 59263 59263
+4 * 59263
+3 * 59263 0 59263 309 0 0 1
cfn=(1728)
calls=59263 0x4098be +12 
* * 3377995 1303787 888949 0 1390 0 0 1
+5 * 59263 59263
+4 * 59263
+3 * 59263
+2 * 59263
+7 +3 59263 59263
+4 * 59263
+4 * 59263
+3 * 59263 0 59263
cob=(8)
cfi=(94)
cfn=(1312)
calls=59263 0x8de60 0 
* * 11303043 1874335 1760652 391 733 34996 21 2 34797
* * 59263 59263
+5 +1 59263 59263
+1 * 59263 59263

fn=(1744)
0x41dd3e 119 1120 0 1120 1 0 0 1
+1 * 1120 0 0 1 0 0 1
+3 * 1120 0 1120
+1 * 1120
+4 * 1120 0 1120
cob=(3)
cfi=(100)
cfn=(626)
calls=1120 0x10a310 -87 
* * 53764 21281 13444
* * 1120 1120
+5 * 1120 0 1120
+4 * 1120 0 1120
+4 * 1120 0 1120
+4 +1 1120 1120
+4 * 1120
+3 * 1120 0 1120
cfi=(161)
cfn=(1740)
calls=1120 0x41d6ed -44 
* * 63844 25761 16804 0 1 0 0 1
+5 * 1120 1120
+3 * 1120 1120
+4 * 1120
+3 * 1120
+5 * 1120 0 1120
cfi=(162)
cfn=(1542)
calls=1120 0x4040c7 +10 
* * 64964 25761 17924 0 2 1 0 0 1
+5 * 1120
+3 * 1120
+2 * 1120 0 1120 0 0 118 0 0 118
+3 * 1120 0 0 18 0 0 1
+1 * 1120
+4 * 1120 1120
+1 * 1120 1120
+1 * 1120 1120

fn=(1976)
0x40834e 119 259111 0 259111 147
+1 * 259111
+3 * 259111 0 259111
+1 * 259111
+4 * 259111 0 259111
cob=(3)
cfi=(100)
cfn=(626)
calls=259111 0x10a310 -87 
* * 12437332 4923110 3109336 0 839
* * 259111 259111
+5 * 259111 0 259111
+4 * 259111 0 259111
+4 * 259111 0 259111
+4 +1 259111 259111
+4 * 259111
+3 * 259111 0 259111
cfi=(161)
cfn=(1970)
calls=259111 0x4065eb -44 
* * 14769331 5959554 3886669 0 988
+5 * 259111 259111
+3 * 259111 259111
+4 * 259111
+3 * 259111
+5 * 259111 0 259111
cfi=(162)
cfn=(1542)
calls=259111 0x4040c7 +10 
* * 15028442 5959554 4145780 0 0 822 0 0 1
+5 * 259111
+3 * 259111
+2 * 259111 0 259111 0 0 27912 0 0 27794
+3 * 259111
+1 * 259111
+4 * 259111 259111
+1 * 259111 259111
+1 * 259111 259111

fn=(2060)
0x4068ac 79 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2086)
0x4068c0 79 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(1524)
0x40990e 113 57246 0 57246 4 0 0 3
+1 * 57246
+3 * 57246
+4 * 57246 0 57246
cob=(3)
cfi=(100)
cfn=(626)
calls=57246 0x10a310 -81 
* * 2747816 1087676 686960 0 1006 753 0 1 2
* * 57246 57246
+5 * 57246 0 57246
+4 +1 57246
+10 * 57246 57246
+1 * 57246 57246

fn=(1788)
0x40907e 109 48833 0 48833 1
+1 * 48833 0 0 1
+3 * 48833
+4 * 48833 0 48833
cob=(3)
cfi=(100)
cfn=(626)
calls=48833 0x10a310 -77 
* * 2343988 927828 586000 0 4 1 0 1 1
* * 48833 48833
+5 * 48833 0 48833
+4 * 48833 0 48833
+4 * 48833 0 48833
+4 +1 48833 48833
+4 * 48833
+3 * 48833 0 48833
cob=(8)
cfi=(94)
cfn=(1598)
calls=48833 0x8bf10 0 
* * 5241486 1304018 805036 300 34
* * 48833 48833
+5 * 48833
+1 * 48833 48833
+1 * 48833 48833

fn=(1830)
0x409588 99 66868 0 66868
+1 * 66868
+3 * 66868
+4 * 66868 0 66868
cob=(3)
cfi=(100)
cfn=(626)
calls=66868 0x10a310 -67 
* * 3209668 1270493 802420
* * 66868 66868
+5 * 66868 0 66868
+4 * 66868 0 66868
+4 * 66868 0 66868
+4 +2 66868 66868
+4 * 66868
+3 * 66868 0 66868
cfn=(1820)
calls=66868 0x40986e +12 
* * 3811480 1471097 1003024 0 1121 1121 0 1 1
+5 * 66868 66868
+4 * 66868
+3 * 66868
+2 * 66868
+7 +3 66868 66868 0 154 0 0 1
+4 * 66868
+4 * 66868
+3 * 66868 0 66868
cob=(8)
cfi=(94)
cfn=(1312)
calls=66868 0x8de60 0 
* * 12890900 2135095 2010061 327 1288 41805 2 0 41600
* * 66868 66868
+5 +1 66868 66868
+1 * 66868 66868

fn=(1836)
0x41dcf4 119 1275 0 1275
+1 * 1275
+3 * 1275 0 1275
+1 * 1275
+4 * 1275 0 1275
cob=(3)
cfi=(100)
cfn=(626)
calls=1275 0x10a310 -87 
* * 61204 24226 15304 0 0 1 0 0 1
* * 1275 1275
+5 * 1275 0 1275
+4 * 1275 0 1275
+4 * 1275 0 1275
+4 +1 1275 1275
+4 * 1275
+3 * 1275 0 1275
cfi=(161)
cfn=(1832)
calls=1275 0x41d4a9 -44 
* * 72679 29326 19129 0 2
+5 * 1275 1275
+3 * 1275 1275
+4 * 1275
+3 * 1275
+5 * 1275 0 1275
cfi=(162)
cfn=(1542)
calls=1275 0x4040c7 +10 
* * 73954 29326 20404
+5 * 1275
+3 * 1275
+2 * 1275 0 1275 0 0 142 0 0 141
+3 * 1275
+1 * 1275
+4 * 1275 1275
+1 * 1275 1275
+1 * 1275 1275

fn=(1912)
0x4085f6 119 103108 0 103108 147
+1 * 103108
+3 * 103108 0 103108
+1 * 103108
+4 * 103108 0 103108 149 0 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=103108 0x10a310 -87 
* * 4949188 1959053 1237300
* * 103108 103108
+5 * 103108 0 103108
+4 * 103108 0 103108
+4 * 103108 0 103108
+4 +1 103108 103108
+4 * 103108
+3 * 103108 0 103108
cfi=(161)
cfn=(1906)
calls=103108 0x4067a3 -44 
* * 5877160 2371485 1546624 0 1 1 0 0 1
+5 * 103108 103108 0 0 1
+3 * 103108 103108
+4 * 103108
+3 * 103108
+5 * 103108 0 103108
cfi=(162)
cfn=(1542)
calls=103108 0x4040c7 +10 
* * 5980268 2371485 1649732 0 160
+5 * 103108
+3 * 103108
+2 * 103108 0 103108 0 0 11275 0 0 10860
+3 * 103108
+1 * 103108
+4 * 103108 103108
+1 * 103108 103108
+1 * 103108 103108

fn=(1944)
0x407dfe 119 325863 0 325863 296
+1 * 325863 0 0 298 0 0 1
+3 * 325863 0 325863
+1 * 325863
+4 * 325863 0 325863
cob=(3)
cfi=(100)
cfn=(626)
calls=325863 0x10a310 -87 
* * 15641428 6191398 3910360 0 0 1 0 0 1
* * 325863 325863
+5 * 325863 0 325863
+4 * 325863 0 325863
+4 * 325863 0 325863
+4 +1 325863 325863
+4 * 325863
+3 * 325863 0 325863
cfi=(161)
cfn=(1938)
calls=325863 0x40627b -44 
* * 18574195 7494850 4887949 0 1337
+5 * 325863 325863
+3 * 325863 325863
+4 * 325863
+3 * 325863
+5 * 325863 0 325863
cfi=(162)
cfn=(1542)
calls=325863 0x4040c7 +10 
* * 18900058 7494850 5213812
+5 * 325863
+3 * 325863
+2 * 325863 0 325863 0 0 38068 0 0 37789
+3 * 325863
+1 * 325863
+4 * 325863 325863
+1 * 325863 325863
+1 * 325863 325863

fn=(2022)
0x4092c6 79 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2096)
0x4092da 79 596 0 596
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 -47 
* * 28612 11325 7156 0 148
* * 596 596
+5 * 596 0 596
+4 * 596
+1 * 596 596
+1 * 596 596

fn=(2198)
0x417de4 109 596 0 596 154 0 0 1
+1 * 596
+3 * 596
+4 * 596 0 596
cob=(3)
cfi=(100)
cfn=(626)
calls=596 0x10a310 -77 
* * 28612 11325 7156 0 471 0 0 1
* * 596 596
+5 * 596 0 596
+4 * 596 0 596
+4 * 596 0 596
+4 +1 596 596 0 149 0 0 1
+4 * 596
+3 * 596 0 596
cob=(8)
cfi=(94)
cfn=(1598)
calls=596 0x8bf10 0 
* * 60792 14900 8940 0 153
* * 596 596
+5 * 596
+1 * 596 596
+1 * 596 596

fn=(2408)
0x40c09a 99 473 0 473 149 0 0 1
+1 * 473
+3 * 473
+4 * 473 0 473
cob=(3)
cfi=(100)
cfn=(626)
calls=473 0x10a310 -67 
* * 22708 8988 5680 0 151 1 0 1 1
* * 473 473
+5 * 473 0 473
+4 * 473 0 473
+4 * 473 0 473
+4 +2 473 473
+4 * 473
+3 * 473 0 473
cfn=(2410)
calls=473 +64 +12 
* * 26965 10407 7099 298 319 0 1 1
+5 * 473 473
+4 * 473
+3 * 473
+2 * 473
+7 +3 473 473
+4 * 473
+4 * 473
+3 * 473 0 473
cob=(8)
cfi=(94)
cfn=(1312)
calls=473 0x8de60 0 
* * 96264 15500 14830 36 2 386 3 0 237
* * 473 473
+5 +1 473 473
+1 * 473 473

fn=(2560)
0x4192ea 113 149 0 149 149 0 0 1
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -81 
* * 7156 2832 1792 0 149 0 0 1
* * 149 149
+5 * 149 0 149
+4 +1 149 0 0 149 0 0 1
+10 * 149 149
+1 * 149 149

fn=(2868)
0x41887a 79 16 0 16
+1 * 16
+3 * 16 0 0 1 0 0 1
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -47 
* * 772 305 196 0 0 1 0 0 1
* * 16 16
+5 * 16 0 16
+4 * 16
+1 * 16 16
+1 * 16 16

fn=(3102)
0x409450 109 23 0 23
+1 * 23
+3 * 23
+4 * 23 0 23
cob=(3)
cfi=(100)
cfn=(626)
calls=23 0x10a310 -77 
* * 1108 438 280
* * 23 23
+5 * 23 0 23
+4 * 23 0 23
+4 * 23 0 23
+4 +1 23 23
+4 * 23
+3 * 23 0 23
cob=(8)
cfi=(94)
cfn=(1598)
calls=23 0x8bf10 0 
* * 2346 575 345 16 2
* * 23 23
+5 * 23
+1 * 23 23
+1 * 23 23

fn=(3226)
0x417748 119 10 0 10
+1 * 10
+3 * 10 0 10
+1 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -87 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cfi=(161)
cfn=(3222)
calls=10 0x40be57 -44 
* * 574 231 154 0 0 10 0 0 1
+5 * 10
+3 * 10 10
+4 * 10
+3 * 10
+5 * 10 0 10 1
cfi=(162)
cfn=(1542)
calls=10 0x4040c7 +10 
* * 584 231 164 0 1
+5 * 10
+3 * 10
+3 * 10
+2 * 10 10 0 0 10
+3 * 10 10
+4 * 10 0 10
+3 * 10 0 10
+4 * 10
+1 * 10
+4 * 10 10
+1 * 10 10
+1 * 10 10

fn=(1636)
0x40981e 113 192582 0 192582 2 0 0 1
+1 * 192582
+3 * 192582
+4 * 192582 0 192582
cob=(3)
cfi=(100)
cfn=(626)
calls=192582 0x10a310 -81 
* * 9243944 3659060 2310992 0 3105 1725 0 1 1
* * 192582 192582
+5 * 192582 0 192582
+4 +1 192582
+10 * 192582 192582
+1 * 192582 192582

fn=(1880)
0x408f50 109 55544 0 55544 1
+1 * 55544
+3 * 55544
+4 * 55544 0 55544
cob=(3)
cfi=(100)
cfn=(626)
calls=55544 0x10a310 -77 
* * 2666116 1055337 666532 0 4 0 0 1
* * 55544 55544
+5 * 55544 0 55544
+4 * 55544 0 55544
+4 * 55544 0 55544
+4 +1 55544 55544
+4 * 55544
+3 * 55544 0 55544
cob=(8)
cfi=(94)
cfn=(1598)
calls=55544 0x8bf10 0 
* * 6012328 1499371 929767 5 148
* * 55544 55544
+5 * 55544
+1 * 55544 55544
+1 * 55544 55544

fn=(2308)
0x40b84e 99 308 0 308 150 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 -67 
* * 14788 5853 3700 0 150 7 0 1
* * 308 308
+5 * 308 0 308
+4 * 308 0 308
+4 * 308 0 308
+4 +2 308 308
+4 * 308
+3 * 308 0 308
cfn=(2310) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, Protein*>, false> >::max_size() const
calls=308 0x40bd06 +12 
* * 17560 6777 4624 159 298 1 1 1 1
+5 * 308 308
+4 * 308
+3 * 308
+2 * 308
+7 +3 308 308 0 151 0 0 1
+4 * 308
+3 * 308
+3 * 308
+3 * 308
+4 * 308
+3 * 308 0 308
cob=(8)
cfi=(94)
cfn=(1312)
calls=308 0x8de60 0 
* * 62937 10110 9703 149 5 148 1 3 146
* * 308 308
+5 +1 308 308
+1 * 308 308

fn=(2464)
0x419180 113 447 0 447 149 0 0 1
+1 * 447
+3 * 447
+4 * 447 0 447
cob=(3)
cfi=(100)
cfn=(626)
calls=447 0x10a310 -81 
* * 21464 8495 5372 0 298 0 0 1
* * 447 447
+5 * 447 0 447
+4 +1 447
+10 * 447 447
+1 * 447 447

fn=(2566)
0x418244 79 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792 0 148
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2734)
0x417f10 109 1043 0 1043 149 0 0 1
+1 * 1043
+3 * 1043
+4 * 1043 0 1043
cob=(3)
cfi=(100)
cfn=(626)
calls=1043 0x10a310 -77 
* * 50068 19818 12520 0 149 0 0 1
* * 1043 1043
+5 * 1043 0 1043
+4 * 1043 0 1043
+4 * 1043 0 1043
+4 +1 1043 1043
+4 * 1043
+3 * 1043 0 1043
cob=(8)
cfi=(94)
cfn=(1598)
calls=1043 0x8bf10 0 
* * 117591 29657 18774 1050 235
* * 1043 1043
+5 * 1043
+1 * 1043 1043
+1 * 1043 1043

fn=(3454)
0x408596 86 1 0 1
+1 * 1
+3 * 1
+4 * 1 0 1
cob=(3)
cfi=(100)
cfn=(626)
calls=1 0x10a310 -54 
* * 52 20 16
* * 1 1
+5 * 1 0 1
+4 * 1
+1 * 1 1
+1 * 1 1

fn=(1652)
0x41dc60 119 1347 0 1347 1 0 0 1
+1 * 1347
+3 * 1347 0 1347
+1 * 1347
+4 * 1347 0 1347
cob=(3)
cfi=(100)
cfn=(626)
calls=1347 0x10a310 -87 
* * 64660 25594 16168
* * 1347 1347
+5 * 1347 0 1347
+4 * 1347 0 1347
+4 * 1347 0 1347
+4 +1 1347 1347
+4 * 1347
+3 * 1347 0 1347
cfi=(161)
cfn=(1648)
calls=1347 0x41d020 -44 
* * 76783 30982 20209 0 0 4 0 0 1
+5 * 1347 1347
+3 * 1347 1347
+4 * 1347
+3 * 1347
+5 * 1347 0 1347
cfi=(162)
cfn=(1542)
calls=1347 0x4040c7 +10 
* * 78130 30982 21556
+5 * 1347
+3 * 1347
+2 * 1347 0 1347 0 0 157 0 0 157
+3 * 1347
+1 * 1347
+4 * 1347 1347
+1 * 1347 1347
+1 * 1347 1347

fn=(2116)
0x409302 79 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149
+1 * 149 149

fn=(2310)
0x40bd06 113 308 0 308 159 0 0 1
+1 * 308
+3 * 308
+4 * 308 0 308
cob=(3)
cfi=(100)
cfn=(626)
calls=308 0x10a310 -81 
* * 14788 5853 3700 0 298 1 0 1 1
* * 308 308
+5 * 308 0 308
+4 +1 308
+10 * 308 308
+1 * 308 308

fn=(2682)
0x4185e4 99 1192 0 1192
+1 * 1192
+3 * 1192
+4 * 1192 0 1192
cob=(3)
cfi=(100)
cfn=(626)
calls=1192 0x10a310 -67 
* * 57220 22649 14308 0 149 0 0 1
* * 1192 1192
+5 * 1192 0 1192
+4 * 1192 0 1192
+4 * 1192 0 1192
+4 +2 1192 1192 0 149 0 0 1
+4 * 1192
+3 * 1192 0 1192
cfn=(2672)
calls=1192 0x4193b2 +12 
* * 67948 26225 17884 0 149 1 0 1 1
+5 * 1192 1192
+4 * 1192
+3 * 1192
+2 * 1192
+7 +3 1192 1192
+4 * 1192
+4 * 1192
+3 * 1192 0 1192
cob=(8)
cfi=(94)
cfn=(1312)
calls=1192 0x8de60 0 
* * 279323 46568 45951 1519 730 1014 1 0 1013
* * 1192 1192
+5 +1 1192 1192
+1 * 1192 1192

fn=(2688)
0x414238 119 12367 0 12367
+1 * 12367
+3 * 12367 0 12367
+1 * 12367 0 0 149 0 0 1
+4 * 12367 0 12367
cob=(3)
cfi=(100)
cfn=(626)
calls=12367 0x10a310 -87 
* * 593620 234974 148408
* * 12367 12367
+5 * 12367 0 12367
+4 * 12367 0 12367
+4 * 12367 0 12367
+4 +1 12367 12367
+4 * 12367
+3 * 12367 0 12367
cfi=(161)
cfn=(2684)
calls=12367 0x4119cf -44 
* * 704923 284442 185509 0 148 1 0 0 1
+5 * 12367 12367
+3 * 12367 12367
+4 * 12367
+3 * 12367
+5 * 12367 0 12367
cfi=(162)
cfn=(1542)
calls=12367 0x4040c7 +10 
* * 717290 284442 197876
+5 * 12367
+3 * 12367
+2 * 12367 0 12367 0 0 1562 0 0 1562
+3 * 12367
+1 * 12367
+4 * 12367 12367
+1 * 12367 12367
+1 * 12367 12367

fn=(2816)
0x417f38 109 1191 0 1191
+1 * 1191
+3 * 1191
+4 * 1191 0 1191 149
cob=(3)
cfi=(100)
cfn=(626)
calls=1191 0x10a310 -77 
* * 57172 22630 14296 0 297
* * 1191 1191
+5 * 1191 0 1191
+4 * 1191 0 1191
+4 * 1191 0 1191
+4 +1 1191 1191
+4 * 1191
+3 * 1191 0 1191
cob=(8)
cfi=(94)
cfn=(1598)
calls=1191 0x8bf10 0 
* * 136693 34543 22326 1 23
* * 1191 1191
+5 * 1191
+1 * 1191 1191
+1 * 1191 1191

fn=(2916)
0x412194 79 26 0 26 1 0 0 1
+1 * 26
+3 * 26
+4 * 26 0 26
cob=(3)
cfi=(100)
cfn=(626)
calls=26 0x10a310 -47 
* * 1252 495 316 0 1 0 0 1
* * 26 26
+5 * 26 0 26
+4 * 26
+1 * 26 26
+1 * 26 26

fn=(2998)
0x418c2c 79 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -47 
* * 1060 419 268 0 1 0 0 1
* * 22 22
+5 * 22 0 22
+4 * 22
+1 * 22 22
+1 * 22 22

fn=(3026)
0x418c40 86 22 0 22
+1 * 22
+3 * 22
+4 * 22 0 22
cob=(3)
cfi=(100)
cfn=(626)
calls=22 0x10a310 -54 
* * 1060 419 268 0 0 1 0 0 1
* * 22 22
+5 * 22 0 22
+4 * 22
+1 * 22 22
+1 * 22 22

fn=(3416)
0x407d9e 86 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -54 
* * 2164 856 544 0 1
* * 45 45
+5 * 45 0 45
+4 * 45
+1 * 45 45
+1 * 45 45

fn=(1540)
0x41dcaa 119 461 0 461 1 0 0 1
+1 * 461
+3 * 461 0 461
+1 * 461
+4 * 461 0 461
cob=(3)
cfi=(100)
cfn=(626)
calls=461 0x10a310 -87 
* * 22132 8760 5536 0 0 1 0 0 1
* * 461 461
+5 * 461 0 461
+4 * 461 0 461
+4 * 461 0 461 1 0 0 1
+4 +1 461 461
+4 * 461
+3 * 461 0 461
cfi=(161)
cfn=(1536)
calls=461 0x41d265 -44 
* * 26281 10604 6919 0 1 0 0 1
+5 * 461 461
+3 * 461 461
+4 * 461
+3 * 461
+5 * 461 0 461
cfi=(162)
cfn=(1542)
calls=461 0x4040c7 +10 
* * 26742 10604 7380
+5 * 461
+3 * 461
+2 * 461 0 461 0 0 61 0 0 59
+3 * 461
+1 * 461
+4 * 461 461
+1 * 461 461
+1 * 461 461

fn=(1712)
0x40906a 79 10476 0 10476 148 0 0 1
+1 * 10476
+3 * 10476
+4 * 10476 0 10476
cob=(3)
cfi=(100)
cfn=(626)
calls=10476 0x10a310 -47 
* * 502852 199045 125716 0 875 0 0 1
* * 10476 10476
+5 * 10476 0 10476
+4 * 10476
+1 * 10476 10476
+1 * 10476 10476

fn=(2106)
0x4092ee 79 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -47 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149
+1 * 149 149 0 148
+1 * 149 149

fn=(2364)
0x409394 86 318 0 318
+1 * 318
+3 * 318
+4 * 318 0 318
cob=(3)
cfi=(100)
cfn=(626)
calls=318 0x10a310 -54 
* * 15268 6043 3820 0 1
* * 318 318
+5 * 318 0 318
+4 * 318
+1 * 318 318
+1 * 318 318

fn=(2474)
0x418070 99 149 0 149
+1 * 149
+3 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -67 
* * 7156 2832 1792 0 148 1 0 0 1
* * 149 149
+5 * 149 0 149 149 0 0 1
+4 * 149 0 149
+4 * 149 0 149
+4 +2 149 149
+4 * 149
+3 * 149 0 149
cfn=(2464)
calls=149 0x419180 +12 
* * 8497 3279 2239 0 149 0 0 1
+5 * 149 149
+4 * 149
+3 * 149
+2 * 149
+7 +3 149 149
+4 * 149
+4 * 149
+3 * 149 0 149
cob=(8)
cfi=(94)
cfn=(1312)
calls=149 0x8de60 0 
* * 30843 4917 4768 0 0 72 0 0 72
* * 149 149
+5 +1 149 149
+1 * 149 149

fn=(2480)
0x413bc8 119 149 0 149 149 0 0 1
+1 * 149
+3 * 149 0 149
+1 * 149
+4 * 149 0 149
cob=(3)
cfi=(100)
cfn=(626)
calls=149 0x10a310 -87 
* * 7156 2832 1792
* * 149 149
+5 * 149 0 149
+4 * 149 0 149
+4 * 149 0 149
+4 +1 149 149
+4 * 149
+3 * 149 0 149
cfi=(161)
cfn=(2476)
calls=149 0x411609 -44 
* * 8497 3428 2239 0 149
+5 * 149 149
+3 * 149 149
+4 * 149
+3 * 149
+5 * 149 0 149
cfi=(162)
cfn=(1542)
calls=149 0x4040c7 +10 
* * 8646 3428 2388 0 148 1 0 0 1
+5 * 149
+3 * 149
+2 * 149 0 149
+3 * 149
+1 * 149
+4 * 149 149
+1 * 149 149
+1 * 149 149

fn=(2672)
0x4193b2 113 3576 0 3576
+1 * 3576
+3 * 3576
+4 * 3576 0 3576
cob=(3)
cfi=(100)
cfn=(626)
calls=3576 0x10a310 -81 
* * 171656 67946 42920 0 297 2 0 1 2
* * 3576 3576
+5 * 3576 0 3576 149 0 0 1
+4 +1 3576
+10 * 3576 3576
+1 * 3576 3576

fn=(2764)
0x4186bc 99 1340 0 1340
+1 * 1340
+3 * 1340 0 0 149 0 0 1
+4 * 1340 0 1340
cob=(3)
cfi=(100)
cfn=(626)
calls=1340 0x10a310 -67 
* * 64324 25461 16084 0 149 0 0 1
* * 1340 1340
+5 * 1340 0 1340
+4 * 1340 0 1340
+4 * 1340 0 1340
+4 +2 1340 1340
+4 * 1340
+3 * 1340 0 1340
cfn=(2754)
calls=1340 0x419402 +12 
* * 76384 29481 20104 0 151 1 0 0 1
+5 * 1340 1340
+4 * 1340
+3 * 1340
+2 * 1340
+7 +3 1340 1340
+4 * 1340
+4 * 1340
+3 * 1340 0 1340 149 0 0 1
cob=(8)
cfi=(94)
cfn=(1312)
calls=1340 0x8de60 0 
* * 315463 51637 51015 31 179 1165 0 0 1160
* * 1340 1340
+5 +1 1340 1340
+1 * 1340 1340

fn=(2770)
0x414430 119 35015 0 35015
+1 * 35015
+3 * 35015 0 35015
+1 * 35015
+4 * 35015 0 35015
cob=(3)
cfi=(100)
cfn=(626)
calls=35015 0x10a310 -87 
* * 1680724 665286 420184 0 0 149 0 0 1
* * 35015 35015
+5 * 35015 0 35015
+4 * 35015 0 35015
+4 * 35015 0 35015
+4 +1 35015 35015
+4 * 35015
+3 * 35015 0 35015
cfi=(161)
cfn=(2766)
calls=35015 0x411c13 -44 
* * 1995859 805346 525229 0 149 0 0 1
+5 * 35015 35015
+3 * 35015 35015
+4 * 35015
+3 * 35015
+5 * 35015 0 35015
cfi=(162)
cfn=(1542)
calls=35015 0x4040c7 +10 
* * 2030874 805346 560244
+5 * 35015
+3 * 35015
+2 * 35015 0 35015 0 0 4372 0 0 4372
+3 * 35015
+1 * 35015
+4 * 35015 35015
+1 * 35015 35015
+1 * 35015 35015

fn=(2920)
0x41888e 86 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -54 
* * 772 305 196
* * 16 16

ob=(6)
fl=(83)
fn=(324)
0x5c0 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+26 0 1 1 0 1 0 0 1
+1 0 1 1
+79 0 1 0 0 1 0 0 1
+7 0 1 1
+4 0 1
+2 0 1

ob=(5)
fl=(153)
fn=(2920)
0x41889b 86 16 0 16
+4 * 16
+1 * 16 16
+1 * 16 16

fn=(2990)
0x418be4 99 12 0 12
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -67 
* * 580 229 148
* * 12 12
+5 * 12 0 12
+4 * 12 0 12
+4 * 12 0 12
+4 +2 12 12 0 1 0 0 1
+4 * 12
+3 * 12 0 12
cfn=(2992) __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<float const, float>, false> >::max_size() const
calls=12 0x4196c4 +12 
* * 688 265 184 1 11 1 1 1 1
+5 * 12 12
+4 * 12
+3 * 12
+2 * 12
+7 +3 12 12
+4 * 12
+4 * 12
+3 * 12 0 12
cob=(8)
cfi=(94)
cfn=(1312)
calls=12 0x8de60 0 
* * 1574 336 214 0 0 1 0 0 1
* * 12 12
+5 +1 12 12
+1 * 12 12

fn=(3440)
0x408046 86 45 0 45
+1 * 45
+3 * 45
+4 * 45 0 45
cob=(3)
cfi=(100)
cfn=(626)
calls=45 0x10a310 -54 
* * 2164 856 544 0 1 1 0 0 1
* * 45 45
+5 * 45 0 45
+4 * 45
+1 * 45 45
+1 * 45 45

fn=(3326)
0x418d38 109 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -77 
* * 484 191 124 0 0 1 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10 0 10
+4 +1 10 10
+4 * 10
+3 * 10 0 10
cob=(8)
cfi=(94)
cfn=(1598)
calls=10 0x8bf10 0 
* * 1020 250 150
* * 10 10
+5 * 10
+1 * 10 10
+1 * 10 10

fn=(3336)
0x4121a8 86 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -54 
* * 484 191 124
* * 10 10
+5 * 10 0 10
+4 * 10
+1 * 10 10
+1 * 10 10

fn=(1696)
0x408dee 109 53913 0 53913
+1 * 53913
+3 * 53913
+4 * 53913 0 53913
cob=(3)
cfi=(100)
cfn=(626)
calls=53913 0x10a310 -77 
* * 2587828 1024348 646960 0 1
* * 53913 53913
+5 * 53913 0 53913
+4 * 53913 0 53913
+4 * 53913 0 53913
+4 +1 53913 53913
+4 * 53913
+3 * 53913 0 53913
cob=(8)
cfi=(94)
cfn=(1598)
calls=53913 0x8bf10 0 
* * 5853591 1461030 907423 22 85 0 11
* * 53913 53913
+5 * 53913
+1 * 53913 53913
+1 * 53913 53913

fn=(2754)
0x419402 113 4020 0 4020
+1 * 4020
+3 * 4020
+4 * 4020 0 4020
cob=(3)
cfi=(100)
cfn=(626)
calls=4020 0x10a310 -81 
* * 192968 76382 48248 0 151 1 0 0 1
* * 4020 4020
+5 * 4020 0 4020
+4 +1 4020
+10 * 4020 4020
+1 * 4020 4020

fn=(2860)
0x418828 99 16 0 16
+1 * 16
+3 * 16
+4 * 16 0 16
cob=(3)
cfi=(100)
cfn=(626)
calls=16 0x10a310 -67 
* * 772 305 196
* * 16 16
+5 * 16 0 16
+4 * 16 0 16
+4 * 16 0 16 1 0 0 1
+4 +2 16 16
+4 * 16
+3 * 16 0 16
cfn=(2862)
calls=16 0x41956c +12 
* * 916 353 244 2 1 0 2 1
+5 * 16 16
+4 * 16
+3 * 16
+2 * 16
+7 +3 16 16
+4 * 16
+3 * 16
+4 * 16
+3 * 16
+4 * 16
+3 * 16 0 16
cob=(8)
cfi=(94)
cfn=(1312)
calls=16 0x8de60 0 
* * 3312 528 512 0 0 17 0 0 16
* * 16 16
+5 +1 16 16
+1 * 16 16

fn=(2992)
0x4196c4 113 12 0 12 1 0 0 1
+1 * 12
+3 * 12
+4 * 12 0 12
cob=(3)
cfi=(100)
cfn=(626)
calls=12 0x10a310 -81 
* * 580 229 148 0 11 1 0 1 1
* * 12 12
+5 * 12 0 12
+4 +1 12
+10 * 12 12
+1 * 12 12

fn=(3286)
0x4093c8 124 10 0 10
+1 * 10
+3 * 10
+4 * 10 0 10
cob=(3)
cfi=(100)
cfn=(626)
calls=10 0x10a310 -92 
* * 484 191 124 0 0 10 0 0 1
* * 10 10
+5 * 10 0 10
+4 * 10 0 10
+4 * 10
+1 * 10 10
+1 * 10 10

ob=(7)
fl=(93)
fn=(362)
0x2ca0 0 1 0 1 1 0 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+2 0 1 0 1
+1 0 1 0 1
+1 0 1
+2 0 1
+4 0 1 1
+7 0 1 1 0 0 1
+2 0 1
+2 0 1
+2 0 1
+4 0 1
+2 0 1 1
+1 0 1 1
+1 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+2 0 1 1
+1 0 1 0 0 1 0 0 1
+5 0 1
+5 0 1
+5 0 1
+5 0 1
+2 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1 0 1
+4 0 1 0 1
cfn=(364) 0x0000000000002c60
calls=1 0x2c60 0 
* 0 20 2 5 1 0 0 1
+5 0 1
+2 0 1 1
+4 0 1 0 0 1 0 0 1
+6 0 1 1
+5 0 1 1
+5 0 1
+3 0 1
+6 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+5 0 1 0 1
cfn=(364)
calls=1 0x2c60 0 
* 0 20 2 5
+5 0 1
+2 0 1
+6 0 1 1
+4 0 1
+2 0 1
+2 0 1
+2 0 1 0 0 1 0 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+3 0 1
+6 0 1
+7 0 1
+3 0 1
+74 0 1 0 0 1 0 0 1
+3 0 1 1
+5 0 1
+6 0 1
+3 0 1
+11 0 1 0 0 1 0 0 1
+3 0 1
+3 0 1
+2 0 1
+7 0 1 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+16 0 1 1
+4 0 1 1
+4 0 1
+3 0 1
+2 0 1 0 1
cfn=(368) 0x0000000000002a70
calls=1 0x2a70 0 
* 0 127 3 2 7 0 0 7
+5 0 1 1
+7 0 1 0 1
+6 0 1
+5 0 1 0 0 1 0 0 1
+2 0 1
+2 0 1
0x2f62 0 1 1 0 1 0 0 1
+7 0 1 0 1
+7 0 1 0 1
+7 0 1

fn=(364)
0x2c60 0 2 0 0 1 0 0 1
+3 0 2 0 2
+1 0 2
+3 0 2
+7 0 2
+3 0 2
+3 0 2
+2 0 2
+3 0 2
+2 0 2
+3 0 2
+2 0 2
+2 0 2
+2 0 2 0 2
+2 0 2 0 2
+3 0 2
+5 0 2 0 2
+3 0 2 0 2
+3 0 2 2
+1 0 2 2

fn=(368)
0x2a70 0 1
+3 0 1 0 1
+1 0 1
+4 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+4 0 1
+4 0 1
+3 0 1
+3 0 1
+4 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+2 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+6 0 1
+2 0 1
+5 0 1
+2 0 1
+3 0 1
+5 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+5 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1 0 0 1 0 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+2 0 1
+4 0 1
+3 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1 0 0 1 0 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+6 0 1
+4 0 1
+3 0 1
+5 0 1
+6 0 1 0 0 1 0 0 1
+4 0 1
+3 0 1
+5 0 1
+3 0 1
+4 0 1
+5 0 1
+2 0 1
+5 0 1
+2 0 1
+5 0 1
+2 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+6 0 1
+4 0 1
+3 0 1
+3 0 1
+3 0 1
+4 0 1 1
+7 0 1 0 1
+4 0 1 1
+1 0 1 1

fn=(374)
0x30b0 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+1 0 1 0 0 1 0 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+26 0 1 1
+1 0 1 1
+79 0 1 0 0 1 0 0 1
+7 0 1 1
+4 0 1
+2 0 1

ob=(2)
fl=(16)
fn=(354)
0x52b7790 0 1 0 0 1
+4 0 1 1 0 0 1
+7 0 1
+3 0 1
+2 0 1 0 1
cfn=(358) 0x00000000052b7a60
calls=1 0x52b7a60 0 
* 0 5 3 0 1 1 0 1
+5 0 1
+4 0 1 1

fn=(606)
0x401278 0 1 0 0 1
+4 0 1
+7 0 1
+3 0 1
+2 0 1 0 1
cob=(5)
cfi=(66)
cfn=(252)
calls=1 0x4015e0 0 
* 0 4 2
+5 0 1
+4 0 1 1

fn=(1186) 0x00000000054ea8a0
0x54ea8a0 0 3 3 0 2 1 0 2
cob=(3)
cfi=(70)
cfn=(462)
calls=3 0x84130 2902 
* 0 550 85 90 20 12 3 2 2 3

fn=(84)
0x4000ab0 0 18 18
cob=(1)
cfi=(17)
cfn=(86)
calls=18 0x19f50 120 
* 0 148 58 26 1 0 0 1

fn=(386) 0x0000000004fb15f0
0x4fb15f0 0 1 1 0 1 0 0 1
cob=(5)
cfi=(66)
cfn=(252)
calls=1 0x4015e0 0 
* 0 4 2

fn=(402) 0x0000000004cb3c90
0x4cb3c90 0 1 1 0 1 0 0 1
cob=(5)
cfi=(66)
cfn=(252)
calls=1 0x4015e0 0 
* 0 4 2

fn=(1486)
0x4cb3ca0 0 2 2 0 1 1 0 1 1
cob=(8)
cfi=(94)
cfn=(1350)
calls=2 0x8df10 0 
* 0 394 66 66 0 2 2 0 2 2

fn=(382)
0x4fb1428 0 1 0 0 1
+4 0 1 1 0 0 1
+7 0 1
+3 0 1
+2 0 1 0 1
cfn=(386)
calls=1 0x4fb15f0 0 
* 0 5 3 0 1 0 0 1
+5 0 1 0 0 1 0 0 1
+4 0 1 1

fn=(398)
0x4cb0a00 0 1 0 0 1 0 0 1
+4 0 1 1 0 0 1
+7 0 1
+3 0 1
+2 0 1 0 1
cfn=(402)
calls=1 0x4cb3c90 0 
* 0 5 3 0 1 0 0 1
+5 0 1
+4 0 1 1

fn=(250) 0x0000000004a28578
0x4a28578 0 1 1
cob=(5)
cfi=(66)
cfn=(252)
calls=1 0x4015e0 0 
* 0 85050 15398 13649 125 1183 3240 125 889 3209

fn=(246)
0x4a28530 0 1 0 0 1
+4 0 1 1
+7 0 1
+3 0 1
+2 0 1 0 1 1 0 0 1
cfn=(250)
calls=1 +56 0 
* 0 85051 15399 13649 125 1183 3240 125 889 3209
+5 0 1
+4 0 1 1

fn=(358)
0x52b7a60 0 1 1 0 1 0 0 1
cob=(5)
cfi=(66)
cfn=(252)
calls=1 0x4015e0 0 
* 0 4 2 0 0 1

ob=(4)
fl=(196)
fn=(3350)
0x37420 25 1 0 0 1 0 0 1
+4 +1 1 0 1
+6 * 1 0 1
cfi=(197) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/e_expf.S
cfn=(3352) __expf_finite
calls=1 0x2f900 +24 
* * 40 11 0 4 3 0 4 3
+5 +1 1 1 0 0 1
+8 * 1
+3 * 1 1 0 1 1 0 1
+8 * 1
+3 * 1 1
+6 * 1
+3 * 1
+2 * 1 1 0 0 1
+7 * 1
+2 * 1
+2 +5 1
+4 * 1 1

fl=(59)
fn=(212)
0x12ad0 8 1 1 0 1 0 0 1
+7 * 1 1
+7 * 1
+2 * 1
+7 * 1 1

fl=(179)
fn=(2238)
0x37bf0 26 149 0 0 149 0 0 1
+4 +1 149 0 149
+6 * 149 0 149
+6 * 149 0 149 149 0 0 1
cfi=(180) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/flt-32/e_powf.c
cfn=(2240) __powf_finite
calls=149 0x32650 +34 
* * 39634 4321 0 3576 1341 0 24 9
+5 +1 149 149
+8 * 149
+3 * 149 149
+8 * 149
+3 * 149 149
+6 * 149 149
+6 * 149
+3 * 149
+2 +30 149
+4 * 149
+3 * 149
+2 * 149
+2 +15 149
+4 * 149 149

fl=(139) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/x86_64/fpu/e_logl.S
fn=(1268) __ieee754_logl
0x41440 34 502392 0 0 3 0 0 2
+2 +1 502392 502392
+4 +1 502392
+2 +1 502392
+2 +1 502392
+2 +1 502392
+3 +1 502392
+2 +1 502392 502392
+5 +1 502392
+5 +1 502392
+2 +1 502392 502392 0 0 3 0 0 2
+6 +1 502392
+2 +1 502392
+2 +1 502392 502392 0 0 4 0 0 3
+6 +1 502392
+2 +1 502392
+3 +1 502392
+21 +11 502392 0 0 2 0 0 2
+2 +1 502392
+2 +1 502392 502392

fl=(56)
fn=(206)
0x18320 25 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1
+10 +1 1
+9 +2 1 1 0 1 0 0 1

fl=(191) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/dbl-64/e_pow.c
fn=(3128) __ieee754_pow_sse2
0x11850 65 320 0 320 1 0 0 1
+1 +5 320
+5 -5 320 0 320
+1 * 320
+4 +6 320
+5 -6 320
+4 +7 320
+2 -7 320
+4 +7 320
+22 +16 320 0 0 1 0 0 1
+3 * 320
+6 * 320
+6 +3 20
+3 * 20
+4 * 20
+2 * 20
+6 -2 20
+6 * 20
fi=(192) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/i386/fpu/fenv_private.h
+6 429 20 0 20
+5 +1 20 20
+4 +3 20
+2 -3 20
+2 * 20
+3 +3 20
+2 -3 20 0 20
+4 +3 20 0 0 2 0 0 1
fe=(191)
+6 100 20 20
+8 * 20
+5 * 20 20
+8 * 20
+5 * 20
+5 * 20
+6 * 20 20 0 0 2 0 0 1
+9 * 20
+4 * 20
+4 * 20 0 0 2 0 0 1
+5 * 20
+4 * 20
+4 * 20
+4 * 20
+4 * 20 0 20
+5 261 20
+5 -1 20
+5 +6 20
+4 -16 20
+5 +11 20
+4 +3 20
+5 -3 20
+2 +3 20
+36 +8 20 0 0 1 0 0 1
+2 * 20
+5 * 20
+5 * 20
+14 +3 20
+4 * 20
+2 * 20
+2 * 20
+3 +8 20 20 0 1 10 0 1 1
+9 * 20 0 20
+5 * 20
+10 * 20 20
+6 * 20
+3 * 20 0 20
+5 * 20
+5 * 20
+5 +1 20 20
+9 +1 20
+6 +1 20 0 0 1 0 0 1
+6 -1 20
+7 +1 20
+6 +40 20 20
+6 +1 20
+7 -2 20
+5 +2 20
+2 +4 20 20
+8 -5 20 20
+8 +1 20 20 0 0 11 0 0 2
+6 +1 20
+3 +5 20 20 0 1 1 0 1 1
+9 -6 20
+5 +1 20 20
+5 +3 20
+3 +2 20
+3 * 20 0 20
+7 -7 20
+5 +3 20
+5 * 20
+4 +2 20
+5 +2 20 20
+9 -1 20
+5 -1 20 20 0 1 0 0 1
+5 +1 20
+5 +1 20
+5 * 20
+4 * 20
+5 * 20
+5 * 20
+4 * 20 20
+6 * 20
+4 * 20 20 0 0 10 0 0 1
+8 * 20
+4 * 20
+5 * 20 20 0 1 0 0 1
+8 * 20
+4 * 20 20
+8 * 20
+4 * 20 20
+8 * 20
+4 * 20
+4 * 20
+5 * 20
+4 +2 20
+5 -2 20
+4 +2 20
+4 +2 20
+5 * 20 0 0 1 0 0 1
+5 * 20
+5 +1 20
+4 -2 20 20
+8 106 20
+5 +8 20
+5 * 20 0 20
+6 * 20 0 20
+5 -8 20
+5 * 20 0 20
+6 * 20 0 20
+7 +8 20 20 0 1 0 0 1
+8 -5 20 0 20
+6 -2 20
+5 +3 20 0 20
+6 +4 20 0 20
+7 -7 20
+4 * 20
+5 +3 20
+5 -1 20
+5 +1 20 20
+6 -1 20
+5 +1 20
+5 +4 20 0 0 1 0 0 1
+5 -4 20
+5 * 20
+4 * 20
+5 +1 20
+5 * 20
+5 +3 20
+4 * 20
+5 * 20 0 20
cfi=(193) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/dbl-64/e_exp.c
cfn=(3164) __exp1
calls=20 0xcd50 249 
* * 1700 300 20 62 34 0 7 6
+5 +1 20 20
+6 * 20 20
+7 * 20
+4 * 20 20
+6 * 20 20 0 10 0 0 1
+6 * 20 20
+7 * 20 20
+6 * 20 20
+6 * 20
fi=(192)
+6 445 20
+2 * 20
fe=(191)
+6 118 20
+4 * 20 20
+8 * 20
+6 +2 20
+4 * 20
+2 * 20
+6 +3 20 20
+8 * 20
+4 * 20
+10 +91 320
+4 * 320 320
+1 * 320 320
+1 * 320 320
+1 74 320 0 0 10 0 0 1
+5 * 320
+4 * 320
+2 * 320
+6 +2 320
+6 * 320
+6 * 320
+2 +2 320 320 0 10 1 0 1
+8 * 320
+4 * 320
+2 195 320
+4 78 320
+2 +2 320 320 0 0 1 0 0 1
+8 * 320
+2 * 320
+6 +2 320 320 0 0 10 0 0 1
+8 * 320
+2 * 320
+6 +2 320
+4 * 320
+4 * 320 0 0 10 0 0 1
+6 * 320
+15 +4 300
+2 * 300
+2 +1 300
+2 * 300
+6 +38 300
+4 * 300
+3 * 300
+2 * 300
+98 +2 300 0 0 10 0 0 1
+6 +18 300
+4 -18 300
+6 +1 300
+6 +2 300 300 0 0 1 0 0 1
+8 * 300
+4 * 300 300 0 0 1 0 0 1
+8 * 300
+16 +1 300 0 0 10 0 0 1
+4 * 300
0x11dc0 280 20 0 0 10 0 0 1
+3 -1 20
+5 +1 20
+3 * 20
0x11e48 456 300 0 0 10 0 0 1
+5 -1 300
+5 +1 300
+4 * 300
+2 * 300
+6 +5 300
+6 * 300
+6 * 300
0x11ef8 138 300 0 0 10 0 0 1
+4 * 300
+28 -5 300 0 0 10 0 0 1
+4 * 300
+6 * 300

fl=(55)
fn=(204)
0x1b9e0 12 1 1 0 1 0 0 1
+7 * 1 1
+6 * 1
+3 * 1
+2 * 1
+2 * 1
+12 * 1 0 0 1 0 0 1
+7 * 1 1

fl=(61)
fn=(216)
0x36a50 25 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1
+10 +1 1
+9 +2 1 1

fl=(193)
fn=(3164)
0xcd50 249 20 0 0 10 0 0 1
+5 -1 20
+5 +1 20
+4 +1 20
+2 * 20
+5 +2 20
+6 * 20
+6 * 20
+6 +2 20 20
+8 +19 20 0 0 10 0 0 1
+7 +7 20 20
+8 -26 20 20 0 0 10 0 0 1
+8 * 20
+4 +5 20 20
+8 -5 20
+4 +26 20 20 0 0 1 0 0 1
+8 -25 20
+4 +2 20
+5 +5 20 20
+8 -7 20 0 0 10 0 0 1
+4 +13 20
+6 * 20
+3 * 20
+4 -13 20
+4 +4 20
+4 +1 20 20
+8 +5 20
+4 -5 20
+4 +2 20
+4 * 20
+4 +2 20
+5 +1 20
+4 +5 20
+2 +1 20
+5 -1 20 0 0 2 0 0 1
+3 +1 20
+2 -1 20
+3 +3 20
+3 +1 20
+3 -9 20
+4 +5 20
+6 +4 20
+6 * 20
+2 * 20
+3 -1 20
+3 +1 20 20 0 0 11 0 0 2
+5 -1 20 20
+5 * 20
+7 -8 20
+4 +1 20 20 0 10 0 0 1
+8 +7 20 20 0 0 12 0 0 2
+6 * 20
+4 -7 20
+4 * 20
+4 +7 20
+4 -7 20
+4 +8 20
+4 -8 20 20
+8 * 20
+4 +8 20 20
+5 * 20
+4 * 20
+4 -8 20
+4 +8 20 0 0 10 0 0 1
+4 +3 20
+4 * 20
+4 -3 20
+4 +3 20
+4 -3 20
+4 +3 20
+4 * 20
+4 * 20
+4 +1 20
+4 * 20
+4 +2 20
+4 * 20
+4 * 20
+4 * 20
+4 * 20
+4 * 20 0 0 10 0 0 1
+6 * 20
+6 +1 20 0 20
+5 * 20 20
+6 * 20
+4 * 20 20

fl=(58)
fn=(2392)
0x16b60 36 463 0 0 148
+6 +1 463 463

fn=(210)
0x16b30 25 2 2 0 2 0 0 2
+7 +1 2
+7 +1 2 2 0 2 0 0 2
+10 +1 2
+9 +2 2 2

fl=(64)
fn=(2380)
0x17ba0 36 463 0 0 158
+6 +1 463 463

fn=(222)
0x17b70 25 2 2 0 2 1 0 2 1
+7 +1 2
+7 +1 2 2 0 2 1 0 2
+10 +1 2
+9 +2 2 2

fl=(177)
fn=(2228)
0x375a0 26 298 0 0 149 0 0 1
+4 * 298
+5 * 298
+3 * 298 298 0 0 149 0 0 1
+8 * 298
+3 * 298
+3 * 298
+3 * 298 298 0 149 149 0 1 1
+7 * 298
+3 * 298
+2 * 298
+2 +5 298
cfi=(178) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/flt-32/e_fmodf.c
cfn=(2230) __fmodf_finite
calls=298 0x2fac0 +1 
* * 13410 298 0 1043 0 0 7

fl=(180)
fn=(2240)
0x32650 61 149 0 0 149 0 0 1
+4 +7 149
+2 * 149 149 0 0 149 0 0 1
+8 -8 149
+4 +8 149
+6 * 149
+6 * 149 149
+8 * 149
+3 * 149
+3 * 149
+3 * 149 0 0 149 0 0 1
+3 * 149
+2 * 149
+6 +1 149 149 0 0 149 0 0 1
+8 * 149
+3 * 149
+2 * 149
+2 -7 149
+2 * 149
+6 +10 149
+6 * 149
+6 * 149
+6 * 149
+6 +9 149
+3 +1 149
+2 * 149
+2 +10 149 0 0 149 0 0 1
+6 * 149
+6 +8 149
+6 * 149
+6 +3 149
+5 * 149
+6 +2 149
+5 * 149
0x3277a +6 149 0 0 149 0 0 1
+2 -2 149 149 0 149 0 0 1
+8 +2 149
+6 * 149
+6 -2 149
+3 +2 149
+6 * 149
+2 * 149
+6 +13 149
+3 * 149
+3 * 149
+3 * 149
+2 * 149
+6 +4 149
+6 * 149
+6 +18 149 0 0 149 0 0 1
+6 * 149
+16 +2 149
+2 +2 149
+6 * 149
+19 +2 149
+2 +1 149
+6 -1 149
+3 * 149
+4 +3 149
+2 * 149 0 0 149 0 0 1
+5 +1 149
+6 * 149
+20 +3 149
+5 +4 149
+4 +6 149
+2 -6 149
+4 +6 149
+5 -6 149
+4 -1 149
+4 +7 149 0 0 149 0 0 1
+7 -7 149
+5 +7 149
+5 -6 149
+5 +6 149
+4 -5 149
+4 * 149
+5 +2 149
+4 +1 149
+6 * 149
+4 +6 149
+4 * 149
+5 * 149
+4 +2 149
+3 * 149
+4 -2 149 0 0 149 0 0 1
+5 +3 149 149
+8 -3 149
+5 +7 149 149 0 0 149 0 0 1
+9 -4 149
+4 -3 149
+5 +3 149 149
+8 -3 149
+5 * 149
+5 +5 149
+4 -2 149
+4 +2 149 0 0 149 0 0 1
+5 -2 149 149
+8 +4 149
+4 * 149
+5 -4 149
+4 * 149 149 0 0 149 0 0 1
+8 * 149
+4 * 149 149
+8 * 149
+4 * 149
+4 * 149 149 0 0 149 0 0 1
+8 * 149
+4 +1 149 0 0 149 0 0 1
+3 * 149
+4 * 149
+5 * 149
+4 +3 149
+5 * 149
+5 +1 149
+5 * 149
+4 +4 149
+4 -1 149
+4 +1 149
+5 +6 149 149
+9 -6 149
+5 * 149 0 0 149 0 0 1
+5 * 149
+5 +3 149
+4 -3 149
+4 * 149
+4 +3 149
+5 * 149
+5 +1 149
+5 * 149
+4 +3 149
+3 -1 149
+5 +1 149 149
+8 * 149
+4 * 149
+4 +4 149 0 0 149 0 0 1
+4 -4 149 149
+8 * 149
+4 +2 149
+4 * 149
+4 -2 149
+4 +4 149
+4 * 149
+5 * 149
+4 * 149
+4 +1 149
+5 * 149
+4 * 149
+3 +1 149
+4 * 149 0 0 149 0 0 1
+5 * 149
+5 * 149
+4 +4 149
+4 * 149
+3 * 149
+6 -1 149
+3 +1 149 149
+9 * 149 149 0 0 149 0 0 1
+8 +6 149
+3 -2 149
+4 +1 149
+5 +1 149
+4 -1 149
+4 +1 149 0 0 149 0 0 1
+4 * 149
+4 +1 149
+4 -1 149
+4 +2 149
+3 * 149
+4 +1 149
+4 +1 149
+6 * 149
+6 +2 149
+6 +3 149
+2 * 149
+6 * 149
+6 * 149
+6 +2 149 0 0 149 0 0 1
+6 * 149
+6 +9 149
+6 * 149
+10 +9 149
+4 +1 149
+5 +1 149 149
+8 -1 149
+4 +2 149
+3 -1 149
+4 +1 149 149
+8 * 149 0 0 149 0 0 1
+4 +1 149
+3 -1 149
+4 * 149 149
+8 * 149
+4 +1 149
+4 +1 149
+3 * 149
+4 +2 149 149
+8 -2 149
+4 +1 149
+3 * 149
+4 +1 149
+4 * 149 149 0 149 0 0 1
+8 * 149
+4 * 149 149
+8 * 149
+4 * 149 149 0 0 149 0 0 1
+8 * 149
+4 * 149 149 0 0 149 0 0 1
+8 * 149
+4 * 149
+3 * 149
+4 +2 149
+3 * 149
+4 * 149 149
+8 * 149 0 0 149 0 0 1
+4 * 149
+3 * 149
+4 * 149
+4 * 149
+4 * 149
+3 * 149
+4 * 149
+4 +1 149
+4 +1 149
+2 +1 149
+5 -3 149
+3 +3 149
+6 +6 149
+4 +1 149
+4 +1 149 149
+23 157 149 0 0 149 0 0 1
+6 * 149
0x32c08 +69 149 0 0 149 0 0 1
+3 +3 149
+5 +2 149
+5 -2 149
+3 * 149
+3 * 149
+2 * 149
+2 +1 149
+2 * 149
+6 * 149
+3 * 149
+3 +1 149
+2 * 149
+2 * 149
+2 +1 149
+6 -1 149
+4 +1 149 0 0 149 0 0 1
+5 * 149
+6 +2 149
+4 -2 149
+2 * 149
+2 * 149
+2 +1 149
+2 * 149
+4 * 149
+2 * 149
+2 * 149
+3 * 149
+2 * 149
+3 * 149
+68 118 149 149 0 149 0 0 1
+9 * 149
+5 * 149 149
+8 * 149 149 0 149 149 0 1 1
+8 * 149

fl=(197)
fn=(3352)
0x2f900 50 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1 1 0 0 1 0 0 1
+8 +1 1 1
+8 +1 1
+2 +1 1
+4 +1 1
+6 +1 1
+7 +1 1
+6 +1 1 1
+8 +1 1 1 0 1 0 0 1
+8 +1 1
+6 +3 1
+6 +1 1
+6 +3 1
+4 +1 1
+4 +1 1 1 0 0 1 0 0 1
+8 +1 1
+2 +1 1
+4 +1 1
+3 +1 1 1
+8 +1 1
+3 +5 1
+4 +1 1
+3 +1 1 0 0 1 0 0 1
+4 +2 1
+4 +1 1
+6 +1 1
+4 +1 1
+3 +1 1 1
+8 +1 1 1
+8 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1 1 0 0 1 0 0 1
+5 +1 1 1
+5 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1 1

fl=(178)
fn=(2230)
0x2fac0 32 298 0 0 149 0 0 1
+4 +1 298
+5 +1 298
+3 +2 298
+3 -2 298
+7 +2 298
+6 -1 298
+3 +4 298
+6 * 298
+3 * 298
+2 * 298
+3 * 298
+2 * 298
+6 * 298
+5 * 298
+6 +3 298 0 0 149 0 0 1
+2 * 298
+6 +1 149
+6 +4 149
+5 * 149
+38 +5 149
+6 * 149 0 0 149 0 0 1
+6 +2 149
+3 * 149
+4 * 149
+4 +3 149
+3 * 149
+6 +1 149
+5 * 149
+5 +5 149
+4 * 149
+6 +1 149
+3 * 149
+6 * 149
+6 * 149
+3 * 149 0 0 149 0 0 1
+2 +8 149
+12 +6 149
+3 -6 149
+2 +2 149
+2 -2 149
-4 * 149
+2 +2 149
+2 -2 149
+2 +2 149
+2 * 149
+2 * 149
+2 * 149
+4 +27 149 149
+48 -15 149 0 0 149 0 0 1
+2 * 149
+3 -1 149
+2 * 149
+9 +3 149
+2 +1 149
+4 -2 149
+6 * 149
-6 * 149
+6 * 149
+2 +4 149
+4 * 149
+30 -42 149 0 0 149 0 0 1
+2 * 149
+3 * 149
+3 * 149
+72 +44 149 0 0 149 0 0 1
+6 * 149
+4 * 149
+4 * 149
+3 * 149
+2 * 149
+3 * 149
+4 * 149 149

fl=(138)
fn=(1266)
0x44d80 27 502392 0 0 12 0 0 2
+4 * 502392 502392
+4 +1 502392
+2 * 502392
+2 * 502392
+2 * 502392
+2 * 502392
+10 +14 502392 0 502392
+4 +1 502392
+4 -1 502392
cfi=(139)
cfn=(1268)
calls=502392 0x41440 -8 
* * 10047840 2511960 0 5 7 0 4 5

fl=(54)
fn=(202)
0xcd10 9 1 1 0 1 0 0 1
+7 * 1 1
+6 * 1
+3 * 1
+2 * 1
+2 * 1
+12 * 1
+7 * 1 1

fl=(199) /build/glibc-bfm8X4/glibc-2.23/math/../sysdeps/ieee754/dbl-64/e_log.c
fn=(3370) __ieee754_log_avx
0x655f0 78 2 0 0 1 0 0 1
+5 -20 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+2 +19 2 0 0 1 0 0 1
+5 -19 2 0 2
+1 * 2 0 2
+1 +20 2
+4 -20 2
+7 +23 2
+6 -23 2 0 2 0 0 2 0 0 1
+6 +23 2
+6 -1 2
+2 +11 2
+6 * 2
+6 +5 2 2 0 0 1
+8 * 2
+4 +1 2 2 0 1 1 0 1
+8 -1 2
+4 +1 2
+4 * 2
+4 * 2 2 0 0 1 0 0 1
+8 * 2
+6 +71 1
+3 +1 1
+2 -1 1
+4 * 1
+2 +1 1
+6 * 1
+7 -1 1
+3 +1 1
+4 -1 1 0 0 1 0 0 1
+7 +1 1
+3 +1 1 0 1 0 0 1 0 0 1
+4 * 1 1
+5 * 1 1 0 0 1 0 0 1
+8 * 1
+2 +2 1 1 0 0 1
+8 +1 1
+3 +6 1 1
+8 -3 1
+5 +3 1
+4 +8 1
+4 * 1
+4 -11 1 0 0 1 0 0 1
+4 +20 1 1
+8 -17 1
+5 +1 1
+4 * 1
+3 +3 1
+7 * 1
+3 +4 1
+3 -4 1 1 0 0 1 0 0 1
+5 +14 1
+4 -10 1
+4 -4 1
+4 * 1
+4 +13 1
+5 -13 1 1 0 1 0 0 1
+8 +4 1 1
+8 -4 1
+5 +1 1
+4 * 1
+4 +3 1
+6 * 1
+4 +2 1
+2 -2 1
+4 +2 1
+7 * 1 1 0 0 1 0 0 1
+5 +8 1
+7 +2 1
+4 -2 1 0 0 1 0 0 1
+3 * 1 1 0 0 1 0 0 1
+4 +4 1
+5 -12 1
+4 +12 1
+5 * 1
+4 -14 1 1
+8 * 1
+4 * 1
+4 +1 1
+4 +2 1
+4 * 1
+4 +3 1 1
+8 * 1 0 0 1 0 0 1
+4 * 1 1
+8 * 1
+4 * 1
+4 * 1
+4 +5 1 1
+5 +1 1
+7 * 1
+3 * 1 1 0 0 1 0 0 1
+4 +1 1 1
+5 +1 1
+5 * 1
+5 * 1
+4 * 1
+5 * 1 0 0 1 0 0 1
+16 +1 1
+5 * 1
+5 * 1
+5 * 1
+4 * 1
+4 * 1
+5 * 1
+5 * 1
+6 * 1
+5 * 1 0 0 1 0 0 1
+5 +1 1
+4 * 1 1
+8 * 1
+5 +4 1 1
+8 -4 1
+5 * 1
+5 * 1
+4 +1 1
+5 +3 1
+4 * 1
+5 * 1
+5 * 1
+5 * 1 0 0 1 0 0 1
+5 * 1
+4 * 1
+2 * 1
0x65d10 -6 1
+5 * 1
+5 * 1
+14 +57 2 0 0 1 0 0 1
+7 * 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
0x65e10 101 1 0 0 1 0 0 1
+5 * 1
+5 * 1
+2 +1 1
+4 -1 1
+6 +5 1 1
+8 +1 1
+4 * 1 1 0 0 1
+8 -1 1
+4 +1 1 0 0 1 0 0 1
+4 * 1
+4 * 1
+4 * 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 * 1
+4 +1 1
+4 * 1
+4 -1 1 0 0 1 0 0 1
+4 * 1
+4 +1 1
+4 -1 1
+5 * 1
+5 * 1
+4 * 1
+4 * 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1
+5 +1 1
+4 * 1
+5 * 1 0 0 1 0 0 1
+15 +3 1 1
+8 +8 1
+5 -8 1
+4 * 1 1
+8 * 1
+4 +1 1 1
+8 * 1
+4 +1 1 1
+8 * 1
+4 +1 1 1 0 1 0 0 1
+8 * 1
+4 +1 1 1
+8 * 1
+4 +1 1 1
+8 * 1
+4 +1 1 1 0 0 1 0 0 1
+8 * 1
+4 * 1 1 0 0 1 0 0 1
+8 * 1
+4 +2 1
+4 * 1 0 0 1 0 0 1
+4 * 1
+4 * 1
+4 * 1
+4 +3 1 1
+8 * 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1
+5 * 1
+5 * 1
+4 * 1
+2 * 1
0x66880 -14 1 0 0 1 0 0 1
+4 * 1
+5 * 1
+4 * 1

fl=(57)
fn=(208)
0x35300 25 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1
+10 +1 1
+9 +2 1 1

fl=(63)
fn=(220)
0x36470 25 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1 0 1 0 0 1
+10 +1 1
+9 +2 1 1

fl=(190)
fn=(3124)
0x21e40 26 320 0 0 10 0 0 1
+4 +1 320 0 320
+6 * 320 0 320
+5 * 320 0 320
cfi=(191)
cfn=(3128)
calls=320 0x11850 +38 
* * 26340 3460 940 177 82 0 30 16
* * 320 320 0 1 1 0 1 1
+5 +1 320 320
+8 * 320
+4 * 320 320 0 0 1 0 0 1
+8 * 320 320
+5 * 320
+4 * 320 320
+6 * 320
+4 * 320
+2 +30 320 0 0 10 0 0 1
+4 * 320
+4 * 320
+2 * 320
+2 +15 320
+4 * 320 320
0x21ef8 -15 300 0 0 10 0 0 1
+4 * 300
+4 * 300 0 0 10 0 0 1
+4 * 300
+2 * 300
+4 * 300
+4 * 300
+6 +1 300 300 0 0 1
+7 * 300 300 0 0 10 0 0 1
+3 * 300
+6 +2 300
+4 * 300
+2 * 300
+2 +2 300
+4 * 300
+6 * 300

fl=(62)
fn=(224)
0x84e0 16 1 1
+7 * 1 1
+7 * 1
+2 * 1
+7 * 1 1

fn=(218)
0x84b0 10 1 1 0 1 0 0 1
+7 * 1 1
+7 * 1
+2 * 1 0 0 1 0 0 1
+7 * 1 1

fl=(198)
fn=(3366)
0x21d80 28 2 0 0 1 0 0 1
+4 * 2
+4 * 2
+2 +14 2
cfi=(199)
cfn=(3370)
calls=2 0x655f0 +36 
* * 249 50 15 19 12 3 19 8 2
* * 2 2 0 1 1

fl=(60)
fn=(226)
0xc460 0 1 1 0 1 0 0 1
+7 0 1 1
+6 0 1
+3 0 1
+2 0 1
+2 0 1
+12 0 1 0 0 1 0 0 1
+7 0 1 1

fn=(214)
0x116f0 0 1 1 0 1 0 0 1
+7 0 1 1
+6 0 1
+3 0 1 0 0 1 0 0 1
+2 0 1
+2 0 1
+12 0 1
+7 0 1 1

fn=(228)
0x1ba20 0 1 1
+7 0 1 1
+6 0 1
+3 0 1
+2 0 1
+2 0 1
+12 0 1 0 0 1 0 0 1
+7 0 1 1

fn=(390)
0x5640 0 1 0 0 1 0 0 1
+7 0 1
+7 0 1 0 1
+1 0 1
+3 0 1
+3 0 1
+4 0 1
+3 0 1
+4 0 1
+3 0 1
+3 0 1
+26 0 1 1 0 1 0 0 1
+1 0 1 1
+79 0 1 0 0 1 0 0 1
+7 0 1 1 0 0 1
+4 0 1
+2 0 1

ob=(3)
fl=(52)
fn=(194)
0xbc460 37 1 0 0 1 0 0 1
+7 -1 1
+4 +1 1
+7 * 1 0 1
+8 * 1 0 1 1 0 0 1
+8 * 1
+5 * 1 0 1
+4 * 1
fi=(48) /build/glibc-bfm8X4/glibc-2.23/time/../sysdeps/generic/dl-hash.h
+5 +11 1
+4 * 1
+4 * 1
+3 +14 1
+3 * 1
+6 * 1
+4 * 1
+3 -17 1 1
+3 * 1
+2 * 1
-32 +3 3
+4 * 3
+4 * 3
+3 +14 3
+3 * 3
+6 * 3
+4 * 3
+3 -17 3 3
+3 * 3
+2 * 3
fe=(52)
+2 -8 1
+5 * 1
+6 * 1
+2 +3 1 0 0 1 0 0 1
+7 * 1
+3 -3 1 0 1
+9 +3 1 0 1
cfi=(49) /build/glibc-bfm8X4/glibc-2.23/elf/../sysdeps/unix/sysv/linux/dl-vdso.c
cfn=(184) _dl_vdso_vsym
calls=1 0x143d40 -13 
* * 6 3
+5 +1 1
+7 * 1
+3 * 1
+4 +1 1
+4 * 1 1

fl=(90)
fn=(346) handle_intel
0xaaa60 262 2 0 0 1 0 0 1
+3 * 2
+6 -1 2 0 2
+2 * 2 0 2
+2 +17 2
+6 -17 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+1 * 2 0 2
+1 * 2
+2 * 2
+4 +14 2 0 2 1 0 0 1
+5 +1 2 0 2
+5 * 2
+5 -3 2 0 2
+8 * 2
+5 * 2
+5 +23 2
+3 * 2
+3 * 2
+2 * 2 0 2
cfn=(348) intel_check_word
calls=2 0xaa790 133 
* * 664 70 8 5 7 0 5 6
+5 +1 2
+3 * 2
+6 +3 2
+3 * 2
+3 * 2
+2 * 2
+2 * 2 0 2 1 0 0 1
cfn=(348)
calls=2 0xaa790 133 
* * 238 16 8 5 0 0 5
+5 +1 2
+3 * 2
+59 -17 2 0 0 1 0 0 1
+5 * 2
+2 +5 2
+4 -5 2 0 2
+4 * 2
+3 * 2
+2 +5 2
+2 +2 2
+3 +1 2
+4 -1 2 0 2
+4 * 2
+37 +27 2 0 0 1 0 0 1
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2

fn=(348)
0xaa790 133 4 0 0 1 0 0 1
+2 * 4
+6 +6 4
+7 -7 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+1 * 4 0 4
+1 * 4
+3 +7 4
+3 * 4
+5 * 4
+4 * 4
+2 -7 4
+4 +7 4
+3 +2 4
+2 -2 4 0 0 1 0 0 1
+3 +2 4
+6 +68 4 4
+7 * 4
+7 +3 4 4 0 0 1
+7 * 4
+4 * 4 4
+7 * 4
+3 * 4
+3 * 4
+2 -69 4
+4 +2 4
+3 * 4
-7 -2 6
+4 +2 6
+3 * 6
+6 +8 10 0 0 1 0 0 1
+5 * 10
+6 +51 8
+3 * 8
+20 +22 8
fi=(91) /build/glibc-bfm8X4/glibc-2.23/string/../bits/stdlib-bsearch.h
+3 27 8
+2 +1 8
+6 * 8
+6 +3 8
+4 * 8
+3 +1 8
fe=(90)
+4 +89 8 8 0 0 1 0 0 1
+3 * 8
fi=(91)
-14 -90 6
+4 * 6
+3 +1 6
fe=(90)
+4 +89 6 6 0 0 1 0 0 1
+3 * 6
+2 +3 54 0 0 1 0 0 1
fi=(91)
+2 -95 46
+3 +2 46
+3 -2 46
+2 +2 40
+3 * 40
+3 +1 40
fe=(90)
+4 +89 40 40 0 0 4 0 0 4
+3 * 40
+21 251 8
+3 141 8
+2 * 8
+6 -6 2
+2 256 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
-10 * 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
fi=(91)
+5 37 8 0 0 1 0 0 1
+4 -8 8
+3 * 8
+2 * 2
fe=(90)
+28 165 2
+2 * 2
+5 * 2
+2 +3 2
+2 * 2
+3 * 2
+2 +4 2
+3 * 2 0 0 1 0 0 1
+3 +2 2
+3 * 2
+3 +1 2
+3 * 2
+4 * 2
+3 * 2
+4 * 2
+3 * 2
+2 * 1
+2 * 1
+6 +2 1
+2 * 1
+4 * 1
+3 * 1
+4 * 1
+3 * 1
+6 * 1
+3 -12 1 0 0 1 0 0 1
+6 * 1
+4 +12 1
+2 * 1
+7 +1 1
+3 * 1
-3 * 3
+3 * 3
+2 * 1
+3 * 1
+2 +1 4
+3 * 4
+2 * 1
+3 * 1
+2 +1 3
+3 * 3
+7 +17 3
+3 -32 3
+3 * 3
+2 * 3
+2 +3 3
+2 * 3
+3 * 3
+6 +4 3
+3 * 3
+3 +2 3
+3 * 3
+4 +1 3
+3 * 3
+4 * 3
+3 * 3
+7 +2 3
+3 * 3
+3 * 3
+3 * 3
+7 +5 2 0 0 1 0 0 1
+6 +2 2
+2 * 2
+90 +2 2 0 0 1 0 0 1
+2 * 2
+3 * 2
+3 * 2
+3 * 2
+2 * 2
+5 * 2
+3 * 2
+3 * 2
+3 * 2
+2 * 2
+2 * 2
+3 * 2
+5 * 2
+3 * 2
+3 * 2 0 0 1 0 0 1

fn=(344)
0x202c0 482 1 0 1 1 0 0 1
+2 * 1 0 1
+2 +12 1 1
+7 -12 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 +12 1 1 0 0 1
+4 * 1
+3 * 1
+20 +2 1 1
+4 * 1
+5 * 1
+3 * 1 0 1
cfn=(346)
calls=1 0xaaa60 262 
* * 454 50 21 14 7 0 14 6
+5 +4 1
+5 * 1 0 0 1 0 0 1
+3 -4 1
+3 +4 1 0 1
cfn=(346)
calls=1 0xaaa60 262 
* * 546 50 21 1 0 0 1
+5 +2 1
+3 -2 1
+3 -1 1
+5 +3 1
+6 +9 1
+4 * 1
+2 +2 1 1
+7 +1 1 1
+7 +2 1
+2 +5 1
+6 * 1
+8 +9 4
+2 -9 4
+2 +9 4
+3 * 4
+3 * 4
+2 * 4
+6 -9 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+2 +6 4
+2 * 4
+7 +69 1
+3 * 1
+2 * 1
+2 * 1
+2 +1 1
+3 * 1
+2 * 1
+2 * 1
+3 * 1
+3 +55 1
+3 * 1
+2 +2 1 0 0 1 0 0 1
+3 +1 1 0 1 0 0 1 0 0 1
+7 +2 1
+4 -3 1
+3 +5 1 0 1
+7 -5 1 0 1
+7 +4 1
+3 * 1
+3 * 1 0 1
+7 +4 1
+3 * 1
+6 +2 1
+3 +1 1 0 1
+7 +2 1 0 0 1 0 0 1
+4 -3 1
+3 +5 1 0 1
+7 -5 1 0 1
+7 +4 1
+3 * 1
+3 +3 1 1
+1 -3 1 0 1
+7 +3 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
0x20498 532 1 0 0 1 0 0 1
+3 +32 1
+5 -26 1
+5 * 1
+2 * 1
+6 * 1
+4 * 1
+2 * 1
+2 +7 1
+6 * 1
+4 * 1 0 0 1 0 0 1
+3 * 1
+2 * 1
+2 +2 1
+3 +1 1
+6 +1 1
+2 * 1
-22 -4 1
+4 * 1
+3 * 1
+2 * 1
+2 +2 1
+3 +1 1
+6 +1 1
+2 * 1
+2 * 2
+2 * 2
+2 +2 2
+6 -6 2
+3 +6 2
+2 +5 1
+3 +2 1
+3 * 1
+3 +1 1
+3 -1 1
+2 +1 1
+2 * 1
+2 * 1
+2 +6 1
+4 -1 1
+3 +1 1
+3 * 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+2 * 1

fl=(53)
fn=(198)
0x8f14b 0 2 2 0 2 0 0 2
+7 0 2
+7 0 2 2 0 0 1 0 0 1
+6 0 2
+2 0 2
+6 0 2
+6 0 2
+2 0 2
+3 0 2
+7 0 2
+2 0 2 2 0 2 1 0 2 1
+7 0 2
+7 0 2
+2 0 2
+3 0 2
+7 0 2
+7 0 2
+4 0 2 2

fl=(51)
fn=(192)
0x8da80 30 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1
+10 +1 1
+2 +1 1
+7 +1 1 1

fl=(122)
fn=(1164)
0x115810 93 7 0 7 1 0 0 1
+1 * 7 0 7
+1 * 7
+3 * 7
+2 * 7
+4 +22 7 7 0 0 4 0 0 2
+7 * 7
+4 * 7 7
+9 * 7
+3 * 7
+2 * 7 0 7
cfi=(123) /build/glibc-bfm8X4/glibc-2.23/misc/../sysdeps/unix/syscall-template.S
cfn=(1166) __syscall_clock_gettime
calls=7 0x1077b0 -50 
* * 21 7 0 1 0 0 1
+2 * 7
+6 * 7
+25 +19 7 0 0 1 0 0 1
+4 * 7 7
+1 * 7 7
+1 * 7 7

fl=(124)
fn=(1172)
0x6f690 33 5 0 5 2 0 0 2
+2 * 5 0 5
+1 * 5
+3 * 5 0 5
+1 +2 5 0 5
cfi=(111) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/strlen.S
cfn=(794) strlen
calls=5 0x8b720 +31 
* * 152 22 0 4 5 0 4 3
+5 +1 5 5 0 0 1
+7 -1 5
+3 +1 5 5 0 0 2
+3 * 5
+3 * 5
+5 * 5
+2 * 5 5 0 0 2
+7 * 5 5 0 2 0 0 2
+9 * 5 5 0 0 1
+4 * 5
+6 * 5
+5 * 5 5
+7 * 5
+10 * 5 0 5
+3 * 5
+24 * 5 5 0 2 0 0 2
+7 * 5 5
+7 * 5 0 5
+4 * 5 0 5
+4 +3 5 5 0 0 2
+6 * 5
+2 * 5
+2 * 1 0 1
+10 +1 1 1
+7 * 1
+3 * 1
+3 * 1 1 1 0 1
cfi=(125) /build/glibc-bfm8X4/glibc-2.23/libio/fileops.c
cfn=(1174) _IO_file_xsputn@@GLIBC_2.2.5
calls=1 0x791e0 1287 
* * 1352 353 186 49 13 1 31 1 1
-13 * 4 4
+7 * 4
+3 * 4
+3 * 4 4 4 0 1
cfi=(125)
cfn=(1174)
calls=4 0x791e0 1287 
* * 1651 401 166 27 3 2 21
+3 * 5
+3 * 5
+2 +1 5 5 0 2 0 0 2
+7 * 5 5
+4 * 5 5
+4 * 5
+17 +1 5
+4 * 5
+5 * 5
+7 * 5
fi=(131) /build/glibc-bfm8X4/glibc-2.23/libio/libioP.h
+4 866 5 5
+7 * 5
fe=(124)
+16 38 4 0 0 1 0 0 1
+3 * 4
fi=(131)
+16 867 5 5 0 1 0 0 1
+7 * 5 0 5
+4 * 5
+2 * 5 0 5
+8 * 5 5
+7 * 5
+9 * 5 0 5
+2 * 5
fe=(124)
+24 46 5
+2 * 5 5
+1 * 5 5
+1 * 5 5
+2 * 5 5
+16 -5 5 0 0 2 0 0 2
+5 * 5 0 5
cfi=(126) /build/glibc-bfm8X4/glibc-2.23/libio/genops.c
cfn=(1194) __overflow
calls=5 0x7b220 230 
* * 702 195 115 11 0 0 11
+5 * 5
+3 * 5 0 0 2 0 0 2

fl=(49)
fn=(184)
0x143d40 27 4 4 0 1 0 0 1
+7 * 4 4 0 0 2
+7 +4 4
+3 * 4
0x143dd8 -3 4 0 0 1 0 0 1
+2 * 4 4

fl=(112) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/multiarch/../memcmp.S
fn=(796) __GI_memcmp
0x8ebf0 24 49 0 0 1 0 0 1
+3 +1 49
+6 +1 49
+4 +1 49 0 0 1 0 0 1
+6 +1 49
+3 +1 49
+3 +1 49
+4 +1 49
+6 +3 49
+7 +1 49
+2 +1 48 48
+3 +1 48 48
+4 +1 48
+4 +1 48
+6 +1 48
+4 +1 48
+2 +1 48
+6 +2 11
+7 +1 11 0 0 1 0 0 1
+2 +1 1 1
+3 +1 1 1
+4 +1 1
+4 +1 1
+2 +1 1
+4 +1 1
+2 +1 1
+2 +2 11
+7 +1 11
+2 +1 11 11
+2 +1 11 11
+3 +1 11
+4 +1 11
+95 +35 38 38
+1 +4 11 0 0 1 0 0 1
+3 +1 11
+2 +1 1
+3 +1 1
+3 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+3 +1 1
+3 +1 1
+2 +1 1 1
+2 +4 10
+2 +1 10 10

fl=(167)
fn=(1588)
0x15e420 55 174850 0 0 302 0 0 1
+3 +6 174850
+3 +1 174850
+2 +1 144604
+6 +1 144604
+7 +1 144604
+6 +1 128015 0 0 2 0 0 1
+7 * 128015 128015 0 0 3754 0 0 5
+4 * 128015
+4 * 128015
+4 +3 30246
+7 +1 30246
+2 +7 30233
+3 +1 30233
+3 +1 30233
+7 * 30233 30233 0 0 1678 0 0 5
+4 * 30233
+4 * 30233
+4 +14 13 13 0 0 1
+4 +1 13
+3 +1 13
+4 +1 13
+4 +1 13 0 0 1 0 0 1
+3 +1 13
+3 +1 13
+3 +1 13
+3 +1 13
+3 +1 13
+4 +1 13
+62 +20 16589 16589 0 300 188 0 1 1
+7 +2 16589
+3 +1 16589
+3 +1 16589
+6 +2 16589
+3 +1 16589
+3 +1 16589 16589 0 0 1
+5 +1 16589
+4 +1 16589
+3 +1 16589
+4 +1 16589
+3 +1 16589
+3 +1 16589 0 0 3148 0 0 1
+3 +1 16589
+3 +1 16589
+4 +1 16589
+39 +11 13 0 0 2
+3 +1 13
+4 +1 13
+3 +4 13 13 0 4 2 0 1
+7 +2 13
+6 +1 13
+7 * 13
+2 +3 13 13
+4 +1 13 0 13 0 0 2
+4 +1 13 13
+4 +1 13 0 13 0 0 4
+4 +1 13 13
+4 +1 13 0 13 0 0 1
+4 +1 13 13 0 0 1
+4 +1 13 0 13 0 0 4
+4 +1 13 13
+4 +1 13 0 13 0 0 4
+4 +1 13 13
+4 +1 13 0 13 0 0 4
+4 +1 13 13 0 1 0 0 1
+4 +1 13 0 13 0 0 1
+4 +1 13 13 0 0 1
+4 +1 13 0 13 0 0 4
+4 +1 13
+7 +1 13
+7 +1 13
+7 +1 13
-85 -19 6 6
+4 +1 6 0 6 0 0 6
+4 +1 6 6
+4 +1 6 0 6
+4 +1 6 6
+4 +1 6 0 6
+4 +1 6 6 0 0 6
+4 +1 6 0 6
+4 +1 6 6
+4 +1 6 0 6 0 0 6
+4 +1 6 6
+4 +1 6 0 6
+4 +1 6 6
+4 +1 6 0 6
+4 +1 6 6 0 0 5
+4 +1 6 0 6
+4 +1 6
+7 +1 6
+7 +1 6
+7 +1 6
+2 +1 13 0 13
+5 +1 13
+7 +1 13
+3 +1 13
+3 +1 13
+7 * 13 13 0 1 6 0 0 1
+4 * 13
+4 * 13
+8 +4 16589 0 0 150 0 0 1
+7 +2 16589 16589
+4 +1 16589 0 16589 0 0 4156 0 0 4144
+4 +1 16589 16589
+4 +1 16589 0 16589 0 0 4146 0 0 4133
+4 +1 16589 16589 0 0 4
+4 +1 16589 0 16589 0 0 4120 0 0 4106
+4 +1 16589 16589 0 0 3
+4 +1 16589 0 16589 0 0 4166 0 0 4157
+4 +1 16589 16589 0 0 4
+4 +1 16589 0 16589 0 0 4156 0 0 4144
+4 +1 16589 16589 0 151 29 0 1
+4 +1 16589 0 16589 0 0 4146 0 0 4134
+4 +1 16589 16589 0 0 19
+4 +1 16589 0 16589 0 0 4120 0 0 4105
+4 +1 16589 16589 0 0 38
+4 +1 16589 0 16589 0 0 4166 0 0 4157
+4 +1 16589
+7 +1 16589
+4 +1 16589
+4 +1 16589
-79 -19 21367 21367 0 0 848
+4 +1 21367 0 21367 0 0 5308 0 0 5293
+4 +1 21367 21367 0 0 893
+4 +1 21367 0 21367 0 0 5394 0 0 5368
+4 +1 21367 21367 0 0 827
+4 +1 21367 0 21367 0 0 5234 0 0 5220
+4 +1 21367 21367 0 0 1007
+4 +1 21367 0 21367 0 0 5422 0 0 5420
+4 +1 21367 21367 0 0 897
+4 +1 21367 0 21367 0 0 5296 0 0 5293
+4 +1 21367 21367 0 0 949
+4 +1 21367 0 21367 0 0 1248 0 0 1235
+4 +1 21367 21367 0 0 862
+4 +1 21367 0 21367 0 0 1114 0 0 1114
+4 +1 21367 21367 0 0 1019
+4 +1 21367 0 21367 0 0 1264 0 0 1264
+4 +1 21367
+7 +1 21367
+4 +1 21367
+4 +1 21367
+2 +2 16589 0 16589
+5 +1 16589
+7 +1 16589
+3 +1 16589
+3 +1 16589 0 0 777 0 0 1
+7 * 16589 16589 0 0 2
+4 * 16589
+4 * 16589
0x160030 1679 18 18 0 1 0 0 1
+5 +1 18 0 18
+5 +2 18 18
+5 +1 18 0 18 0 0 4
+5 +2 18 18
+5 +1 18 0 18 0 0 5
+5 +2 18 18
+5 +1 18 0 18 0 0 4
+5 +2 18 18
+5 +1 18 0 18 0 0 5
+5 +2 18 18
+5 +1 18 0 18
+5 +2 18 18
+5 +1 18 0 18
+5 +2 18 18
+5 +1 18 0 18
+5 +2 18 18
-70 -21 13 13
+5 +1 13 0 13 0 0 4
+5 +2 13 13
+5 +1 13 0 13 0 0 4
+5 +2 13 13
+5 +1 13 0 13 0 0 1
+5 +2 13 13
+5 +1 13 0 13 0 0 4
+5 +2 13 13
+5 +1 13 0 13
+5 +2 13 13
+5 +1 13 0 13
+5 +2 13 13
+5 +1 13 0 13
+5 +2 13 13
-40 -12 41 41 0 0 1
+5 +1 41 0 41
+5 +2 41 41
+5 +1 41 0 41
+5 +2 41 41
+5 +1 41 0 41
+5 +2 41 41
+5 +1 41 0 41
+5 +2 41 41
-20 -6 28791 28791 0 147
+5 +1 28791 0 28791
+5 +2 28791 28791
+5 +1 28791 0 28791
+5 +2 28791 28791 0 147
-10 -3 1204 1204 0 2 0 0 1
+5 +1 1204 0 1204
+5 +2 1204 1204 0 2 0 0 1
0x1604b0 1996 179 179 0 158 0 0 1
+4 +1 179 0 179
+4 +1 179 179
0x160850 2255 23622 23622 0 1
+5 +1 23622 0 23622 0 0 5827 0 0 5807
+5 +2 23622 23622
+5 +1 23622 0 23622 0 0 5853 0 0 5830
+5 +2 23622 23622
+5 +1 23622 0 23622 0 0 5897 0 0 5880
+5 +2 23622 23622 0 0 19
+5 +1 23622 0 23622 0 0 5878 0 0 5877
+5 +2 23622 23622 0 0 18
+5 +1 23622 0 23622 0 0 5806 0 0 5806
+5 +2 23622 23622 0 0 13
+5 +1 23622 0 23622
+5 +2 23622 23622 0 0 16
+5 +1 23622 0 23622
+5 +2 23622 23622 0 0 17
+4 +1 23622 0 23622
+4 +2 23622 23622
-38 -12 30174 30174 0 150 0 0 1
+5 +1 30174 0 30174 0 0 7389 0 0 7389
+5 +2 30174 30174 0 0 46
+5 +1 30174 0 30174
+5 +2 30174 30174 0 0 47
+5 +1 30174 0 30174
+5 +2 30174 30174 0 0 47
+4 +1 30174 0 30174
+4 +2 30174 30174
-18 -6 4712 4712
+5 +1 4712 0 4712
+5 +2 4712 4712
+4 +1 4712 0 4712
+4 +2 4712 4712
-8 -3 33643 33643 0 151 62 0 1
+4 +1 33643 0 33643
+4 +2 33643 33643
* * 16589 16589
0x160c10 2572 35864 35864 0 151 0 0 1
+3 +1 35864 0 35864
+3 +1 35864 35864

fl=(92)
fn=(352)
0x20560 33 1 1 0 1 0 0 1
+7 * 1 1
+8 * 1
+20 +1 1 1

fl=(78) /build/glibc-bfm8X4/glibc-2.23/signal/../nptl/sigaction.c
fn=(304) sigaction
0x356f0 34 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+2 +6 1
cfi=(79) /build/glibc-bfm8X4/glibc-2.23/signal/../sysdeps/unix/sysv/linux/x86_64/sigaction.c
cfn=(306) __libc_sigaction
calls=1 0x354c0 +7 
* * 101 38 38 8 2 5 8 0 2

fl=(73) /build/glibc-bfm8X4/glibc-2.23/elf/dl-addr.c
fn=(282) _dl_addr
0x143190 126 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 * 1
+3 * 1
+4 +5 1 1 0 0 1
+7 -5 1 0 1
+5 * 1 0 1
+5 +5 1
+7 * 1 1 1 1 0 0 1
cob=(1)
cfi=(2)
cfn=(50)
calls=1 0xc90 704 
* * 2 1 1 0 0 1
+7 +2 1
+3 * 1 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -69 
* * 1601 450 141 3 14 1 3 2
* * 5 3 2
+5 +2 1
+3 * 1
+6 30 1 1
+4 +1 1 1
+7 -1 1 0 1
+4 +1 1 0 1
+5 +3 1 1
+3 * 1
+6 +5 1 1
+4 +6 1 1 0 0 1
+8 -7 1 1 0 1 0 0 1
+4 +2 1 1
+4 * 1 1
+4 +2 1 1 0 0 1
+7 -2 1 0 1
+5 +2 1 1
+4 +3 1
+6 +5 1 1
+6 * 1
+2 * 1
+6 * 1 1
+7 * 1
+3 * 1
+2 * 1
+5 * 1
+2 +2 1 1 0 1 1 0 1 1
+3 +1 1
+2 * 1
-5 -1 1010 1010 0 0 61 0 0 21
+3 +1 1010
+2 * 1010
+6 +2 907 907
+7 * 907
+2 * 907
+4 * 907
+8 +9 646 646 0 0 79 0 0 70
+4 * 646
+3 * 646
+2 * 24
+3 * 24
+2 * 24
+2 +7 24
+4 -2 24
+3 +2 24 24
+4 * 24
-11 * 2211
+4 -2 2211
+3 +2 2211 2211 0 0 136 0 0 84
+4 * 2211
+2 * 1328
+2 -10 1328
+4 * 1328
+4 * 1328 1328 0 0 284 0 0 257
+5 * 1328
+4 * 1328
-17 * 907 0 0 1 0 0 1
+4 * 907
+4 * 907 907 0 0 197 0 0 180
+5 * 907
+4 * 907
+9 +2 2235 2235
+5 * 2235
+4 * 2235
+4 * 2235
+2 +1 2232 2232 0 0 277 0 0 255
+4 * 2232
+3 * 2232 2232
+3 * 2232
+3 * 2232
+2 * 646
+4 * 646
+11 * 622
+3 * 622
+3 * 622
+36 +7 1011 0 0 1 0 0 1
+4 -21 1011
+3 * 1011
+6 +49 1 1 0 1 1 0 1
+5 * 1
+3 * 1
+2 +1 1 0 1 0 0 1
+3 +1 1 1
+5 * 1
+3 * 1
+5 +3 1
+3 * 1
+35 +37 1 0 0 1 0 0 1
+7 * 1 1 1 0 1
cob=(1)
cfi=(2)
cfn=(52)
calls=1 0xca0 710 
* * 2 1 1 0 0 1
+7 +3 1
+4 * 1
+2 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
0x143410 -28 1 0 1 1 0 1 1
+9 +1 1 0 1
+9 +21 1
+5 * 1

fl=(185)
fn=(2418)
0x8f1b0 28 1 1 0 1 1
+7 +1 1
+7 +1 1 1 0 1 1 0 1
+10 +1 1
+40 +9 1 1

fl=(103)
fn=(690)
0x2cb80 44 1 0 1 1 0 0 1
+1 * 1
+3 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1
+3 * 1
+7 +12 1
+3 -12 1 0 1
+7 +12 1
+21 +8 1
+3 * 1
+6 +3 1 1 0 1 0 0 1
+7 * 1
+7 * 1
+3 * 1
+6 +6 1
+3 * 1
0x2cc8b +1 1 0 0 1 0 0 1
+3 +2 1
+7 -2 1
+6 * 1 1
+3 * 1
0x2d138 -17 1 0 0 1 0 0 1
+6 * 1 0 0 1 0 0 1
+10 +17 1 1
+4 * 1
+6 279 1
+4 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+1 * 1 1

fl=(80) /build/glibc-bfm8X4/glibc-2.23/gmon/../sysdeps/unix/sysv/linux/prof-freq.c
fn=(308) __profile_frequency
0x10a300 27 1 1 0 1 1 0 1
+7 * 1 1 0 0 1
+3 +1 1 1

fl=(141)
fn=(1298)
0x55800 28 4 0 0 1 0 0 1
+7 * 4
+2 * 4 0 4
+5 * 4 0 4
+5 * 4 0 4
+5 * 4 0 4
+5 * 4 0 4
+5 * 4
+57 +4 4 0 0 1 0 0 1
+8 +1 4
+3 * 4
+5 -1 4 0 4
+5 * 4
+5 * 4 0 4
+8 * 4 0 4 1 0 0 1
+8 * 4 0 4
+5 +1 4 4 0 0 3 0 0 2
+7 * 4 4 0 0 3 0 0 2
+3 * 4 0 4
cfi=(142) /build/glibc-bfm8X4/glibc-2.23/stdio-common/vfprintf.c
cfn=(1300) vfprintf
calls=4 0x4d170 1236 
* * 2904 651 429 79 49 8 78 35 7
+5 +4 4
+7 * 4 4

fl=(96) /build/glibc-bfm8X4/glibc-2.23/misc/sbrk.c
fn=(466) sbrk
0xfce40 34 110 0 110 56 0 0 3
+2 +8 110 110
+7 -8 110 0 110
+1 * 110 0 110
+1 * 110
+3 +8 110 110 0 0 109 0 0 2
+4 * 110
+3 * 110
+2 * 109 109 0 0 108 0 0 1
+6 * 109
+2 * 109
+2 +4 110
+4 * 110
+2 +4 109
+2 * 109
+3 * 109
+3 * 109
+3 * 109
+2 * 109
+16 +5 48
+7 +7 48
+3 * 48 48
+1 * 48 48
+1 * 48 48
+2 * 48 48
-7 * 1
+3 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+6 -19 1 0 0 1 0 0 1
+2 * 1 0 1
cfi=(97) /build/glibc-bfm8X4/glibc-2.23/misc/../sysdeps/unix/sysv/linux/x86_64/brk.c
cfn=(468) brk
calls=1 0xfcdd0 -12 
* * 12 2 1 1 0 0 1
+5 * 1
+2 * 1
+2 * 1 1
+4 * 1
+9 +15 109 0 0 52 0 0 2
+4 * 109 0 109 0 0 2
cfi=(97)
cfn=(468)
calls=109 0xfcdd0 -27 
* * 1452 266 157 103 0 48 3
+5 * 109
+2 * 109
+2 +4 61
+3 * 61 61 0 6 0 0 3
+1 * 61 61
+1 * 61 61
+2 * 61 61

fl=(69)
fn=(300) moncontrol
0x1092b0 80 1 1 0 1 0 0 1
+8 * 1
+2 -4 1
+4 +7 1
+2 * 1 0 0 1 0 0 1
+26 +12 1
+4 * 1 1
+2 -9 1 1
+6 * 1 1 0 0 1
+7 * 1 1
+7 * 1 1
+7 * 1 0 1
cfi=(77) /build/glibc-bfm8X4/glibc-2.23/gmon/../sysdeps/posix/profil.c
cfn=(302) profil
calls=1 0x1096e0 -22 
* * 178 50 71 18 5 8 18 1 2
+5 +1 1 0 1
+11 * 1

fn=(266)
0x109310 101 1 0 1 1 0 0 1
+2 * 1 0 1
+2 +9 1
+4 -9 1 0 1
+1 * 1 0 1
+1 +10 1
+4 +13 1
+10 -14 1
+3 +1 1
+4 -10 1
+4 +9 1 0 1 0 0 1 0 0 1
+7 +2 1
+3 -1 1 0 1 1 0 0 1
+7 +3 1 0 1
+11 -2 1
+3 +9 1 0 1
+11 +3 1
+4 -11 1
+3 -1 1 0 1
+7 +1 1
+3 +11 1
+4 -11 1
+4 +10 1 0 1 0 0 1 0 0 1
+7 +1 1
+3 * 1 0 0 1 0 0 1
+3 -11 1
+4 * 1 0 1
+7 +11 1
+4 +1 1
+4 * 1
+22 +6 1
+3 * 1
+5 -2 1 0 1
+7 +2 1
+4 * 1 0 1 1 0 0 1
cob=(1)
cfi=(67)
cfn=(261)
calls=1 0x17870 -67 
* * 82036 14548 13264 68 1079 3214 68 877 3202
* * 5 3 2 2 2 0 2
+5 +1 1
+3 * 1
+6 +15 1
+3 -7 1
+3 -1 1 0 1 0 0 1
+7 +9 1
+3 -7 1 0 1
+7 +2 1
+3 +5 1
+3 -3 1 0 1 0 0 1
+8 -2 1 0 1
+7 +23 1
+5 -18 1
+2 +3 1 0 0 1 0 0 1
+3 * 1
+6 * 1
+4 * 1
+5 * 1
+4 * 1
+4 * 1
+4 * 1 1 0 0 1 0 0 1
+8 * 1
+4 * 1
+4 * 1 0 1 0 0 1 0 0 1
+6 +18 1
+4 -1 1
+5 +1 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1 0 0 1
+2 -1 1
cfn=(300)
calls=1 0x1092b0 -88 
* * 192 56 73 20 6 8 20 1 2
+13 -41 1 0 0 1 0 0 1
+7 * 1
+25 +1 1
+4 -4 1 0 1
+7 * 1
+4 * 1 0 0 1 0 0 1

fl=(82)
fn=(318)
0x3a280 57 12 0 12 2 0 0 1
+2 * 12 0 12
+1 * 12
+3 * 12 0 12
+1 * 12
+3 -22 12
+7 +22 12
+3 -22 12 0 12
cfn=(320) __new_exitfn
calls=12 0x3a0a0 +38 
* * 522 96 85 8 7 4 7 0 2
+5 +2 12
+3 * 12
+2 +4 12
+3 +3 12 0 12 0 0 6
+4 +1 12 0 12
+4 -4 12 12
+9 * 12
+4 +2 12 0 12
+4 +4 12 0 12 1 0 0 1
+7 +1 12
+2 +11 12 12
+1 * 12 12
+1 * 12 12
+2 * 12 12

fn=(320)
0x3a0a0 73 12 0 12 2 0 0 1
+1 * 12 0 12
+1 +6 12
+5 -6 12
+3 +6 12
+2 -6 12
+4 +6 12 12 0 0 2
+7 * 12
+14 * 12 0 12 1 0 2 1 0 1
+7 * 12
+28 +2 12 12 0 0 2
+3 * 12
+2 * 12
+3 * 12
+3 * 12
+6 * 12
+7 +2 12 12 0 1 2 0 1
+4 * 12
+3 * 12
+2 +1 11
+4 * 11
+3 * 11
+4 * 11 11 0 0 1
+6 * 11
+45 -3 1 1 0 1 0 0 1
+3 +10 1 0 1
+8 * 1
+3 -10 1
+3 * 1
+11 +2 11
+3 * 11
+10 +11 11
+4 * 11
+2 +25 11
+3 +1 11
+4 -1 11
+4 +1 11 0 11
+4 -1 11
+5 +7 11 0 11
+7 +1 11 0 11 0 0 1
+8 +3 11 11
+7 * 11
-22 -4 1 0 1 1 0 0 1
+7 +1 1 0 1 0 0 1 0 0 1
+8 +3 1 1
+7 * 1
+13 * 12 0 12
+6 * 12
+28 +3 12
+4 * 12
+3 * 12 12
+1 * 12 12
+1 * 12 12
+35 -21 1 0 0 1 0 0 1
+4 +1 1 0 1 1 0 0 1
+8 * 1

fl=(97)
fn=(468)
0xfcdd0 31 110 0 0 56 0 0 3
+5 * 110
+2 * 110
+2 * 110
+6 * 110
+3 * 110
+2 * 110 110
+7 * 110 0 110
+3 +8 110
+2 -6 110
+3 * 110
+2 +7 62 62
+43 -5 48 48 0 48 0 0 1
+7 * 48 0 48 0 0 48
+7 +1 48
+5 +4 48 48

fl=(88) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/strrchr.S
fn=(340) rindex
0x8d400 24 1 0 0 1 0 0 1
+4 +1 1
+3 +1 1
+5 +1 1
+4 +1 1
+6 +1 1
+4 +1 1
+5 +1 1
+6 +1 1 1 0 0 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+3 +1 1
+28 +11 1 1
+5 +1 1
+4 +1 1 1 0 0 1
+5 +1 1
+4 +1 1
+4 +1 1 1
+5 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+5 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+4 +1 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+3 +1 1
+3 +1 1
+4 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+2 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
+6 +1 1
+4 +1 1
+4 +1 1 1

fl=(128) /build/glibc-bfm8X4/glibc-2.23/io/../sysdeps/unix/sysv/linux/wordsize-64/fxstat.c
fn=(1184) _fxstat
0xf6bf0 34 1 0 0 1 0 0 1
+3 -1 1
+2 +1 1
+2 +1 1
+3 * 1
+3 * 1 0 0 1 0 0 1
+5 * 1
+2 * 1
+6 * 1
+2 +4 1 1

fl=(104)
fn=(762)
0x2d8b0 31 2 2 0 1 0 0 1
+7 +2 2
+3 * 2 0 0 1 0 0 1
+7 -2 2 2
+4 +2 2
+2 +3 2
+4 * 2
+4 +1 2 0 2
+4 +28 2 2 0 0 1
+4 * 2 2
+7 * 2 0 2
+4 +1 2 2
+4 * 2 2 0 0 1
+7 * 2 0 2
+4 +2 2 2
+4 * 2 2
+7 * 2 0 2
+4 +4 2 0 0 1 0 0 1
+3 * 2
+7 * 2
+4 +1 2 2

fl=(142)
fn=(1300)
0x4d170 1236 4 0 4 1 0 0 1
+1 * 4
+3 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+2 * 4 0 4
+1 * 4 0 0 1 0 0 1
+7 +31 4 4 0 0 2 0 0 1
+7 * 4 4 0 0 3 0 0 2
+3 * 4 0 4 0 0 1 0 0 1
+6 +8 4 4 0 0 3 0 0 2
+6 * 4
+2 * 4
+16 +4 4 4 0 0 3 0 0 2
+2 * 4
+3 * 4
+6 * 4
+3 * 4
+6 +11 4 0 0 1 0 0 1
+3 * 4
+3 * 4
+3 * 4
+3 * 4
+6 +11 4 4
fi=(202) /build/glibc-bfm8X4/glibc-2.23/stdio-common/printf-parse.h
+3 108 4
+5 * 4
+3 * 4 0 4
fe=(142)
+6 1316 4
+3 -15 4 0 4 0 0 1 0 0 1
+7 * 4 4
+4 * 4 0 4
+7 * 4 4
+4 * 4 0 4 2 0 0 1
fi=(202)
+7 108 4 0 4 0 0 1 0 0 1
cfi=(143) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/strchr.S
cfn=(1302) strchrnul
calls=4 0x96760 -84 
* * 104 11 0 5 4 0 5 3
fe=(142)
+5 1316 4 4
fi=(202)
+6 108 4
fe=(142)
+3 1312 4 0 4
+7 +4 4
+3 * 4
+6 +4 4 4
+7 * 4
+3 * 4
+3 * 4
+3 * 4
+3 * 4
+3 * 4 0 4
+7 * 4 4 4 1 3 0 1 2
cfi=(125)
cfn=(1174)
calls=4 0x791e0 -33 
* * 559 107 39 9 3 4 9 2 3
+3 * 4 4
+7 * 4
+6 * 4
+3 * 4
+6 1685 4 4
+6 * 4
+2 * 4 4
+7 * 4 0 4
+4 * 4
+15 +3 4
+3 +1 4
+4 * 4 4
+1 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+2 * 4 4
+1 * 4 4
+6 1275 4 0 0 1 0 0 1
+3 * 4
+13 +41 4 4 0 0 2 0 0 2
+7 * 4
+3 * 4
+6 * 4 4
+7 * 4 0 4
+7 * 4 0 4 1 0 0 1
+7 +1 4 4 0 0 3 0 0 2
+7 * 4 4
+9 * 4 4 0 0 3 0 0 2
+4 * 4
+2 * 4
+5 * 4
+2 * 4 4 0 0 2 0 0 2
+7 * 4
+10 * 4 0 4
+3 * 4
+24 * 4 4 0 1 0 0 1
+7 * 4 0 4
+4 * 4 0 4
+4 * 4
+35 1685 4 0 4 1 0 0 1
+8 * 4 4
+7 * 4
+9 * 4 0 4
+2 * 4
+24 +1 4
+3 * 4
0x4d3f0 1320 4 0 0 2 0 0 2
+7 * 4
+25 +4 4 4 0 2 0 0 2
+7 -4 4
+3 +4 4 4
+3 * 4
+6 +4 3 3 0 0 3 0 0 2
+8 * 3
0x4d4ed * 3 3 0 1 0 0 1
+8 * 3
+6 * 3 3 0 1 0 0 1
+8 * 3
+7 * 3 0 3
+10 * 3 0 3
+10 * 3 0 3
+11 * 3 0 3
+11 * 3 0 3
+7 * 3 0 0 2 0 0 2
+6 1552 3
+7 * 3 0 3
+7 -21 3
+7 * 3 0 3
+7 1632 3
+7 * 3 0 3
+7 -1 3
+7 * 3 0 3
+7 1370 3
+4 * 3 0 3 1 0 0 1
+7 * 3 3
+5 * 3
+2 * 3
+4 * 3
+3 * 3
+2 * 3
+4 * 3
+7 * 3
+3 * 3
+2 * 3 3 0 0 3 0 0 2
+4 * 3
+7 * 3 3 0 0 3 0 0 2
+4 * 3
+7 -7 3 0 3 1 0 0 1
+7 -1 3 0 3
+10 -3 3 0 3
+10 -1 3 0 3
+10 +8 3
+3 +4 3
+3 -3 3 3
+7 -10 3 0 3
+10 -1 3 0 3
+10 -1 3 0 3 1 0 0 1
+10 -1 3 0 3
+10 -1 3 0 3
+10 +14 3
+7 -15 3 0 3
+10 -1 3 0 3
+10 -1 3 0 3 1 0 0 1
+10 -1 3 0 3
+10 +18 3 0 3
+7 * 3
0x4d89c 1649 3 0 3 2 0 0 2
+7 +2 3
+3 * 3
+24 +8 3 3 0 1 0 0 1
fi=(202)
+7 108 3
+5 * 3 0 3
fe=(142)
+7 1659 3
fi=(202)
+4 108 3
fe=(142)
+3 1659 3 0 3
fi=(202)
+7 108 3 0 3
+7 * 3 0 3
cfi=(143)
cfn=(1302)
calls=3 0x96760 -84 
* * 60 6
fe=(142)
+5 1663 3 3
+7 -4 3 0 3
+7 +4 3 3
+7 * 3 0 0 1 0 0 1
+3 * 3
+6 * 3
+3 * 3
+3 * 3 0 3
+7 * 3
+3 * 3 3
+7 * 3 0 3
+7 * 3
+3 * 3 3 3
cfi=(125)
cfn=(1174)
calls=3 0x791e0 1287 
* * 635 144 90 8 6 1 8 4 1
+3 * 3 3
+7 * 3 3
+7 * 3
+3 * 3 0 0 1 0 0 1
+3 * 3
+3 * 3
+2 * 3 3
+7 * 3
+5 * 3
+3 * 3
+3 * 3
+3 * 3
+6 * 3
+3 +2 3 3
+3 * 3
+6 * 3
0x4db48 -34 3 3 0 1 0 0 1
+7 * 3 3
+4 * 3
+31 * 3
+3 * 3
+4 * 3
+3 * 3 0 3 2 0 0 2
+7 * 3
+6 * 3 0 3
+7 * 3 0 3
+10 * 3 3
+6 * 3
+2 * 3
+95 * 3 3 0 1 0 0 1
+7 * 3 3
+7 * 3
+3 * 3
+3 * 3 0 3
+7 * 3
+5 * 3
+4 * 3 3
+7 * 3
+3 * 3 0 3
+7 * 3 0 3
+6 * 3 0 0 1 0 0 1
+6 * 3 3
+6 * 3
+2 * 3
+2 * 3 3
+7 * 3 0 3
+6 * 3
+2 * 3 3
+7 * 3
+25 * 3 3 0 1 0 0 1
+6 * 3 3
+6 * 3 3
+6 * 3
+3 * 3 0 3
+7 * 3 3
+7 * 3
+6 * 3 3
+7 * 3
+48 * 3 3 0 1 0 0 1
+7 * 3
+2 * 3 3
+7 * 3
+91 * 3 3 0 2 0 0 2
+7 * 3 3
+7 * 3
+3 * 3
0x4ddce * 3 0 0 2 0 0 2
+3 * 3
+6 * 3 3
+7 * 3 0 3
+7 * 3
+3 * 3 3
+7 * 3 0 3
+7 * 3 3
+7 * 3 3 3
cfi=(125)
cfn=(1174)
calls=3 0x791e0 1287 
* * 278 52 30
+3 * 3 3 0 1 0 0 1
+7 * 3 3
+7 * 3
+3 * 3
+6 * 3 3
+7 * 3
+5 * 3
+3 * 3
+2 * 3
+3 * 3
+6 +1 3 3
+7 * 3
0x4e0ad -1 3 3 0 1 0 0 1
+7 * 3
+65 * 3 0 0 1 0 0 1
+4 * 3 3
+6 * 3 3 0 1 0 0 1
+7 * 3 3
+7 * 3
+3 * 3 0 3
+7 * 3
+3 * 3 0 3
+7 * 3 0 3
+7 * 3 0 3
cfi=(145) /build/glibc-bfm8X4/glibc-2.23/stdio-common/_itoa.c
cfn=(1306) _itoa_word
calls=3 0x4a6b0 168 
* * 186 16 13 3 3 0 3 3
+5 * 3 3
+7 * 3 0 3
+7 * 3 3 0 1 0 0 1
+8 * 3 3
+7 * 3 3
+7 * 3
+18 * 3 3
+7 * 3
+2 * 3 3
+7 * 3
+6 * 3 3 0 1 0 0 1
+8 * 3 3
+7 * 3 3
+7 * 3 3
+7 * 3 0 3
+7 * 3 3
+7 * 3
+3 * 3
+3 * 3
+3 * 3
+2 * 3
+6 * 3 3
+7 * 3
+3 * 3 3
+6 * 3 0 3
+6 * 3
+26 * 3 0 3 1 0 0 1
+10 * 3
0x4e412 * 3 3 0 2 0 0 2
+6 * 3
+2 * 3
0x4e4cb * 3 0 3 1 0 0 1
+10 * 3
0x4e78f * 3 3 0 1 0 0 1
+7 * 3
0x4e807 * 3 3 0 1 0 0 1
+7 * 3
+6 * 3
+3 * 3
+2 * 3
+2 * 3 3
+4 * 3
+3 * 3 0 3
+4 * 3 3
+3 * 3
+36 * 3 3 0 1 0 0 1
+7 * 3
+98 * 3 0 3 2 0 0 2
+6 * 3 0 0 1 0 0 1

fl=(84)
fn=(332)
0x205a0 52 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1
+3 * 1 0 1
+1 * 1 0 1
+1 * 1
+3 * 1
+3 * 1
+4 +6 1 1 0 0 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+26 +14 1 1 0 0 1
fi=(86) /build/glibc-bfm8X4/glibc-2.23/csu/../sysdeps/unix/sysv/linux/x86_64/init-first.c
+7 -36 1
fe=(84)
+7 +34 1 0 1 0 0 1 0 0 1
+7 +1 1 0 1 0 0 1
fi=(86)
+7 -35 1 0 1
+8 * 1
+5 * 1 0 1 1 0 0 1
fe=(84)
+8 +36 1 0 1 0 0 1
fi=(86)
+3 -36 1
+7 * 1 0 1
+4 * 1
fi=(85) /build/glibc-bfm8X4/glibc-2.23/csu/../sysdeps/generic/dl-hash.h
+5 +12 1
+4 * 1
+4 * 1
+3 +14 1
+3 * 1
+6 * 1
+4 * 1
+3 -17 1 1 0 0 1
+3 * 1
+2 * 1
-32 +3 3
+4 * 3
+4 * 3
+3 +14 3
+3 * 3
+6 * 3
+4 * 3
+3 -17 3 3
+3 * 3
+2 * 3
fi=(86)
+2 -9 1 0 0 1 0 0 1
+5 * 1
+6 * 1
+6 +2 1
+7 * 1
+3 -2 1 0 1
+9 +2 1
+3 * 1 0 1
cfi=(49)
cfn=(184)
calls=1 0x143d40 -11 
* * 6 3 0 0 1
+5 +1 1
+3 * 1
+6 +5 1
+7 * 1
+3 -3 1 1 0 1 0 0 1
+9 * 1
+4 +1 1 0 1
+7 +2 1 0 1
cfi=(49)
cfn=(184)
calls=1 0x143d40 -17 
* * 6 3
fe=(84)
+5 +42 1
+3 * 1
+3 * 1
fi=(86)
+3 -41 1 1
+9 * 1
+4 +1 1 0 1
fe=(84)
+7 +40 1 0 1
cfi=(87) /build/glibc-bfm8X4/glibc-2.23/misc/init-misc.c
cfn=(338) __init_misc
calls=1 0x107250 -55 
* * 78 12 5 6 5 1 6
+5 +8 1 0 1
cfi=(89) /build/glibc-bfm8X4/glibc-2.23/ctype/ctype-info.c
cfn=(342) __ctype_init
calls=1 0x2e150 -63 
* * 16 10 3 2 5 1 2
+5 +5 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+10 -34 1 1 0 1 1 0 1
+7 -7 1 0 1 0 0 1 0 0 1
+10 +7 1 1
+3 * 1 1
+7 * 1 1
+4 * 1
fi=(86)
+17 -25 1 0 0 1 0 0 1
+7 * 1
fe=(84)

fl=(87)
fn=(338)
0x107250 31 1 0 0 1 0 0 1
+3 * 1
+2 -1 1 0 1
+1 * 1 0 1
+1 * 1
+4 +1 1 1 0 0 1
+3 * 1
+3 * 1
+2 * 1
+3 +2 1
+3 * 1
+5 * 1 0 1
cfi=(88)
cfn=(340)
calls=1 0x8d400 -9 
* * 54 5 0 4 2 0 4
+5 +4 1
+4 * 1
+3 * 1 1 0 1 1 0 1
+7 * 1
+4 * 1 0 1 0 0 1
+3 +1 1 1 0 0 1
+7 * 1 1
+3 * 1 0 1
+3 +2 1
+4 * 1 1
+1 * 1 1
+1 * 1 1

fl=(123)
fn=(1166)
0x1077b0 65 7 0 0 1 0 0 1
+5 * 7
+2 +1 7 7

fl=(144) /build/glibc-bfm8X4/glibc-2.23/string/../sysdeps/x86_64/memcpy.S
fn=(1304) __GI_mempcpy
0x8f3b0 61 14 0 0 2 0 0 2
+4 +4 14
+2 +3 13
+3 +1 13
+2 +2 3 3
+3 +1 3 0 3
+2 +2 3
+3 +1 3
+3 +5 3
+3 +1 3
-3 -1 10 0 0 2 0 0 2
+3 +1 10
+2 +2 2 2
+3 +1 2 0 2
+3 +2 2
+4 +1 2
+4 +5 2
+3 +1 2
-3 -1 11
+3 +1 11
+2 +2 8 8
+2 +1 8 0 8
+2 +2 8
+4 +1 8
+4 +5 8
+3 +1 8
-3 -1 5
+3 +1 5
+2 +2 6 6
+3 +1 6 0 6 0 0 4 0 0 2
+3 +2 6
+4 +1 6
+4 * 6
+3 +5 6 0 0 3 0 0 2
+6 +1 6
-6 -1 7
+6 +1 7
+2 * 2
+8 +5 2 2
+3 +1 2 2
+4 +1 2 0 2
+3 +1 2 0 2
+4 +2 2
+3 +2 2
+4 +1 2
+4 +2 2
+2 +6 13
+3 +4 13 13
+2 +12 1
+2 +2 1
+3 +1 1
+43 +26 1 0 0 1 0 0 1
+7 +1 1
+2 +3 1
+2 +1 1
+3 +1 1
+2 +5 1
+2 +2 1 1
+3 +1 1 1
+4 +1 1 1
+4 +1 1 1 0 1 0 0 1
+4 +2 1 0 1
+3 +1 1 0 1
+4 +1 1 0 1
+4 +1 1 0 1
+4 +2 1
+4 +1 1
+4 +2 1
+56 +22 1 0 0 1 0 0 1
+3 +2 1
+6 +2 1
+3 +7 1 1

fl=(156) /build/glibc-bfm8X4/glibc-2.23/string/../string/strstr.c
fn=(1476) __GI_strstr
0x8e060 53 2 0 2 1 0 0 1
+2 * 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+1 * 2 0 2
+1 * 2
+4 +10 2 2
+3 * 2
+2 * 2
+68 +2 2 2 0 1 1 0 1 1
+3 * 2
0x8e128 +1 2 0 0 1 0 0 1
+2 +23 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
0x8e60c -26 2 0 0 1 0 0 1
+3 -5 2
+6 * 2

fl=(110)
fn=(792)
0x10b420 27 10 0 10 1 0 0 1
+2 * 10 0 10
+2 * 10
+3 * 10 0 10
+2 * 10 0 10
+2 +7 10
+3 -7 10 0 10
+1 * 10 0 10
+1 * 10
+3 * 10
+4 +3 10 0 10
cfi=(111)
cfn=(794)
calls=10 0x8b720 +36 
* * 160 20 0 2 3 0 2 3
+5 +3 10 10
+3 -3 10 0 0 1 0 0 1
+3 +3 10 10 0 0 1
+7 * 10
+7 +8 48
+5 +1 48 48
+3 * 48
+2 -8 48
+4 +2 48
+3 * 48 0 48
cfi=(111)
cfn=(794)
calls=48 0x8b720 +30 
* * 768 96 0 0 1 0 0 1
-3 * 10
+3 * 10 0 10
cfi=(111)
cfn=(794)
calls=10 0x8b720 +30 
* * 160 20 0 0 1 0 0 1
+5 +2 58
+3 -2 58
+3 +2 58
+2 * 49
+3 * 49
+3 * 49
+3 * 49 0 49
cfi=(112)
cfn=(796)
calls=49 0x8ebf0 -14 
* * 1012 169 0 4 0 0 4
+5 * 49
+2 * 49
+2 +9 10 10 0 1 1 0 1
+7 * 10 10 0 0 2
+5 +1 10
+4 * 10 10
+1 * 10 10
+1 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10
+2 * 10 10

fl=(46)
fn=(188)
0x91cf0 129 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1 0 1 0 0 1
+10 +1 1
+59 +10 1 1 0 1 0 0 1

fn=(178)
0x8fa00 109 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1 0 0 1
+10 +1 1
+59 +10 1 1 0 1 0 0 1

fn=(1046)
0x89cd0 87 1 1 0 1 1 0 1
+7 +2 1
+7 +1 1 1 0 0 1
+10 +1 1
+28 +12 1 1 0 1 0 0 1

fl=(109) /build/glibc-bfm8X4/glibc-2.23/iconv/gconv_simple.c
fn=(780) __gconv_btwoc_ascii
0x23b80 52 128 0 0 1 0 0 1
+4 * 128
+3 * 128
+5 * 128
+3 +3 128 128

fl=(89)
fn=(342)
0x2e150 31 1 1 0 1 0 0 1
+7 * 1 1
+7 * 1 1 0 0 1
+4 * 1 1 0 0 1
+3 * 1 1 0 0 1
+4 +2 1 1
+4 +2 1 1
+4 -4 1
+7 +4 1
+6 -4 1 0 1 1 0 1 1
+4 +2 1 1 0 0 1
+7 * 1
+7 * 1 0 1
+4 +2 1 1 0 0 1
+7 * 1 0 1
+4 * 1 1

fl=(95) /build/glibc-bfm8X4/glibc-2.23/malloc/morecore.c
fn=(464) __default_morecore
0x878c0 46 110 0 0 52 0 0 3
+4 +1 110 0 110 0 0 53 0 0 1
cfi=(96)
cfn=(466)
calls=110 0xfce40 -13 
* * 4585 1038 598 219 217 50 13 3
+5 +1 110
+5 * 110
+4 * 110
+4 +4 110
+4 * 110 110

fl=(100)
fn=(626)
0x10a310 32 44102449
+4 +1 44102449 0 44102449 0 0 102 0 0 3
+4 +1 44102449 0 44102449
+5 +1 44102449 0 44102449
+5 +1 44102449 0 44102449
+5 +1 44102449 0 44102449
+5 +1 44102449 0 44102449
+5 +1 44102449 0 44102449
+5 +4 44102449 44102449
+5 +2 44102449 44102449
+4 +2 44102449 0 44102449 1 0 312 1 0 4
cfi=(101) /build/glibc-bfm8X4/glibc-2.23/gmon/mcount.c
cfn=(628) __mcount_internal
calls=44102449 0x109560 +13 
* * 1244340058 400365445 178997675 5 314703 58651 5 633 619
+5 +6 44102449 44102449
+5 +1 44102449 44102449
+5 +1 44102449 44102449
+5 +1 44102449 44102449
+5 +1 44102449 44102449
+5 +1 44102449 44102449
+5 +1 44102449 44102449
+4 +1 44102449
+4 +1 44102449 44102449

fl=(155)
fn=(1478) __fopen_maybe_mmap
0x6dc80 41 2 2 0 1 0 0 1
+4 -2 2
+3 +2 2
+54 +15 2 2

fn=(1458) __fopen_internal
0x6dcc0 61 2 0 2 1 0 0 1
+2 * 2 0 2
+2 * 2
+3 * 2 0 2
+1 * 2 0 2
+1 * 2
+3 +8 2
+5 -8 2
+3 * 2
+4 +8 2 0 2
cob=(2)
cfi=(16)
cfn=(1186)
calls=2 0x54ea8a0 -69 
* * 368 58 60 1 3 2 1 2 2
+5 +2 2
+3 * 2
+2 * 2
+3 +3 2
+7 +3 2
+7 * 2
+7 * 2
+2 * 2
+2 -3 2 0 2 1 0 2 1 0 2
+7 +3 2
+3 * 2 0 2
cfi=(126)
cfn=(1460) _IO_no_init
calls=2 0x7bb30 599 
* * 116 14 78 6 0 10 6 0 10
+5 +4 2
+7 +1 2
+3 -1 2 0 2
+7 +1 2 0 2
cfi=(125)
cfn=(1464) _IO_file_init@@GLIBC_2.2.5
calls=2 0x79810 +62 
* * 188 50 56 10 3 0 10 3
+5 +4 2
+3 * 2
+3 * 2
+3 * 2
+3 * 2 0 2
cfi=(125)
cfn=(1468) _IO_file_fopen@@GLIBC_2.2.5
calls=2 0x79b30 249 
* * 245 58 42 15 2 0 15 2
+5 * 2
+3 +1 2
+3 -1 2
+2 +6 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 -5 2
cfn=(1478)
calls=2 0x6dc80 -46 
* * 8 4 0 1 0 0 1

fn=(1456)
0x6dd70 97 2 0 0 1 0 0 1
+5 * 2
cfn=(1458)
calls=2 0x6dcc0 -36 
* * 1003 192 256 35 8 14 35 7 14

fl=(127) /build/glibc-bfm8X4/glibc-2.23/libio/filedoalloc.c
fn=(1180) _IO_file_doallocate
0x6d180 95 1 0 1 1 0 0 1
+2 * 1 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+7 +15 1 1
+3 * 1
+2 * 1
+2 * 1 1
+7 * 1
+3 * 1 1 1
cfi=(125)
cfn=(1182) _IO_file_stat
calls=1 0x78b60 1229 
* * 14 2 0 3 0 0 3
+6 * 1
+2 * 1
+2 +2 1 1
+4 * 1
+5 * 1
+5 * 1
+2 +11 1 1
+5 * 1 0 0 1 0 0 1
+3 * 1
+12 +4 1
+3 * 1 0 1
cob=(2)
cfi=(16)
cfn=(1186)
calls=1 0x54ea8a0 0 
* * 185 30 30 21 10 1 3 0 1
+5 * 1
+3 +2 1
+5 -1 1
+3 * 1
+2 +2 1
+4 * 1
+5 * 1
+3 * 1 0 1
cfi=(126)
cfn=(1188) _IO_setb
calls=1 0x7b500 380 
* * 18 4 4 1 0 0 1
+5 +1 1
+5 +1 1
+7 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+5 -15 1 1 0 1 0 0 1
+5 -2 1
+3 * 1
+4 * 1
+4 * 1
+5 * 1
+6 * 1
+2 * 1
+5 * 1
+3 * 1
+2 +5 1 0 1
+7 * 1

fl=(81) /build/glibc-bfm8X4/glibc-2.23/time/../sysdeps/unix/syscall-template.S
fn=(310) setitimer
0xbf630 84 1 0 0 1 0 0 1
+5 * 1
+2 * 1
+6 * 1
+2 +1 1 1

fl=(71) /build/glibc-bfm8X4/glibc-2.23/malloc/hooks.c
fn=(276) malloc_hook_ini
0x85830 29 1 0 1 1 0 0 1
+1 * 1 0 1
+1 * 1
+3 * 1
fi=(72) /build/glibc-bfm8X4/glibc-2.23/malloc/arena.c
+4 260 1 1 0 0 1 0 0 1
fe=(71)
+6 30 1 1 0 1 0 0 1
fi=(72)
+7 260 1
fe=(71)
+2 30 1 0 1
fi=(72)
+7 260 1
fi=(70)
+17 2911 1 1
+7 * 1 1
+4 * 1
+3 * 1
+2 * 1 1
+3 * 1
+3 * 1
+23 +2 1 0 0 1 0 0 1
+3 * 1
+3 * 1 0 1
cfn=(290) _int_malloc
calls=1 0x81b80 3349 
* * 892 44 299 37 5 38 37 2 34
+5 +3 1
+3 -3 1
+3 +3 1
+6 +8 1 1
+7 * 1
+9 * 1 0 1
+2 * 1
+24 +2 1 0 0 1 0 0 1
+3 * 1
+6 * 1 1
+4 * 1
+2 * 1
+35 * 1
fe=(71)
+3 33 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
fi=(70)
+7 2911 1 0 0 1 0 0 1
+5 * 1 1 0 0 1 0 0 1
+7 * 1
+10 * 1 0 1
+3 * 1
+24 * 1 0 0 1 0 0 1
0x859a8 +12 1 0 1 1 0 0 1
cfi=(72)
cfn=(280) ptmalloc_init.part.5
calls=1 0x85460 258 
* * 58119 14226 171 17 1060 7 17 873
+5 * 1 1 0 0 1
+3 -15 1
+3 * 1
fe=(71)

fl=(70)
fn=(1606) _int_free
0x7fd50 3841 179386 0 179386 13 0 0 1
+2 * 179386 0 179386
+2 * 179386 0 179386
+2 * 179386 0 179386
+2 * 179386 0 179386
+1 * 179386 0 179386
+1 * 179386
+3 * 179386
+3 * 179386
+4 +13 179386 179386
+4 -13 179386 0 179386 0 0 12 0 0 8
+4 +13 179386
+3 * 179386
+4 +6 179386
+3 * 179386
+3 * 179386
+3 * 179386 0 0 14 0 0 1
+6 +1 179386
+4 * 179386
+6 +11 179386
+4 * 179386
+6 * 179386
+2 * 179386
+6 +13 179386 179386
+7 * 179386
+6 +11 139017
+4 * 139017 139017 0 0 1794
+4 * 139017
+4 * 139017
+6 +1 139017 0 0 11 0 0 1
+4 * 139017 139017
+7 * 139017
+6 1886 139017 139017
+6 3921 139017
+4 1886 139017
+2 * 139017
+6 3923 139017 139017
+9 * 139017
+3 * 139017 0 139017
+4 +1 139017
+4 * 139017
+5 +4 139017 139017
+5 -4 139017 0 0 3 0 0 1
+3 +1 139017
+5 +9 139017
+3 * 139017
+2 * 139017 139017
+4 * 139017
+2 * 139017
+5 * 139017
+4 * 139017
+9 +9 139017
+3 * 139017
+3 * 139017
+3 * 139017
+11 +2 139017 0 139017
+4 +2 139017
+3 * 139017 139017 0 13 0 0 1
+9 * 139017
+3 * 139017 0 139017
+4 * 139017
+3 * 139017
+82 4105 179386 0 0 13 0 0 1
+4 * 179386 179386
+1 * 179386 179386
+1 * 179386 179386
+2 * 179386 179386
+2 * 179386 179386
+2 * 179386 179386
+2 * 179386 179386
+7 3960 40369
+2 * 40369
+6 +1 40369 40369 0 3 0 0 1
+4 * 40369
+2 * 40369
+6 +9 10 10
+4 -4 10
+4 +4 10
+3 * 10
+6 * 10
+3 3852 10 0 10 0 0 7
+8 3976 10 10
+4 * 10
-4 * 40359 40359
+4 * 40359
+6 +8 40369 40369 0 0 180
+4 * 40369
+2 * 40369
+6 +6 40369 0 0 3 0 0 1
+3 * 40369
+4 +1 40369
+4 * 40369
+6 +1 40369 40369
+7 * 40369
+6 1886 40369 40369
+6 * 40369
+2 * 40369
+6 4001 40369 40369
+4 * 40369
+6 +1 1 1
+3 +2 1
+3 -1 1
+3 +2 1 1 0 1 0 0 1
+4 * 1
+4 * 1 1
+4 * 1
+6 * 1 1
+4 * 1 1
+4 * 1 1
+4 * 1
+6 * 1 1
+4 * 1
+6 * 1 1
+8 * 1 0 1
+4 * 1 0 1
+4 * 1
+2 * 1 1 0 1 0 0 1
+4 * 1
+3 * 1
+60 +3 40369 40369 0 151 0 0 1
+4 * 40369
+6 +5 40369 40369 0 0 321
+6 * 40369
+6 +1 2 2
+4 * 2
+4 * 2 2
+5 * 2
+6 * 2 2
+4 * 2 2
+4 * 2 2 0 0 1
+4 * 2
+6 * 2 2 0 0 1
+4 * 2
+3 * 2
+6 * 2 2
+8 * 2 0 2
+4 * 2 0 2
+4 * 2
+6 +1 2
+3 +11 2 2
+4 -1 2
+4 +2 2 2
+4 * 2
-12 -1 40367 40367 0 151 1 0 1
+4 -1 40367
+4 +2 40367 40367
+4 * 40367
+6 +7 40369
+7 -2 40369 0 40369 0 0 4 0 0 4
+4 +1 40369 0 40369 151 0 0 1
+4 +1 40369
+2 +2 451 0 451 0 0 1 0 0 1
+8 +1 451 0 451
+8 +2 451 0 451
+4 +1 451 0 451
+4 +2 451
+3 * 451
+4 * 451 0 451
+4 +1 451 0 451
+4 +30 451
+7 * 451
-30 -34 39918 0 39918
+4 +1 39918 0 39918
+4 +2 39918
+3 * 39918
+4 * 39918 0 39918
+4 +1 39918 0 39918
+4 +30 39918
+7 * 39918
0x80290 3962 40359 0 0 151 0 0 1
+5 * 40359 40359
+7 * 40359
+11 * 40359 0 40359
+4 * 40359
+25 +8 40359 40359 0 151 1 0 1
+4 -4 40359
+4 +4 40359
+3 * 40359
+6 * 40359
+6 -7 40359 0 40359
+8 * 40359
0x80430 4093 40369 40369 0 308 0 0 1
+4 * 40369
+2 * 40369
+6 +1 40359 40359
+4 * 40359 0 0 300 0 0 1
+2 * 40359
+6 +1 40359 40359
+7 * 40359
+10 * 40359 0 40359
+3 * 40359
+25 * 40359
+91 3949 139017 0 0 11 0 0 1
+3 * 139017
+6 * 139017
+2 * 139017
0x80550 +68 40367 0 40367 2 0 0 1
+5 * 40367
0x808e0 -41 1066 1066 0 4 3 0 1
+4 * 1066
+4 * 1066
+3 * 1066
+3 * 1066

fn=(1604)
0x844f0 2934 179370 0 179370 11 0 0 1
+2 * 179370 0 179370
+2 * 179370 0 179370
+1 * 179370 0 179370
+1 * 179370
+4 +5 179370 179370 0 1 1 0 1
+7 * 179370 179370 0 0 333
+3 +1 179370
+3 * 179370
+6 +6 179370
+3 * 179370
+2 +5 179370 179370 0 0 542
+4 -2 179370
+4 +2 179370
+2 * 179370
+2 +16 179370
+2 * 179370
+7 * 179370
+14 +1 179370
+2 * 179370 0 179370
cfn=(1606)
calls=179370 0x7fd50 3841 
* * 14288633 3193881 2077117 1455 2302 0 20
+5 +1 179370
+4 * 179370 179370 0 1 0 0 1
+1 * 179370 179370
+1 * 179370 179370
+2 * 179370 179370
+2 * 179370 179370

fn=(290)
0x81b80 3349 1313122 0 0 4 0 0 3
+4 * 1313122
+6 * 1313122
+3 -30 1313122 0 1313122
+2 * 1313122 0 1313122
+2 +30 1313122
+4 -30 1313122 0 1313122
+2 * 1313122 0 1313122
+2 * 1313122 0 1313122
+1 * 1313122 0 1313122
+1 +30 1313122
+3 * 1313122
+4 * 1313122
+3 -30 1313122
+7 +30 1313122
+4 * 1313122
+5 * 1313122
+4 +4 1313122
+3 * 1313122 0 1313122 2 0 208 1 0 3
+5 * 1313122
+6 +14 1313122 1313122 0 0 18 0 0 6
+7 * 1313122
+2 +2 1241482
+2 * 1241482
+3 * 1241482
+3 +2 1241482 1241482
+5 -1 1241482
+4 -1 1241482
+3 +1 1241482
+4 +5 1241482
+3 * 1241482
+2 +3 133703 133703 0 0 896
+4 * 133703
+3 * 133703 133703
+9 * 133703
+3 * 133703 0 133703 10 0 0 1
+5 +1 133703
+3 -1 133703
+3 +1 133703
+2 * 133703
+51 +25 1179419 0 0 3 0 0 2
+7 * 1179419
+2 +2 1177343
+2 * 1177343
+3 * 1177343 0 1177343
+3 +1 1177343
+4 * 1177343
+5 * 1177343
+4 +2 1177343 1177343 0 0 2473 0 0 6
+4 -2 1177343
+4 +2 1177343
+3 * 1177343
+2 +2 1680
+3 * 1680
+2 +4 1680 1680 0 0 4
+4 +1 1680 1680 0 0 16
+4 * 1680
+6 +5 1680 0 1680 1 0 32
+6 +1 1680 0 1680
+4 +1 1680 0 1680
+4 +2 1680
+7 * 1680
+3 * 1680
+16 +23 2076 0 0 151 0 0 2
+3 * 2076
+4 * 2076
+4 * 2076
+6 * 1180
+3 * 1180
+4 * 1180 0 0 1 0 0 1
+4 * 1180
+6 * 1178
+5 * 1178 0 1178
+3 +1 1178 1178
+4 * 1178
-4 * 898 898 0 1
+4 * 898
+2 +1 897
+3 * 897 0 897
cfn=(292) malloc_consolidate
calls=897 0x7e320 4144 
* * 313699 85973 62159 2112 3781 74 13 0 33
+5 3819 1177739 0 0 1 0 0 1
+3 * 1177739
+3 * 1177739
+3 * 1177739
+4 * 1177739
+4 * 1177739
+4 * 1177739 0 1177739 0 0 3
+5 * 1177739 0 1177739 0 0 1
+5 * 1177739
+3 * 1177739 0 0 2 0 0 2
+3 * 1177739 0 1177739
+5 * 1177739 0 1177739
+4 * 1177739
+3 * 1177739 0 1177739 0 0 1
+4 -2 1177739
+2 +2 1177739
+3 -2 1177739
+3 +2 1177739 0 1177739
+4 * 1177739
+4 5002 1177739
+8 3817 1177739 0 1177739
+4 +2 1177739 0 1177739
+5 5004 1177739
+5 3819 1177739
+3 5004 1177739
+3 3819 1177739 0 1177739 2 0 0 2
+4 * 1177739
+3 * 1177739
+4 5004 1177739 0 1177739 0 0 1
+5 * 1177739
+5 3819 1177739 0 1177739
+5 * 1177739
+4 * 1177739
+3 * 1177739 0 1177739
+4 5002 1177739 0 1177739
+5 * 1177739 0 1177739
+5 3469 1177739
+6 * 1177739
-6 * 59
+6 * 59
+12 +66 82715 0 0 9 0 0 1
+2 * 82715
+3 +1 82715
+4 * 82715
+2 * 82715
+5 +1 82715 82715 0 0 1456 0 0 10
+4 -1 82715
+4 * 82715
+2 +51 82715
+5 * 82715
+3 * 82715
+2 * 82715
+2 * 82715 0 82715 0 0 3
+7 +7 82715
+4 -6 82715 0 82715
+4 +1 82715 0 82715
+4 +1 82715 0 82715 0 0 433 0 0 2
+4 +1 82715 0 82715
+4 +3 82715
-41 -58 580
+2 +51 580
+5 * 580
+3 * 580
+2 * 580
+2 * 580 0 580
+7 +7 580
+4 -6 580 0 580
+4 +1 580 0 580
+4 +1 580 0 580 0 0 455 0 0 4
+4 +1 580 0 580
+4 +3 580
+6 3469 1261093 1261093 0 2 3 0 2 1
+4 * 1261093
+3 * 1261093
+6 +3 244480 244480 0 0 36
+4 -1 244480 244480 0 0 1
+4 +1 244480
+4 * 244480
+6 +1 244480 244480 0 0 1
+7 * 244480
+6 +3 244480
+4 +10 244480
+7 * 244480
+2 * 242791 0 0 2 0 0 1
+3 * 242791
+6 +34 87695
+3 -5 87695 0 87695
+4 +1 87695 0 87695 0 0 136
+4 +4 87695
+6 +13 83295
+7 * 83295
+6 +8 580
+3 * 580
+4 * 580
+4 * 580
+6 * 480
+3 * 480
+4 +1 480 0 0 161 0 0 1
+2 * 480
+5 * 480
+4 * 480
+4 +1 480 480 0 0 315 0 0 4
+4 +3 480
+3 * 480
-22 -4 100
+2 * 100
+5 * 100
+4 * 100
+4 +1 100 100 0 0 14 0 0 5
+4 +3 100
+3 * 100
+6 +5 5 5
+4 -2 5
+4 +2 5 5
+4 * 5
+3 * 5
+6 +1 5
+3 * 5
+2 +6 3 3
+4 -1 3 0 3
+4 +1 3 0 3
+4 +1 3 0 3
+4 * 3 0 3
+4 * 3
+5 3382 133703 133703 0 10 255 0 1
+4 * 133703
+3 * 133703
+3 * 133703
+2 * 133703
+6 1879 216940 216940 0 0 1
+6 3770 216940
+4 1879 216940
+2 * 216940
+6 3833 1313122 0 0 2 0 0 1
+7 * 1313122
+3 * 1313122 1313122 0 0 1
+1 * 1313122 1313122
+1 * 1313122 1313122
+2 * 1313122 1313122 0 12 1 0 2
+2 * 1313122 1313122
+2 * 1313122 1313122
+2 * 1313122 1313122
+10 3541 100
+3 * 100
+4 * 100
+4 * 100
+6 * 29
+3 * 29
+7 * 29
+5 +22 2 2
+4 * 2
+3 * 2
+26 +1 2 0 0 1 0 0 1
+3 * 2
+2 +6 2
+6 +6 1 1
+4 -1 1 0 1
+4 +3 1
+3 -2 1 0 1
+4 +1 1 0 1
+4 +1 1 1
+4 * 1 0 1
+4 +2 1 1
+4 * 1
-4 * 1 1
+4 * 1
+61 -39 71 0 0 1 0 0 1
+3 * 71
+4 * 71 0 0 1
+4 * 71
+6 * 36
+3 * 36
+7 * 36
+13 -54 242338 242338 0 1 0 0 1
+4 * 242338
+6 +1 202067
+4 * 202067
+3 * 202067
+6 * 156785
+3 +5 156785
+5 -1 156785 0 0 151 0 0 1
+3 +5 156785
+7 -3 156785 0 156785
+4 * 156785 0 156785
+4 +1 156785 0 156785
+4 +1 156785 0 156785 0 0 1096 0 0 81
+4 * 156785 0 156785
+4 +1 156785
+2 +2 5756 0 5756 0 0 624 0 0 37
+8 +1 5756 0 5756
+8 +3 5756
+7 * 5756
+3 * 5756
+3 * 5756
+4 * 5756
+3 * 5756
+4 * 5756
+3 * 5756 0 5756
+4 +2 5756
+3 * 5756
+4 * 5756 0 5756 0 0 38 0 0 3
+4 +1 5756 0 5756
+4 +3 5756
+4 1879 5756 5756
+6 * 5756
+2 * 5756
-58 3503 151029
+7 * 151029
+3 * 151029
+3 * 151029
+4 * 151029 0 0 151 0 0 1
+3 * 151029
+4 * 151029
+3 * 151029 0 151029
+4 +2 151029
+3 * 151029
+4 * 151029 0 151029 0 0 11 0 0 2
+4 +1 151029 0 151029
+4 +3 151029
+4 1879 151029 151029
+6 * 151029
+2 * 151029
+39 3584 575 0 575 150 0 1 1
+4 * 575 0 575
+4 * 575
+3 * 575
+5 -43 35
+3 * 35
+4 * 35
+4 * 35
+6 * 35
+3 * 35
+7 * 35
+5 +31 1 1 0 1 0 0 1
+4 * 1
0x82167 +31 1016613 0 0 3 0 0 2
+7 * 1016613
+6 +73 1016612 1016612
+3 * 1016612
+3 +1 1016612
+2 * 1016612 0 0 3 0 0 2
+5 +1 1016612
+2 * 1016612
+3 +1 1016612
+2 * 1016612 1016612 0 0 7 0 0 2
+7 +1 1016612
+5 * 1016612
+2 +5 1016612
+2 * 1016612
+2 * 160764
+2 * 160764
+2 * 2
+2 +16 706621
+4 +2 706621
+2 * 706621
+6 -4 869497
+2 * 869497
+2 +8 162876 162876 0 0 26
+4 +3 162876
+3 * 162876
+6 +2 81320
+2 +2 81320 0 0 1 0 0 1
+2 -1 81320
+4 -1 81320
+2 * 81320
+2 * 81320
+2 -27 81320
+2 +27 81320 0 81320
+7 -27 81320
+2 +4 937170 0 0 2 0 0 1
+3 * 937170
+3 * 937170
+2 +3 935990
+2 * 935990 935990
+7 * 935990
+2 * 935990
+6 -3 934733
+3 * 934733
+3 * 934733
+2 +3 933393
+2 * 933393 933393 0 0 1 0 0 1
+7 * 933393 0 0 1
+2 * 933393
+6 -3 932627
+3 * 932627
+2 +3 916673 916673
+6 * 916673
+2 * 916673
+6 3792 935056 935056 0 2 6 0 1 4
+4 +3 935056
+4 -2 935056 935056 0 0 7 0 0 1
+4 * 935056
+4 +2 935056
+3 * 935056
+6 +17 169 169
+4 * 169
+6 +2 59 0 0 50 0 0 1
+3 * 59 0 59
cfn=(292)
calls=59 0x7e320 4144 
* * 10129 2424 2055 164 33
+5 +3 59 59
+4 -1 59
+7 +1 59 0 59
+3 -1 59
0x822c8 3523 4400 0 0 151 0 0 1
+7 -1 4400 0 4400 0 0 19
+6 +1 4400
+3 * 4400
+7 1879 4400 4400
+6 3526 4400
+4 1879 4400
+2 * 4400
+26 3605 2076 2076 0 153 0 0 2
+3 * 2076
+4 * 2076
+5 +3 2076 2076 0 0 898 0 0 7
+4 -3 2076
+4 +3 2076
+4 * 2076
+3 * 2076
+6 * 1 1
+4 * 1
+6 +3 1 1
+4 * 1
+6 +1 1 1
+4 * 1 0 0 1 0 0 1
+3 * 1
+4 * 1
+3 * 1
+2 +6 1 1
+4 * 1
+29 +3 1
+3 * 1
+3 +1 1 1 0 0 1
+4 -1 1 0 1
+4 +1 1
+6 * 1 1 0 1 0 0 1
+4 * 1 1
+4 * 1 1
+4 * 1
+6 * 1 1
+4 * 1
+6 * 1 1
+8 * 1 0 1
+4 * 1 0 1
+4 * 1
+2 * 1 1
+4 * 1
+3 * 1
+6 +3 1 1
+5 * 1
+33 3448 896 0 0 152 0 0 2
+5 * 896 0 896
+3 * 896
+80 1879 110 110 0 57 0 0 3
+6 * 110 0 0 54 0 0 2
+3 * 110
+2 * 110
+33 3448 2 0 0 1 0 0 1
+3 * 2
+4 * 2
+4 * 2
+2 * 2
+3 * 2
+4 * 2
+4 * 2 0 0 1 0 0 1
+6 * 1
+5 * 1 0 1
+3 * 1
+5 * 2023 0 0 151 0 0 1
+2 3692 2023
+2 * 2023
+3 * 2023
+3 +2 2023
+2 * 2023
+5 +1 2023
+5 * 2023
-12 -1 91
+2 * 91
+5 +1 91
+5 * 91
+99 -3 91
+5 * 91
+5 * 91
+2 +27 81556 81556 0 299 19 0 1
+4 * 81556
+4 +3 81556
+3 * 81556
+6 +5 81556
+4 -3 81556
+3 * 81556
+3 +3 81556 81556 0 0 44
+4 -3 81556 0 81556
+4 +3 81556
+6 * 81556 81556 0 2 8 0 1
+4 * 81556 81556
+4 * 81556 81556
+4 * 81556
+6 * 81556 81556 0 0 14
+4 * 81556
+3 * 81556
+6 * 81556 81556
+8 * 81556 0 81556
+4 * 81556 0 81556
+4 * 81556
+2 * 578 578 0 0 4
+4 * 578
+3 * 578
+6 +3 81556 81556
+5 * 81556 0 0 2 0 0 1
+6 +3 35836
+7 -1 35836 0 35836
+5 +1 35836
+3 * 35836
+6 * 35836
0x82658 +12 45720 45720 0 156 0 0 1
+4 +1 45720 45720
+4 * 45720
+6 -6 45720
+4 +17 45720
+7 -6 45720 0 45720 0 0 79 0 0 10
+4 +1 45720 0 45720
+4 +1 45720 0 45720
+4 +1 45720 0 45720 152 0 0 1
+4 +3 45720
+2 +1 45718 0 45718
+4 +1 45718 45718
+8 * 45718
-8 * 2 2
+8 * 2
+2 +2 276 0 276 0 0 37 0 0 1
+8 +1 276 0 276
+8 +2 276
+7 +2 276 276
+4 -2 276
+3 * 276
+3 * 276
+4 * 276
+3 * 276
+4 * 276
+3 * 276 0 276
+4 +2 276
+3 * 276
+4 * 276 0 276 0 0 2 0 0 1
+4 +1 276
+3 * 276 0 276
+4 * 276
-53 -3 45445 0 0 1
+7 +2 45445 45445
+4 -2 45445
+3 * 45445
+3 * 45445
+4 * 45445
+3 * 45445
+4 * 45445
+3 * 45445 0 45445 151 0 0 1
+4 +2 45445
+3 * 45445
+4 * 45445 0 45445 0 0 1
+4 +1 45445
+3 * 45445 0 45445
+4 * 45445
+5 3448 1 0 0 1 0 0 1
+3 * 1
+4 * 1
+4 * 1
+4 * 1
+5 * 1
+4 * 1 0 1
+3 * 1
+66 3827 110 0 0 53 0 0 3
+3 * 110
+3 * 110 0 110 1 0 0 1
cfn=(294) sysmalloc
calls=110 0x81250 2268 
* * 24362 4846 4077 1322 876 335 73 8 167
+5 +1 110
+3 * 110
+18 -28 934887 0 0 151 0 0 1
+7 -3 934887
+3 +1 934887
+4 +2 934887
+3 -1 934887 0 934887
+4 +1 934887
+3 * 934887
+4 +2 934887
+4 -2 934887
+3 * 934887
+4 * 934887 0 0 2 0 0 2
+3 * 934887 0 934887
+4 +2 934887 0 934887 0 0 528408 0 0 528408
+4 +3 934887
+4 1879 934887 934887
+6 * 934887
+2 * 934887
0x82820 3638 1 1 0 1 0 0 1
+4 -4 1
+4 +5 1 1
+4 * 1
+2 +9 1 1
+8 -4 1 0 1
+4 +1 1 0 1
+4 +1 1 0 1
+4 +1 1 0 1
+4 +1 1
+11 * 1 1 0 1 0 0 1
+4 * 1
+4 * 1
0x829b3 +79 578 578 0 150 1 0 1
+4 * 578
+6 * 578 578 0 150 0 0 1
+4 * 578 578
+4 * 578
+6 * 578 578
+5 * 578
+6 * 578 578
+4 * 578 0 578
+4 * 578 578
+4 * 578 0 578
+4 * 578
+34 3622 1 1 0 1 0 0 1
+4 * 1
+6 * 1 1
+4 * 1 1
+4 * 1
+6 * 1 1
+5 * 1
+6 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1

fn=(294)
0x81250 2268 110 0 110 54 0 0 3
+2 * 110 0 110
+2 * 110 0 110
+2 * 110 0 110
+2 * 110 0 110
+1 * 110 0 110 0 0 1
+1 * 110
+3 * 110
+4 +20 110 110 0 0 109
+7 +11 110
+3 -11 110 110 0 0 109
+4 +11 110
+6 +1 110 110 0 0 109 0 0 1
+7 * 110
+3 * 110 0 0 54 0 0 3
+6 * 109 0 109 0 0 53 0 0 1
+5 * 109
fi=(72)
+4 488 109
+3 * 109
+3 * 109 0 109
fe=(70)
+5 2315 109
+5 * 109 0 109
+5 * 109
+3 * 109
+3 * 109 0 109
+5 +65 109 109
+4 +1 109 109
+4 * 109
+3 * 109
+4 +10 109
+3 -9 109 0 0 54 0 0 3
+5 +9 109
+4 * 109 109
+5 * 109
+6 * 1
+3 * 1
+6 +6 109
+4 * 109
+3 * 109 0 109
+5 * 109
+6 +3 109
+7 * 109
+3 * 109
0x8137e 2723 109 109 0 55 0 0 3
+7 * 109
+2 +1 109 0 109
+7 +8 109 109
+4 * 109
+4 * 109 109
+5 * 109
+6 +5 109
+7 -3 109
+3 +3 109
+2 -2 109
+4 +2 109
+3 * 109
+3 * 109
+4 +1 109
+4 -1 109
+4 -1 109 0 109
+4 +4 109
+4 -3 109
+3 * 109 0 109
+4 +1 109 0 109 0 0 88 0 0 88
+4 +8 109
+4 * 109
+3 * 109 109
+1 * 109 109
+1 * 109 109
+2 * 109 109
+2 * 109 109
+2 * 109 109
+2 * 109 109
-17 * 1 0 0 1 0 0 1
+4 * 1
+3 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+2 * 1 1
+9 2391 108 0 0 53 0 0 2
+4 * 108
+2 * 108
+2 * 108
+2 * 108
+4 * 108 0 0 56 0 0 2
+3 * 108
+47 -90 1 1 0 1 1 0 1 1
+6 * 1 1
+6 * 1 0 0 1 0 0 1
+6 +14 1
+5 * 1
+3 * 1
+3 * 1
+3 +6 1
+3 * 1
0x8156b +19 1 0 0 1 0 0 1
+4 * 1
+3 * 1
+6 +15 1
+3 * 1
+4 * 1 0 1 1 0 1 1 0 1
+4 +5 1
+5 * 1 1 1
+8 * 1
+3 +1 1 1
+6 * 1
+2 * 1
+2 * 1 0 1
+8 * 1
+2 +3 1
+3 * 1 1 1
+9 * 1
+3 +1 1 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+6 * 1 0 1
+9 * 1
+17 +98 109 109 0 54 0 0 2
+4 -8 109 109
+7 * 109
+3 * 109
+3 * 109
+5 +8 109
+6 * 47
+4 +11 47 0 0 47
+3 * 47 0 47
+5 * 47
+3 * 47 0 47
+5 * 47
+3 +8 47
+3 -8 47
+3 +8 47
+6 +2 109 109 0 6 108 0 3 1
+7 * 109 0 109
+5 * 109
+3 * 109 0 109
+5 * 109 109 109
cfi=(95)
cfn=(464)
calls=109 0x878c0 46 
* * 5330 1140 704 271 217 103 16 3 1
+2 * 109
+3 +1 109
+1 +3 109
+3 * 109 109 0 56 0 0 3
+5 * 109 109
+6 * 109
+6 +3 61 61 0 0 60 0 0 1
+7 * 61 61 0 0 54
+3 +1 61
+3 * 61
+6 +20 61
+5 * 61
+2 +26 61 61 0 0 61 0 0 1
+8 * 61
-8 * 48 48 0 0 48
+8 * 48
+6 +2 109
+3 * 109 109
+7 +6 109 0 0 56 0 0 3
+3 -6 109 0 109
+7 +6 109
+6 * 106
+2 * 106
+6 +1 60
+3 * 60 60
+7 * 60
+4 * 60 0 60
+4 * 60
0x81730 2321 62 0 0 6 0 0 3
+4 2464 62
+3 +10 62
+3 * 62 0 62
+5 * 62 0 0 6 0 0 3
+3 * 62 0 62
+5 * 62
+3 +8 62
+3 -8 62
+3 +8 62
+6 +26 1 1
+5 * 1
+4 * 1
+3 * 1 1
+5 +3 1
+7 * 1
+3 * 1
-10 * 47 0 0 47
+7 * 47
+3 * 47
+2 * 48
+6 +1 48
+6 +3 48 0 0 48 0 0 1
+3 * 48
+6 +2 48
+3 * 48
+6 * 48
+2 * 48
+5 * 48
+5 * 48
+3 * 48 0 48
+5 * 48 0 48
+5 * 48 0 48
cfi=(75) /build/glibc-bfm8X4/glibc-2.23/misc/../sysdeps/unix/sysv/linux/wordsize-64/mmap.c
cfn=(296) mmap
calls=48 0x101640 33 
* * 1584 336 288 96 0 0 2
+5 +2 48
+4 -2 48
+3 +2 48
+6 +12 48 0 48 48 0 0 1
+7 +5 48
+3 * 48 48
+5 * 48 48
+6 * 48
+6 * 48
+3 * 48
+3 * 48
+3 * 48
+8 +13 49 49 0 1 0 0 1
+6 * 49
+3 * 49
+6 * 1
+3 * 1
+2 * 1
+3 * 1 0 0 1 0 0 1
+6 +37 1
+3 * 1
+18 +6 1
+3 * 1
+3 * 1
+23 +19 1
+3 +3 1
+3 * 1
+3 +1 1 1 0 1 0 0 1
+5 * 1
+3 * 1
+3 * 1 1
+5 * 1
+3 +2 1
+3 -2 1
+3 +2 1
+6 +1 1 1
+7 * 1
+3 * 1 1 1
cfi=(95)
cfn=(464)
calls=1 0x878c0 46 
* * 25 8 4
+2 +12 1
+3 * 1
+6 +8 1 1
+7 +1 1 1
+5 -1 1 1 0 1 0 0 1
+3 * 1 1
+7 +1 1
+3 * 1
+6 +39 49 0 0 48 0 0 1
+3 +1 49
+3 -2 49 0 49
+7 +1 49
+4 * 49
+3 * 49
+4 +12 49
+3 -12 49 0 49 0 0 49 0 0 49
+4 +1 49 0 49
+7 +11 49
+6 +7 48 0 0 48 0 0 1
+4 * 48
+4 +1 48
+3 * 48
+4 +15 48
+4 -15 48 0 48
+4 +8 48 0 48 0 0 14 0 0 14
+9 +3 48 0 48
+9 +4 48
+6 +2 16
+7 * 16
+5 * 16
+3 * 16 0 16
cfn=(1606)
calls=16 0x7fd50 3841 
* * 1296 306 212 0 0 24 0 0 13
+5 * 16 16
+7 * 16 16
+7 * 16
+32 -66 48 0 0 48 0 0 1
+3 * 48
+4 * 48
+6 -70 48
+3 +89 48 0 0 48 0 0 1
+3 * 48
+61 2539 1 0 1 1 0 0 1
+7 * 1
+9 * 1 0 1
+5 * 1
+2 * 1
0x81ad2 -32 48 48 0 48 0 0 1
+7 * 48
+6 * 47
+5 2323 1 0 0 1 0 0 1
+3 * 1
+4 * 1
+2 * 1
+5 * 1
+5 * 1
+3 * 1 0 1 0 0 1
cfi=(75)
cfn=(296)
calls=1 0x101640 33 
* * 33 7 6 2 0 1 2
+5 +2 1 0 0 1 0 0 1
+4 * 1

fn=(292)
0x7e320 4144 956 956 0 170 0 0 2
+8 * 956
+6 -22 955 0 955
+2 * 955 0 955
+2 * 955
+3 * 955 0 955
+2 * 955 0 955
+2 * 955 0 955
+1 * 955 0 955
+1 * 955
+4 +23 955 955 0 151 0 0 1
+9 * 955
+3 * 955 0 955
+4 +12 955
+4 5002 955
+5 4147 955
+4 +11 955
+4 -1 955 0 955
+5 5004 955
+5 -2 955 0 955
+5 +2 955
+3 * 955 0 955
+5 * 955
+5 * 955 0 955 169 0 0 1
+5 * 955
+7 4160 955
+2 * 955 955 955
+3 +1 955
+3 * 955
-8 -1 8595
+2 * 8595 8595 8595 0 2
+3 +1 8595
+3 * 8595
+6 * 1437 0 1437
+4 * 1437
+3 * 1437
+11 +22 3141 3141
+4 -1 3141
+3 +1 3141
+4 * 3141 3141
+5 * 3141
+6 * 3141 3141 0 1 0 0 1
+4 * 3141 3141
+4 * 3141 3141 0 0 25
+4 * 3141
+6 * 3141 3141 0 0 4
+4 * 3141
+6 * 3141 3141
+8 * 3141 0 3141
+4 * 3141 0 3141
+4 * 3141
+2 * 378 378 0 0 1
+4 * 378
+3 * 378
+6 * 378
+7 +4 378 378
+4 +4 378
+7 -3 378 0 378
+4 +1 378 0 378
+4 +2 378
-19 -4 4934 4934 0 349 0 0 1
+4 +4 4934
+7 -3 4934 0 4934
+4 +1 4934 0 4934
+4 +2 4934
+2 +1 447 0 447 0 0 41
+8 +1 447 0 447
+8 +3 447
+3 +1 447 0 447
+4 +1 447 0 447
+4 -2 447
+4 +12 447
+3 -12 447 0 447
+4 +3 447 0 447
+4 * 447
+3 +9 447
-29 -12 4865
+3 +1 4865 0 4865
+4 +1 4865 0 4865
+4 -2 4865
+4 +12 4865
+3 -12 4865 0 4865
+4 +3 4865 0 4865
+4 * 4865
+3 +9 4865
+6 -41 5314 5314 0 316 2212 0 1
+4 -3 5314 5314 0 0 207
+4 +3 5314
+3 * 5314
+4 +1 5314
+4 +1 5314 5314 0 0 377
+4 * 5314
+4 +2 5314
+2 * 5314
+2 +1 621 621
+3 +2 621
+3 -1 621
+3 +2 621 621 0 0 132
+4 * 621
+4 * 621 621
+4 * 621 0 0 1 0 0 1
+6 * 621 621 0 0 18
+4 * 621 621
+4 * 621 621 0 0 70
+4 * 621
+6 * 621 621 0 0 206
+4 * 621
+6 * 621 621
+8 * 621 0 621
+4 * 621 0 621
+4 * 621
+2 * 49 49 0 0 6
+4 * 49
+3 * 49
+6 * 49
+3 +3 49 49
+4 * 49
-4 * 5265 5265 0 318 0 0 1
+4 * 5265
+2 +3 5312 5312 0 0 551
+6 * 5312
+6 +4 2171 0 2171
+5 * 2171
+9 +19 2
+3 * 2
+4 +4 2
+3 -4 2 0 2
+4 +1 2 0 2
+4 * 2
+3 +3 2
+6 * 1
+5 * 1 1 0 1 1
+4 * 1
+3 +3 1
+4 * 1
+4 * 1 1
+5 * 1
-20 -3 1436 1436 0 1 1
+4 * 1436
+3 +3 1436
+4 * 1436
+4 * 1436 1436
+5 * 1436
-13 * 8113 0 0 796 0 0 1
+4 * 8113
+4 * 8113 8113
+5 * 8113
+6 +6 955
+4 * 955 955 0 0 1
+1 * 955 955
+1 * 955 955
+2 * 955 955
+2 * 955 955
+2 * 955 955
+2 * 955 955
0x7ea8b 4996 1 0 0 1 0 0 1
+4 * 1
+7 * 1
+3 * 1
+7 1808 1 0 1 0 0 1 0 0 1
+4 * 1 0 1
+4 * 1
+4 -3 1
+3 * 1
-15 +3 126 0 126 0 0 31 0 0 31
+4 * 126 0 126
+4 * 126
+4 -3 126
+3 * 126
+2 +7 1
+7 * 1
+3 * 1 0 0 1 0 0 1
+12 +5 1
+3 +2 1 0 1 0 0 1 0 0 1
+4 -2 1 0 1
+3 * 1 1
0x7ed62 -1 1 0 1 1 0 0 1
+11 * 1 1
+3 * 1

fn=(462)
0x84130 2902 1313121 0 1313121 2 0 0 1
+1 * 1313121 0 1313121
+1 * 1313121
+4 +5 1313121 1313121 0 0 3 0 0 2
+7 * 1313121 1313121 0 0 4 0 0 2
+3 +1 1313121 0 0 2 0 0 1
+3 * 1313121
+6 +3 1313121 1313121 0 0 6 0 0 2
+7 * 1313121
+3 * 1313121 1313121 0 0 5 0 0 2
+4 * 1313121
+3 * 1313121
+2 * 1313121 1313121
+3 * 1313121
+3 * 1313121
+23 +2 1313121
+3 * 1313121
+3 * 1313121 0 1313121 3 0 0 2
cfn=(290)
calls=1313121 0x81b80 3349 
* * 189910870 24752898 32464665 6452 11212 531960 122 53 528718
+5 +3 1313121
+3 -3 1313121
+3 +3 1313121
+6 +8 1313121 1313121 0 0 1
+7 * 1313121
+9 * 1313121 0 1313121
+2 * 1313121
+24 +2 1313121
+3 * 1313121 0 0 2 0 0 1
+6 * 1313121 1313121 0 0 6
+4 * 1313121
+2 * 1313121
+2 * 1313121
+2 * 1313121
+7 * 1313121
+15 * 1313121
+3 * 1313121
+6 * 1313121
+3 +3 1313121
+4 * 1313121 1313121
+1 * 1313121 1313121
+1 * 1313121 1313121
+11 -18 1313121 0 0 3 0 0 2
+5 * 1313121 1313121 0 0 7 0 0 3
+7 * 1313121
+10 * 1313121 0 1313121
+3 * 1313121
+24 * 1313121

fn=(274)
0x84d10 3172 1 0 1 1 0 0 1
+2 +15 1
+3 -15 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 +10 1
+3 +5 1
+3 * 1
+5 -15 1
+4 +10 1
+4 +5 1
+3 * 1
+33 +8 1 1 0 1 1 0 1
+7 * 1 1 0 0 1
+3 +1 1
+3 * 1
0x84fa0 3311 1
+4 * 1 1
+1 * 1 1 0 0 1
+1 * 1 1
+2 * 1 1
+2 -25 1
cfi=(76)
cfn=(298)
calls=1 0x8f240 53 
* * 22192 1 12676 3 1 3169 3 0 3168
+6 -87 1 1 0 1 0 0 1
+5 * 1
+3 * 1 0 1
cfi=(71)
cfn=(276)
calls=1 0x85830 29 
* * 59057 14282 477 61 1068 45 61 877 34
+2 +4 1
+2 -3 1
+3 +3 1 0 0 1 0 0 1
+3 * 1
+3 -3 1

fl=(101)
fn=(628)
0x109560 60 44102449 0 44102449 1 0 425 1 0 3
+1 +12 44102449
+5 * 44102449
+2 -12 44102449
+3 +12 44102449 0 44102449 0 0 3 0 0 1
+9 * 44102449
+4 +9 44102449 44102449 0 0 3 0 0 1
+7 +1 44102449 44102449 0 1 0 0 1
+7 * 44102449
+2 +15 44102448 44102448
+7 * 44102448 44102448
+7 * 44102448
+3 * 44102448
+3 * 44102448
+4 +1 44102448 44102448 0 0 175103 0 0 598
+3 +1 44102448
+3 * 44102448
+2 +4 1629 1629
+7 * 1629 1629 0 0 9 0 0 3
+4 * 1629
+4 +1 1629 1629
+7 -1 1629 0 1629 1 0 0 1
+4 +1 1629
+2 +4 1629 0 1629
+3 +1 1629
+4 * 1629
+3 +1 1629 0 1629 0 0 206 0 0 198
+3 +1 1629 0 1629 0 0 204 0 0 200
+8 +1 1629 0 1629 0 0 206 0 0 200
+8 +57 1629 0 1629
+11 +5 1629 1629
+1 * 1629 1629
-12 -5 44100820 0 44100820
+11 +5 44100820 44100820
+1 * 44100820 44100820
+14 -59 44100819
+4 * 44100819 44100819 0 1 0 0 1
+7 * 44100819
+3 +1 44100819 44100819 0 0 139273 0 0 31
+3 * 44100819
+2 * 43240377
+2 +36 860410
+4 * 860410
+3 +1 860410 860410 0 0 10
+3 * 860410
+2 * 6
+3 -23 6 6
+4 * 6
+3 * 6
-7 * 860442 860442 0 0 305
+4 * 860442
+3 * 860442
+2 +7 38 38
+4 * 38
+4 +1 38 38
+7 -1 38 0 38
+4 +1 38
+2 +3 38 0 0 1 0 0 1
+4 * 38
+3 +1 38 0 38 0 0 6 0 0 5
+3 +1 38 0 38 0 0 4 0 0 3
+8 +1 38 38
+3 * 38 0 38 0 0 2 0 0 2
+4 +1 38 0 38
+3 +1 38
+2 -26 43240377 0 43240377 0 0 57595 0 0 7
+5 +1 43240377
+5 +40 860404 860404
+4 -2 860404 0 860404
+5 +2 860404 0 860404
+4 +1 860404 860404
+3 * 860404 0 860404
+4 +1 860404 0 860404
+3 +1 860404

fl=(143)
fn=(1302)
0x96760 24 7 0 0 1 0 0 1
+4 +1 7
+2 +1 7
+5 +1 7
+4 +1 7
+5 +1 7
+4 +1 7
+5 +1 7 0 0 1 0 0 1
+6 +1 7 7 0 0 4 0 0 3
+4 +1 7
+4 +1 7
+4 +1 7
+4 +1 7
+4 +1 7
+4 +1 7
+4 +1 7
+2 +1 7
+2 +1 6
+3 +2 6
+4 +7 6 6
+6 +4 1 1
+5 +1 1
+4 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+4 +1 1 1
+5 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+4 +1 1 1
+5 +1 1
+4 +1 1
+4 +1 1
+4 +1 1
+3 +1 1
+4 +1 1 0 0 1 0 0 1
+4 +1 1
+4 +1 1
+3 +1 1
+3 +1 1
0x968c0 +52 1 0 0 1 0 0 1
+4 +2 1
+4 +7 1 1

fl=(126)
fn=(1194)
0x7b220 230 6 6 0 3 1 0 2
+6 * 6
+2 * 6
+12 +2 6 6
+7 * 6 6 0 0 1
+4 * 6 0 0 2 0 0 2
cfi=(125)
cfn=(1176) _IO_file_overflow@@GLIBC_2.2.5
calls=6 0x7a730 808 
* * 705 189 120 11 0 1 11 0 1

fn=(1462) _IO_old_init
0x7ba80 586 2 0 0 1 0 0 1
+2 -16 2
+6 +1 2 0 2 0 0 2 0 0 2
+7 +15 2 0 2
+7 +5 2 2
+7 -21 2 0 2 0 0 2 0 0 2
+2 +2 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +17 2
+3 -16 2 0 2 1 0 0 1
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +2 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +6 2
+2 +1 2 0 2 0 0 2 0 0 2
+6 * 2 0 2
+7 * 2 0 2
+8 * 2 2

fn=(1178) _IO_doallocbuf
0x7b560 395 1 1 0 1 0 0 1
+5 * 1
+11 -1 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 +3 1 1
+2 * 1
+3 * 1
+2 * 1
+12 +1 1 1 0 1 0 0 1
+7 * 1
+3 * 1 1 1 0 1
cfi=(127)
cfn=(1180)
calls=1 0x6d180 95 
* * 265 46 41 28 10 1 10 0 1
+3 * 1
+3 * 1
+2 +3 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1

fn=(1460)
0x7bb30 599 2 0 2 1 0 0 1
+2 * 2 0 2
+2 * 2
+3 * 2 0 2
+1 * 2 0 2
+1 * 2
+3 * 2
+3 * 2 0 0 1 0 0 1
+3 * 2
+4 +1 2 0 2
cfn=(1462)
calls=2 0x7ba80 -14 
* * 50 4 38 2 0 6 2 0 6
+5 +3 2
+3 -2 2 0 2
+7 +2 2
+6 +2 2 0 2
+7 +1 2 0 2 0 0 2 0 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2 1 0 0 1
+7 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2
+8 +1 2 0 2 0 0 2 0 0 2
+8 +2 2 0 2
+7 +7 2 0 2 1 0 0 1
+11 +1 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2

fn=(1188)
0x7b500 380 1 0 1 1 0 0 1
+1 * 1
+3 * 1
+4 +1 1 1
+4 * 1 1
+2 * 1
+3 * 1
+6 +3 1 0 1
+4 +2 1
+2 * 1
+3 * 1
+3 * 1
+2 -3 1 0 1
+4 +3 1
+3 * 1 0 1
+2 +3 1
+4 * 1 1
+1 * 1 1

fn=(1466) _IO_link_in
0x7acb0 98 4 4 0 1 0 0 1
+2 * 4
+2 * 4
+6 -1 2 0 2
+1 * 2 0 2
+1 +3 2
+2 * 2 0 0 1 0 0 1
+3 -3 2
+4 +5 2 2 0 0 1 0 0 1
+6 -2 2 0 2
+2 +2 2
+2 * 2
+6 * 2
+7 * 2 0 2
+9 * 2 0 2
+4 +1 2 2
+9 * 2 2 0 0 1 0 0 1
+7 * 2
+2 * 2
+5 * 2 0 0 1 0 0 1
+2 * 2 2
+7 * 2
+14 * 2 0 2
+7 * 2
+28 * 2 0 2 1 0 0 1
+7 +2 2 2
+2 -2 2 2
+6 +1 2 0 2
+7 +1 2
+2 -2 2
+3 +2 2
+5 -2 2 0 2
+6 +2 2
+6 * 2 2
+7 * 2 2
+9 * 2 2
+4 * 2
+2 * 2 0 0 1 0 0 1
+5 * 2 2
+7 * 2
+11 * 2 0 2
+4 * 2
+24 * 2 2
+7 * 2 2
+2 * 2 0 2
+4 +2 2 2 0 1 1 0 1 1
+7 -2 2 0 2
+5 +4 2 0 2
+7 +2 2
+3 -3 2 0 2
+7 -1 2 0 2
+4 +4 2
+6 * 2 2
+4 * 2
+3 * 2
+2 * 2 0 2
+4 * 2 2
+6 * 2
+6 +2 2
+3 -1 2 0 2 1 0 0 1
+11 +1 2
+2 * 2 0 2
+6 * 2
+2 * 2 0 2
+11 * 2 2
+7 * 2
+13 * 2 0 2
+6 * 2
+28 +1 2 0 0 1 0 0 1
+2 * 2
+6 +3 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
* * 2 2
+93 -6 2 0 2 1 0 0 1
+8 * 2 2
+7 * 2
+10 * 2 0 2
+3 * 2
+24 * 2 2
+6 * 2

fn=(1192) _IO_default_xsputn
0x7b630 425 2 0 0 2 0 0 2
+3 * 2
+6 -3 2 0 2
+2 * 2 0 2
+2 * 2
+3 * 2 0 2 2 0 0 2
+2 * 2 0 2
+1 * 2
+3 * 2 0 2
+1 * 2
+3 * 2
+3 * 2
+3 +8 2 2
+5 * 2 2
+5 * 2
+3 * 2
-13 * 35 35
+5 * 35 35
+5 * 35
+3 * 35
+56 +25 37 0 0 2 0 0 2
+3 * 37
+2 * 35 35
+8 * 35 35
+4 * 35
+3 * 35
+4 * 35 35 35
cfi=(125)
cfn=(1176)
calls=35 0x7a730 808 
* * 1155 315 175 0 0 1
+3 * 35
+3 * 35
+2 +2 35
+4 -2 35
+3 * 35
+28 +4 2 0 0 2 0 0 2
+3 +1 2 2
+1 -1 2
+3 +1 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2

fl=(145)
fn=(1306)
0x4a6b0 168 3 0 0 1 0 0 1
+7 * 3
+7 * 3
+2 * 3 0 0 1 0 0 1
+4 +2 3
+3 * 3
0x4a740 +9 3 0 0 1 0 0 1
+10 * 3
+6 * 3
+3 * 3
+4 * 3
+3 * 3
+4 * 3
+4 * 3
+3 * 3
+3 * 3
+3 * 3 3 0 0 3 0 0 3
+5 * 3
+3 * 3 0 3
+2 * 3
-37 * 10
+3 * 10
+4 * 10
+3 * 10
+4 * 10
+4 * 10
+3 * 10
+3 * 10
+3 * 10 10
+5 * 10
+3 * 10 0 10
+2 * 10
+2 +9 3
+3 * 3 3

fl=(119) /build/glibc-bfm8X4/glibc-2.23/setjmp/../sysdeps/x86_64/bsd-_setjmp.S
fn=(1146) _setjmp
0x35250 30 1 0 0 1 0 0 1
+2 +2 1
cfi=(120) /build/glibc-bfm8X4/glibc-2.23/setjmp/../sysdeps/x86_64/setjmp.S
cfn=(1148) __sigsetjmp
calls=1 0x351b0 -6 
* * 28 6 10 3 0 1 3

fl=(108) /build/glibc-bfm8X4/glibc-2.23/elf/dl-profstub.c
fn=(778) _dl_mcount_wrapper_check
0x1434f0 38 128 128 0 1 0 0 1
+7 * 128 128
+8 * 128 0 0 1 0 0 1
+33 +1 128 128

fl=(120)
fn=(1148)
0x351b0 26 1 0 1 1 0 0 1
+3 +9 1
+3 +1 1 1
+9 * 1 0 0 1 0 0 1
+4 +1 1 0 1
+4 +4 1 0 1 0 0 1
+4 +1 1 0 1
+4 +1 1 0 1
+4 +1 1 0 1
+4 +1 1
+5 +2 1 1
+9 * 1
+4 +2 1 0 1
+4 +1 1 1
+4 +1 1
+1 +2 1 1
+9 * 1
+4 +2 1 0 1 1 0 0 1
+4 +9 1
cfi=(121) /build/glibc-bfm8X4/glibc-2.23/setjmp/sigjmp.c
cfn=(1150) __sigjmp_save
calls=1 +13 -36 
* * 9 2 2

fl=(98)
fn=(602)
0x20740 134 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1
+3 * 1 0 1
+1 * 1
+7 +4 1 1
+7 -4 1 0 1
+5 * 1 0 1
+4 * 1 0 1
+5 +4 1
+3 * 1
+15 * 1
+7 +82 1 0 0 1 0 0 1
+3 -82 1 0 1
+2 +82 1
+2 +1 1
+2 * 1
+2 * 1
+3 * 1 0 1
cfi=(82)
cfn=(318)
calls=1 0x3a280 57 
* * 66 13 15
+5 +22 1 1
+7 * 1 1
+2 * 1
+3 * 1
+6 +3 1
+3 * 1
+2 +1 1 1
+7 * 1 1
+5 * 1 1
+4 * 1 1
+3 * 1 0 1
cob=(5)
cfi=(66)
cfn=(604)
calls=1 0x41e180 0 
* * 104809 28563 12079 451 658 171 434 109 141
+2 +4 1 1 0 1 0 0 1
+7 * 1 1 0 0 1
+7 * 1
+3 * 1
+6 +15 1
+2 * 1
+6 +12 1
+5 * 1 0 1
cfi=(119)
cfn=(1146)
calls=1 0x35250 30 
* * 30 6 10 4 0 1 4
+5 +1 1
+2 * 1
+2 +5 1 1 0 0 1
+9 * 1 0 1
+5 +1 1 1 0 1 1
+9 * 1 0 1 0 0 1
+5 +3 1
+5 * 1 0 1
+9 +3 1 1 0 0 1
+7 * 1 1
+5 * 1 1
+4 * 1 1 0 0 1
+3 * 1 1
+5 * 1 0 1
cob=(5)
cfi=(99)
cfn=(1152)
calls=1 0x4016f6 8 
* * 3345712434 1232500974 845096873 173000 1165844 990772 1996 1615 925323
+9 138 1 0 0 1 0 0 1
+2 * 1

fl=(114)
fn=(1048)
0x9f570 24 16 0 0 2 0 0 2
+2 +1 16
+2 +1 16
+4 +1 16
+2 +1 16
+5 +1 16 0 0 2 0 0 2
+5 +1 16
0x9f7f0 197 16 0 0 1 0 0 1
+2 +1 16
+16 +5 16 16 0 2 0 0 2
+4 +1 16 16 0 0 2 0 0 1
+4 +1 16
+2 +1 16
+4 +3 16
+2 +1 16 16

fl=(111)
fn=(794)
0x8b720 66 73 0 0 2 0 0 2
+4 +1 73
+4 +1 73
+4 +1 73
+4 +1 73
+3 +1 73
+3 +1 73
+7 +2 73 0 0 2 0 0 2
+7 +2 73
+2 +30 73 73 0 0 9 0 0 7
+4 +1 73
+4 +1 73
+4 +1 73
+2 +1 73
+2 +1 69
+3 +1 69 69
+1 +4 4
+4 +1 4 4
+5 +1 4 4
+5 +1 4 4 0 0 1 0 0 1
+5 +1 4
+4 +1 4
+5 +1 4
+4 +1 4
+4 +1 4 0 0 2 0 0 2
+4 +1 4
+3 +1 4
+4 +1 4
+3 +5 4
+3 * 4
+3 * 4
+4 * 4
+3 * 4
+3 * 4
+6 * 4
+4 * 4 4

fl=(121)
fn=(1150)
0x35210 28 1
+2 +1 1
+2 -1 1 0 1
+1 * 1
+3 +1 1
+23 * 1 0 1
+3 +5 1
+2 * 1 1
+1 * 1 1

fl=(50)
fn=(190)
0x8d6f0 45 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1 0 1 0 0 1
+10 +1 1
+2 +1 1
+7 +1 1 1

fn=(186)
0x8b280 45 1 1 0 1 0 0 1
+7 +1 1
+7 +1 1 1 0 0 1
+10 +1 1
+2 +1 1
+7 +1 1 1

fl=(200)
fn=(3398)
0x71290 25 1 0 1 1 0 0 1
+1 +2 1 1 0 0 1
+7 -2 1
+2 +2 1 1 0 0 1
+2 * 1
+3 * 1
+5 * 1
+2 * 1 1 0 0 1
+7 * 1 1
+9 * 1 1
+4 * 1
+6 * 1 0 0 1 0 0 1
+5 * 1 1
+7 * 1
+11 * 1 0 1
+4 * 1
+24 * 1 1
+7 * 1 1 0 1 0 0 1
+7 * 1 0 1
+4 * 1 0 1
+5 +1 1 1 0 0 1
+4 * 1 1
+4 * 1
fi=(131)
+15 866 1 1
+6 * 1
+9 +1 1 1
+7 * 1 0 1
+4 * 1
+2 * 1 0 1 1 0 0 1
+8 * 1 1
+7 * 1
+9 * 1 0 1
+2 * 1
fe=(200)
+24 31 1
+2 * 1 1
+1 * 1 1
+14 -3 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(126)
cfn=(1194)
calls=1 0x7b220 230 
* * 39 12 5 5 2 1 4 0 1
+5 * 1
+2 * 1

fl=(125)
fn=(1196) _IO_file_write@@GLIBC_2.2.5
0x78b70 1258 9 0 0 1 0 0 1
+3 -2 9 0 9
+2 * 9
+3 * 9 0 9 0 0 1 0 0 1
+2 * 9 0 9
+2 * 9 0 9
+1 * 9 0 9
+1 +2 9 0 0 3 0 0 2
+6 * 9
+3 * 9
+3 * 9
+3 +4 9
+6 * 9
+5 +1 9 9
+5 * 9
+47 +10 9 9
+7 * 9
+3 * 9
+12 +3 9 9
+1 * 9 9
+1 * 9 9
+2 * 9 9
+2 * 9 9
+2 * 9 9
+6 -13 9 9 0 2 0 0 2
+4 * 9
+3 * 9
+3 * 9 0 9
cfi=(129) /build/glibc-bfm8X4/glibc-2.23/io/../sysdeps/unix/syscall-template.S
cfn=(1198) write
calls=9 0xf7280 84 
* * 68 18 0 2 0 0 2
+5 +1 9 0 0 2 0 0 2
+3 * 9
+2 +5 9
+3 +1 9
+3 -12 9
+3 * 9
+2 * 9
+3 * 9
+3 * 9

fn=(1174)
0x791e0 1287 15 0 0 2 0 0 1
+2 -1 15
+3 * 15
+6 -6 15 0 15
+2 * 15 0 15
+2 * 15 0 15
+2 * 15 0 15
+2 * 15
+3 * 15 0 15
+1 * 15 0 15
+1 * 15
+3 * 15
+3 * 15 0 0 3 0 0 2
+4 +13 15 15
+2 * 15
+5 * 15
+5 * 15
+6 +17 1 1 0 0 1 0 0 1
+4 * 1 1
+4 * 1
+3 * 1
+17 +4 14
+3 +5 14
+3 * 14
+4 * 14
+3 * 14 0 14 1 0 1 1 0 1
cfi=(144)
cfn=(1304)
calls=14 0x8f3b0 61 
* * 308 41 27 10 0 4 9 0 2
+5 * 14 0 14
+4 +6 14
+3 -1 14
+3 +1 14
+3 * 14
+3 +2 14
+3 * 14
+6 +27 15
+3 * 15
+3 +1 15
+4 * 15 15
+1 * 15 15
+1 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+2 * 15 15
+9 -24 1 1 0 1 0 0 1
+7 * 1 0 0 1 0 0 1
+5 * 1
+3 * 1
+3 * 1 1 1 0 1
cfn=(1176)
calls=1 0x7a730 808 
* * 337 65 59 39 11 1 21 0 1
+3 * 1
+3 * 1
+2 +6 5 5 0 1 0 0 1
+4 * 5 5
+4 +1 5
+2 * 5
+4 * 5
+6 +2 5
+3 * 5
+3 * 5
+6 +11 5
+3 * 5
+2 +1 2
+5 * 2
+3 * 2 0 0 1 0 0 1
+3 * 2 0 2
cfi=(126)
cfn=(1192)
calls=2 0x7b630 425 
* * 1767 506 220 8 0 1 8
+5 * 2
+3 * 2
+6 -57 14 14 0 1 4 0 1 2
+4 * 14 14
+4 * 14
+3 +1 14
+3 * 14
+6 +3 14
+4 * 14
+3 * 14
+2 +2 14 14
+4 * 14
+4 * 14
+2 * 3
+9 * 137
+4 * 137 137
+3 * 137
+6 -2 147 0 0 2 0 0 2
+3 * 147
+2 * 10
+3 * 10
+62 +39 5 0 0 2 0 0 2
+3 * 5
+2 * 5
+3 * 5
0x793e0 -35 4 0 0 3 0 0 2
+3 +11 4
+6 * 4
+3 * 4
+4 * 4
+3 * 4
0x7946d +17 4 4 0 2 0 0 2
+7 * 4
+3 * 4
+3 * 4 4 4 0 4 0 0 2
cfn=(1176)
calls=4 0x7a730 808 
* * 467 124 80 14 4 1 12 2 1
+3 * 4
+3 * 4 0 0 2 0 0 2

fn=(1468)
0x79b30 249 2 0 2 1 0 0 1
+2 * 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+2 * 2 0 2
+1 * 2 0 2
+1 * 2
+4 +11 2 2 0 1 0 0 1
+4 * 2
+2 +2 2 2 0 0 1 0 0 1
+3 * 2
+2 * 2
+6 * 2
+2 * 2
+95 +9 2 0 0 1 0 0 1
+6 -2 2
+5 +1 2 0 0 1 0 0 1
+6 +17 2 2
+5 * 2
+4 * 2
+4 * 2
+6 * 2
+6 * 2
+4 * 2
+6 * 2
+4 * 2
+2 * 2
+3 * 2
+3 * 2
0x79d20 +41 2 0 0 1 0 0 1
+3 * 2
+3 * 2
+5 * 2
+2 * 2
+3 * 2 0 2
cfn=(1470) _IO_file_open
calls=2 0x79a40 214 
* * 91 20 14 4 0 0 4
+5 +3 2
+3 -3 2
+3 +3 2 0 0 1 0 0 1
+6 +17 2
+5 * 2
+7 * 2 0 2
cfi=(156)
cfn=(1476)
calls=2 0x8e060 53 
* * 48 18 12 4 1 0 4 1
+5 +1 2
+3 -1 2
+3 +1 2
0x7a160 +76 2 0 0 1 0 0 1
+4 -76 2
+3 +76 2 2
+1 * 2 2
+1 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2
+2 * 2 2

fn=(1176)
0x7a730 808 46 46 0 2 0 0 2
+2 * 46
+3 * 46
+6 +7 46
+3 -8 46 0 46
+2 * 46 0 46 2 0 0 2
+1 * 46
+2 * 46 0 46
+1 * 46
+3 +8 46
+2 * 45 45
+4 * 45
+3 * 45
+6 * 45 45
+4 +35 45
+3 * 45
-3 * 1
+3 * 1
+6 +3 41 41
+4 * 41
+6 +3 41
+4 * 41 0 41
+4 * 41 0 41 0 0 2 0 0 1
+3 +1 41 41
+2 * 41
+2 * 41 0 0 1 0 0 1
+6 +1 41
+3 * 41
+2 * 41
+3 * 41
+2 +4 41
+4 +1 41 41
+1 * 41 41
+1 * 41 41
+2 * 41 41
+4 -45 1 1 0 1 0 0 1
+5 * 1
+10 +12 1
+3 * 1
+6 +9 1 1
+4 * 1
+3 * 1
+6 * 1 1 0 1 0 0 1
+4 +8 1 1
+6 -4 1 0 1
+4 +3 1
+2 * 1
+3 -2 1 0 1
+4 * 1 0 1
+4 -3 1 0 1
+4 +1 1 0 1
+4 * 1
+3 +5 1
+2 -1 1 0 1
+2 +1 1
+6 * 1
+6 * 1
+6 +1 1 0 1
+4 * 1 0 0 1 0 0 1
+11 +12 5 5 0 1 0 0 1
+4 -1 5 5
+4 * 5
+3 * 5
+3 * 5 0 5
cfn=(1190) _IO_do_write@@GLIBC_2.2.5
calls=5 0x7a390 494 
* * 472 125 85 7 0 0 7
+5 * 5
+3 * 5
0x7a8b0 -8 5 0 0 3 0 0 2
+3 * 5
+3 +12 5 5
+1 * 5 5
+1 * 5 5
+2 -12 5
cfn=(1190)
calls=5 0x7a390 494 
* * 383 101 68 13 4 1 12 2 1
+54 -31 1 0 0 1 0 0 1
+3 * 1 0 1
cfi=(126)
cfn=(1178)
calls=1 0x7b560 395 
* * 283 54 45 30 11 1 12 0 1
+5 +1 1 1
+4 * 1 1
+2 * 1 0 1 1 0 0 1
+4 * 1 0 1
+4 * 1 0 1
+4 * 1

fn=(1464)
0x79810 144 2 0 2 1 0 0 1
+1 * 2 0 2
+1 +4 2
+7 -4 2
+3 * 2
+4 +5 2 0 2
+6 -1 2 0 2
+7 +3 2 0 2
cfi=(126)
cfn=(1466)
calls=2 0x7acb0 -53 
* * 162 44 44 9 3 0 9 3
+5 +1 2 0 2
+3 +1 2
+4 * 2 2
+1 * 2 2
+1 * 2 2

fn=(1182)
0x78b60 1229 1 0 0 1 0 0 1
+3 +1 1 1
+3 * 1
+5 * 1
cfi=(128)
cfn=(1184)
calls=1 0xf6bf0 34 
* * 10 1 0 2 0 0 2

fn=(1190)
0x7a390 494 10 0 0 2 0 0 2
+2 * 10
+3 * 10
+2 +1 1 1
+9 -3 9 0 9
+2 * 9 0 9
+2 * 9
+3 * 9 0 9
+1 * 9 0 9
+1 * 9
+3 * 9
+3 * 9
+4 +11 9 9
+6 * 9
+6 +7 9 9 0 3 0 0 3
+4 * 9 9
+4 * 9
+3 * 9
+44 +8 9 9
+7 * 9
+3 * 9 0 0 3 0 0 3
+3 * 9
+3 * 9 9 9 0 4 0 0 2
cfn=(1196)
calls=9 0x78b70 1258 
* * 401 99 54 10 0 1 9 0 1
+3 * 9
+3 +1 9 9
+7 * 9
+3 * 9
+2 * 9
+3 * 9
+2 +6 9 9
+6 -4 9 9
+4 +4 9
+2 -4 9 0 9
+4 * 9 0 9
+4 * 9 0 9
+4 +1 9 0 9
+4 * 9 0 9
+4 +3 9
+6 -2 9 0 9
+4 -29 9
+2 * 9
+3 * 9
+3 * 9
+2 +1 9
+4 * 9 9
+1 * 9 9
+1 * 9 9
+2 * 9 9
+2 * 9 9
+21 +29 9 9 0 2 0 0 2
+6 * 9

fn=(1470)
0x79a40 214 2 0 2 1 0 0 1
+1 * 2 0 2
+1 * 2
+3 * 2
+3 * 2
+3 * 2
+4 +3 2 2
+4 * 2
+22 +8 2
+2 * 2
+2 +3 2 2
+2 * 2
+3 +3 2
+7 -3 2
+5 -1 2 0 2 1 0 0 1
+3 +1 2
+6 * 2
+2 +3 2
+7 -3 2 0 2
+2 +3 2
+2 +10 2
+3 * 2 0 2
cfi=(126)
cfn=(1466)
calls=2 0x7acb0 98 
* * 8 4
+5 +1 2
+3 +1 2
+4 * 2 2
+1 * 2 2
+1 * 2 2
+27 -22 2 0 0 1 0 0 1
+2 * 2
+2 * 2 0 2
+5 * 2 0 2
cfi=(129)
cfn=(1472) open
calls=2 0xf7000 84 
* * 15 4 0 1 0 0 1
+5 * 2 2
+5 * 2
+2 * 2

fl=(106)
fn=(774)
0xaca90 38 256 0 0 1 0 0 1
+6 * 256
+5 * 256
+2 * 256
+3 * 256
+2 +5 256
+6 * 256
+2 * 256
+2 -10 128 0 128
+2 * 128 0 128
+1 * 128 0 128
+1 * 128
+2 * 128
+4 +14 128 128
+7 * 128 128 0 1 0 0 1
+4 * 128 128 0 0 1
fi=(107) /build/glibc-bfm8X4/glibc-2.23/wcsmbs/./wcsmbsload.h
+3 +24 128 128 0 0 1
+5 * 128
+3 * 128
fe=(106)
+6 -20 128 128 0 0 1
+5 -3 128 128
+4 * 128 128 0 0 1
+4 +3 128
+2 * 128
+3 * 128
+2 +4 128 128 0 0 1
+4 * 128
+15 +3 128
+3 * 128 0 128
cfi=(108)
cfn=(778)
calls=128 0x1434f0 -20 
* * 512 384 0 2 0 0 2
+5 * 128
+3 * 128 128
+4 * 128 0 128
cfi=(109)
cfn=(780)
calls=128 0x23b80 -6 
* * 640 128 0 1 0 0 1
+3 +41 128
+4 * 128 128
+1 * 128 128
+1 * 128 128
+2 * 128 128
* * 128 128 0 1 0 0 1
fi=(107)
0xacbe0 -26 128 0 0 1 0 0 1
+7 +1 128
+7 -1 128
+3 * 128
fe=(106)

fl=(77)
fn=(302)
0x1096e0 64 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1
+7 +9 1
+3 * 1
+6 +13 1 1 0 0 1 0 0 1
+8 * 1 0 0 1 0 0 1
+3 * 1
+3 * 1
+3 * 1
+3 * 1
+56 +5 1 0 0 1 0 0 1
+5 +15 1
+7 +3 1
+7 -2 1 0 1 0 0 1
+11 * 1 0 1 0 0 1
+9 -5 1
+3 * 1 0 1 0 0 1
+8 * 1 0 1
+8 +7 1 0 0 1 0 0 1
+5 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1 1 0 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+8 * 1 0 1
+11 -8 1 0 1
+7 +1 1 0 1
+7 +1 1 0 1 1 0 0 1
+7 +1 1 0 1
+7 +2 1 0 1
+5 +3 1 0 1
cfi=(78)
cfn=(304)
calls=1 0x356f0 -75 
* * 105 38 38 9 2 5 9 0 2
+5 * 1
+2 * 1
+6 +3 1 0 1
+9 +1 1 0 1
cfi=(80)
cfn=(308)
calls=1 0x10a300 -86 
* * 3 3 0 1 2 0 1
+5 * 1
+2 * 1
+5 +2 1
+3 -2 1
+1 +2 1
+5 -2 1
+2 * 1
+2 * 1 0 1 1 0 0 1
+5 +1 1 1
+5 * 1 1
+5 * 1 0 1
+5 +1 1
+7 -1 1 0 1
+4 +1 1 0 1
cfi=(81)
cfn=(310)
calls=1 0xbf630 -31 
* * 5 1 0 1 0 0 1
+5 +1 1
+7 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1

fn=(1202) __profil_counter
0x109690 40 3459 3459 0 1 2843 0 1 24
+7 * 3459 3459 0 0 2307 0 0 2
+7 * 3459
+3 * 3459
+4 * 3459
+3 +5 3459 3459
+6 -5 3459
+3 +5 3459
+3 * 3459
+3 * 3459
+4 * 3459
+4 * 3459 0 0 195 0 0 1
+4 * 3459
+4 * 3459
+3 +2 3459 3459
+7 * 3459
+2 +1 1088 1088
+7 * 1088 0 1088 0 0 1064 0 0 434
fi=(130) /build/glibc-bfm8X4/glibc-2.23/gmon/../sysdeps/unix/sysv/linux/x86_64/profil-counter.h
+5 -18 1088 1088 0 0 925 0 0 7
cfi=(53)
cfn=(1206) 0x00000000000354b0
calls=1088 0x354b0 -30 
* * 2176 0 0 46
* * 2371 2371 0 0 2065 0 0 20
cfi=(53)
cfn=(1206)
calls=2371 0x354b0 -30 
* * 4742 0 0 107 0 0 2
fe=(77)

fl=(75)
fn=(296)
0x101640 33 49 0 0 49 0 0 2
+3 -1 49 0 49
+2 * 49
+3 * 49 0 49 0 0 1
+2 * 49
+3 * 49 0 49
+2 * 49
+3 * 49 0 49
+2 * 49
+3 * 49 0 49
+1 * 49 0 49
+1 +1 49
+2 * 49
+3 * 49
+3 +1 49
+3 * 49
+3 * 49
+3 * 49
+3 * 49
+3 * 49
+3 * 49
+5 * 49
+2 * 49
+6 * 49
+2 +2 49 49
+1 * 49 49
+1 * 49 49
+2 * 49 49
+2 * 49 49
+2 * 49 49
+2 * 49 49
+4 -3 49 0 0 49 0 0 2
+3 * 49

fl=(129)
fn=(1200) __write_nocancel
0xf7289 84 9
+5 * 9
* * 5
+2 * 9
+6 * 9
+2 * 9 9

fn=(1472)
0xf7000 84 2 2 0 1 0 0 1
+7 * 2
cfn=(1474) __open_nocancel
calls=2 +2 * 
* * 11 2

fn=(1198)
0xf7280 84 9 9 0 2 0 0 2
+7 * 9
cfn=(1200)
calls=9 +2 * 
* * 50 9

fn=(1474)
0xf7009 84 2
+5 * 2
* * 1
+2 * 2
+6 * 2
+2 * 2 2

fl=(47)
fn=(180)
0xbc380 38 1 0 0 1 0 0 1
+7 -1 1
+4 +1 1
+7 * 1 0 1
+8 * 1 0 1
+8 * 1
+5 * 1 0 1
+4 * 1
fi=(48)
+5 +10 1
+4 * 1
+4 * 1
+3 +14 1
+3 * 1 0 0 1 0 0 1
+6 * 1
+4 * 1
+3 -17 1 1 0 0 1 0 0 1
+3 * 1
+2 * 1
-32 +3 3
+4 * 3
+4 * 3
+3 +14 3
+3 * 3
+6 * 3
+4 * 3
+3 -17 3 3
+3 * 3
+2 * 3
fe=(47)
+2 -7 1
+5 * 1
+6 * 1
+2 +3 1
+7 * 1
+3 -3 1 0 1
+9 +3 1 0 1
cfi=(49)
cfn=(184)
calls=1 0x143d40 -14 
* * 6 3 0 2 1 0 2
+5 +1 1
+7 * 1 0 0 1 0 0 1
+3 * 1
+4 +1 1
+4 * 1 1

fl=(79)
fn=(306)
0x354c0 47 1 0 0 1 0 0 1
+7 +4 1
+3 -4 1
+3 +4 1
+6 +3 1 1
+4 * 1
+5 -1 1 1
+3 +1 1 0 1 0 0 1
+5 * 1 1
+4 -1 1 0 1
+5 +1 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1 1 0 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1 0 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1 1 0 0 1
+4 * 1 1
+4 * 1 0 1
+4 * 1 1
+4 * 1 0 1 0 0 1
+7 * 1 1
+4 * 1 0 1
+7 * 1 1
+7 +1 1 1
+6 -1 1 0 1
+7 +1 1
+5 +7 1
+3 -7 1
+2 * 1 0 1 1 0 0 1
+5 +2 1
+7 * 1 0 1
+5 +5 1
+6 * 1
+5 * 1
+3 * 1
+5 * 1
+6 * 1
+3 * 1
+2 * 1
+2 * 1
+6 * 1
+3 * 1
+6 +3 1
+3 * 1 0 0 1 0 0 1
+6 * 1
+2 * 1
+6 +3 1 1
+5 -1 1 1
+5 +1 1 0 1
+4 * 1 1 0 0 1
+5 -1 1 0 1
+3 +1 1 0 1
+4 * 1 1
+5 * 1 0 1
+4 * 1 1
+5 * 1 0 1 0 0 1 0 0 1
+4 * 1 1
+5 * 1 0 1 1 0 0 1
+4 * 1 1
+5 * 1 0 1
+4 * 1 1
+5 * 1 0 1
+4 * 1 1
+5 * 1 0 1
+4 * 1 1
+8 * 1 0 1
+4 * 1 1 0 0 1
+8 * 1 0 1
+4 * 1 1
+8 * 1 0 1 1 0 0 1
+4 * 1 1
+8 * 1 0 1 0 0 1 0 0 1
+4 * 1 1
+8 * 1 0 1
+4 * 1 1
+8 * 1 0 1
+4 * 1 1
+8 * 1 0 1
+4 * 1 1
+8 +1 1 1
+5 -1 1 0 1 1 0 0 1
+7 +1 1 0 1
+7 +1 1 1
+5 * 1 0 1
+7 +3 1
+7 * 1 1

fl=(105)
fn=(768)
0xacc10 40 128 0 0 1 0 0 1
+3 * 128
+6 +5 128
+3 * 128
+2 +1 128
+2 * 128 128

fl=(72)
fn=(280)
0x85460 258 1 0 1 1 0 0 1
+2 * 1 0 1
+2 * 1 0 1
+2 * 1 0 1
+1 * 1 0 1
+1 * 1
+4 +13 1 1 0 0 1 0 0 1
+8 -8 1 0 1
+10 +8 1 0 0 1 0 0 1
+23 +6 1 1 0 0 1
+7 * 1
+7 * 1 0 1 0 0 1
+4 +2 1 1 0 0 1
+7 * 1 1 0 0 1 0 0 1
+3 * 1
+3 * 1
0x8555e +67 1 1 0 1 0 0 1
+7 * 1 1 0 0 1 0 0 1
+3 +1 1
+3 * 1
+4 +2 1 0 1 0 0 1
+10 +1 1
+4 * 1 1
+1 * 1 1
+1 * 1 1
+2 * 1 1
+2 * 1 1 0 0 1
+2 * 1 1
+41 -78 1 0 0 1 0 0 1
+5 * 1
+5 * 1
+7 * 1 0 0 1 0 0 1
+2 * 1 0 1
cfi=(73)
cfn=(282)
calls=1 0x143190 126 
* * 58080 14212 162 12 1054 5 12 870
+5 * 1
+2 * 1
+6 +1 1 1
+5 * 1 1
+5 * 1
+6 * 1

fl=(76)
fn=(298)
0x8f240 53 494 0 0 150 0 0 2
+4 +1 494
+3 +1 494
+4 +1 494
+4 +1 494
+5 +2 494
+4 +1 494
+2 +1 491
+4 +1 491
+6 +1 1
+4 +1 1 0 1
+4 +1 1 0 1
+6 +1 1
+14 +6 1 0 1 1 0 0 1
+5 +1 1 0 1
+6 +1 1 1
+5 +3 3 0 0 1 0 0 1
+4 +1 3 0 3
+4 +1 3
+4 +1 3 0 3 0 0 2 0 0 2
+6 +1 3 0 3 0 0 1 0 0 1
+5 +1 3 0 3 0 0 1 0 0 1
+6 +1 3 0 3
+5 +1 3 0 3 0 0 1 0 0 1
+6 +1 3 0 3 0 0 1 0 0 1
+5 +1 3 0 3 1 0 0 1
+6 +1 3
+3 +1 3
+4 +1 3
+3 +1 3
+2 * 3
+1 +3 3 0 3
+4 +1 3 0 3
+5 +1 3 0 3
+5 +1 3 0 3
+5 +1 3
+4 +1 3
+3 +1 3
-26 -6 3167 0 3167 0 0 3166 0 0 3165
+4 +1 3167 0 3167
+5 +1 3167 0 3167
+5 +1 3167 0 3167
+5 +1 3167
+4 +1 3167
+3 +1 3167
+2 +1 3 3 0 0 1
+2 +3 490 0 0 150 0 0 1
+5 +1 490
+3 +1 490
+36 +16 490 0 490 150 0 0 1
+3 +1 490 0 490
+5 +1 490 490

totals: 3348014049 1233061082 845313127 174630 1187349 997369 3403 9346 930466
